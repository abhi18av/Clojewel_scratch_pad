(:quote, (:block,
    (:line, 3, :none),
    (:toplevel, (:import, :., :Libc, :RawFD), (:import, :., :Libc, :dup)),
    (:line, 4, :none),
    (:if, (:call, :is_windows), (:block,
        (:line, 5, :none),
        (:import, :., :Libc, :WindowsRawSocket)
      )),
    (:line, 9, :none),
    (:typealias, :Callback, (:curly, :Union, :Function, :Bool)),
    (:line, 11, :none),
    (:abstract, :IOServer),
    (:line, 12, :none),
    (:abstract, (:<:, :LibuvServer, :IOServer)),
    (:line, 13, :none),
    (:abstract, (:<:, :LibuvStream, :IO)),
    (:line, 41, :none),
    (:function, (:call, :stream_wait, :x, (:..., :c)), (:block,
        (:line, 42, :none),
        (:call, :preserve_handle, :x),
        (:line, 43, :none),
        (:try, (:block,
            (:line, 44, :none),
            (:return, (:call, :wait, (:..., :c)))
          ), false, false, (:block,
            (:line, 46, :none),
            (:call, :unpreserve_handle, :x)
          ))
      )),
    (:line, 50, :none),
    (:(=), (:call, :nb_available, (:(::), :s, :LibuvStream)), (:block,
        (:line, 50, :none),
        (:call, :nb_available, (:., :s, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 52, :none),
    (:function, (:call, :eof, (:(::), :s, :LibuvStream)), (:block,
        (:line, 53, :none),
        (:if, (:call, :isopen, :s), (:block,
            (:line, 54, :none),
            (:&&, (:call, :>, (:call, :nb_available, :s), 0), (:return, false))
          ), (:block,
            (:line, 56, :none),
            (:return, (:call, :(<=), (:call, :nb_available, :s), 0))
          )),
        (:line, 58, :none),
        (:call, :wait_readnb, :s, 1),
        (:line, 59, :none),
        (:&&, (:call, :!, (:call, :isopen, :s)), (:call, :(<=), (:call, :nb_available, :s), 0))
      )),
    (:line, 62, :none),
    (:const, (:(=), :DEFAULT_READ_BUFFER_SZ, 10485760)),
    (:line, 64, :none),
    (:const, (:(=), :StatusUninit, 0)),
    (:line, 65, :none),
    (:const, (:(=), :StatusInit, 1)),
    (:line, 66, :none),
    (:const, (:(=), :StatusConnecting, 2)),
    (:line, 67, :none),
    (:const, (:(=), :StatusOpen, 3)),
    (:line, 68, :none),
    (:const, (:(=), :StatusActive, 4)),
    (:line, 69, :none),
    (:const, (:(=), :StatusClosing, 5)),
    (:line, 70, :none),
    (:const, (:(=), :StatusClosed, 6)),
    (:line, 71, :none),
    (:const, (:(=), :StatusEOF, 7)),
    (:line, 72, :none),
    (:function, (:call, :uv_status_string, :x), (:block,
        (:line, 73, :none),
        (:(=), :s, (:., :x, (:quote, #QuoteNode
              :status
            ))),
        (:line, 74, :none),
        (:if, (:call, :(==), (:., :x, (:quote, #QuoteNode
                :handle
              )), :C_NULL), (:block,
            (:line, 75, :none),
            (:if, (:call, :(==), :s, :StatusClosed), (:block,
                (:line, 76, :none),
                (:return, "closed")
              ), (:block,
                (:line, 77, :none),
                (:if, (:call, :(==), :s, :StatusUninit), (:block,
                    (:line, 78, :none),
                    (:return, "null")
                  ))
              )),
            (:line, 80, :none),
            (:return, "invalid status")
          ), (:block,
            (:line, 81, :none),
            (:if, (:call, :(==), :s, :StatusUninit), (:block,
                (:line, 82, :none),
                (:return, "uninit")
              ), (:block,
                (:line, 83, :none),
                (:if, (:call, :(==), :s, :StatusInit), (:block,
                    (:line, 84, :none),
                    (:return, "init")
                  ), (:block,
                    (:line, 85, :none),
                    (:if, (:call, :(==), :s, :StatusConnecting), (:block,
                        (:line, 86, :none),
                        (:return, "connecting")
                      ), (:block,
                        (:line, 87, :none),
                        (:if, (:call, :(==), :s, :StatusOpen), (:block,
                            (:line, 88, :none),
                            (:return, "open")
                          ), (:block,
                            (:line, 89, :none),
                            (:if, (:call, :(==), :s, :StatusActive), (:block,
                                (:line, 90, :none),
                                (:return, "active")
                              ), (:block,
                                (:line, 91, :none),
                                (:if, (:call, :(==), :s, :StatusClosing), (:block,
                                    (:line, 92, :none),
                                    (:return, "closing")
                                  ), (:block,
                                    (:line, 93, :none),
                                    (:if, (:call, :(==), :s, :StatusClosed), (:block,
                                        (:line, 94, :none),
                                        (:return, "closed")
                                      ), (:block,
                                        (:line, 95, :none),
                                        (:if, (:call, :(==), :s, :StatusEOF), (:block,
                                            (:line, 96, :none),
                                            (:return, "eof")
                                          ))
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 98, :none),
        (:return, "invalid status")
      )),
    (:line, 101, :none),
    (:type, true, (:<:, :PipeEndpoint, :LibuvStream), (:block,
        (:line, 102, :none),
        (:(::), :handle, (:curly, :Ptr, :Void)),
        (:line, 103, :none),
        (:(::), :status, :Int),
        (:line, 104, :none),
        (:(::), :buffer, :IOBuffer),
        (:line, 105, :none),
        (:(::), :line_buffered, :Bool),
        (:line, 106, :none),
        (:(::), :readcb, :Callback),
        (:line, 107, :none),
        (:(::), :readnotify, :Condition),
        (:line, 108, :none),
        (:(::), :ccb, :Callback),
        (:line, 109, :none),
        (:(::), :connectnotify, :Condition),
        (:line, 110, :none),
        (:(::), :closecb, :Callback),
        (:line, 111, :none),
        (:(::), :closenotify, :Condition),
        (:line, 112, :none),
        (:(::), :sendbuf, (:curly, :Nullable, :IOBuffer)),
        (:line, 113, :none),
        (:(::), :lock, :ReentrantLock),
        (:line, 114, :none),
        (:(::), :throttle, :Int),
        (:line, 116, :none),
        (:(=), (:call, :PipeEndpoint), (:block,
            (:line, 116, :none),
            (:call, :PipeEndpoint, (:call, (:., :Libc, (:quote, #QuoteNode
                    :malloc
                  )), :_sizeof_uv_named_pipe), :StatusUninit)
          )),
        (:line, 117, :none),
        (:function, (:call, :PipeEndpoint, (:(::), :handle, (:curly, :Ptr, :Void)), :status), (:block,
            (:line, 118, :none),
            (:(=), :p, (:call, :new, :handle, :status, (:call, :PipeBuffer), true, false, (:call, :Condition), false, (:call, :Condition), false, (:call, :Condition), :nothing, (:call, :ReentrantLock), :DEFAULT_READ_BUFFER_SZ)),
            (:line, 127, :none),
            (:call, :associate_julia_struct, :handle, :p),
            (:line, 128, :none),
            (:call, :finalizer, :p, :uvfinalize),
            (:line, 129, :none),
            (:return, :p)
          ))
      )),
    (:line, 133, :none),
    (:type, true, (:<:, :PipeServer, :LibuvServer), (:block,
        (:line, 134, :none),
        (:(::), :handle, (:curly, :Ptr, :Void)),
        (:line, 135, :none),
        (:(::), :status, :Int),
        (:line, 136, :none),
        (:(::), :ccb, :Callback),
        (:line, 137, :none),
        (:(::), :connectnotify, :Condition),
        (:line, 138, :none),
        (:(::), :closecb, :Callback),
        (:line, 139, :none),
        (:(::), :closenotify, :Condition),
        (:line, 140, :none),
        (:function, (:call, :PipeServer, (:(::), :handle, (:curly, :Ptr, :Void)), :status), (:block,
            (:line, 141, :none),
            (:(=), :p, (:call, :new, :handle, :status, false, (:call, :Condition), false, (:call, :Condition))),
            (:line, 145, :none),
            (:call, :associate_julia_struct, (:., :p, (:quote, #QuoteNode
                  :handle
                )), :p),
            (:line, 146, :none),
            (:call, :finalizer, :p, :uvfinalize),
            (:line, 147, :none),
            (:return, :p)
          ))
      )),
    (:line, 151, :none),
    (:typealias, :LibuvPipe, (:curly, :Union, :PipeEndpoint, :PipeServer)),
    (:line, 153, :none),
    (:function, (:call, :PipeServer), (:block,
        (:line, 154, :none),
        (:(=), :p, (:call, :PipeServer, (:call, (:., :Libc, (:quote, #QuoteNode
                  :malloc
                )), :_sizeof_uv_named_pipe), :StatusUninit)),
        (:line, 155, :none),
        (:return, (:call, :init_pipe!, (:parameters, (:kw, :readable, true)), :p))
      )),
    (:line, 158, :none),
    (:type, true, (:<:, :TTY, :LibuvStream), (:block,
        (:line, 159, :none),
        (:(::), :handle, (:curly, :Ptr, :Void)),
        (:line, 160, :none),
        (:(::), :status, :Int),
        (:line, 161, :none),
        (:(::), :line_buffered, :Bool),
        (:line, 162, :none),
        (:(::), :buffer, :IOBuffer),
        (:line, 163, :none),
        (:(::), :readcb, :Callback),
        (:line, 164, :none),
        (:(::), :readnotify, :Condition),
        (:line, 165, :none),
        (:(::), :closecb, :Callback),
        (:line, 166, :none),
        (:(::), :closenotify, :Condition),
        (:line, 167, :none),
        (:(::), :sendbuf, (:curly, :Nullable, :IOBuffer)),
        (:line, 168, :none),
        (:(::), :lock, :ReentrantLock),
        (:line, 169, :none),
        (:(::), :throttle, :Int),
        (:line, 170, :none),
        (:macrocall, Symbol("@static"), (:if, (:call, :is_windows), (:block,
              (:line, 170, :none),
              (:(::), :ispty, :Bool)
            ))),
        (:line, 171, :none),
        (:(=), (:call, :TTY), (:block,
            (:line, 171, :none),
            (:call, :TTY, (:call, (:., :Libc, (:quote, #QuoteNode
                    :malloc
                  )), :_sizeof_uv_tty), :StatusUninit)
          )),
        (:line, 172, :none),
        (:function, (:call, :TTY, (:(::), :handle, (:curly, :Ptr, :Void)), :status), (:block,
            (:line, 173, :none),
            (:(=), :tty, (:call, :new, :handle, :status, true, (:call, :PipeBuffer), false, (:call, :Condition), false, (:call, :Condition), :nothing, (:call, :ReentrantLock), :DEFAULT_READ_BUFFER_SZ)),
            (:line, 182, :none),
            (:call, :associate_julia_struct, :handle, :tty),
            (:line, 183, :none),
            (:call, :finalizer, :tty, :uvfinalize),
            (:line, 184, :none),
            (:macrocall, Symbol("@static"), (:if, (:call, :is_windows), (:block,
                  (:line, 185, :none),
                  (:(=), (:., :tty, (:quote, #QuoteNode
                        :ispty
                      )), (:call, :(!=), (:ccall, (:quote, #QuoteNode
                          :jl_ispty
                        ), :Cint, (:tuple, (:curly, :Ptr, :Void)), :handle), 0))
                ))),
            (:line, 187, :none),
            (:return, :tty)
          ))
      )),
    (:line, 191, :none),
    (:function, (:call, :TTY, (:parameters, (:kw, (:(::), :readable, :Bool), false)), (:(::), :fd, :RawFD)), (:block,
        (:line, 192, :none),
        (:(=), :tty, (:call, :TTY)),
        (:line, 195, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :uv_tty_init
            ), :Int32, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Int32, :Int32), (:call, :eventloop), (:., :tty, (:quote, #QuoteNode
                :handle
              )), (:., :fd, (:quote, #QuoteNode
                :fd
              )), :readable)),
        (:line, 197, :none),
        (:call, :uv_error, "TTY", :err),
        (:line, 198, :none),
        (:(=), (:., :tty, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 199, :none),
        (:(=), (:., :tty, (:quote, #QuoteNode
              :line_buffered
            )), false),
        (:line, 200, :none),
        (:return, :tty)
      )),
    (:line, 203, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :stream, :LibuvServer)), (:block,
        (:line, 203, :none),
        (:call, :print, :io, (:call, :typeof, :stream), "(", (:call, :uv_status_string, :stream), ")")
      )),
    (:line, 204, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :stream, :LibuvStream)), (:block,
        (:line, 204, :none),
        (:call, :print, :io, (:call, :typeof, :stream), "(", (:call, :uv_status_string, :stream), ", ", (:call, :nb_available, (:., :stream, (:quote, #QuoteNode
                :buffer
              ))), " bytes waiting)")
      )),
    (:line, 209, :none),
    (:function, (:call, :isreadable, (:(::), :io, :LibuvStream)), (:block,
        (:line, 210, :none),
        (:&&, (:call, :>, (:call, :nb_available, :io), 0), (:return, true)),
        (:line, 211, :none),
        (:||, (:call, :isopen, :io), (:return, false)),
        (:line, 212, :none),
        (:return, (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :uv_is_readable
              ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :io, (:quote, #QuoteNode
                  :handle
                ))), 0))
      )),
    (:line, 215, :none),
    (:function, (:call, :iswritable, (:(::), :io, :LibuvStream)), (:block,
        (:line, 216, :none),
        (:||, (:call, :isopen, :io), (:return, false)),
        (:line, 217, :none),
        (:&&, (:call, :(==), (:., :io, (:quote, #QuoteNode
                :status
              )), :StatusClosing), (:return, false)),
        (:line, 218, :none),
        (:return, (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :uv_is_writable
              ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :io, (:quote, #QuoteNode
                  :handle
                ))), 0))
      )),
    (:line, 221, :none),
    (:(=), (:call, :lock, (:(::), :s, :LibuvStream)), (:block,
        (:line, 221, :none),
        (:call, :lock, (:., :s, (:quote, #QuoteNode
              :lock
            )))
      )),
    (:line, 222, :none),
    (:(=), (:call, :unlock, (:(::), :s, :LibuvStream)), (:block,
        (:line, 222, :none),
        (:call, :unlock, (:., :s, (:quote, #QuoteNode
              :lock
            )))
      )),
    (:line, 224, :none),
    (:(=), (:call, :uvtype, (:(::), :LibuvStream)), (:block,
        (:line, 224, :none),
        :UV_STREAM
      )),
    (:line, 225, :none),
    (:(=), (:call, :uvhandle, (:(::), :stream, :LibuvStream)), (:block,
        (:line, 225, :none),
        (:., :stream, (:quote, #QuoteNode
            :handle
          ))
      )),
    (:line, 226, :none),
    (:(=), (:call, :unsafe_convert, (:(::), (:curly, :Type, (:curly, :Ptr, :Void))), (:(::), :s, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 226, :none),
        (:., :s, (:quote, #QuoteNode
            :handle
          ))
      )),
    (:line, 228, :none),
    (:function, (:call, :init_stdio, (:(::), :handle, (:curly, :Ptr, :Void))), (:block,
        (:line, 229, :none),
        (:(=), :t, (:ccall, (:quote, #QuoteNode
              :jl_uv_handle_type
            ), :Int32, (:tuple, (:curly, :Ptr, :Void)), :handle)),
        (:line, 230, :none),
        (:if, (:call, :(==), :t, :UV_FILE), (:block,
            (:line, 231, :none),
            (:return, (:call, :fdio, (:ccall, (:quote, #QuoteNode
                    :jl_uv_file_handle
                  ), :Int32, (:tuple, (:curly, :Ptr, :Void)), :handle)))
          ), (:block,
            (:line, 235, :none),
            (:if, (:call, :(==), :t, :UV_TTY), (:block,
                (:line, 236, :none),
                (:(=), :ret, (:call, :TTY, :handle, :StatusOpen))
              ), (:block,
                (:line, 237, :none),
                (:if, (:call, :(==), :t, :UV_TCP), (:block,
                    (:line, 238, :none),
                    (:(=), :ret, (:call, :TCPSocket, :handle, :StatusOpen))
                  ), (:block,
                    (:line, 239, :none),
                    (:if, (:call, :(==), :t, :UV_NAMED_PIPE), (:block,
                        (:line, 240, :none),
                        (:(=), :ret, (:call, :PipeEndpoint, :handle, :StatusOpen))
                      ), (:block,
                        (:line, 242, :none),
                        (:call, :throw, (:call, :ArgumentError, (:string, "invalid stdio type: ", :t)))
                      ))
                  ))
              )),
            (:line, 244, :none),
            (:(=), (:., :ret, (:quote, #QuoteNode
                  :line_buffered
                )), false),
            (:line, 245, :none),
            (:return, :ret)
          ))
      )),
    (:line, 249, :none),
    (:function, (:call, :isopen, (:(::), :x, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 250, :none),
        (:if, (:||, (:call, :(==), (:., :x, (:quote, #QuoteNode
                  :status
                )), :StatusUninit), (:call, :(==), (:., :x, (:quote, #QuoteNode
                  :status
                )), :StatusInit)), (:block,
            (:line, 251, :none),
            (:call, :throw, (:call, :ArgumentError, (:string, :x, " is not initialized")))
          )),
        (:line, 253, :none),
        (:&&, (:call, :(!=), (:., :x, (:quote, #QuoteNode
                :status
              )), :StatusClosed), (:call, :(!=), (:., :x, (:quote, #QuoteNode
                :status
              )), :StatusEOF))
      )),
    (:line, 256, :none),
    (:function, (:call, :check_open, (:(::), :x, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 257, :none),
        (:if, (:||, (:call, :!, (:call, :isopen, :x)), (:call, :(==), (:., :x, (:quote, #QuoteNode
                  :status
                )), :StatusClosing)), (:block,
            (:line, 258, :none),
            (:call, :throw, (:call, :ArgumentError, "stream is closed or unusable"))
          ))
      )),
    (:line, 262, :none),
    (:function, (:call, :wait_connected, (:(::), :x, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 263, :none),
        (:call, :check_open, :x),
        (:line, 264, :none),
        (:while, (:call, :(==), (:., :x, (:quote, #QuoteNode
                :status
              )), :StatusConnecting), (:block,
            (:line, 265, :none),
            (:call, :stream_wait, :x, (:., :x, (:quote, #QuoteNode
                  :connectnotify
                ))),
            (:line, 266, :none),
            (:call, :check_open, :x)
          ))
      )),
    (:line, 270, :none),
    (:function, (:call, :wait_readbyte, (:(::), :x, :LibuvStream), (:(::), :c, :UInt8)), (:block,
        (:line, 271, :none),
        (:if, (:call, :isopen, :x), (:block,
            (:line, 272, :none),
            (:&&, (:call, :>, (:call, :search, (:., :x, (:quote, #QuoteNode
                      :buffer
                    )), :c), 0), (:return, nothing))
          ), (:block,
            (:line, 274, :none),
            (:return, nothing)
          )),
        (:line, 276, :none),
        (:call, :preserve_handle, :x),
        (:line, 277, :none),
        (:try, (:block,
            (:line, 278, :none),
            (:while, (:&&, (:call, :isopen, :x), (:call, :(<=), (:call, :search, (:., :x, (:quote, #QuoteNode
                        :buffer
                      )), :c), 0)), (:block,
                (:line, 279, :none),
                (:call, :start_reading, :x),
                (:line, 280, :none),
                (:call, :wait, (:., :x, (:quote, #QuoteNode
                      :readnotify
                    )))
              ))
          ), false, false, (:block,
            (:line, 283, :none),
            (:if, (:call, :isempty, (:., (:., :x, (:quote, #QuoteNode
                      :readnotify
                    )), (:quote, #QuoteNode
                    :waitq
                  ))), (:block,
                (:line, 284, :none),
                (:call, :stop_reading, :x)
              )),
            (:line, 286, :none),
            (:call, :unpreserve_handle, :x)
          )),
        (:line, 288, :none),
        :nothing
      )),
    (:line, 291, :none),
    (:function, (:call, :wait_readnb, (:(::), :x, :LibuvStream), (:(::), :nb, :Int)), (:block,
        (:line, 292, :none),
        (:if, (:call, :isopen, :x), (:block,
            (:line, 293, :none),
            (:&&, (:call, :(>=), (:call, :nb_available, (:., :x, (:quote, #QuoteNode
                      :buffer
                    ))), :nb), (:return, nothing))
          ), (:block,
            (:line, 295, :none),
            (:return, nothing)
          )),
        (:line, 297, :none),
        (:(=), :oldthrottle, (:., :x, (:quote, #QuoteNode
              :throttle
            ))),
        (:line, 298, :none),
        (:call, :preserve_handle, :x),
        (:line, 299, :none),
        (:try, (:block,
            (:line, 300, :none),
            (:while, (:&&, (:call, :isopen, :x), (:call, :<, (:call, :nb_available, (:., :x, (:quote, #QuoteNode
                        :buffer
                      ))), :nb)), (:block,
                (:line, 301, :none),
                (:(=), (:., :x, (:quote, #QuoteNode
                      :throttle
                    )), (:call, :max, :nb, (:., :x, (:quote, #QuoteNode
                        :throttle
                      )))),
                (:line, 302, :none),
                (:call, :start_reading, :x),
                (:line, 303, :none),
                (:call, :wait, (:., :x, (:quote, #QuoteNode
                      :readnotify
                    )))
              ))
          ), false, false, (:block,
            (:line, 306, :none),
            (:if, (:comparison, :oldthrottle, :(<=), (:., :x, (:quote, #QuoteNode
                    :throttle
                  )), :(<=), :nb), (:block,
                (:line, 307, :none),
                (:(=), (:., :x, (:quote, #QuoteNode
                      :throttle
                    )), :oldthrottle)
              )),
            (:line, 309, :none),
            (:if, (:call, :isempty, (:., (:., :x, (:quote, #QuoteNode
                      :readnotify
                    )), (:quote, #QuoteNode
                    :waitq
                  ))), (:block,
                (:line, 310, :none),
                (:call, :stop_reading, :x)
              )),
            (:line, 312, :none),
            (:call, :unpreserve_handle, :x)
          )),
        (:line, 314, :none),
        :nothing
      )),
    (:line, 317, :none),
    (:function, (:call, :wait_close, (:(::), :x, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 318, :none),
        (:if, (:call, :isopen, :x), (:block,
            (:line, 319, :none),
            (:call, :stream_wait, :x, (:., :x, (:quote, #QuoteNode
                  :closenotify
                )))
          )),
        (:line, 321, :none),
        :nothing
      )),
    (:line, 324, :none),
    (:function, (:call, :close, (:(::), :stream, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 325, :none),
        (:if, (:call, :(==), (:., :stream, (:quote, #QuoteNode
                :status
              )), :StatusInit), (:block,
            (:line, 326, :none),
            (:ccall, (:quote, #QuoteNode
                :jl_forceclose_uv
              ), :Void, (:tuple, (:curly, :Ptr, :Void)), (:., :stream, (:quote, #QuoteNode
                  :handle
                )))
          ), (:block,
            (:line, 327, :none),
            (:if, (:call, :isopen, :stream), (:block,
                (:line, 328, :none),
                (:if, (:call, :(!=), (:., :stream, (:quote, #QuoteNode
                        :status
                      )), :StatusClosing), (:block,
                    (:line, 329, :none),
                    (:ccall, (:quote, #QuoteNode
                        :jl_close_uv
                      ), :Void, (:tuple, (:curly, :Ptr, :Void)), (:., :stream, (:quote, #QuoteNode
                          :handle
                        ))),
                    (:line, 330, :none),
                    (:(=), (:., :stream, (:quote, #QuoteNode
                          :status
                        )), :StatusClosing)
                  )),
                (:line, 332, :none),
                (:if, (:call, :(!=), (:call, :uv_handle_data, :stream), :C_NULL), (:block,
                    (:line, 333, :none),
                    (:call, :stream_wait, :stream, (:., :stream, (:quote, #QuoteNode
                          :closenotify
                        )))
                  ))
              ))
          )),
        (:line, 336, :none),
        :nothing
      )),
    (:line, 339, :none),
    (:function, (:call, :uvfinalize, (:(::), :uv, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 340, :none),
        (:if, (:call, :(!=), (:., :uv, (:quote, #QuoteNode
                :handle
              )), :C_NULL), (:block,
            (:line, 341, :none),
            (:call, :disassociate_julia_struct, (:., :uv, (:quote, #QuoteNode
                  :handle
                ))),
            (:line, 342, :none),
            (:if, (:call, :(!=), (:., :uv, (:quote, #QuoteNode
                    :status
                  )), :StatusUninit), (:block,
                (:line, 343, :none),
                (:call, :close, :uv)
              ), (:block,
                (:line, 345, :none),
                (:call, (:., :Libc, (:quote, #QuoteNode
                      :free
                    )), (:., :uv, (:quote, #QuoteNode
                      :handle
                    )))
              )),
            (:line, 347, :none),
            (:(=), (:., :uv, (:quote, #QuoteNode
                  :status
                )), :StatusClosed),
            (:line, 348, :none),
            (:(=), (:., :uv, (:quote, #QuoteNode
                  :handle
                )), :C_NULL)
          )),
        (:line, 350, :none),
        :nothing
      )),
    (:line, 353, :none),
    (:if, (:call, :is_windows), (:block,
        (:line, 354, :none),
        (:(=), (:call, :ispty, (:(::), :s, :TTY)), (:block,
            (:line, 354, :none),
            (:., :s, (:quote, #QuoteNode
                :ispty
              ))
          )),
        (:line, 355, :none),
        (:(=), (:call, :ispty, (:(::), :s, :IO)), (:block,
            (:line, 355, :none),
            false
          ))
      )),
    (:line, 358, :none),
    "    displaysize(io) -> (lines, columns)\nReturn the nominal size of the screen that may be used for rendering output to this io object",
    (:line, 360, :none),
    (:(=), (:call, :displaysize, (:(::), :io, :IO)), (:block,
        (:line, 360, :none),
        (:call, :displaysize)
      )),
    (:line, 361, :none),
    (:(=), (:call, :displaysize), (:block,
        (:line, 361, :none),
        (:(::), (:tuple, (:call, :parse, :Int, (:call, :get, :ENV, "LINES", "24")), (:call, :parse, :Int, (:call, :get, :ENV, "COLUMNS", "80"))), (:curly, :Tuple, :Int, :Int))
      )),
    (:line, 364, :none),
    (:function, (:call, :displaysize, (:(::), :io, :TTY)), (:block,
        (:line, 365, :none),
        (:local, (:(::), :h, :Int), (:(::), :w, :Int)),
        (:line, 366, :none),
        (:(=), :default_size, (:call, :displaysize)),
        (:line, 368, :none),
        (:macrocall, Symbol("@static"), (:if, (:call, :is_windows), (:block,
              (:line, 369, :none),
              (:if, (:call, :ispty, :io), (:block,
                  (:line, 371, :none),
                  (:try, (:block,
                      (:line, 372, :none),
                      (:(=), (:tuple, :h, :w), (:call, :map, (:->, :x, (:block,
                              (:line, 372, :none),
                              (:call, :parse, :Int, :x)
                            )), (:call, :split, (:call, :readstring, (:ref, (:call, :open, (:call, (:., :Base, (:quote, #QuoteNode
                                        :Cmd
                                      )), (:ref, :String, "stty", "size")), "r", :io), 1))))),
                      (:line, 373, :none),
                      (:||, (:call, :>, :h, 0), (:(=), :h, (:ref, :default_size, 1))),
                      (:line, 374, :none),
                      (:||, (:call, :>, :w, 0), (:(=), :w, (:ref, :default_size, 2))),
                      (:line, 375, :none),
                      (:return, (:tuple, :h, :w))
                    ), false, (:block,
                      (:line, 377, :none),
                      (:return, :default_size)
                    ))
                ))
            ))),
        (:line, 382, :none),
        (:(=), :s1, (:call, (:curly, :Ref, :Int32), 0)),
        (:line, 383, :none),
        (:(=), :s2, (:call, (:curly, :Ref, :Int32), 0)),
        (:line, 384, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :uv_error
            )), "size (TTY)", (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :uv_tty_get_winsize
              ), :Int32, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Int32), (:curly, :Ptr, :Int32)), :io, :s1, :s2), 0)),
        (:line, 387, :none),
        (:(=), (:tuple, :w, :h), (:tuple, (:ref, :s1), (:ref, :s2))),
        (:line, 388, :none),
        (:||, (:call, :>, :h, 0), (:(=), :h, (:ref, :default_size, 1))),
        (:line, 389, :none),
        (:||, (:call, :>, :w, 0), (:(=), :w, (:ref, :default_size, 2))),
        (:line, 390, :none),
        (:return, (:tuple, :h, :w))
      )),
    (:line, 397, :none),
    (:function, (:call, :uv_connectcb, (:(::), :conn, (:curly, :Ptr, :Void)), (:(::), :status, :Cint)), (:block,
        (:line, 398, :none),
        (:(=), :hand, (:ccall, (:quote, #QuoteNode
              :jl_uv_connect_handle
            ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :Void)), :conn)),
        (:line, 399, :none),
        (:(=), :sock, (:macrocall, Symbol("@handle_as"), :hand, :LibuvStream)),
        (:line, 400, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :sock, (:quote, #QuoteNode
                :status
              )), :StatusConnecting)),
        (:line, 401, :none),
        (:if, (:call, :(>=), :status, 0), (:block,
            (:line, 402, :none),
            (:(=), (:., :sock, (:quote, #QuoteNode
                  :status
                )), :StatusOpen),
            (:line, 403, :none),
            (:(=), :err, :nothing)
          ), (:block,
            (:line, 405, :none),
            (:(=), (:., :sock, (:quote, #QuoteNode
                  :status
                )), :StatusInit),
            (:line, 406, :none),
            (:(=), :err, (:call, :UVError, "connect", :status))
          )),
        (:line, 408, :none),
        (:if, (:call, :isa, (:., :sock, (:quote, #QuoteNode
                :ccb
              )), :Function), (:block,
            (:line, 409, :none),
            (:call, (:., :sock, (:quote, #QuoteNode
                  :ccb
                )), :sock, :status)
          )),
        (:line, 411, :none),
        (:if, (:call, :(===), :err, :nothing), (:call, :notify, (:., :sock, (:quote, #QuoteNode
                :connectnotify
              ))), (:call, :notify_error, (:., :sock, (:quote, #QuoteNode
                :connectnotify
              )), :err)),
        (:line, 412, :none),
        (:call, (:., :Libc, (:quote, #QuoteNode
              :free
            )), :conn),
        (:line, 413, :none),
        :nothing
      )),
    (:line, 417, :none),
    (:function, (:call, :uv_connectioncb, (:(::), :stream, (:curly, :Ptr, :Void)), (:(::), :status, :Cint)), (:block,
        (:line, 418, :none),
        (:(=), :sock, (:macrocall, Symbol("@handle_as"), :stream, :LibuvServer)),
        (:line, 419, :none),
        (:if, (:call, :(>=), :status, 0), (:block,
            (:line, 420, :none),
            (:(=), :err, :nothing)
          ), (:block,
            (:line, 422, :none),
            (:(=), :err, (:call, :UVError, "connection", :status))
          )),
        (:line, 424, :none),
        (:if, (:call, :isa, (:., :sock, (:quote, #QuoteNode
                :ccb
              )), :Function), (:block,
            (:line, 425, :none),
            (:call, (:., :sock, (:quote, #QuoteNode
                  :ccb
                )), :sock, :status)
          )),
        (:line, 427, :none),
        (:if, (:call, :(===), :err, :nothing), (:call, :notify, (:., :sock, (:quote, #QuoteNode
                :connectnotify
              ))), (:call, :notify_error, (:., :sock, (:quote, #QuoteNode
                :connectnotify
              )), :err)),
        (:line, 428, :none),
        :nothing
      )),
    (:line, 433, :none),
    (:function, (:call, :alloc_request, (:(::), :buffer, :IOBuffer), (:(::), :recommended_size, :UInt)), (:block,
        (:line, 434, :none),
        (:call, :ensureroom, :buffer, (:call, :Int, :recommended_size)),
        (:line, 435, :none),
        (:(=), :ptr, (:if, (:., :buffer, (:quote, #QuoteNode
                :append
              )), (:call, :+, (:., :buffer, (:quote, #QuoteNode
                  :size
                )), 1), (:., :buffer, (:quote, #QuoteNode
                :ptr
              )))),
        (:line, 436, :none),
        (:return, (:tuple, (:call, :pointer, (:., :buffer, (:quote, #QuoteNode
                  :data
                )), :ptr), (:call, :+, (:call, :-, (:call, :length, (:., :buffer, (:quote, #QuoteNode
                      :data
                    ))), :ptr), 1)))
      )),
    (:line, 439, :none),
    (:function, (:call, :uv_alloc_buf, (:(::), :handle, (:curly, :Ptr, :Void)), (:(::), :size, :Csize_t), (:(::), :buf, (:curly, :Ptr, :Void))), (:block,
        (:line, 440, :none),
        (:(=), :hd, (:call, :uv_handle_data, :handle)),
        (:line, 441, :none),
        (:if, (:call, :(==), :hd, :C_NULL), (:block,
            (:line, 442, :none),
            (:ccall, (:quote, #QuoteNode
                :jl_uv_buf_set_len
              ), :Void, (:tuple, (:curly, :Ptr, :Void), :Csize_t), :buf, 0),
            (:line, 443, :none),
            (:return, :nothing)
          )),
        (:line, 445, :none),
        (:(=), :stream, (:(::), (:call, :unsafe_pointer_to_objref, :hd), :LibuvStream)),
        (:line, 447, :none),
        (:(=), (:tuple, :data, :newsize), (:call, :alloc_buf_hook, :stream, (:call, :UInt, :size))),
        (:line, 449, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_uv_buf_set_base
          ), :Void, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void)), :buf, :data),
        (:line, 450, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_uv_buf_set_len
          ), :Void, (:tuple, (:curly, :Ptr, :Void), :Csize_t), :buf, :newsize),
        (:line, 452, :none),
        :nothing
      )),
    (:line, 455, :none),
    (:(=), (:call, :alloc_buf_hook, (:(::), :stream, :LibuvStream), (:(::), :size, :UInt)), (:block,
        (:line, 455, :none),
        (:call, :alloc_request, (:., :stream, (:quote, #QuoteNode
              :buffer
            )), (:call, :UInt, :size))
      )),
    (:line, 457, :none),
    (:function, (:call, :notify_filled, (:(::), :buffer, :IOBuffer), (:(::), :nread, :Int), (:(::), :base, (:curly, :Ptr, :Void)), (:(::), :len, :UInt)), (:block,
        (:line, 458, :none),
        (:if, (:., :buffer, (:quote, #QuoteNode
              :append
            )), (:block,
            (:line, 459, :none),
            (:+=, (:., :buffer, (:quote, #QuoteNode
                  :size
                )), :nread)
          ), (:block,
            (:line, 461, :none),
            (:+=, (:., :buffer, (:quote, #QuoteNode
                  :ptr
                )), :nread)
          ))
      )),
    (:line, 465, :none),
    (:function, (:call, :notify_filled, (:(::), :stream, :LibuvStream), (:(::), :nread, :Int)), (:block,
        (:line, 466, :none),
        (:(=), :more, true),
        (:line, 467, :none),
        (:while, :more, (:block,
            (:line, 468, :none),
            (:if, (:call, :isa, (:., :stream, (:quote, #QuoteNode
                    :readcb
                  )), :Function), (:block,
                (:line, 469, :none),
                (:(=), :nreadable, (:if, (:., :stream, (:quote, #QuoteNode
                        :line_buffered
                      )), (:call, :Int, (:call, :search, (:., :stream, (:quote, #QuoteNode
                            :buffer
                          )), '\n')), (:call, :nb_available, (:., :stream, (:quote, #QuoteNode
                          :buffer
                        ))))),
                (:line, 470, :none),
                (:if, (:call, :>, :nreadable, 0), (:block,
                    (:line, 471, :none),
                    (:(=), :more, (:call, (:., :stream, (:quote, #QuoteNode
                            :readcb
                          )), :stream, :nreadable))
                  ), (:block,
                    (:line, 473, :none),
                    (:(=), :more, false)
                  ))
              ), (:block,
                (:line, 476, :none),
                (:(=), :more, false)
              ))
          ))
      )),
    (:line, 481, :none),
    (:function, (:call, :uv_readcb, (:(::), :handle, (:curly, :Ptr, :Void)), (:(::), :nread, :Cssize_t), (:(::), :buf, (:curly, :Ptr, :Void))), (:block,
        (:line, 482, :none),
        (:(=), :stream, (:macrocall, Symbol("@handle_as"), :handle, :LibuvStream)),
        (:line, 483, :none),
        (:(=), :nread, (:call, :Int, :nread)),
        (:line, 484, :none),
        (:(=), :base, (:ccall, (:quote, #QuoteNode
              :jl_uv_buf_base
            ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :Void)), :buf)),
        (:line, 485, :none),
        (:(=), :len, (:call, :UInt, (:ccall, (:quote, #QuoteNode
                :jl_uv_buf_len
              ), :Csize_t, (:tuple, (:curly, :Ptr, :Void)), :buf))),
        (:line, 487, :none),
        (:if, (:call, :<, :nread, 0), (:block,
            (:line, 488, :none),
            (:if, (:&&, (:call, :(==), :nread, :UV_ENOBUFS), (:call, :(==), :len, 0)), (:block,
                (:line, 490, :none),
                (:call, :notify, (:., :stream, (:quote, #QuoteNode
                      :readnotify
                    )))
              ), (:block,
                (:line, 491, :none),
                (:if, (:call, :(==), :nread, :UV_EOF), (:block,
                    (:line, 492, :none),
                    (:if, (:call, :isa, :stream, :TTY), (:block,
                        (:line, 493, :none),
                        (:(=), (:., :stream, (:quote, #QuoteNode
                              :status
                            )), :StatusEOF),
                        (:line, 494, :none),
                        (:call, :notify, (:., :stream, (:quote, #QuoteNode
                              :readnotify
                            ))),
                        (:line, 495, :none),
                        (:call, :notify, (:., :stream, (:quote, #QuoteNode
                              :closenotify
                            )))
                      ), (:block,
                        (:line, 496, :none),
                        (:if, (:call, :(!=), (:., :stream, (:quote, #QuoteNode
                                :status
                              )), :StatusClosing), (:block,
                            (:line, 498, :none),
                            (:ccall, (:quote, #QuoteNode
                                :jl_close_uv
                              ), :Void, (:tuple, (:curly, :Ptr, :Void)), (:., :stream, (:quote, #QuoteNode
                                  :handle
                                ))),
                            (:line, 499, :none),
                            (:(=), (:., :stream, (:quote, #QuoteNode
                                  :status
                                )), :StatusClosing)
                          ))
                      ))
                  ), (:block,
                    (:line, 504, :none),
                    (:ccall, (:quote, #QuoteNode
                        :jl_forceclose_uv
                      ), :Void, (:tuple, (:curly, :Ptr, :Void)), :stream),
                    (:line, 505, :none),
                    (:call, :notify_error, (:., :stream, (:quote, #QuoteNode
                          :readnotify
                        )), (:call, :UVError, "readcb", :nread))
                  ))
              ))
          ), (:block,
            (:line, 508, :none),
            (:call, :notify_filled, (:., :stream, (:quote, #QuoteNode
                  :buffer
                )), :nread, :base, :len),
            (:line, 509, :none),
            (:call, :notify_filled, :stream, :nread),
            (:line, 510, :none),
            (:call, :notify, (:., :stream, (:quote, #QuoteNode
                  :readnotify
                )))
          )),
        (:line, 516, :none),
        (:if, (:||, (:call, :(>=), (:call, :nb_available, (:., :stream, (:quote, #QuoteNode
                    :buffer
                  ))), (:., :stream, (:quote, #QuoteNode
                  :throttle
                ))), (:call, :(>=), (:call, :nb_available, (:., :stream, (:quote, #QuoteNode
                    :buffer
                  ))), (:., (:., :stream, (:quote, #QuoteNode
                    :buffer
                  )), (:quote, #QuoteNode
                  :maxsize
                )))), (:block,
            (:line, 518, :none),
            (:call, :stop_reading, :stream)
          )),
        (:line, 520, :none),
        :nothing
      )),
    (:line, 523, :none),
    (:function, (:call, :reseteof, (:(::), :x, :TTY)), (:block,
        (:line, 524, :none),
        (:if, (:call, :(==), (:., :x, (:quote, #QuoteNode
                :status
              )), :StatusEOF), (:block,
            (:line, 525, :none),
            (:(=), (:., :x, (:quote, #QuoteNode
                  :status
                )), :StatusOpen)
          )),
        (:line, 527, :none),
        :nothing
      )),
    (:line, 530, :none),
    (:function, (:call, :_uv_hook_close, (:(::), :uv, (:curly, :Union, :LibuvStream, :LibuvServer))), (:block,
        (:line, 531, :none),
        (:(=), (:., :uv, (:quote, #QuoteNode
              :handle
            )), :C_NULL),
        (:line, 532, :none),
        (:(=), (:., :uv, (:quote, #QuoteNode
              :status
            )), :StatusClosed),
        (:line, 533, :none),
        (:if, (:call, :isa, (:., :uv, (:quote, #QuoteNode
                :closecb
              )), :Function), (:block,
            (:line, 534, :none),
            (:call, (:., :uv, (:quote, #QuoteNode
                  :closecb
                )), :uv)
          )),
        (:line, 536, :none),
        (:call, :notify, (:., :uv, (:quote, #QuoteNode
              :closenotify
            ))),
        (:line, 537, :none),
        (:try, (:block,
            (:line, 537, :none),
            (:call, :notify, (:., :uv, (:quote, #QuoteNode
                  :readnotify
                )))
          ), false, (:block,)),
        (:line, 538, :none),
        (:try, (:block,
            (:line, 538, :none),
            (:call, :notify, (:., :uv, (:quote, #QuoteNode
                  :connectnotify
                )))
          ), false, (:block,)),
        (:line, 539, :none),
        :nothing
      )),
    (:line, 548, :none),
    (:type, true, (:<:, :Pipe, :AbstractPipe), (:block,
        (:line, 549, :none),
        (:(::), :in, :PipeEndpoint),
        (:line, 550, :none),
        (:(::), :out, :PipeEndpoint)
      )),
    (:line, 552, :none),
    (:(=), (:call, :Pipe), (:block,
        (:line, 552, :none),
        (:call, :Pipe, (:call, :PipeEndpoint), (:call, :PipeEndpoint))
      )),
    (:line, 553, :none),
    (:(=), (:call, :pipe_reader, (:(::), :p, :Pipe)), (:block,
        (:line, 553, :none),
        (:., :p, (:quote, #QuoteNode
            :out
          ))
      )),
    (:line, 554, :none),
    (:(=), (:call, :pipe_writer, (:(::), :p, :Pipe)), (:block,
        (:line, 554, :none),
        (:., :p, (:quote, #QuoteNode
            :in
          ))
      )),
    (:line, 556, :none),
    (:function, (:call, :link_pipe, (:parameters, (:kw, :julia_only_read, false), (:kw, :julia_only_write, false)), (:(::), :pipe, :Pipe)), (:block,
        (:line, 559, :none),
        (:call, :link_pipe, (:., :pipe, (:quote, #QuoteNode
              :out
            )), :julia_only_read, (:., :pipe, (:quote, #QuoteNode
              :in
            )), :julia_only_write)
      )),
    (:line, 562, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :stream, :Pipe)), (:block,
        (:line, 562, :none),
        (:call, :print, :io, "Pipe(", (:call, :uv_status_string, (:., :stream, (:quote, #QuoteNode
                :in
              ))), " => ", (:call, :uv_status_string, (:., :stream, (:quote, #QuoteNode
                :out
              ))), ", ", (:call, :nb_available, :stream), " bytes waiting)")
      )),
    (:line, 571, :none),
    (:function, (:call, :init_pipe!, (:parameters, (:kw, (:(::), :readable, :Bool), false), (:kw, (:(::), :writable, :Bool), false), (:kw, (:(::), :julia_only, :Bool), true)), (:(::), :pipe, :LibuvPipe)), (:block,
        (:line, 575, :none),
        (:if, (:call, :(!=), (:., :pipe, (:quote, #QuoteNode
                :status
              )), :StatusUninit), (:block,
            (:line, 576, :none),
            (:call, :error, "pipe is already initialized")
          )),
        (:line, 578, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), (:., :pipe, (:quote, #QuoteNode
                :handle
              )), :writable, :readable, :julia_only)),
        (:line, 581, :none),
        (:call, :uv_error, (:if, (:&&, :readable, :writable), (:block,
              (:line, 583, :none),
              "init_pipe(ipc)"
            ), (:block,
              (:line, 584, :none),
              (:if, :readable, (:block,
                  (:line, 585, :none),
                  "init_pipe(read)"
                ), (:block,
                  (:line, 586, :none),
                  (:if, :writable, (:block,
                      (:line, 587, :none),
                      "init_pipe(write)"
                    ), (:block,
                      (:line, 589, :none),
                      "init_pipe(none)"
                    ))
                ))
            )), :err),
        (:line, 591, :none),
        (:(=), (:., :pipe, (:quote, #QuoteNode
              :status
            )), :StatusInit),
        (:line, 592, :none),
        (:return, :pipe)
      )),
    (:line, 595, :none),
    (:function, (:call, :_link_pipe, (:(::), :read_end, (:curly, :Ptr, :Void)), (:(::), :write_end, (:curly, :Ptr, :Void))), (:block,
        (:line, 596, :none),
        (:call, :uv_error, "pipe_link", (:ccall, (:quote, #QuoteNode
              :uv_pipe_link
            ), :Int32, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void)), :read_end, :write_end)),
        (:line, 598, :none),
        :nothing
      )),
    (:line, 601, :none),
    (:function, (:call, :link_pipe, (:(::), :read_end, (:curly, :Ptr, :Void)), (:(::), :readable_julia_only, :Bool), (:(::), :write_end, (:curly, :Ptr, :Void)), (:(::), :writable_julia_only, :Bool), (:(::), :readpipe, :PipeEndpoint), (:(::), :writepipe, :PipeEndpoint)), (:block,
        (:line, 606, :none),
        (:call, :uv_error, "init_pipe(read)", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :read_end, 0, 1, :readable_julia_only)),
        (:line, 608, :none),
        (:call, :uv_error, "init_pipe(write)", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :write_end, 1, 0, :writable_julia_only)),
        (:line, 610, :none),
        (:call, :_link_pipe, :read_end, :write_end),
        (:line, 611, :none),
        :nothing
      )),
    (:line, 614, :none),
    (:function, (:call, :link_pipe, (:(::), :read_end, (:curly, :Ptr, :Void)), (:(::), :readable_julia_only, :Bool), (:(::), :write_end, (:curly, :Ptr, :Void)), (:(::), :writable_julia_only, :Bool)), (:block,
        (:line, 616, :none),
        (:call, :uv_error, "init_pipe(read)", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :read_end, 0, 1, :readable_julia_only)),
        (:line, 618, :none),
        (:call, :uv_error, "init_pipe(write)", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :write_end, 1, 0, :writable_julia_only)),
        (:line, 620, :none),
        (:call, :_link_pipe, :read_end, :write_end),
        (:line, 621, :none),
        :nothing
      )),
    (:line, 624, :none),
    (:function, (:call, :link_pipe, (:(::), :read_end, :PipeEndpoint), (:(::), :readable_julia_only, :Bool), (:(::), :write_end, (:curly, :Ptr, :Void)), (:(::), :writable_julia_only, :Bool)), (:block,
        (:line, 626, :none),
        (:call, :init_pipe!, (:parameters, (:kw, :readable, true), (:kw, :writable, false), (:kw, :julia_only, :readable_julia_only)), :read_end),
        (:line, 628, :none),
        (:call, :uv_error, "init_pipe", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :write_end, 1, 0, :writable_julia_only)),
        (:line, 630, :none),
        (:call, :_link_pipe, (:., :read_end, (:quote, #QuoteNode
              :handle
            )), :write_end),
        (:line, 631, :none),
        (:(=), (:., :read_end, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 632, :none),
        :nothing
      )),
    (:line, 635, :none),
    (:function, (:call, :link_pipe, (:(::), :read_end, (:curly, :Ptr, :Void)), (:(::), :readable_julia_only, :Bool), (:(::), :write_end, :PipeEndpoint), (:(::), :writable_julia_only, :Bool)), (:block,
        (:line, 637, :none),
        (:call, :uv_error, "init_pipe", (:ccall, (:quote, #QuoteNode
              :jl_init_pipe
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Int32, :Int32, :Int32), :read_end, 0, 1, :readable_julia_only)),
        (:line, 639, :none),
        (:call, :init_pipe!, (:parameters, (:kw, :readable, false), (:kw, :writable, true), (:kw, :julia_only, :writable_julia_only)), :write_end),
        (:line, 641, :none),
        (:call, :_link_pipe, :read_end, (:., :write_end, (:quote, #QuoteNode
              :handle
            ))),
        (:line, 642, :none),
        (:(=), (:., :write_end, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 643, :none),
        :nothing
      )),
    (:line, 646, :none),
    (:function, (:call, :link_pipe, (:(::), :read_end, :PipeEndpoint), (:(::), :readable_julia_only, :Bool), (:(::), :write_end, :PipeEndpoint), (:(::), :writable_julia_only, :Bool)), (:block,
        (:line, 648, :none),
        (:call, :init_pipe!, (:parameters, (:kw, :readable, true), (:kw, :writable, false), (:kw, :julia_only, :readable_julia_only)), :read_end),
        (:line, 650, :none),
        (:call, :init_pipe!, (:parameters, (:kw, :readable, false), (:kw, :writable, true), (:kw, :julia_only, :writable_julia_only)), :write_end),
        (:line, 652, :none),
        (:call, :_link_pipe, (:., :read_end, (:quote, #QuoteNode
              :handle
            )), (:., :write_end, (:quote, #QuoteNode
              :handle
            ))),
        (:line, 653, :none),
        (:(=), (:., :write_end, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 654, :none),
        (:(=), (:., :read_end, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 655, :none),
        :nothing
      )),
    (:line, 658, :none),
    (:function, (:call, :close_pipe_sync, (:(::), :p, :PipeEndpoint)), (:block,
        (:line, 659, :none),
        (:ccall, (:quote, #QuoteNode
            :uv_pipe_close_sync
          ), :Void, (:tuple, (:curly, :Ptr, :Void)), (:., :p, (:quote, #QuoteNode
              :handle
            ))),
        (:line, 660, :none),
        (:(=), (:., :p, (:quote, #QuoteNode
              :status
            )), :StatusClosed),
        (:line, 661, :none),
        :nothing
      )),
    (:line, 664, :none),
    (:function, (:call, :close_pipe_sync, (:(::), :handle, (:curly, :Ptr, :Void))), (:block,
        (:line, 665, :none),
        (:return, (:ccall, (:quote, #QuoteNode
              :uv_pipe_close_sync
            ), :Void, (:tuple, (:curly, :Ptr, :Void)), :handle))
      )),
    (:line, 670, :none),
    (:function, (:call, :start_reading, (:(::), :stream, :LibuvStream)), (:block,
        (:line, 671, :none),
        (:if, (:call, :(==), (:., :stream, (:quote, #QuoteNode
                :status
              )), :StatusOpen), (:block,
            (:line, 672, :none),
            (:if, (:call, :!, (:call, :isreadable, :stream)), (:block,
                (:line, 673, :none),
                (:call, :error, "tried to read a stream that is not readable")
              )),
            (:line, 675, :none),
            (:(=), :ret, (:ccall, (:quote, #QuoteNode
                  :uv_read_start
                ), :Cint, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), (:curly, :Ptr, :Void)), :stream, (:(::), :uv_jl_alloc_buf, (:curly, :Ptr, :Void)), (:(::), :uv_jl_readcb, (:curly, :Ptr, :Void)))),
            (:line, 677, :none),
            (:(=), (:., :stream, (:quote, #QuoteNode
                  :status
                )), :StatusActive),
            (:line, 678, :none),
            (:return, :ret)
          ), (:block,
            (:line, 679, :none),
            (:if, (:call, :(==), (:., :stream, (:quote, #QuoteNode
                    :status
                  )), :StatusActive), (:block,
                (:line, 680, :none),
                (:return, (:call, :Int32, 0))
              ), (:block,
                (:line, 682, :none),
                (:return, (:call, :Int32, -1))
              ))
          ))
      )),
    (:line, 686, :none),
    (:function, (:call, :start_reading, (:(::), :stream, :LibuvStream), (:(::), :cb, :Function)), (:block,
        (:line, 687, :none),
        (:(=), :failure, (:call, :start_reading, :stream)),
        (:line, 688, :none),
        (:(=), (:., :stream, (:quote, #QuoteNode
              :readcb
            )), :cb),
        (:line, 689, :none),
        (:(=), :nread, (:call, :nb_available, (:., :stream, (:quote, #QuoteNode
                :buffer
              )))),
        (:line, 690, :none),
        (:if, (:call, :>, :nread, 0), (:block,
            (:line, 691, :none),
            (:call, :notify_filled, :stream, :nread)
          )),
        (:line, 693, :none),
        (:return, :failure_code)
      )),
    (:line, 696, :none),
    (:function, (:call, :start_reading, (:(::), :stream, :LibuvStream), (:(::), :cb, :Bool)), (:block,
        (:line, 697, :none),
        (:(=), :failure_code, (:call, :start_reading, :stream)),
        (:line, 698, :none),
        (:(=), (:., :stream, (:quote, #QuoteNode
              :readcb
            )), :cb),
        (:line, 699, :none),
        (:return, :failure_code)
      )),
    (:line, 702, :none),
    (:function, (:call, :stop_reading, (:(::), :stream, :LibuvStream)), (:block,
        (:line, 703, :none),
        (:if, (:call, :(==), (:., :stream, (:quote, #QuoteNode
                :status
              )), :StatusActive), (:block,
            (:line, 704, :none),
            (:(=), :ret, (:ccall, (:quote, #QuoteNode
                  :uv_read_stop
                ), :Cint, (:tuple, (:curly, :Ptr, :Void)), :stream)),
            (:line, 705, :none),
            (:(=), (:., :stream, (:quote, #QuoteNode
                  :status
                )), :StatusOpen),
            (:line, 706, :none),
            (:return, :ret)
          ), (:block,
            (:line, 707, :none),
            (:if, (:call, :(==), (:., :stream, (:quote, #QuoteNode
                    :status
                  )), :StatusOpen), (:block,
                (:line, 708, :none),
                (:return, (:call, :Int32, 0))
              ), (:block,
                (:line, 710, :none),
                (:return, (:call, :Int32, -1))
              ))
          ))
      )),
    (:line, 714, :none),
    (:(=), (:call, :readbytes!, (:(::), :s, :LibuvStream), (:(::), :a, (:curly, :Vector, :UInt8)), (:kw, :nb, (:call, :length, :a))), (:block,
        (:line, 714, :none),
        (:call, :readbytes!, :s, :a, (:call, :Int, :nb))
      )),
    (:line, 715, :none),
    (:function, (:call, :readbytes!, (:(::), :s, :LibuvStream), (:(::), :a, (:curly, :Vector, :UInt8)), (:(::), :nb, :Int)), (:block,
        (:line, 716, :none),
        (:(=), :sbuf, (:., :s, (:quote, #QuoteNode
              :buffer
            ))),
        (:line, 717, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :sbuf, (:quote, #QuoteNode
                :seekable
              )), false)),
        (:line, 718, :none),
        (:macrocall, Symbol("@assert"), (:call, :(>=), (:., :sbuf, (:quote, #QuoteNode
                :maxsize
              )), :nb)),
        (:line, 720, :none),
        (:if, (:call, :(>=), (:call, :nb_available, :sbuf), :nb), (:block,
            (:line, 721, :none),
            (:return, (:call, :readbytes!, :sbuf, :a, :nb))
          )),
        (:line, 724, :none),
        (:if, (:call, :(<=), :nb, :SZ_UNBUFFERED_IO), (:block,
            (:line, 725, :none),
            (:call, :wait_readnb, :s, :nb),
            (:line, 726, :none),
            (:return, (:call, :readbytes!, :sbuf, :a, :nb))
          ), (:block,
            (:line, 728, :none),
            (:try, (:block,
                (:line, 729, :none),
                (:call, :stop_reading, :s),
                (:line, 730, :none),
                (:(=), :newbuf, (:call, :PipeBuffer, :a, :nb)),
                (:line, 731, :none),
                (:(=), (:., :newbuf, (:quote, #QuoteNode
                      :size
                    )), 0),
                (:line, 732, :none),
                (:(=), (:., :s, (:quote, #QuoteNode
                      :buffer
                    )), :newbuf),
                (:line, 733, :none),
                (:call, :write, :newbuf, :sbuf),
                (:line, 734, :none),
                (:call, :wait_readnb, :s, (:call, :Int, :nb)),
                (:line, 735, :none),
                (:call, :compact, :newbuf),
                (:line, 736, :none),
                (:return, (:call, :nb_available, :newbuf))
              ), false, false, (:block,
                (:line, 738, :none),
                (:(=), (:., :s, (:quote, #QuoteNode
                      :buffer
                    )), :sbuf),
                (:line, 739, :none),
                (:if, (:call, :!, (:call, :isempty, (:., (:., :s, (:quote, #QuoteNode
                            :readnotify
                          )), (:quote, #QuoteNode
                          :waitq
                        )))), (:block,
                    (:line, 740, :none),
                    (:call, :start_reading, :s)
                  ))
              ))
          )),
        (:line, 744, :none),
        (:macrocall, Symbol("@assert"), false)
      )),
    (:line, 747, :none),
    (:function, (:call, :read, (:(::), :stream, :LibuvStream)), (:block,
        (:line, 748, :none),
        (:call, :wait_readnb, :stream, (:call, :typemax, :Int)),
        (:line, 749, :none),
        (:return, (:call, :takebuf_array, (:., :stream, (:quote, #QuoteNode
                :buffer
              ))))
      )),
    (:line, 752, :none),
    (:function, (:call, :unsafe_read, (:(::), :s, :LibuvStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :nb, :UInt)), (:block,
        (:line, 753, :none),
        (:(=), :sbuf, (:., :s, (:quote, #QuoteNode
              :buffer
            ))),
        (:line, 754, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :sbuf, (:quote, #QuoteNode
                :seekable
              )), false)),
        (:line, 755, :none),
        (:macrocall, Symbol("@assert"), (:call, :(>=), (:., :sbuf, (:quote, #QuoteNode
                :maxsize
              )), :nb)),
        (:line, 757, :none),
        (:if, (:call, :(>=), (:call, :nb_available, :sbuf), :nb), (:block,
            (:line, 758, :none),
            (:return, (:call, :unsafe_read, :sbuf, :p, :nb))
          )),
        (:line, 761, :none),
        (:if, (:call, :(<=), :nb, :SZ_UNBUFFERED_IO), (:block,
            (:line, 762, :none),
            (:call, :wait_readnb, :s, (:call, :Int, :nb)),
            (:line, 763, :none),
            (:call, :unsafe_read, :sbuf, :p, :nb)
          ), (:block,
            (:line, 765, :none),
            (:try, (:block,
                (:line, 766, :none),
                (:call, :stop_reading, :s),
                (:line, 767, :none),
                (:(=), :newbuf, (:call, :PipeBuffer, (:call, :unsafe_wrap, :Array, :p, :nb), (:call, :Int, :nb))),
                (:line, 768, :none),
                (:(=), (:., :newbuf, (:quote, #QuoteNode
                      :size
                    )), 0),
                (:line, 769, :none),
                (:(=), (:., :s, (:quote, #QuoteNode
                      :buffer
                    )), :newbuf),
                (:line, 770, :none),
                (:call, :write, :newbuf, :sbuf),
                (:line, 771, :none),
                (:call, :wait_readnb, :s, (:call, :Int, :nb)),
                (:line, 772, :none),
                (:||, (:call, :(==), :nb, (:call, :nb_available, :newbuf)), (:call, :throw, (:call, :EOFError)))
              ), false, false, (:block,
                (:line, 774, :none),
                (:(=), (:., :s, (:quote, #QuoteNode
                      :buffer
                    )), :sbuf),
                (:line, 775, :none),
                (:if, (:call, :!, (:call, :isempty, (:., (:., :s, (:quote, #QuoteNode
                            :readnotify
                          )), (:quote, #QuoteNode
                          :waitq
                        )))), (:block,
                    (:line, 776, :none),
                    (:call, :start_reading, :s)
                  ))
              ))
          )),
        (:line, 780, :none),
        :nothing
      )),
    (:line, 783, :none),
    (:function, (:call, :read, (:(::), :this, :LibuvStream), (:(::), (:curly, :Type, :UInt8))), (:block,
        (:line, 784, :none),
        (:call, :wait_readnb, :this, 1),
        (:line, 785, :none),
        (:(=), :buf, (:., :this, (:quote, #QuoteNode
              :buffer
            ))),
        (:line, 786, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :buf, (:quote, #QuoteNode
                :seekable
              )), false)),
        (:line, 787, :none),
        (:return, (:call, :read, :buf, :UInt8))
      )),
    (:line, 790, :none),
    (:function, (:call, :readavailable, (:(::), :this, :LibuvStream)), (:block,
        (:line, 791, :none),
        (:call, :wait_readnb, :this, 1),
        (:line, 792, :none),
        (:(=), :buf, (:., :this, (:quote, #QuoteNode
              :buffer
            ))),
        (:line, 793, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :buf, (:quote, #QuoteNode
                :seekable
              )), false)),
        (:line, 794, :none),
        (:return, (:call, :takebuf_array, :buf))
      )),
    (:line, 797, :none),
    (:function, (:call, :readuntil, (:(::), :this, :LibuvStream), (:(::), :c, :UInt8)), (:block,
        (:line, 798, :none),
        (:call, :wait_readbyte, :this, :c),
        (:line, 799, :none),
        (:(=), :buf, (:., :this, (:quote, #QuoteNode
              :buffer
            ))),
        (:line, 800, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :buf, (:quote, #QuoteNode
                :seekable
              )), false)),
        (:line, 801, :none),
        (:return, (:call, :readuntil, :buf, :c))
      )),
    (:line, 804, :none),
    (:(=), (:call, :uv_write, (:(::), :s, :LibuvStream), (:(::), :p, (:curly, :Vector, :UInt8))), (:block,
        (:line, 804, :none),
        (:call, :uv_write, :s, (:call, :pointer, :p), (:call, :UInt, (:call, :sizeof, :p)))
      )),
    (:line, 805, :none),
    (:function, (:call, :uv_write, (:(::), :s, :LibuvStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :n, :UInt)), (:block,
        (:line, 806, :none),
        (:call, :check_open, :s),
        (:line, 807, :none),
        (:(=), :uvw, (:call, (:., :Libc, (:quote, #QuoteNode
                :malloc
              )), :_sizeof_uv_write)),
        (:line, 808, :none),
        (:call, :uv_req_set_data, :uvw, :C_NULL),
        (:line, 809, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :jl_uv_write
            ), :Int32, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :UInt, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void)), :s, :p, :n, :uvw, (:(::), :uv_jl_writecb_task, (:curly, :Ptr, :Void)))),
        (:line, 814, :none),
        (:if, (:call, :<, :err, 0), (:block,
            (:line, 815, :none),
            (:call, (:., :Libc, (:quote, #QuoteNode
                  :free
                )), :uvw),
            (:line, 816, :none),
            (:call, :uv_error, "write", :err)
          )),
        (:line, 818, :none),
        (:(=), :ct, (:call, :current_task)),
        (:line, 819, :none),
        (:call, :uv_req_set_data, :uvw, :ct),
        (:line, 820, :none),
        (:call, :stream_wait, :ct),
        (:line, 821, :none),
        (:return, (:call, :Int, :n))
      )),
    (:line, 828, :none),
    (:function, (:call, :unsafe_write, (:(::), :s, :LibuvStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :n, :UInt)), (:block,
        (:line, 829, :none),
        (:if, (:call, :isnull, (:., :s, (:quote, #QuoteNode
                :sendbuf
              ))), (:block,
            (:line, 830, :none),
            (:return, (:call, :uv_write, :s, :p, (:call, :UInt, :n)))
          )),
        (:line, 833, :none),
        (:(=), :buf, (:call, :get, (:., :s, (:quote, #QuoteNode
                :sendbuf
              )))),
        (:line, 834, :none),
        (:(=), :totb, (:call, :+, (:call, :nb_available, :buf), :n)),
        (:line, 835, :none),
        (:if, (:call, :<, :totb, (:., :buf, (:quote, #QuoteNode
                :maxsize
              ))), (:block,
            (:line, 836, :none),
            (:(=), :nb, (:call, :unsafe_write, :buf, :p, :n))
          ), (:block,
            (:line, 838, :none),
            (:call, :flush, :s),
            (:line, 839, :none),
            (:if, (:call, :>, :n, (:., :buf, (:quote, #QuoteNode
                    :maxsize
                  ))), (:block,
                (:line, 840, :none),
                (:(=), :nb, (:call, :uv_write, :s, :p, :n))
              ), (:block,
                (:line, 842, :none),
                (:(=), :nb, (:call, :unsafe_write, :buf, :p, :n))
              ))
          )),
        (:line, 845, :none),
        (:return, :nb)
      )),
    (:line, 848, :none),
    (:function, (:call, :flush, (:(::), :s, :LibuvStream)), (:block,
        (:line, 849, :none),
        (:if, (:call, :isnull, (:., :s, (:quote, #QuoteNode
                :sendbuf
              ))), (:block,
            (:line, 850, :none),
            (:return, nothing)
          )),
        (:line, 852, :none),
        (:(=), :buf, (:call, :get, (:., :s, (:quote, #QuoteNode
                :sendbuf
              )))),
        (:line, 853, :none),
        (:if, (:call, :>, (:call, :nb_available, :buf), 0), (:block,
            (:line, 854, :none),
            (:(=), :arr, (:call, :takebuf_array, :buf)),
            (:line, 855, :none),
            (:call, :uv_write, :s, :arr)
          )),
        (:line, 857, :none),
        (:return, nothing)
      )),
    (:line, 860, :none),
    (:(=), (:call, :buffer_writes, (:(::), :s, :LibuvStream), :bufsize), (:block,
        (:line, 860, :none),
        (:block,
          (:(=), (:., :s, (:quote, #QuoteNode
                :sendbuf
              )), (:call, :PipeBuffer, :bufsize)),
          :s
        )
      )),
    (:line, 864, :none),
    (:(=), (:call, :write, (:(::), :s, :LibuvStream), (:(::), :b, :UInt8)), (:block,
        (:line, 864, :none),
        (:call, :write, :s, (:call, (:curly, :Ref, :UInt8), :b))
      )),
    (:line, 866, :none),
    (:function, (:call, :uv_writecb_task, (:(::), :req, (:curly, :Ptr, :Void)), (:(::), :status, :Cint)), (:block,
        (:line, 867, :none),
        (:(=), :d, (:call, :uv_req_data, :req)),
        (:line, 868, :none),
        (:if, (:call, :(!=), :d, :C_NULL), (:block,
            (:line, 869, :none),
            (:if, (:call, :<, :status, 0), (:block,
                (:line, 870, :none),
                (:(=), :err, (:call, :UVError, "write", :status)),
                (:line, 871, :none),
                (:call, :schedule, (:(::), (:call, :unsafe_pointer_to_objref, :d), :Task), :err, (:kw, :error, true))
              ), (:block,
                (:line, 873, :none),
                (:call, :schedule, (:(::), (:call, :unsafe_pointer_to_objref, :d), :Task))
              ))
          )),
        (:line, 876, :none),
        (:call, (:., :Libc, (:quote, #QuoteNode
              :free
            )), :req),
        (:line, 877, :none),
        :nothing
      )),
    (:line, 882, :none),
    (:function, (:call, :accept_nonblock, (:(::), :server, :PipeServer), (:(::), :client, :PipeEndpoint)), (:block,
        (:line, 883, :none),
        (:if, (:call, :(!=), (:., :client, (:quote, #QuoteNode
                :status
              )), :StatusInit), (:block,
            (:line, 884, :none),
            (:call, :error, (:if, (:call, :(==), (:., :client, (:quote, #QuoteNode
                      :status
                    )), :StatusUninit), "client is not initialized", "client is already in use or has been closed"))
          )),
        (:line, 887, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :uv_accept
            ), :Int32, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void)), (:., :server, (:quote, #QuoteNode
                :handle
              )), (:., :client, (:quote, #QuoteNode
                :handle
              )))),
        (:line, 888, :none),
        (:if, (:call, :(==), :err, 0), (:block,
            (:line, 889, :none),
            (:(=), (:., :client, (:quote, #QuoteNode
                  :status
                )), :StatusOpen)
          )),
        (:line, 891, :none),
        :err
      )),
    (:line, 893, :none),
    (:function, (:call, :accept_nonblock, (:(::), :server, :PipeServer)), (:block,
        (:line, 894, :none),
        (:(=), :client, (:call, :init_pipe!, (:parameters, (:kw, :readable, true), (:kw, :writable, true), (:kw, :julia_only, true)), (:call, :PipeEndpoint))),
        (:line, 895, :none),
        (:call, :uv_error, "accept", (:call, :(!=), (:call, :accept_nonblock, :server, :client), 0)),
        (:line, 896, :none),
        :client
      )),
    (:line, 899, :none),
    (:function, (:call, :accept, (:(::), :server, :LibuvServer), (:(::), :client, :LibuvStream)), (:block,
        (:line, 900, :none),
        (:if, (:call, :(!=), (:., :server, (:quote, #QuoteNode
                :status
              )), :StatusActive), (:block,
            (:line, 901, :none),
            (:call, :throw, (:call, :ArgumentError, "server not connected, make sure \"listen\" has been called"))
          )),
        (:line, 903, :none),
        (:while, (:call, :isopen, :server), (:block,
            (:line, 904, :none),
            (:(=), :err, (:call, :accept_nonblock, :server, :client)),
            (:line, 905, :none),
            (:if, (:call, :(==), :err, 0), (:block,
                (:line, 906, :none),
                (:return, :client)
              ), (:block,
                (:line, 907, :none),
                (:if, (:call, :(!=), :err, :UV_EAGAIN), (:block,
                    (:line, 908, :none),
                    (:call, :uv_error, "accept", :err)
                  ))
              )),
            (:line, 910, :none),
            (:call, :stream_wait, :server, (:., :server, (:quote, #QuoteNode
                  :connectnotify
                )))
          )),
        (:line, 912, :none),
        (:call, :uv_error, "accept", :UV_ECONNABORTED)
      )),
    (:line, 915, :none),
    (:const, (:(=), :BACKLOG_DEFAULT, 511)),
    (:line, 917, :none),
    (:function, (:call, :_listen, (:parameters, (:kw, (:(::), :backlog, :Integer), :BACKLOG_DEFAULT)), (:(::), :sock, :LibuvServer)), (:block,
        (:line, 918, :none),
        (:call, :check_open, :sock),
        (:line, 919, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :uv_listen
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Cint, (:curly, :Ptr, :Void)), :sock, :backlog, (:(::), :uv_jl_connectioncb, (:curly, :Ptr, :Void)))),
        (:line, 921, :none),
        (:(=), (:., :sock, (:quote, #QuoteNode
              :status
            )), :StatusActive),
        (:line, 922, :none),
        :err
      )),
    (:line, 925, :none),
    (:function, (:call, :bind, (:(::), :server, :PipeServer), (:(::), :name, :AbstractString)), (:block,
        (:line, 926, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :server, (:quote, #QuoteNode
                :status
              )), :StatusInit)),
        (:line, 927, :none),
        (:(=), :err, (:ccall, (:quote, #QuoteNode
              :uv_pipe_bind
            ), :Int32, (:tuple, (:curly, :Ptr, :Void), :Cstring), :server, :name)),
        (:line, 929, :none),
        (:if, (:call, :(!=), :err, 0), (:block,
            (:line, 930, :none),
            (:if, (:&&, (:call, :(!=), :err, :UV_EADDRINUSE), (:call, :(!=), :err, :UV_EACCES)), (:block,
                (:line, 932, :none),
                (:call, :throw, (:call, :UVError, "bind", :err))
              ), (:block,
                (:line, 934, :none),
                (:return, false)
              ))
          )),
        (:line, 937, :none),
        (:(=), (:., :server, (:quote, #QuoteNode
              :status
            )), :StatusOpen),
        (:line, 938, :none),
        true
      )),
    (:line, 942, :none),
    (:function, (:call, :listen, (:(::), :path, :AbstractString)), (:block,
        (:line, 943, :none),
        (:(=), :sock, (:call, :PipeServer)),
        (:line, 944, :none),
        (:||, (:call, :bind, :sock, :path), (:call, :throw, (:call, :ArgumentError, (:string, "could not listen on path ", :path)))),
        (:line, 945, :none),
        (:call, :uv_error, "listen", (:call, :_listen, :sock)),
        (:line, 946, :none),
        :sock
      )),
    (:line, 949, :none),
    (:function, (:call, :connect!, (:(::), :sock, :PipeEndpoint), (:(::), :path, :AbstractString)), (:block,
        (:line, 950, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), (:., :sock, (:quote, #QuoteNode
                :status
              )), :StatusInit)),
        (:line, 951, :none),
        (:(=), :req, (:call, (:., :Libc, (:quote, #QuoteNode
                :malloc
              )), :_sizeof_uv_connect)),
        (:line, 952, :none),
        (:call, :uv_req_set_data, :req, :C_NULL),
        (:line, 953, :none),
        (:ccall, (:quote, #QuoteNode
            :uv_pipe_connect
          ), :Void, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Cstring, (:curly, :Ptr, :Void)), :req, (:., :sock, (:quote, #QuoteNode
              :handle
            )), :path, (:(::), :uv_jl_connectcb, (:curly, :Ptr, :Void))),
        (:line, 954, :none),
        (:(=), (:., :sock, (:quote, #QuoteNode
              :status
            )), :StatusConnecting),
        (:line, 955, :none),
        :sock
      )),
    (:line, 958, :none),
    (:function, (:call, :connect, (:(::), :sock, :LibuvStream), (:..., :args)), (:block,
        (:line, 959, :none),
        (:call, :connect!, :sock, (:..., :args)),
        (:line, 960, :none),
        (:call, :wait_connected, :sock),
        (:line, 961, :none),
        :sock
      )),
    (:line, 966, :none),
    (:(=), (:call, :connect, (:(::), :path, :AbstractString)), (:block,
        (:line, 966, :none),
        (:call, :connect, (:call, :init_pipe!, (:parameters, (:kw, :readable, false), (:kw, :writable, false), (:kw, :julia_only, true)), (:call, :PipeEndpoint)), :path)
      )),
    (:line, 968, :none),
    (:(=), (:call, :_fd, (:(::), :x, :IOStream)), (:block,
        (:line, 968, :none),
        (:call, :RawFD, (:call, :fd, :x))
      )),
    (:line, 969, :none),
    (:if, (:call, :is_windows), (:block,
        (:line, 970, :none),
        (:(=), (:call, :_fd, (:(::), :x, :LibuvStream)), (:block,
            (:line, 970, :none),
            (:call, :WindowsRawSocket, (:ccall, (:quote, #QuoteNode
                  :jl_uv_handle
                ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :Void)), (:., :x, (:quote, #QuoteNode
                    :handle
                  ))))
          ))
      ), (:block,
        (:line, 973, :none),
        (:(=), (:call, :_fd, (:(::), :x, :LibuvStream)), (:block,
            (:line, 973, :none),
            (:call, :RawFD, (:ccall, (:quote, #QuoteNode
                  :jl_uv_handle
                ), :Int32, (:tuple, (:curly, :Ptr, :Void)), (:., :x, (:quote, #QuoteNode
                    :handle
                  ))))
          ))
      )),
    (:line, 976, :none),
    (:for, (:(=), (:tuple, :x, :writable, :unix_fd, :c_symbol), (:tuple, (:tuple, (:quote, #QuoteNode
              :STDIN
            ), false, 0, (:quote, #QuoteNode
              :jl_uv_stdin
            )), (:tuple, (:quote, #QuoteNode
              :STDOUT
            ), true, 1, (:quote, #QuoteNode
              :jl_uv_stdout
            )), (:tuple, (:quote, #QuoteNode
              :STDERR
            ), true, 2, (:quote, #QuoteNode
              :jl_uv_stderr
            )))), (:block,
        (:line, 980, :none),
        (:(=), :f, (:call, :Symbol, "redirect_", (:call, :lowercase, (:call, :string, :x)))),
        (:line, 981, :none),
        (:(=), :_f, (:call, :Symbol, "_", :f)),
        (:line, 982, :none),
        (:macrocall, Symbol("@eval"), (:block,
            (:line, 983, :none),
            (:function, (:call, (:$, :_f), :stream), (:block,
                (:line, 984, :none),
                (:global, (:$, :x)),
                (:line, 985, :none),
                (:macrocall, Symbol("@static"), (:if, (:call, :is_windows), (:block,
                      (:line, 986, :none),
                      (:ccall, (:quote, #QuoteNode
                          :SetStdHandle
                        ), :Int32, (:tuple, :Int32, (:curly, :Ptr, :Void)), (:$, (:call, :-, -10, :unix_fd)), (:., (:call, (:., :Libc, (:quote, #QuoteNode
                                :_get_osfhandle
                              )), (:call, :_fd, :stream)), (:quote, #QuoteNode
                            :handle
                          )), (:stdcall,))
                    ), (:block,
                      (:line, 989, :none),
                      (:call, :dup, (:call, :_fd, :stream), (:call, :RawFD, (:$, :unix_fd)))
                    ))),
                (:line, 991, :none),
                (:(=), (:$, :x), :stream)
              )),
            (:line, 993, :none),
            (:function, (:call, (:$, :f), (:(::), :handle, (:curly, :Union, :LibuvStream, :IOStream))), (:block,
                (:line, 994, :none),
                (:call, (:$, :_f), :handle),
                (:line, 995, :none),
                (:call, :unsafe_store!, (:call, :cglobal, (:$, (:call, :Expr, (:quote, #QuoteNode
                          :quote
                        ), :c_symbol)), (:curly, :Ptr, :Void)), (:., :handle, (:quote, #QuoteNode
                      :handle
                    ))),
                (:line, 997, :none),
                :handle
              )),
            (:line, 999, :none),
            (:function, (:call, (:$, :f)), (:block,
                (:line, 1000, :none),
                (:(=), (:tuple, :read, :write), (:tuple, (:call, :PipeEndpoint), (:call, :PipeEndpoint))),
                (:line, 1001, :none),
                (:call, :link_pipe, :read, (:$, :writable), :write, (:$, (:call, :!, :writable))),
                (:line, 1002, :none),
                (:call, (:$, :f), (:$, (:if, :writable, (:quote, #QuoteNode
                        :write
                      ), (:quote, #QuoteNode
                        :read
                      )))),
                (:line, 1003, :none),
                (:tuple, :read, :write)
              ))
          ))
      )),
    (:line, 1008, :none),
    (:(=), (:call, :mark, (:(::), :x, :LibuvStream)), (:block,
        (:line, 1008, :none),
        (:call, :mark, (:., :x, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 1009, :none),
    (:(=), (:call, :unmark, (:(::), :x, :LibuvStream)), (:block,
        (:line, 1009, :none),
        (:call, :unmark, (:., :x, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 1010, :none),
    (:(=), (:call, :reset, (:(::), :x, :LibuvStream)), (:block,
        (:line, 1010, :none),
        (:call, :reset, (:., :x, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 1011, :none),
    (:(=), (:call, :ismarked, (:(::), :x, :LibuvStream)), (:block,
        (:line, 1011, :none),
        (:call, :ismarked, (:., :x, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 1014, :none),
    (:type, true, (:<:, :BufferStream, :LibuvStream), (:block,
        (:line, 1015, :none),
        (:(::), :buffer, :IOBuffer),
        (:line, 1016, :none),
        (:(::), :r_c, :Condition),
        (:line, 1017, :none),
        (:(::), :close_c, :Condition),
        (:line, 1018, :none),
        (:(::), :is_open, :Bool),
        (:line, 1019, :none),
        (:(::), :buffer_writes, :Bool),
        (:line, 1020, :none),
        (:(::), :lock, :ReentrantLock),
        (:line, 1022, :none),
        (:(=), (:call, :BufferStream), (:block,
            (:line, 1022, :none),
            (:call, :new, (:call, :PipeBuffer), (:call, :Condition), (:call, :Condition), true, false, (:call, :ReentrantLock))
          ))
      )),
    (:line, 1025, :none),
    (:(=), (:call, :isopen, (:(::), :s, :BufferStream)), (:block,
        (:line, 1025, :none),
        (:., :s, (:quote, #QuoteNode
            :is_open
          ))
      )),
    (:line, 1026, :none),
    (:function, (:call, :close, (:(::), :s, :BufferStream)), (:block,
        (:line, 1027, :none),
        (:(=), (:., :s, (:quote, #QuoteNode
              :is_open
            )), false),
        (:line, 1028, :none),
        (:call, :notify, (:parameters, (:kw, :all, true)), (:., :s, (:quote, #QuoteNode
              :r_c
            ))),
        (:line, 1029, :none),
        (:call, :notify, (:parameters, (:kw, :all, true)), (:., :s, (:quote, #QuoteNode
              :close_c
            ))),
        (:line, 1030, :none),
        :nothing
      )),
    (:line, 1032, :none),
    (:(=), (:call, :uvfinalize, (:(::), :s, :BufferStream)), (:block,
        (:line, 1032, :none),
        :nothing
      )),
    (:line, 1034, :none),
    (:(=), (:call, :read, (:(::), :s, :BufferStream), (:(::), (:curly, :Type, :UInt8))), (:block,
        (:line, 1034, :none),
        (:block,
          (:call, :wait_readnb, :s, 1),
          (:call, :read, (:., :s, (:quote, #QuoteNode
                :buffer
              )), :UInt8)
        )
      )),
    (:line, 1035, :none),
    (:(=), (:call, :unsafe_read, (:(::), :s, :BufferStream), (:(::), :a, (:curly, :Ptr, :UInt8)), (:(::), :nb, :UInt)), (:block,
        (:line, 1035, :none),
        (:block,
          (:call, :wait_readnb, :s, (:call, :Int, :nb)),
          (:call, :unsafe_read, (:., :s, (:quote, #QuoteNode
                :buffer
              )), :a, :nb)
        )
      )),
    (:line, 1036, :none),
    (:(=), (:call, :nb_available, (:(::), :s, :BufferStream)), (:block,
        (:line, 1036, :none),
        (:call, :nb_available, (:., :s, (:quote, #QuoteNode
              :buffer
            )))
      )),
    (:line, 1038, :none),
    (:(=), (:call, :isreadable, (:(::), :s, :BufferStream)), (:block,
        (:line, 1038, :none),
        (:., (:., :s, (:quote, #QuoteNode
              :buffer
            )), (:quote, #QuoteNode
            :readable
          ))
      )),
    (:line, 1039, :none),
    (:(=), (:call, :iswritable, (:(::), :s, :BufferStream)), (:block,
        (:line, 1039, :none),
        (:., (:., :s, (:quote, #QuoteNode
              :buffer
            )), (:quote, #QuoteNode
            :writable
          ))
      )),
    (:line, 1041, :none),
    (:function, (:call, :wait_readnb, (:(::), :s, :BufferStream), (:(::), :nb, :Int)), (:block,
        (:line, 1042, :none),
        (:while, (:&&, (:call, :isopen, :s), (:call, :<, (:call, :nb_available, (:., :s, (:quote, #QuoteNode
                    :buffer
                  ))), :nb)), (:block,
            (:line, 1043, :none),
            (:call, :wait, (:., :s, (:quote, #QuoteNode
                  :r_c
                )))
          ))
      )),
    (:line, 1047, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :s, :BufferStream)), (:block,
        (:line, 1047, :none),
        (:call, :print, :io, "BufferStream() bytes waiting:", (:call, :nb_available, (:., :s, (:quote, #QuoteNode
                :buffer
              ))), ", isopen:", (:., :s, (:quote, #QuoteNode
              :is_open
            )))
      )),
    (:line, 1049, :none),
    (:function, (:call, :wait_readbyte, (:(::), :s, :BufferStream), (:(::), :c, :UInt8)), (:block,
        (:line, 1050, :none),
        (:while, (:&&, (:call, :isopen, :s), (:call, :(<=), (:call, :search, (:., :s, (:quote, #QuoteNode
                    :buffer
                  )), :c), 0)), (:block,
            (:line, 1051, :none),
            (:call, :wait, (:., :s, (:quote, #QuoteNode
                  :r_c
                )))
          ))
      )),
    (:line, 1055, :none),
    (:(=), (:call, :wait_close, (:(::), :s, :BufferStream)), (:block,
        (:line, 1055, :none),
        (:if, (:call, :isopen, :s), (:block,
            (:line, 1055, :none),
            (:call, :wait, (:., :s, (:quote, #QuoteNode
                  :close_c
                )))
          ))
      )),
    (:line, 1056, :none),
    (:(=), (:call, :start_reading, (:(::), :s, :BufferStream)), (:block,
        (:line, 1056, :none),
        :nothing
      )),
    (:line, 1058, :none),
    (:(=), (:call, :write, (:(::), :s, :BufferStream), (:(::), :b, :UInt8)), (:block,
        (:line, 1058, :none),
        (:call, :write, :s, (:call, (:curly, :Ref, :UInt8), :b))
      )),
    (:line, 1059, :none),
    (:function, (:call, :unsafe_write, (:(::), :s, :BufferStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :nb, :UInt)), (:block,
        (:line, 1060, :none),
        (:(=), :rv, (:call, :unsafe_write, (:., :s, (:quote, #QuoteNode
                :buffer
              )), :p, :nb)),
        (:line, 1061, :none),
        (:&&, (:call, :!, (:., :s, (:quote, #QuoteNode
                :buffer_writes
              ))), (:call, :notify, (:parameters, (:kw, :all, true)), (:., :s, (:quote, #QuoteNode
                :r_c
              )))),
        (:line, 1062, :none),
        (:return, :rv)
      )),
    (:line, 1065, :none),
    (:function, (:call, :eof, (:(::), :s, :BufferStream)), (:block,
        (:line, 1066, :none),
        (:call, :wait_readnb, :s, 1),
        (:line, 1067, :none),
        (:return, (:&&, (:call, :!, (:call, :isopen, :s)), (:call, :(<=), (:call, :nb_available, :s), 0)))
      )),
    (:line, 1071, :none),
    (:(=), (:call, :buffer_writes, (:(::), :s, :BufferStream), (:kw, :bufsize, 0)), (:block,
        (:line, 1071, :none),
        (:block,
          (:(=), (:., :s, (:quote, #QuoteNode
                :buffer_writes
              )), true),
          :s
        )
      )),
    (:line, 1072, :none),
    (:(=), (:call, :flush, (:(::), :s, :BufferStream)), (:block,
        (:line, 1072, :none),
        (:block,
          (:call, :notify, (:parameters, (:kw, :all, true)), (:., :s, (:quote, #QuoteNode
                :r_c
              ))),
          :nothing
        )
      ))
  ))