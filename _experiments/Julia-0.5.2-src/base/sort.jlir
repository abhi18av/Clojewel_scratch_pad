(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :Sort, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:toplevel, (:using, :Base, :Order), (:using, :Base, :copymutable), (:using, :Base, :linearindices), (:using, :Base, :linearindexing), (:using, :Base, :viewindexing), (:using, :Base, :LinearFast), (:using, :Base, :_length)),
        (:line, 7, :none),
        (:toplevel, (:import, :Base, :sort), (:import, :Base, :sort!), (:import, :Base, :issorted), (:import, :Base, :sortperm)),
        (:line, 13, :none),
        (:export, :issorted, :select, :select!, :searchsorted, :searchsortedfirst, :searchsortedlast, :sort, :sort!, :selectperm, :selectperm!, :sortperm, :sortperm!, :sortrows, :sortcols, :InsertionSort, :QuickSort, :MergeSort, :PartialQuickSort),
        (:line, 36, :none),
        (:export, :Algorithm, :DEFAULT_UNSTABLE, :DEFAULT_STABLE, :SMALL_ALGORITHM, :SMALL_THRESHOLD),
        (:line, 46, :none),
        (:function, (:call, :issorted, :itr, (:(::), :order, :Ordering)), (:block,
            (:line, 47, :none),
            (:(=), :state, (:call, :start, :itr)),
            (:line, 48, :none),
            (:&&, (:call, :done, :itr, :state), (:return, true)),
            (:line, 49, :none),
            (:(=), (:tuple, :prev, :state), (:call, :next, :itr, :state)),
            (:line, 50, :none),
            (:while, (:call, :!, (:call, :done, :itr, :state)), (:block,
                (:line, 51, :none),
                (:(=), (:tuple, :this, :state), (:call, :next, :itr, :state)),
                (:line, 52, :none),
                (:&&, (:call, :lt, :order, :this, :prev), (:return, false)),
                (:line, 53, :none),
                (:(=), :prev, :this)
              )),
            (:line, 55, :none),
            (:return, true)
          )),
        (:line, 57, :none),
        (:(=), (:call, :issorted, (:parameters, (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward)), :itr), (:block,
            (:line, 57, :none),
            (:call, :issorted, :itr, (:call, :ord, :lt, :by, :rev, :order))
          )),
        (:line, 61, :none),
        (:function, (:call, :select!, (:(::), :v, :AbstractVector), (:(::), :k, (:curly, :Union, :Int, :OrdinalRange)), (:(::), :o, :Ordering)), (:block,
            (:line, 62, :none),
            (:(=), :inds, (:call, :indices, :v, 1)),
            (:line, 63, :none),
            (:call, :sort!, :v, (:call, :first, :inds), (:call, :last, :inds), (:call, :PartialQuickSort, :k), :o),
            (:line, 64, :none),
            (:ref, :v, :k)
          )),
        (:line, 66, :none),
        (:(=), (:call, :select!, (:parameters, (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward)), (:(::), :v, :AbstractVector), (:(::), :k, (:curly, :Union, :Int, :OrdinalRange))), (:block,
            (:line, 66, :none),
            (:call, :select!, :v, :k, (:call, :ord, :lt, :by, :rev, :order))
          )),
        (:line, 70, :none),
        (:(=), (:call, :select, (:parameters, (:..., :kws)), (:(::), :v, :AbstractVector), (:(::), :k, (:curly, :Union, :Int, :OrdinalRange))), (:block,
            (:line, 70, :none),
            (:call, :select!, (:parameters, (:..., :kws)), (:call, :copymutable, :v), :k)
          )),
        (:line, 78, :none),
        (:function, (:call, :searchsortedfirst, (:(::), :v, :AbstractVector), :x, (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :o, :Ordering)), (:block,
            (:line, 79, :none),
            (:(=), :lo, (:call, :-, :lo, 1)),
            (:line, 80, :none),
            (:(=), :hi, (:call, :+, :hi, 1)),
            (:line, 81, :none),
            (:macrocall, Symbol("@inbounds"), (:while, (:call, :<, :lo, (:call, :-, :hi, 1)), (:block,
                  (:line, 82, :none),
                  (:(=), :m, (:call, :>>>, (:call, :+, :lo, :hi), 1)),
                  (:line, 83, :none),
                  (:if, (:call, :lt, :o, (:ref, :v, :m), :x), (:block,
                      (:line, 84, :none),
                      (:(=), :lo, :m)
                    ), (:block,
                      (:line, 86, :none),
                      (:(=), :hi, :m)
                    ))
                ))),
            (:line, 89, :none),
            (:return, :hi)
          )),
        (:line, 94, :none),
        (:function, (:call, :searchsortedlast, (:(::), :v, :AbstractVector), :x, (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :o, :Ordering)), (:block,
            (:line, 95, :none),
            (:(=), :lo, (:call, :-, :lo, 1)),
            (:line, 96, :none),
            (:(=), :hi, (:call, :+, :hi, 1)),
            (:line, 97, :none),
            (:macrocall, Symbol("@inbounds"), (:while, (:call, :<, :lo, (:call, :-, :hi, 1)), (:block,
                  (:line, 98, :none),
                  (:(=), :m, (:call, :>>>, (:call, :+, :lo, :hi), 1)),
                  (:line, 99, :none),
                  (:if, (:call, :lt, :o, :x, (:ref, :v, :m)), (:block,
                      (:line, 100, :none),
                      (:(=), :hi, :m)
                    ), (:block,
                      (:line, 102, :none),
                      (:(=), :lo, :m)
                    ))
                ))),
            (:line, 105, :none),
            (:return, :lo)
          )),
        (:line, 111, :none),
        (:function, (:call, :searchsorted, (:(::), :v, :AbstractVector), :x, (:(::), :ilo, :Int), (:(::), :ihi, :Int), (:(::), :o, :Ordering)), (:block,
            (:line, 112, :none),
            (:(=), :lo, (:call, :-, :ilo, 1)),
            (:line, 113, :none),
            (:(=), :hi, (:call, :+, :ihi, 1)),
            (:line, 114, :none),
            (:macrocall, Symbol("@inbounds"), (:while, (:call, :<, :lo, (:call, :-, :hi, 1)), (:block,
                  (:line, 115, :none),
                  (:(=), :m, (:call, :>>>, (:call, :+, :lo, :hi), 1)),
                  (:line, 116, :none),
                  (:if, (:call, :lt, :o, (:ref, :v, :m), :x), (:block,
                      (:line, 117, :none),
                      (:(=), :lo, :m)
                    ), (:block,
                      (:line, 118, :none),
                      (:if, (:call, :lt, :o, :x, (:ref, :v, :m)), (:block,
                          (:line, 119, :none),
                          (:(=), :hi, :m)
                        ), (:block,
                          (:line, 121, :none),
                          (:(=), :a, (:call, :searchsortedfirst, :v, :x, (:call, :max, :lo, :ilo), :m, :o)),
                          (:line, 122, :none),
                          (:(=), :b, (:call, :searchsortedlast, :v, :x, :m, (:call, :min, :hi, :ihi), :o)),
                          (:line, 123, :none),
                          (:return, (:(:), :a, :b))
                        ))
                    ))
                ))),
            (:line, 126, :none),
            (:return, (:(:), (:call, :+, :lo, 1), (:call, :-, :hi, 1)))
          )),
        (:line, 129, :none),
        (:function, (:call, (:curly, :searchsortedlast, (:<:, :T, :Real)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Real), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 130, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 131, :none),
                (:if, (:call, :lt, :o, :x, (:call, :first, :a)), 0, (:call, :length, :a))
              ), (:block,
                (:line, 133, :none),
                (:(=), :n, (:call, :round, :Integer, (:call, :clamp, (:call, :+, (:call, :/, (:call, :-, :x, (:call, :first, :a)), (:call, :step, :a)), 1), 1, (:call, :length, :a)))),
                (:line, 134, :none),
                (:if, (:call, :lt, :o, :x, (:ref, :a, :n)), (:call, :-, :n, 1), :n)
              ))
          )),
        (:line, 138, :none),
        (:function, (:call, (:curly, :searchsortedfirst, (:<:, :T, :Real)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Real), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 139, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 140, :none),
                (:if, (:call, :lt, :o, (:call, :first, :a), :x), (:call, :+, (:call, :length, :a), 1), 1)
              ), (:block,
                (:line, 142, :none),
                (:(=), :n, (:call, :round, :Integer, (:call, :clamp, (:call, :+, (:call, :/, (:call, :-, :x, (:call, :first, :a)), (:call, :step, :a)), 1), 1, (:call, :length, :a)))),
                (:line, 143, :none),
                (:if, (:call, :lt, :o, (:ref, :a, :n), :x), (:call, :+, :n, 1), :n)
              ))
          )),
        (:line, 147, :none),
        (:function, (:call, (:curly, :searchsortedlast, (:<:, :T, :Integer)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Real), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 148, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 149, :none),
                (:if, (:call, :lt, :o, :x, (:call, :first, :a)), 0, (:call, :length, :a))
              ), (:block,
                (:line, 151, :none),
                (:call, :clamp, (:call, :+, (:call, :fld, (:call, :-, (:call, :floor, :Integer, :x), (:call, :first, :a)), (:call, :step, :a)), 1), 0, (:call, :length, :a))
              ))
          )),
        (:line, 155, :none),
        (:function, (:call, (:curly, :searchsortedfirst, (:<:, :T, :Integer)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Real), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 156, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 157, :none),
                (:if, (:call, :lt, :o, (:call, :first, :a), :x), (:call, :+, (:call, :length, :a), 1), 1)
              ), (:block,
                (:line, 159, :none),
                (:call, :clamp, (:call, :+, (:call, :-, (:call, :fld, (:call, :+, (:call, :floor, :Integer, (:call, :-, :x)), (:call, :first, :a)), (:call, :step, :a))), 1), 1, (:call, :+, (:call, :length, :a), 1))
              ))
          )),
        (:line, 163, :none),
        (:function, (:call, (:curly, :searchsortedfirst, (:<:, :T, :Integer)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Unsigned), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 164, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 165, :none),
                (:if, (:call, :lt, :o, (:call, :first, :a), :x), (:call, :+, (:call, :length, :a), 1), 1)
              ), (:block,
                (:line, 167, :none),
                (:call, :clamp, (:call, :+, (:call, :-, (:call, :fld, (:call, :-, (:call, :first, :a), (:call, :signed, :x)), (:call, :step, :a))), 1), 1, (:call, :+, (:call, :length, :a), 1))
              ))
          )),
        (:line, 171, :none),
        (:function, (:call, (:curly, :searchsortedlast, (:<:, :T, :Integer)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Unsigned), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 172, :none),
            (:if, (:call, :(==), (:call, :step, :a), 0), (:block,
                (:line, 173, :none),
                (:if, (:call, :lt, :o, :x, (:call, :first, :a)), 0, (:call, :length, :a))
              ), (:block,
                (:line, 175, :none),
                (:call, :clamp, (:call, :+, (:call, :fld, (:call, :-, (:call, :signed, :x), (:call, :first, :a)), (:call, :step, :a)), 1), 0, (:call, :length, :a))
              ))
          )),
        (:line, 179, :none),
        (:(=), (:call, (:curly, :searchsorted, (:<:, :T, :Real)), (:(::), :a, (:curly, :Range, :T)), (:(::), :x, :Real), (:(::), :o, :DirectOrdering)), (:block,
            (:line, 179, :none),
            (:(:), (:call, :searchsortedfirst, :a, :x, :o), (:call, :searchsortedlast, :a, :x, :o))
          )),
        (:line, 182, :none),
        (:for, (:(=), :s, (:vect, (:quote, #QuoteNode
                :searchsortedfirst
              ), (:quote, #QuoteNode
                :searchsortedlast
              ), (:quote, #QuoteNode
                :searchsorted
              ))), (:block,
            (:line, 183, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 184, :none),
                (:(=), (:call, (:$, :s), (:(::), :v, :AbstractVector), :x, (:(::), :o, :Ordering)), (:block,
                    (:line, 184, :none),
                    (:block,
                      (:(=), :inds, (:call, :indices, :v, 1)),
                      (:call, (:$, :s), :v, :x, (:call, :first, :inds), (:call, :last, :inds), :o)
                    )
                  )),
                (:line, 185, :none),
                (:(=), (:call, (:$, :s), (:parameters, (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward)), (:(::), :v, :AbstractVector), :x), (:block,
                    (:line, 185, :none),
                    (:call, (:$, :s), :v, :x, (:call, :ord, :lt, :by, :rev, :order))
                  )),
                (:line, 188, :none),
                (:(=), (:call, (:$, :s), (:(::), :v, :AbstractVector), :x), (:block,
                    (:line, 188, :none),
                    (:call, (:$, :s), :v, :x, :Forward)
                  ))
              ))
          )),
        (:line, 194, :none),
        (:abstract, :Algorithm),
        (:line, 196, :none),
        (:type, false, (:<:, :InsertionSortAlg, :Algorithm), (:block,
            (:line, 196, :none)
          )),
        (:line, 197, :none),
        (:type, false, (:<:, :QuickSortAlg, :Algorithm), (:block,
            (:line, 197, :none)
          )),
        (:line, 198, :none),
        (:type, false, (:<:, :MergeSortAlg, :Algorithm), (:block,
            (:line, 198, :none)
          )),
        (:line, 200, :none),
        (:type, false, (:<:, (:curly, :PartialQuickSort, (:<:, :T, (:curly, :Union, :Int, :OrdinalRange))), :Algorithm), (:block,
            (:line, 201, :none),
            (:(::), :k, :T)
          )),
        (:line, 204, :none),
        (:(=), (:call, (:., :Base, (:quote, #QuoteNode
                :first
              )), (:(::), :a, (:curly, :PartialQuickSort, :Int))), (:block,
            (:line, 204, :none),
            1
          )),
        (:line, 205, :none),
        (:(=), (:call, (:., :Base, (:quote, #QuoteNode
                :last
              )), (:(::), :a, (:curly, :PartialQuickSort, :Int))), (:block,
            (:line, 205, :none),
            (:., :a, (:quote, #QuoteNode
                :k
              ))
          )),
        (:line, 206, :none),
        (:(=), (:call, (:., :Base, (:quote, #QuoteNode
                :first
              )), (:(::), :a, :PartialQuickSort)), (:block,
            (:line, 206, :none),
            (:call, :first, (:., :a, (:quote, #QuoteNode
                  :k
                )))
          )),
        (:line, 207, :none),
        (:(=), (:call, (:., :Base, (:quote, #QuoteNode
                :last
              )), (:(::), :a, :PartialQuickSort)), (:block,
            (:line, 207, :none),
            (:call, :last, (:., :a, (:quote, #QuoteNode
                  :k
                )))
          )),
        (:line, 209, :none),
        (:const, (:(=), :InsertionSort, (:call, :InsertionSortAlg))),
        (:line, 210, :none),
        (:const, (:(=), :QuickSort, (:call, :QuickSortAlg))),
        (:line, 211, :none),
        (:const, (:(=), :MergeSort, (:call, :MergeSortAlg))),
        (:line, 213, :none),
        (:const, (:(=), :DEFAULT_UNSTABLE, :QuickSort)),
        (:line, 214, :none),
        (:const, (:(=), :DEFAULT_STABLE, :MergeSort)),
        (:line, 215, :none),
        (:const, (:(=), :SMALL_ALGORITHM, :InsertionSort)),
        (:line, 216, :none),
        (:const, (:(=), :SMALL_THRESHOLD, 20)),
        (:line, 218, :none),
        (:function, (:call, :sort!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :InsertionSortAlg), (:(::), :o, :Ordering)), (:block,
            (:line, 219, :none),
            (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:(:), (:call, :+, :lo, 1), :hi)), (:block,
                  (:line, 220, :none),
                  (:(=), :j, :i),
                  (:line, 221, :none),
                  (:(=), :x, (:ref, :v, :i)),
                  (:line, 222, :none),
                  (:while, (:call, :>, :j, :lo), (:block,
                      (:line, 223, :none),
                      (:if, (:call, :lt, :o, :x, (:ref, :v, (:call, :-, :j, 1))), (:block,
                          (:line, 224, :none),
                          (:(=), (:ref, :v, :j), (:ref, :v, (:call, :-, :j, 1))),
                          (:line, 225, :none),
                          (:-=, :j, 1),
                          (:line, 226, :none),
                          (:continue,)
                        )),
                      (:line, 228, :none),
                      (:break,)
                    )),
                  (:line, 230, :none),
                  (:(=), (:ref, :v, :j), :x)
                ))),
            (:line, 232, :none),
            (:return, :v)
          )),
        (:line, 243, :none),
        (:macrocall, Symbol("@inline"), (:function, (:call, :selectpivot!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :o, :Ordering)), (:block,
              (:line, 244, :none),
              (:macrocall, Symbol("@inbounds"), (:block,
                  (:line, 245, :none),
                  (:(=), :mi, (:call, :>>>, (:call, :+, :lo, :hi), 1)),
                  (:line, 249, :none),
                  (:if, (:call, :lt, :o, (:ref, :v, :mi), (:ref, :v, :lo)), (:block,
                      (:line, 250, :none),
                      (:(=), (:tuple, (:ref, :v, :mi), (:ref, :v, :lo)), (:tuple, (:ref, :v, :lo), (:ref, :v, :mi)))
                    )),
                  (:line, 252, :none),
                  (:if, (:call, :lt, :o, (:ref, :v, :hi), (:ref, :v, :mi)), (:block,
                      (:line, 253, :none),
                      (:if, (:call, :lt, :o, (:ref, :v, :hi), (:ref, :v, :lo)), (:block,
                          (:line, 254, :none),
                          (:(=), (:tuple, (:ref, :v, :lo), (:ref, :v, :mi), (:ref, :v, :hi)), (:tuple, (:ref, :v, :hi), (:ref, :v, :lo), (:ref, :v, :mi)))
                        ), (:block,
                          (:line, 256, :none),
                          (:(=), (:tuple, (:ref, :v, :hi), (:ref, :v, :mi)), (:tuple, (:ref, :v, :mi), (:ref, :v, :hi)))
                        ))
                    )),
                  (:line, 261, :none),
                  (:(=), (:tuple, (:ref, :v, :lo), (:ref, :v, :mi)), (:tuple, (:ref, :v, :mi), (:ref, :v, :lo))),
                  (:line, 262, :none),
                  (:(=), :pivot, (:ref, :v, :lo))
                )),
              (:line, 266, :none),
              (:return, :pivot)
            ))),
        (:line, 273, :none),
        (:function, (:call, :partition!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :o, :Ordering)), (:block,
            (:line, 274, :none),
            (:(=), :pivot, (:call, :selectpivot!, :v, :lo, :hi, :o)),
            (:line, 276, :none),
            (:(=), (:tuple, :i, :j), (:tuple, :lo, :hi)),
            (:line, 277, :none),
            (:macrocall, Symbol("@inbounds"), (:while, true, (:block,
                  (:line, 278, :none),
                  (:+=, :i, 1),
                  (:line, 278, :none),
                  (:-=, :j, 1),
                  (:line, 279, :none),
                  (:while, (:call, :lt, :o, (:ref, :v, :i), :pivot), (:block,
                      (:line, 279, :none),
                      (:+=, :i, 1)
                    )),
                  (:line, 280, :none),
                  (:while, (:call, :lt, :o, :pivot, (:ref, :v, :j)), (:block,
                      (:line, 280, :none),
                      (:-=, :j, 1)
                    )),
                  (:line, 281, :none),
                  (:&&, (:call, :(>=), :i, :j), (:break,)),
                  (:line, 282, :none),
                  (:(=), (:tuple, (:ref, :v, :i), (:ref, :v, :j)), (:tuple, (:ref, :v, :j), (:ref, :v, :i)))
                ))),
            (:line, 284, :none),
            (:(=), (:tuple, (:ref, :v, :j), (:ref, :v, :lo)), (:tuple, :pivot, (:ref, :v, :j))),
            (:line, 289, :none),
            (:return, :j)
          )),
        (:line, 292, :none),
        (:function, (:call, :sort!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :a, :QuickSortAlg), (:(::), :o, :Ordering)), (:block,
            (:line, 293, :none),
            (:macrocall, Symbol("@inbounds"), (:while, (:call, :<, :lo, :hi), (:block,
                  (:line, 294, :none),
                  (:&&, (:call, :(<=), (:call, :-, :hi, :lo), :SMALL_THRESHOLD), (:return, (:call, :sort!, :v, :lo, :hi, :SMALL_ALGORITHM, :o))),
                  (:line, 295, :none),
                  (:(=), :j, (:call, :partition!, :v, :lo, :hi, :o)),
                  (:line, 296, :none),
                  (:if, (:call, :<, (:call, :-, :j, :lo), (:call, :-, :hi, :j)), (:block,
                      (:line, 300, :none),
                      (:&&, (:call, :<, :lo, (:call, :-, :j, 1)), (:call, :sort!, :v, :lo, (:call, :-, :j, 1), :a, :o)),
                      (:line, 301, :none),
                      (:(=), :lo, (:call, :+, :j, 1))
                    ), (:block,
                      (:line, 303, :none),
                      (:&&, (:call, :<, (:call, :+, :j, 1), :hi), (:call, :sort!, :v, (:call, :+, :j, 1), :hi, :a, :o)),
                      (:line, 304, :none),
                      (:(=), :hi, (:call, :-, :j, 1))
                    ))
                ))),
            (:line, 307, :none),
            (:return, :v)
          )),
        (:line, 310, :none),
        (:function, (:call, :sort!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :a, :MergeSortAlg), (:(::), :o, :Ordering), (:kw, :t, (:call, :similar, :v, 0))), (:block,
            (:line, 311, :none),
            (:macrocall, Symbol("@inbounds"), (:if, (:call, :<, :lo, :hi), (:block,
                  (:line, 312, :none),
                  (:&&, (:call, :(<=), (:call, :-, :hi, :lo), :SMALL_THRESHOLD), (:return, (:call, :sort!, :v, :lo, :hi, :SMALL_ALGORITHM, :o))),
                  (:line, 314, :none),
                  (:(=), :m, (:call, :>>>, (:call, :+, :lo, :hi), 1)),
                  (:line, 315, :none),
                  (:&&, (:call, :isempty, :t), (:call, :resize!, :t, (:call, :+, (:call, :-, :m, :lo), 1))),
                  (:line, 317, :none),
                  (:call, :sort!, :v, :lo, :m, :a, :o, :t),
                  (:line, 318, :none),
                  (:call, :sort!, :v, (:call, :+, :m, 1), :hi, :a, :o, :t),
                  (:line, 320, :none),
                  (:(=), (:tuple, :i, :j), (:tuple, 1, :lo)),
                  (:line, 321, :none),
                  (:while, (:call, :(<=), :j, :m), (:block,
                      (:line, 322, :none),
                      (:(=), (:ref, :t, :i), (:ref, :v, :j)),
                      (:line, 323, :none),
                      (:+=, :i, 1),
                      (:line, 324, :none),
                      (:+=, :j, 1)
                    )),
                  (:line, 327, :none),
                  (:(=), (:tuple, :i, :k), (:tuple, 1, :lo)),
                  (:line, 328, :none),
                  (:while, (:comparison, :k, :<, :j, :(<=), :hi), (:block,
                      (:line, 329, :none),
                      (:if, (:call, :lt, :o, (:ref, :v, :j), (:ref, :t, :i)), (:block,
                          (:line, 330, :none),
                          (:(=), (:ref, :v, :k), (:ref, :v, :j)),
                          (:line, 331, :none),
                          (:+=, :j, 1)
                        ), (:block,
                          (:line, 333, :none),
                          (:(=), (:ref, :v, :k), (:ref, :t, :i)),
                          (:line, 334, :none),
                          (:+=, :i, 1)
                        )),
                      (:line, 336, :none),
                      (:+=, :k, 1)
                    )),
                  (:line, 338, :none),
                  (:while, (:call, :<, :k, :j), (:block,
                      (:line, 339, :none),
                      (:(=), (:ref, :v, :k), (:ref, :t, :i)),
                      (:line, 340, :none),
                      (:+=, :k, 1),
                      (:line, 341, :none),
                      (:+=, :i, 1)
                    ))
                ))),
            (:line, 345, :none),
            (:return, :v)
          )),
        (:line, 375, :none),
        (:function, (:call, :sort!, (:(::), :v, :AbstractVector), (:(::), :lo, :Int), (:(::), :hi, :Int), (:(::), :a, :PartialQuickSort), (:(::), :o, :Ordering)), (:block,
            (:line, 377, :none),
            (:macrocall, Symbol("@inbounds"), (:while, (:call, :<, :lo, :hi), (:block,
                  (:line, 378, :none),
                  (:&&, (:call, :(<=), (:call, :-, :hi, :lo), :SMALL_THRESHOLD), (:return, (:call, :sort!, :v, :lo, :hi, :SMALL_ALGORITHM, :o))),
                  (:line, 379, :none),
                  (:(=), :j, (:call, :partition!, :v, :lo, :hi, :o)),
                  (:line, 381, :none),
                  (:if, (:call, :(<=), :j, (:call, :first, :a)), (:block,
                      (:line, 382, :none),
                      (:(=), :lo, (:call, :+, :j, 1))
                    ), (:block,
                      (:line, 383, :none),
                      (:if, (:call, :(>=), :j, (:call, :last, :a)), (:block,
                          (:line, 384, :none),
                          (:(=), :hi, (:call, :-, :j, 1))
                        ), (:block,
                          (:line, 386, :none),
                          (:if, (:call, :<, (:call, :-, :j, :lo), (:call, :-, :hi, :j)), (:block,
                              (:line, 387, :none),
                              (:&&, (:call, :<, :lo, (:call, :-, :j, 1)), (:call, :sort!, :v, :lo, (:call, :-, :j, 1), :a, :o)),
                              (:line, 388, :none),
                              (:(=), :lo, (:call, :+, :j, 1))
                            ), (:block,
                              (:line, 390, :none),
                              (:&&, (:call, :>, :hi, (:call, :+, :j, 1)), (:call, :sort!, :v, (:call, :+, :j, 1), :hi, :a, :o)),
                              (:line, 391, :none),
                              (:(=), :hi, (:call, :-, :j, 1))
                            ))
                        ))
                    ))
                ))),
            (:line, 395, :none),
            (:return, :v)
          )),
        (:line, 401, :none),
        (:(=), (:call, :defalg, (:(::), :v, :AbstractArray)), (:block,
            (:line, 401, :none),
            :DEFAULT_STABLE
          )),
        (:line, 402, :none),
        (:(=), (:call, (:curly, :defalg, (:<:, :T, :Number)), (:(::), :v, (:curly, :AbstractArray, :T))), (:block,
            (:line, 402, :none),
            :DEFAULT_UNSTABLE
          )),
        (:line, 404, :none),
        (:function, (:call, :sort!, (:(::), :v, :AbstractVector), (:(::), :alg, :Algorithm), (:(::), :order, :Ordering)), (:block,
            (:line, 405, :none),
            (:(=), :inds, (:call, :indices, :v, 1)),
            (:line, 406, :none),
            (:call, :sort!, :v, (:call, :first, :inds), (:call, :last, :inds), :alg, :order)
          )),
        (:line, 409, :none),
        (:function, (:call, :sort!, (:parameters, (:kw, (:(::), :alg, :Algorithm), (:call, :defalg, :v)), (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward)), (:(::), :v, :AbstractVector)), (:block,
            (:line, 415, :none),
            (:call, :sort!, :v, :alg, (:call, :ord, :lt, :by, :rev, :order))
          )),
        (:line, 418, :none),
        (:(=), (:call, :sort, (:parameters, (:..., :kws)), (:(::), :v, :AbstractVector)), (:block,
            (:line, 418, :none),
            (:call, :sort!, (:parameters, (:..., :kws)), (:call, :copymutable, :v))
          )),
        (:line, 423, :none),
        (:(=), (:call, :selectperm, (:parameters, (:..., :kwargs)), (:(::), :v, :AbstractVector), (:(::), :k, (:curly, :Union, :Integer, :OrdinalRange))), (:block,
            (:line, 423, :none),
            (:call, :selectperm!, (:parameters, (:..., :kwargs), (:kw, :initialized, false)), (:call, :similar, (:curly, :Vector, (:call, :eltype, :k)), (:call, :indices, :v, 1)), :v, :k)
          )),
        (:line, 426, :none),
        (:function, (:call, (:curly, :selectperm!, (:<:, :I, :Integer)), (:parameters, (:kw, (:(::), :lt, :Function), :isless), (:kw, (:(::), :by, :Function), :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward), (:kw, (:(::), :initialized, :Bool), false)), (:(::), :ix, (:curly, :AbstractVector, :I)), (:(::), :v, :AbstractVector), (:(::), :k, (:curly, :Union, :Int, :OrdinalRange))), (:block,
            (:line, 433, :none),
            (:if, (:call, :!, :initialized), (:block,
                (:line, 434, :none),
                (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:call, :indices, :ix, 1)), (:block,
                      (:line, 435, :none),
                      (:(=), (:ref, :ix, :i), :i)
                    )))
              )),
            (:line, 440, :none),
            (:call, :sort!, :ix, (:call, :PartialQuickSort, :k), (:call, :Perm, (:call, :ord, :lt, :by, :rev, :order), :v)),
            (:line, 441, :none),
            (:return, (:ref, :ix, :k))
          )),
        (:line, 446, :none),
        (:function, (:call, :sortperm, (:parameters, (:kw, (:(::), :alg, :Algorithm), :DEFAULT_UNSTABLE), (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward)), (:(::), :v, :AbstractVector)), (:block,
            (:line, 452, :none),
            (:(=), :p, (:call, :similar, (:curly, :Vector, :Int), (:call, :indices, :v, 1))),
            (:line, 453, :none),
            (:for, (:(=), (:tuple, :i, :ind), (:call, :zip, (:call, :eachindex, :p), (:call, :indices, :v, 1))), (:block,
                (:line, 454, :none),
                (:(=), (:ref, :p, :i), :ind)
              )),
            (:line, 456, :none),
            (:call, :sort!, :p, :alg, (:call, :Perm, (:call, :ord, :lt, :by, :rev, :order), :v))
          )),
        (:line, 459, :none),
        (:function, (:call, (:curly, :sortperm!, (:<:, :I, :Integer)), (:parameters, (:kw, (:(::), :alg, :Algorithm), :DEFAULT_UNSTABLE), (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward), (:kw, (:(::), :initialized, :Bool), false)), (:(::), :x, (:curly, :AbstractVector, :I)), (:(::), :v, :AbstractVector)), (:block,
            (:line, 466, :none),
            (:if, (:call, :(!=), (:call, :indices, :x, 1), (:call, :indices, :v, 1)), (:block,
                (:line, 467, :none),
                (:call, :throw, (:call, :ArgumentError, (:string, "index vector must have the same indices as the source vector, ", (:call, :indices, :x, 1), " != ", (:call, :indices, :v, 1))))
              )),
            (:line, 469, :none),
            (:if, (:call, :!, :initialized), (:block,
                (:line, 470, :none),
                (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:call, :indices, :v, 1)), (:block,
                      (:line, 471, :none),
                      (:(=), (:ref, :x, :i), :i)
                    )))
              )),
            (:line, 474, :none),
            (:call, :sort!, :x, :alg, (:call, :Perm, (:call, :ord, :lt, :by, :rev, :order), :v))
          )),
        (:line, 479, :none),
        (:function, (:call, :sort, (:parameters, (:kw, (:(::), :alg, :Algorithm), :DEFAULT_UNSTABLE), (:kw, :lt, :isless), (:kw, :by, :identity), (:kw, (:(::), :rev, :Bool), false), (:kw, (:(::), :order, :Ordering), :Forward), (:kw, (:(::), :initialized, :Bool), false)), (:(::), :A, :AbstractArray), (:(::), :dim, :Integer)), (:block,
            (:line, 486, :none),
            (:(=), :order, (:call, :ord, :lt, :by, :rev, :order)),
            (:line, 487, :none),
            (:(=), :n, (:call, :length, (:call, :indices, :A, :dim))),
            (:line, 488, :none),
            (:if, (:call, :(!=), :dim, 1), (:block,
                (:line, 489, :none),
                (:(=), :pdims, (:tuple, :dim, (:..., (:call, :setdiff, (:(:), 1, (:call, :ndims, :A)), :dim)))),
                (:line, 490, :none),
                (:(=), :Ap, (:call, :permutedims, :A, :pdims)),
                (:line, 491, :none),
                (:(=), :Av, (:call, :vec, :Ap)),
                (:line, 492, :none),
                (:call, :sort_chunks!, :Av, :n, :alg, :order),
                (:line, 493, :none),
                (:call, :ipermutedims, :Ap, :pdims)
              ), (:block,
                (:line, 495, :none),
                (:(=), :Av, (:ref, :A, :(:))),
                (:line, 496, :none),
                (:call, :sort_chunks!, :Av, :n, :alg, :order),
                (:line, 497, :none),
                (:call, :reshape, :Av, (:call, :indices, :A))
              ))
          )),
        (:line, 501, :none),
        (:macrocall, Symbol("@noinline"), (:function, (:call, :sort_chunks!, :Av, :n, :alg, :order), (:block,
              (:line, 502, :none),
              (:(=), :inds, (:call, :linearindices, :Av)),
              (:line, 503, :none),
              (:for, (:(=), :s, (:(:), (:call, :first, :inds), :n, (:call, :last, :inds))), (:block,
                  (:line, 504, :none),
                  (:call, :sort!, :Av, :s, (:call, :-, (:call, :+, :s, :n), 1), :alg, :order)
                )),
              (:line, 506, :none),
              :Av
            ))),
        (:line, 509, :none),
        (:function, (:call, :sortrows, (:parameters, (:..., :kws)), (:(::), :A, :AbstractMatrix)), (:block,
            (:line, 510, :none),
            (:(=), :inds, (:call, :indices, :A, 1)),
            (:line, 511, :none),
            (:(=), :T, (:call, :slicetypeof, :A, :inds, :(:))),
            (:line, 512, :none),
            (:(=), :rows, (:call, :similar, (:curly, :Vector, :T), (:call, :indices, :A, 1))),
            (:line, 513, :none),
            (:for, (:(=), :i, :inds), (:block,
                (:line, 514, :none),
                (:(=), (:ref, :rows, :i), (:call, :view, :A, :i, :(:)))
              )),
            (:line, 516, :none),
            (:(=), :p, (:call, :sortperm, (:parameters, (:..., :kws), (:kw, :order, :Lexicographic)), :rows)),
            (:line, 517, :none),
            (:ref, :A, :p, :(:))
          )),
        (:line, 520, :none),
        (:function, (:call, :sortcols, (:parameters, (:..., :kws)), (:(::), :A, :AbstractMatrix)), (:block,
            (:line, 521, :none),
            (:(=), :inds, (:call, :indices, :A, 2)),
            (:line, 522, :none),
            (:(=), :T, (:call, :slicetypeof, :A, :(:), :inds)),
            (:line, 523, :none),
            (:(=), :cols, (:call, :similar, (:curly, :Vector, :T), (:call, :indices, :A, 2))),
            (:line, 524, :none),
            (:for, (:(=), :i, :inds), (:block,
                (:line, 525, :none),
                (:(=), (:ref, :cols, :i), (:call, :view, :A, :(:), :i))
              )),
            (:line, 527, :none),
            (:(=), :p, (:call, :sortperm, (:parameters, (:..., :kws), (:kw, :order, :Lexicographic)), :cols)),
            (:line, 528, :none),
            (:ref, :A, :(:), :p)
          )),
        (:line, 531, :none),
        (:function, (:call, (:curly, :slicetypeof, :T, :N), (:(::), :A, (:curly, :AbstractArray, :T, :N)), :i1, :i2), (:block,
            (:line, 532, :none),
            (:(=), :I, (:tuple, (:call, :slice_dummy, :i1), (:call, :slice_dummy, :i2))),
            (:line, 533, :none),
            (:(=), :fast, (:call, :isa, (:call, :linearindexing, (:call, :viewindexing, :I), (:call, :linearindexing, :A)), :LinearFast)),
            (:line, 534, :none),
            (:curly, :SubArray, :T, 1, (:call, :typeof, :A), (:call, :typeof, :I), :fast)
          )),
        (:line, 536, :none),
        (:(=), (:call, :slice_dummy, (:(::), :Colon)), (:block,
            (:line, 536, :none),
            (:call, :Colon)
          )),
        (:line, 537, :none),
        (:(=), (:call, (:curly, :slice_dummy, :T), (:(::), (:curly, :AbstractUnitRange, :T))), (:block,
            (:line, 537, :none),
            (:call, :one, :T)
          )),
        (:line, 541, :none),
        (:module, true, :Float, (:block,
            (:line, 541, :none),
            (:line, 542, :none),
            (:using, :., :., :Sort),
            (:line, 543, :none),
            (:using, :., :., :., :Order),
            (:line, 545, :none),
            (:toplevel, (:import, :Core, :Intrinsics, :unbox), (:import, :Core, :Intrinsics, :slt_int)),
            (:line, 546, :none),
            (:import, :., :., :Sort, :sort!),
            (:line, 547, :none),
            (:toplevel, (:import, :., :., :., :Order, :lt), (:import, :., :., :., :Order, :DirectOrdering)),
            (:line, 549, :none),
            (:typealias, :Floats, (:curly, :Union, :Float32, :Float64)),
            (:line, 551, :none),
            (:type, false, (:<:, :Left, :Ordering), (:block,
                (:line, 551, :none)
              )),
            (:line, 552, :none),
            (:type, false, (:<:, :Right, :Ordering), (:block,
                (:line, 552, :none)
              )),
            (:line, 554, :none),
            (:(=), (:call, :left, (:(::), :DirectOrdering)), (:block,
                (:line, 554, :none),
                (:call, :Left)
              )),
            (:line, 555, :none),
            (:(=), (:call, :right, (:(::), :DirectOrdering)), (:block,
                (:line, 555, :none),
                (:call, :Right)
              )),
            (:line, 557, :none),
            (:(=), (:call, :left, (:(::), :o, :Perm)), (:block,
                (:line, 557, :none),
                (:call, :Perm, (:call, :left, (:., :o, (:quote, #QuoteNode
                        :order
                      ))), (:., :o, (:quote, #QuoteNode
                      :data
                    )))
              )),
            (:line, 558, :none),
            (:(=), (:call, :right, (:(::), :o, :Perm)), (:block,
                (:line, 558, :none),
                (:call, :Perm, (:call, :right, (:., :o, (:quote, #QuoteNode
                        :order
                      ))), (:., :o, (:quote, #QuoteNode
                      :data
                    )))
              )),
            (:line, 560, :none),
            (:(=), (:call, (:curly, :lt, (:<:, :T, :Floats)), (:(::), :Left), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 560, :none),
                (:call, :slt_int, (:call, :unbox, :T, :y), (:call, :unbox, :T, :x))
              )),
            (:line, 561, :none),
            (:(=), (:call, (:curly, :lt, (:<:, :T, :Floats)), (:(::), :Right), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 561, :none),
                (:call, :slt_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y))
              )),
            (:line, 563, :none),
            (:(=), (:call, :isnan, (:(::), :o, :DirectOrdering), (:(::), :x, :Floats)), (:block,
                (:line, 563, :none),
                (:call, :(!=), :x, :x)
              )),
            (:line, 564, :none),
            (:(=), (:call, :isnan, (:(::), :o, :Perm), (:(::), :i, :Int)), (:block,
                (:line, 564, :none),
                (:call, :isnan, (:., :o, (:quote, #QuoteNode
                      :order
                    )), (:ref, (:., :o, (:quote, #QuoteNode
                        :data
                      )), :i))
              )),
            (:line, 566, :none),
            (:function, (:call, :nans2left!, (:(::), :v, :AbstractVector), (:(::), :o, :Ordering), (:kw, (:(::), :lo, :Int), (:call, :first, (:call, :indices, :v, 1))), (:kw, (:(::), :hi, :Int), (:call, :last, (:call, :indices, :v, 1)))), (:block,
                (:line, 567, :none),
                (:(=), :i, :lo),
                (:line, 568, :none),
                (:macrocall, Symbol("@inbounds"), (:while, (:&&, (:call, :(<=), :i, :hi), (:call, :isnan, :o, (:ref, :v, :i))), (:block,
                      (:line, 569, :none),
                      (:+=, :i, 1)
                    ))),
                (:line, 571, :none),
                (:(=), :j, (:call, :+, :i, 1)),
                (:line, 572, :none),
                (:macrocall, Symbol("@inbounds"), (:while, (:call, :(<=), :j, :hi), (:block,
                      (:line, 573, :none),
                      (:if, (:call, :isnan, :o, (:ref, :v, :j)), (:block,
                          (:line, 574, :none),
                          (:(=), (:tuple, (:ref, :v, :i), (:ref, :v, :j)), (:tuple, (:ref, :v, :j), (:ref, :v, :i))),
                          (:line, 575, :none),
                          (:+=, :i, 1)
                        )),
                      (:line, 577, :none),
                      (:+=, :j, 1)
                    ))),
                (:line, 579, :none),
                (:return, (:tuple, :i, :hi))
              )),
            (:line, 581, :none),
            (:function, (:call, :nans2right!, (:(::), :v, :AbstractVector), (:(::), :o, :Ordering), (:kw, (:(::), :lo, :Int), (:call, :first, (:call, :indices, :v, 1))), (:kw, (:(::), :hi, :Int), (:call, :last, (:call, :indices, :v, 1)))), (:block,
                (:line, 582, :none),
                (:(=), :i, :hi),
                (:line, 583, :none),
                (:macrocall, Symbol("@inbounds"), (:while, (:&&, (:call, :(<=), :lo, :i), (:call, :isnan, :o, (:ref, :v, :i))), (:block,
                      (:line, 584, :none),
                      (:-=, :i, 1)
                    ))),
                (:line, 586, :none),
                (:(=), :j, (:call, :-, :i, 1)),
                (:line, 587, :none),
                (:macrocall, Symbol("@inbounds"), (:while, (:call, :(<=), :lo, :j), (:block,
                      (:line, 588, :none),
                      (:if, (:call, :isnan, :o, (:ref, :v, :j)), (:block,
                          (:line, 589, :none),
                          (:(=), (:tuple, (:ref, :v, :i), (:ref, :v, :j)), (:tuple, (:ref, :v, :j), (:ref, :v, :i))),
                          (:line, 590, :none),
                          (:-=, :i, 1)
                        )),
                      (:line, 592, :none),
                      (:-=, :j, 1)
                    ))),
                (:line, 594, :none),
                (:return, (:tuple, :lo, :i))
              )),
            (:line, 597, :none),
            (:(=), (:call, :nans2end!, (:(::), :v, :AbstractVector), (:(::), :o, :ForwardOrdering)), (:block,
                (:line, 597, :none),
                (:call, :nans2right!, :v, :o)
              )),
            (:line, 598, :none),
            (:(=), (:call, :nans2end!, (:(::), :v, :AbstractVector), (:(::), :o, :ReverseOrdering)), (:block,
                (:line, 598, :none),
                (:call, :nans2left!, :v, :o)
              )),
            (:line, 599, :none),
            (:(=), (:call, (:curly, :nans2end!, (:<:, :O, :ForwardOrdering)), (:(::), :v, (:curly, :AbstractVector, :Int)), (:(::), :o, (:curly, :Perm, :O))), (:block,
                (:line, 599, :none),
                (:call, :nans2right!, :v, :o)
              )),
            (:line, 600, :none),
            (:(=), (:call, (:curly, :nans2end!, (:<:, :O, :ReverseOrdering)), (:(::), :v, (:curly, :AbstractVector, :Int)), (:(::), :o, (:curly, :Perm, :O))), (:block,
                (:line, 600, :none),
                (:call, :nans2left!, :v, :o)
              )),
            (:line, 602, :none),
            (:(=), (:call, :issignleft, (:(::), :o, :ForwardOrdering), (:(::), :x, :Floats)), (:block,
                (:line, 602, :none),
                (:call, :lt, :o, :x, (:call, :zero, :x))
              )),
            (:line, 603, :none),
            (:(=), (:call, :issignleft, (:(::), :o, :ReverseOrdering), (:(::), :x, :Floats)), (:block,
                (:line, 603, :none),
                (:call, :lt, :o, :x, (:call, :-, (:call, :zero, :x)))
              )),
            (:line, 604, :none),
            (:(=), (:call, :issignleft, (:(::), :o, :Perm), (:(::), :i, :Int)), (:block,
                (:line, 604, :none),
                (:call, :issignleft, (:., :o, (:quote, #QuoteNode
                      :order
                    )), (:ref, (:., :o, (:quote, #QuoteNode
                        :data
                      )), :i))
              )),
            (:line, 606, :none),
            (:function, (:call, :fpsort!, (:(::), :v, :AbstractVector), (:(::), :a, :Algorithm), (:(::), :o, :Ordering)), (:block,
                (:line, 607, :none),
                (:(=), (:tuple, :i, :j), (:(=), (:tuple, :lo, :hi), (:call, :nans2end!, :v, :o))),
                (:line, 608, :none),
                (:macrocall, Symbol("@inbounds"), (:while, true, (:block,
                      (:line, 609, :none),
                      (:while, (:&&, (:call, :(<=), :i, :j), (:call, :issignleft, :o, (:ref, :v, :i))), (:block,
                          (:line, 609, :none),
                          (:+=, :i, 1)
                        )),
                      (:line, 610, :none),
                      (:while, (:&&, (:call, :(<=), :i, :j), (:call, :!, (:call, :issignleft, :o, (:ref, :v, :j)))), (:block,
                          (:line, 610, :none),
                          (:-=, :j, 1)
                        )),
                      (:line, 611, :none),
                      (:||, (:call, :(<=), :i, :j), (:break,)),
                      (:line, 612, :none),
                      (:(=), (:tuple, (:ref, :v, :i), (:ref, :v, :j)), (:tuple, (:ref, :v, :j), (:ref, :v, :i))),
                      (:line, 613, :none),
                      (:+=, :i, 1),
                      (:line, 613, :none),
                      (:-=, :j, 1)
                    ))),
                (:line, 615, :none),
                (:call, :sort!, :v, :lo, :j, :a, (:call, :left, :o)),
                (:line, 616, :none),
                (:call, :sort!, :v, :i, :hi, :a, (:call, :right, :o)),
                (:line, 617, :none),
                (:return, :v)
              )),
            (:line, 621, :none),
            (:(=), (:call, :fpsort!, (:(::), :v, :AbstractVector), (:(::), :a, (:., :Sort, (:quote, #QuoteNode
                      :PartialQuickSort
                    ))), (:(::), :o, :Ordering)), (:block,
                (:line, 621, :none),
                (:call, :sort!, :v, (:call, :first, (:call, :indices, :v, 1)), (:call, :last, (:call, :indices, :v, 1)), :a, :o)
              )),
            (:line, 624, :none),
            (:(=), (:call, (:curly, :sort!, (:<:, :T, :Floats)), (:(::), :v, (:curly, :AbstractVector, :T)), (:(::), :a, :Algorithm), (:(::), :o, :DirectOrdering)), (:block,
                (:line, 624, :none),
                (:call, :fpsort!, :v, :a, :o)
              )),
            (:line, 625, :none),
            (:(=), (:call, (:curly, :sort!, (:<:, :O, :DirectOrdering), (:<:, :T, :Floats)), (:(::), :v, (:curly, :Vector, :Int)), (:(::), :a, :Algorithm), (:(::), :o, (:curly, :Perm, :O, (:curly, :Vector, :T)))), (:block,
                (:line, 625, :none),
                (:call, :fpsort!, :v, :a, :o)
              ))
          ))
      ))
  ))