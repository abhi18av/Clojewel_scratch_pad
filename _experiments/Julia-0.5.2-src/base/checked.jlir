(:quote, (:block,
    (:line, 5, :none),
    (:module, true, :Checked, (:block,
        (:line, 5, :none),
        (:line, 7, :none),
        (:export, :checked_neg, :checked_abs, :checked_add, :checked_sub, :checked_mul, :checked_div, :checked_rem, :checked_fld, :checked_mod, :checked_cld),
        (:line, 10, :none),
        (:toplevel, (:import, :Core, :Intrinsics, :box), (:import, :Core, :Intrinsics, :unbox), (:import, :Core, :Intrinsics, :checked_sadd_int), (:import, :Core, :Intrinsics, :checked_ssub_int), (:import, :Core, :Intrinsics, :checked_smul_int), (:import, :Core, :Intrinsics, :checked_sdiv_int), (:import, :Core, :Intrinsics, :checked_srem_int), (:import, :Core, :Intrinsics, :checked_uadd_int), (:import, :Core, :Intrinsics, :checked_usub_int), (:import, :Core, :Intrinsics, :checked_umul_int), (:import, :Core, :Intrinsics, :checked_udiv_int), (:import, :Core, :Intrinsics, :checked_urem_int)),
        (:line, 15, :none),
        (:import, :Base, :no_op_err),
        (:line, 18, :none),
        (:(=), (:call, :checked_add, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 18, :none),
            (:call, :checked_add, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 19, :none),
        (:(=), (:call, :checked_sub, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 19, :none),
            (:call, :checked_sub, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 20, :none),
        (:(=), (:call, :checked_mul, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 20, :none),
            (:call, :checked_mul, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 21, :none),
        (:(=), (:call, :checked_div, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 21, :none),
            (:call, :checked_div, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 22, :none),
        (:(=), (:call, :checked_rem, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 22, :none),
            (:call, :checked_rem, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 23, :none),
        (:(=), (:call, :checked_fld, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 23, :none),
            (:call, :checked_fld, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 24, :none),
        (:(=), (:call, :checked_mod, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 24, :none),
            (:call, :checked_mod, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 25, :none),
        (:(=), (:call, :checked_cld, (:(::), :x, :Integer), (:(::), :y, :Integer)), (:block,
            (:line, 25, :none),
            (:call, :checked_cld, (:..., (:call, :promote, :x, :y)))
          )),
        (:line, 29, :none),
        (:(=), (:call, (:curly, :checked_neg, (:<:, :T, :Integer)), (:(::), :x, :T)), (:block,
            (:line, 29, :none),
            (:call, :no_op_err, "checked_neg", :T)
          )),
        (:line, 30, :none),
        (:(=), (:call, (:curly, :checked_abs, (:<:, :T, :Integer)), (:(::), :x, :T)), (:block,
            (:line, 30, :none),
            (:call, :no_op_err, "checked_abs", :T)
          )),
        (:line, 31, :none),
        (:(=), (:call, (:curly, :checked_add, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 31, :none),
            (:call, :no_op_err, "checked_add", :T)
          )),
        (:line, 32, :none),
        (:(=), (:call, (:curly, :checked_sub, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 32, :none),
            (:call, :no_op_err, "checked_sub", :T)
          )),
        (:line, 33, :none),
        (:(=), (:call, (:curly, :checked_mul, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 33, :none),
            (:call, :no_op_err, "checked_mul", :T)
          )),
        (:line, 34, :none),
        (:(=), (:call, (:curly, :checked_div, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 34, :none),
            (:call, :no_op_err, "checked_div", :T)
          )),
        (:line, 35, :none),
        (:(=), (:call, (:curly, :checked_rem, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 35, :none),
            (:call, :no_op_err, "checked_rem", :T)
          )),
        (:line, 36, :none),
        (:(=), (:call, (:curly, :checked_fld, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 36, :none),
            (:call, :no_op_err, "checked_fld", :T)
          )),
        (:line, 37, :none),
        (:(=), (:call, (:curly, :checked_mod, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 37, :none),
            (:call, :no_op_err, "checked_mod", :T)
          )),
        (:line, 38, :none),
        (:(=), (:call, (:curly, :checked_cld, (:<:, :T, :Integer)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 38, :none),
            (:call, :no_op_err, "checked_cld", :T)
          )),
        (:line, 40, :none),
        (:typealias, :SignedInt, (:curly, :Union, :Int8, :Int16, :Int32, :Int64, :Int128)),
        (:line, 41, :none),
        (:typealias, :UnsignedInt, (:curly, :Union, :UInt8, :UInt16, :UInt32, :UInt64, :UInt128, :Bool)),
        (:line, 65, :none),
        (:const, (:(=), :llvm_version, (:call, :Int, (:ccall, (:quote, #QuoteNode
                  :jl_get_LLVM_VERSION
                ), :UInt32, (:tuple,))))),
        (:line, 67, :none),
        (:(=), :brokenSignedInt, (:curly, :Union)),
        (:line, 68, :none),
        (:(=), :brokenUnsignedInt, (:curly, :Union)),
        (:line, 69, :none),
        (:(=), :brokenSignedIntMul, :Int128),
        (:line, 70, :none),
        (:(=), :brokenUnsignedIntMul, :UInt128),
        (:line, 71, :none),
        (:if, (:call, :(==), (:call, (:., :Core, (:quote, #QuoteNode
                  :sizeof
                )), (:curly, :Ptr, :Void)), 4), (:block,
            (:line, 72, :none),
            (:(=), :brokenSignedIntMul, (:curly, :Union, :brokenSignedIntMul, :Int64)),
            (:line, 73, :none),
            (:(=), :brokenUnsignedIntMul, (:curly, :Union, :brokenUnsignedIntMul, :UInt64))
          )),
        (:line, 75, :none),
        (:if, (:call, :<, :llvm_version, 30500), (:block,
            (:line, 76, :none),
            (:(=), :brokenSignedIntMul, (:curly, :Union, :brokenSignedIntMul, :Int8)),
            (:line, 77, :none),
            (:(=), :brokenUnsignedIntMul, (:curly, :Union, :brokenUnsignedIntMul, :UInt8))
          )),
        (:line, 79, :none),
        (:typealias, :BrokenSignedInt, :brokenSignedInt),
        (:line, 80, :none),
        (:typealias, :BrokenUnsignedInt, :brokenUnsignedInt),
        (:line, 81, :none),
        (:typealias, :BrokenSignedIntMul, :brokenSignedIntMul),
        (:line, 82, :none),
        (:typealias, :BrokenUnsignedIntMul, :brokenUnsignedIntMul),
        (:line, 89, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_neg(x)\n\nCalculates `-x`, checking for overflow errors where applicable. For\nexample, standard two's complement signed integers (e.g. `Int`) cannot\nrepresent `-typemin(Int)`, thus leading to an overflow.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_neg)),
        (:line, 100, :none),
        (:function, (:call, (:curly, :checked_neg, (:<:, :T, :SignedInt)), (:(::), :x, :T)), (:block,
            (:line, 101, :none),
            (:call, :checked_sub, (:call, :T, 0), :x)
          )),
        (:line, 103, :none),
        (:function, (:call, (:curly, :checked_neg, (:<:, :T, :UnsignedInt)), (:(::), :x, :T)), (:block,
            (:line, 104, :none),
            (:call, :checked_sub, (:call, :T, 0), :x)
          )),
        (:line, 106, :none),
        (:if, (:call, :(!=), :BrokenSignedInt, (:curly, :Union)), (:block,
            (:line, 107, :none),
            (:function, (:call, (:curly, :checked_neg, (:<:, :T, :BrokenSignedInt)), (:(::), :x, :T)), (:block,
                (:line, 108, :none),
                (:(=), :r, (:call, :-, :x)),
                (:line, 109, :none),
                (:&&, (:call, :&, (:call, :<, :x, 0), (:call, :<, :r, 0)), (:call, :throw, (:call, :OverflowError))),
                (:line, 110, :none),
                :r
              ))
          )),
        (:line, 113, :none),
        (:if, (:call, :(!=), :BrokenUnsignedInt, (:curly, :Union)), (:block,
            (:line, 114, :none),
            (:function, (:call, (:curly, :checked_neg, (:<:, :T, :BrokenUnsignedInt)), (:(::), :x, :T)), (:block,
                (:line, 115, :none),
                (:&&, (:call, :(!=), :x, 0), (:call, :throw, (:call, :OverflowError))),
                (:line, 116, :none),
                (:call, :T, 0)
              ))
          )),
        (:line, 120, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_abs(x)\n\nCalculates `abs(x)`, checking for overflow errors where applicable.\nFor example, standard two's complement signed integers (e.g. `Int`)\ncannot represent `abs(typemin(Int))`, thus leading to an overflow.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_abs)),
        (:line, 131, :none),
        (:function, (:call, :checked_abs, (:(::), :x, :SignedInt)), (:block,
            (:line, 132, :none),
            (:(=), :r, (:call, :ifelse, (:call, :<, :x, 0), (:call, :-, :x), :x)),
            (:line, 133, :none),
            (:&&, (:call, :<, :r, 0), (:call, :throw, (:call, :OverflowError))),
            (:line, 134, :none),
            :r
          )),
        (:line, 136, :none),
        (:(=), (:call, :checked_abs, (:(::), :x, :UnsignedInt)), (:block,
            (:line, 136, :none),
            :x
          )),
        (:line, 138, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_add(x, y)\n\nCalculates `x+y`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_add)),
        (:line, 147, :none),
        (:function, (:call, (:curly, :checked_add, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 148, :none),
            (:call, :box, :T, (:call, :checked_sadd_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 150, :none),
        (:function, (:call, (:curly, :checked_add, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 151, :none),
            (:call, :box, :T, (:call, :checked_uadd_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 153, :none),
        (:if, (:call, :(!=), :BrokenSignedInt, (:curly, :Union)), (:block,
            (:line, 154, :none),
            (:function, (:call, (:curly, :checked_add, (:<:, :T, :BrokenSignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 155, :none),
                (:(=), :r, (:call, :+, :x, :y)),
                (:line, 157, :none),
                (:&&, (:comparison, (:call, :<, :x, 0), :(==), (:call, :<, :y, 0), :(!=), (:call, :<, :r, 0)), (:call, :throw, (:call, :OverflowError))),
                (:line, 158, :none),
                :r
              ))
          )),
        (:line, 161, :none),
        (:if, (:call, :(!=), :BrokenUnsignedInt, (:curly, :Union)), (:block,
            (:line, 162, :none),
            (:function, (:call, (:curly, :checked_add, (:<:, :T, :BrokenUnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 165, :none),
                (:&&, (:call, :>, :x, (:call, :~, :y)), (:call, :throw, (:call, :OverflowError))),
                (:line, 166, :none),
                (:call, :+, :x, :y)
              ))
          )),
        (:line, 169, :none),
        (:(=), (:call, :checked_add, (:(::), :x, :Bool), (:(::), :y, :Bool)), (:block,
            (:line, 169, :none),
            (:call, :+, :x, :y)
          )),
        (:line, 170, :none),
        (:(=), (:call, :checked_add, (:(::), :x, :Bool)), (:block,
            (:line, 170, :none),
            (:call, :+, :x)
          )),
        (:line, 173, :none),
        (:(=), (:call, :checked_add, :x), (:block,
            (:line, 173, :none),
            :x
          )),
        (:line, 174, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T)), (:block,
            (:line, 174, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3)
          )),
        (:line, 176, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T)), (:block,
            (:line, 176, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3, :x4)
          )),
        (:line, 178, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T)), (:block,
            (:line, 178, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3, :x4, :x5)
          )),
        (:line, 180, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T)), (:block,
            (:line, 180, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3, :x4, :x5, :x6)
          )),
        (:line, 182, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T), (:(::), :x7, :T)), (:block,
            (:line, 182, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3, :x4, :x5, :x6, :x7)
          )),
        (:line, 184, :none),
        (:(=), (:call, (:curly, :checked_add, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T), (:(::), :x7, :T), (:(::), :x8, :T)), (:block,
            (:line, 184, :none),
            (:call, :checked_add, (:call, :checked_add, :x1, :x2), :x3, :x4, :x5, :x6, :x7, :x8)
          )),
        (:line, 187, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_sub(x, y)\n\nCalculates `x-y`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_sub)),
        (:line, 196, :none),
        (:function, (:call, (:curly, :checked_sub, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 197, :none),
            (:call, :box, :T, (:call, :checked_ssub_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 199, :none),
        (:function, (:call, (:curly, :checked_sub, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 200, :none),
            (:call, :box, :T, (:call, :checked_usub_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 202, :none),
        (:if, (:call, :(!=), :BrokenSignedInt, (:curly, :Union)), (:block,
            (:line, 203, :none),
            (:function, (:call, (:curly, :checked_sub, (:<:, :T, :BrokenSignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 204, :none),
                (:(=), :r, (:call, :-, :x, :y)),
                (:line, 206, :none),
                (:&&, (:comparison, (:call, :<, :x, 0), :(!=), (:call, :<, :y, 0), :(==), (:call, :<, :r, 0)), (:call, :throw, (:call, :OverflowError))),
                (:line, 207, :none),
                :r
              ))
          )),
        (:line, 210, :none),
        (:if, (:call, :(!=), :BrokenUnsignedInt, (:curly, :Union)), (:block,
            (:line, 211, :none),
            (:function, (:call, (:curly, :checked_sub, (:<:, :T, :BrokenUnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 213, :none),
                (:&&, (:call, :<, :x, :y), (:call, :throw, (:call, :OverflowError))),
                (:line, 214, :none),
                (:call, :-, :x, :y)
              ))
          )),
        (:line, 217, :none),
        (:(=), (:call, :checked_sub, (:(::), :x, :Bool), (:(::), :y, :Bool)), (:block,
            (:line, 217, :none),
            (:call, :-, :x, :y)
          )),
        (:line, 218, :none),
        (:(=), (:call, :checked_sub, (:(::), :x, :Bool)), (:block,
            (:line, 218, :none),
            (:call, :-, :x)
          )),
        (:line, 220, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_mul(x, y)\n\nCalculates `x*y`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_mul)),
        (:line, 229, :none),
        (:function, (:call, (:curly, :checked_mul, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 230, :none),
            (:call, :box, :T, (:call, :checked_smul_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 232, :none),
        (:function, (:call, (:curly, :checked_mul, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 233, :none),
            (:call, :box, :T, (:call, :checked_umul_int, (:call, :unbox, :T, :x), (:call, :unbox, :T, :y)))
          )),
        (:line, 235, :none),
        (:if, (:&&, (:call, :(!=), :BrokenSignedIntMul, (:curly, :Union)), (:call, :(!=), :BrokenSignedIntMul, :Int128)), (:block,
            (:line, 236, :none),
            (:function, (:call, (:curly, :checked_mul, (:<:, :T, :BrokenSignedIntMul)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 237, :none),
                (:(=), :r, (:call, :widemul, :x, :y)),
                (:line, 238, :none),
                (:&&, (:call, :(!=), (:call, :%, :r, :T), :r), (:call, :throw, (:call, :OverflowError))),
                (:line, 239, :none),
                (:call, :%, :r, :T)
              ))
          )),
        (:line, 242, :none),
        (:if, (:&&, (:call, :(!=), :BrokenUnsignedIntMul, (:curly, :Union)), (:call, :(!=), :BrokenUnsignedIntMul, :UInt128)), (:block,
            (:line, 243, :none),
            (:function, (:call, (:curly, :checked_mul, (:<:, :T, :BrokenUnsignedIntMul)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 244, :none),
                (:(=), :r, (:call, :widemul, :x, :y)),
                (:line, 245, :none),
                (:&&, (:call, :(!=), (:call, :%, :r, :T), :r), (:call, :throw, (:call, :OverflowError))),
                (:line, 246, :none),
                (:call, :%, :r, :T)
              ))
          )),
        (:line, 249, :none),
        (:if, (:<:, :Int128, :BrokenSignedIntMul), (:block,
            (:line, 251, :none),
            (:function, (:call, (:curly, :checked_mul, (:<:, :T, :Int128)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 252, :none),
                (:if, (:call, :>, :y, 0), (:block,
                    (:line, 255, :none),
                    (:&&, (:call, :>, :x, (:call, :fld, (:call, :typemax, :T), :y)), (:call, :throw, (:call, :OverflowError))),
                    (:line, 256, :none),
                    (:&&, (:call, :<, :x, (:call, :cld, (:call, :typemin, :T), :y)), (:call, :throw, (:call, :OverflowError)))
                  ), (:block,
                    (:line, 257, :none),
                    (:if, (:call, :<, :y, 0), (:block,
                        (:line, 260, :none),
                        (:&&, (:call, :<, :x, (:call, :cld, (:call, :typemax, :T), :y)), (:call, :throw, (:call, :OverflowError))),
                        (:line, 262, :none),
                        (:&&, (:call, :(!=), :y, -1), (:&&, (:call, :>, :x, (:call, :fld, (:call, :typemin, :T), :y)), (:call, :throw, (:call, :OverflowError))))
                      ))
                  )),
                (:line, 264, :none),
                (:call, :*, :x, :y)
              ))
          )),
        (:line, 267, :none),
        (:if, (:<:, :UInt128, :BrokenUnsignedIntMul), (:block,
            (:line, 269, :none),
            (:function, (:call, (:curly, :checked_mul, (:<:, :T, :UInt128)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
                (:line, 271, :none),
                (:&&, (:call, :>, :y, 0), (:&&, (:call, :>, :x, (:call, :fld, (:call, :typemax, :T), :y)), (:call, :throw, (:call, :OverflowError)))),
                (:line, 272, :none),
                (:call, :*, :x, :y)
              ))
          )),
        (:line, 277, :none),
        (:(=), (:call, :checked_mul, :x), (:block,
            (:line, 277, :none),
            :x
          )),
        (:line, 278, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T)), (:block,
            (:line, 278, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3)
          )),
        (:line, 280, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T)), (:block,
            (:line, 280, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3, :x4)
          )),
        (:line, 282, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T)), (:block,
            (:line, 282, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3, :x4, :x5)
          )),
        (:line, 284, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T)), (:block,
            (:line, 284, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3, :x4, :x5, :x6)
          )),
        (:line, 286, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T), (:(::), :x7, :T)), (:block,
            (:line, 286, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3, :x4, :x5, :x6, :x7)
          )),
        (:line, 288, :none),
        (:(=), (:call, (:curly, :checked_mul, :T), (:(::), :x1, :T), (:(::), :x2, :T), (:(::), :x3, :T), (:(::), :x4, :T), (:(::), :x5, :T), (:(::), :x6, :T), (:(::), :x7, :T), (:(::), :x8, :T)), (:block,
            (:line, 288, :none),
            (:call, :checked_mul, (:call, :checked_mul, :x1, :x2), :x3, :x4, :x5, :x6, :x7, :x8)
          )),
        (:line, 291, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_div(x, y)\n\nCalculates `div(x,y)`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_div)),
        (:line, 301, :none),
        (:(=), (:call, (:curly, :checked_div, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 301, :none),
            (:call, :div, :x, :y)
          )),
        (:line, 302, :none),
        (:(=), (:call, (:curly, :checked_div, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 302, :none),
            (:call, :div, :x, :y)
          )),
        (:line, 304, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_rem(x, y)\n\nCalculates `x%y`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_rem)),
        (:line, 314, :none),
        (:(=), (:call, (:curly, :checked_rem, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 314, :none),
            (:call, :rem, :x, :y)
          )),
        (:line, 315, :none),
        (:(=), (:call, (:curly, :checked_rem, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 315, :none),
            (:call, :rem, :x, :y)
          )),
        (:line, 317, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_fld(x, y)\n\nCalculates `fld(x,y)`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_fld)),
        (:line, 327, :none),
        (:(=), (:call, (:curly, :checked_fld, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 327, :none),
            (:call, :fld, :x, :y)
          )),
        (:line, 328, :none),
        (:(=), (:call, (:curly, :checked_fld, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 328, :none),
            (:call, :fld, :x, :y)
          )),
        (:line, 330, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_mod(x, y)\n\nCalculates `mod(x,y)`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_mod)),
        (:line, 340, :none),
        (:(=), (:call, (:curly, :checked_mod, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 340, :none),
            (:call, :mod, :x, :y)
          )),
        (:line, 341, :none),
        (:(=), (:call, (:curly, :checked_mod, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 341, :none),
            (:call, :mod, :x, :y)
          )),
        (:line, 343, :none),
        (:macrocall, :(Core.@doc), "    Base.checked_cld(x, y)\n\nCalculates `cld(x,y)`, checking for overflow errors where applicable.\n\nThe overflow protection may impose a perceptible performance penalty.\n", (:function, :checked_cld)),
        (:line, 353, :none),
        (:(=), (:call, (:curly, :checked_cld, (:<:, :T, :SignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 353, :none),
            (:call, :cld, :x, :y)
          )),
        (:line, 354, :none),
        (:(=), (:call, (:curly, :checked_cld, (:<:, :T, :UnsignedInt)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
            (:line, 354, :none),
            (:call, :cld, :x, :y)
          ))
      ))
  ))