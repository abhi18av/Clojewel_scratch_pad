(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :MPFR, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:export, :BigFloat, :setprecision, :big_str),
        (:line, 10, :none),
        (:toplevel, (:import, :Base, :*), (:import, :Base, :+), (:import, :Base, :-), (:import, :Base, :/), (:import, :Base, :<), (:import, :Base, :(<=)), (:import, :Base, :(==)), (:import, :Base, :>), (:import, :Base, :(>=)), (:import, :Base, :^), (:import, :Base, :besselj), (:import, :Base, :besselj0), (:import, :Base, :besselj1), (:import, :Base, :bessely), (:import, :Base, :bessely0), (:import, :Base, :bessely1), (:import, :Base, :ceil), (:import, :Base, :cmp), (:import, :Base, :convert), (:import, :Base, :copysign), (:import, :Base, :div), (:import, :Base, :exp), (:import, :Base, :exp2), (:import, :Base, :exponent), (:import, :Base, :factorial), (:import, :Base, :floor), (:import, :Base, :fma), (:import, :Base, :hypot), (:import, :Base, :isinteger), (:import, :Base, :isfinite), (:import, :Base, :isinf), (:import, :Base, :isnan), (:import, :Base, :ldexp), (:import, :Base, :log), (:import, :Base, :log2), (:import, :Base, :log10), (:import, :Base, :max), (:import, :Base, :min), (:import, :Base, :mod), (:import, :Base, :modf), (:import, :Base, :nextfloat), (:import, :Base, :prevfloat), (:import, :Base, :promote_rule), (:import, :Base, :rem), (:import, :Base, :round), (:import, :Base, :show), (:import, :Base, :sum), (:import, :Base, :sqrt), (:import, :Base, :string), (:import, :Base, :print), (:import, :Base, :trunc), (:import, :Base, :precision), (:import, :Base, :exp10), (:import, :Base, :expm1), (:import, :Base, :gamma), (:import, :Base, :lgamma), (:import, :Base, :digamma), (:import, :Base, :erf), (:import, :Base, :erfc), (:import, :Base, :zeta), (:import, :Base, :eta), (:import, :Base, :log1p), (:import, :Base, :airyai), (:import, :Base, :eps), (:import, :Base, :signbit), (:import, :Base, :sin), (:import, :Base, :cos), (:import, :Base, :tan), (:import, :Base, :sec), (:import, :Base, :csc), (:import, :Base, :cot), (:import, :Base, :acos), (:import, :Base, :asin), (:import, :Base, :atan), (:import, :Base, :cosh), (:import, :Base, :sinh), (:import, :Base, :tanh), (:import, :Base, :sech), (:import, :Base, :csch), (:import, :Base, :coth), (:import, :Base, :acosh), (:import, :Base, :asinh), (:import, :Base, :atanh), (:import, :Base, :atan2), (:import, :Base, :cbrt), (:import, :Base, :typemax), (:import, :Base, :typemin), (:import, :Base, :unsafe_trunc), (:import, :Base, :realmin), (:import, :Base, :realmax), (:import, :Base, :rounding), (:import, :Base, :setrounding), (:import, :Base, :maxintfloat), (:import, :Base, :widen), (:import, :Base, :significand), (:import, :Base, :frexp), (:import, :Base, :tryparse)),
        (:line, 23, :none),
        (:toplevel, (:import, :Base, :Rounding, :rounding_raw), (:import, :Base, :Rounding, :setrounding_raw)),
        (:line, 25, :none),
        (:toplevel, (:import, :Base, :GMP, :ClongMax), (:import, :Base, :GMP, :CulongMax), (:import, :Base, :GMP, :CdoubleMax), (:import, :Base, :GMP, :Limb)),
        (:line, 27, :none),
        (:import, :Base, :Math, :lgamma_r),
        (:line, 29, :none),
        (:function, (:call, :__init__), (:block,
            (:line, 30, :none),
            (:try, (:block,
                (:line, 32, :none),
                (:call, :set_emin!, (:call, :get_emin_min)),
                (:line, 33, :none),
                (:call, :set_emax!, (:call, :get_emax_max))
              ), :ex, (:block,
                (:line, 35, :none),
                (:call, (:., :Base, (:quote, #QuoteNode
                      :showerror_nostdio
                    )), :ex, "WARNING: Error during initialization of module MPFR")
              ))
          )),
        (:line, 40, :none),
        (:const, (:(=), :ROUNDING_MODE, (:call, (:curly, :Ref, :Cint), 0))),
        (:line, 41, :none),
        (:const, (:(=), :DEFAULT_PRECISION, (:vect, 256))),
        (:line, 45, :none),
        (:type, true, (:<:, :BigFloat, :AbstractFloat), (:block,
            (:line, 46, :none),
            (:(::), :prec, :Clong),
            (:line, 47, :none),
            (:(::), :sign, :Cint),
            (:line, 48, :none),
            (:(::), :exp, :Clong),
            (:line, 49, :none),
            (:(::), :d, (:curly, :Ptr, :Limb)),
            (:line, 50, :none),
            (:function, (:call, :BigFloat), (:block,
                (:line, 51, :none),
                (:(=), :N, (:call, :precision, :BigFloat)),
                (:line, 52, :none),
                (:(=), :z, (:call, :new, (:call, :zero, :Clong), (:call, :zero, :Cint), (:call, :zero, :Clong), :C_NULL)),
                (:line, 53, :none),
                (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_init2
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Void, (:tuple, (:curly, :Ptr, :BigFloat), :Clong), (:&, :z), :N),
                (:line, 54, :none),
                (:call, :finalizer, :z, (:call, :cglobal, (:tuple, (:quote, #QuoteNode
                        :mpfr_clear
                      ), (:quote, #QuoteNode
                        :libmpfr
                      )))),
                (:line, 55, :none),
                (:return, :z)
              )),
            (:line, 58, :none),
            (:function, (:call, :BigFloat, (:(::), :prec, :Clong), (:(::), :sign, :Cint), (:(::), :exp, :Clong), (:(::), :d, (:curly, :Ptr, :Void))), (:block,
                (:line, 59, :none),
                (:call, :new, :prec, :sign, :exp, :d)
              ))
          )),
        (:line, 63, :none),
        (:(=), (:call, :widen, (:(::), (:curly, :Type, :Float64))), (:block,
            (:line, 63, :none),
            :BigFloat
          )),
        (:line, 64, :none),
        (:(=), (:call, :widen, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 64, :none),
            :BigFloat
          )),
        (:line, 66, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, :BigFloat)), (:block,
            (:line, 66, :none),
            :x
          )),
        (:line, 69, :none),
        (:for, (:(=), (:tuple, :fJ, :fC), (:tuple, (:tuple, (:quote, #QuoteNode
                  :si
                ), (:quote, #QuoteNode
                  :Clong
                )), (:tuple, (:quote, #QuoteNode
                  :ui
                ), (:quote, #QuoteNode
                  :Culong
                )), (:tuple, (:quote, #QuoteNode
                  :d
                ), (:quote, #QuoteNode
                  :Float64
                )))), (:block,
            (:line, 70, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 71, :none),
                (:function, (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, (:$, :fC))), (:block,
                    (:line, 72, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 73, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_set_
                            ), :fJ)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:$, :fC), :Int32), (:&, :z), :x, (:ref, :ROUNDING_MODE)),
                    (:line, 74, :none),
                    (:return, :z)
                  ))
              ))
          )),
        (:line, 79, :none),
        (:function, (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, :BigInt)), (:block,
            (:line, 80, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 81, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set_z
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 82, :none),
            (:return, :z)
          )),
        (:line, 85, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, :Integer)), (:block,
            (:line, 85, :none),
            (:call, :BigFloat, (:call, :BigInt, :x))
          )),
        (:line, 87, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, (:curly, :Union, :Bool, :Int8, :Int16, :Int32))), (:block,
            (:line, 87, :none),
            (:call, :BigFloat, (:call, :convert, :Clong, :x))
          )),
        (:line, 88, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, (:curly, :Union, :UInt8, :UInt16, :UInt32))), (:block,
            (:line, 88, :none),
            (:call, :BigFloat, (:call, :convert, :Culong, :x))
          )),
        (:line, 90, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, (:curly, :Union, :Float16, :Float32))), (:block,
            (:line, 90, :none),
            (:call, :BigFloat, (:call, :Float64, :x))
          )),
        (:line, 91, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :BigFloat)), (:(::), :x, :Rational)), (:block,
            (:line, 91, :none),
            (:call, :/, (:call, :BigFloat, (:call, :num, :x)), (:call, :BigFloat, (:call, :den, :x)))
          )),
        (:line, 93, :none),
        (:function, (:call, :tryparse, (:(::), (:curly, :Type, :BigFloat)), (:(::), :s, :AbstractString), (:kw, (:(::), :base, :Int), 0)), (:block,
            (:line, 94, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 95, :none),
            (:(=), :err, (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_set_str
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Cstring, :Int32, :Int32), (:&, :z), :s, :base, (:ref, :ROUNDING_MODE))),
            (:line, 96, :none),
            (:if, (:call, :(==), :err, 0), (:call, :Nullable, :z), (:call, (:curly, :Nullable, :BigFloat)))
          )),
        (:line, 99, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :Rational)), (:(::), :x, :BigFloat)), (:block,
            (:line, 99, :none),
            (:call, :convert, (:curly, :Rational, :BigInt), :x)
          )),
        (:line, 100, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :AbstractFloat)), (:(::), :x, :BigInt)), (:block,
            (:line, 100, :none),
            (:call, :BigFloat, :x)
          )),
        (:line, 103, :none),
        (:function, (:call, :unsafe_cast, (:(::), (:curly, :Type, :Int64)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 104, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :__gmpfr_mpfr_get_sj
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Cintmax_t, (:tuple, (:curly, :Ptr, :BigFloat), :Cint), (:&, :x), :ri)
          )),
        (:line, 107, :none),
        (:function, (:call, :unsafe_cast, (:(::), (:curly, :Type, :UInt64)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 108, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :__gmpfr_mpfr_get_uj
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Cuintmax_t, (:tuple, (:curly, :Ptr, :BigFloat), :Cint), (:&, :x), :ri)
          )),
        (:line, 112, :none),
        (:function, (:call, (:curly, :unsafe_cast, (:<:, :T, :Signed)), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 113, :none),
            (:call, :%, (:call, :unsafe_cast, :Int64, :x, :ri), :T)
          )),
        (:line, 115, :none),
        (:function, (:call, (:curly, :unsafe_cast, (:<:, :T, :Unsigned)), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 116, :none),
            (:call, :%, (:call, :unsafe_cast, :UInt64, :x, :ri), :T)
          )),
        (:line, 119, :none),
        (:function, (:call, :unsafe_cast, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 121, :none),
            (:(=), :z, (:call, :BigInt)),
            (:line, 122, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_z
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigInt), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), :ri),
            (:line, 124, :none),
            :z
          )),
        (:line, 126, :none),
        (:(=), (:call, :unsafe_cast, (:(::), (:curly, :Type, :Int128)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 126, :none),
            (:call, :Int128, (:call, :unsafe_cast, :BigInt, :x, :ri))
          )),
        (:line, 127, :none),
        (:(=), (:call, :unsafe_cast, (:(::), (:curly, :Type, :UInt128)), (:(::), :x, :BigFloat), (:(::), :ri, :Cint)), (:block,
            (:line, 127, :none),
            (:call, :UInt128, (:call, :unsafe_cast, :BigInt, :x, :ri))
          )),
        (:line, 128, :none),
        (:(=), (:call, (:curly, :unsafe_cast, (:<:, :T, :Integer)), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat), (:(::), :r, :RoundingMode)), (:block,
            (:line, 128, :none),
            (:call, :unsafe_cast, :T, :x, (:call, :to_mpfr, :r))
          )),
        (:line, 130, :none),
        (:(=), (:call, (:curly, :unsafe_trunc, (:<:, :T, :Integer)), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 130, :none),
            (:call, :unsafe_cast, :T, :x, :RoundToZero)
          )),
        (:line, 132, :none),
        (:function, (:call, (:curly, :trunc, (:<:, :T, (:curly, :Union, :Signed, :Unsigned))), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 133, :none),
            (:||, (:comparison, (:call, :typemin, :T), :(<=), :x, :(<=), (:call, :typemax, :T)), (:call, :throw, (:call, :InexactError))),
            (:line, 134, :none),
            (:call, :unsafe_cast, :T, :x, :RoundToZero)
          )),
        (:line, 136, :none),
        (:function, (:call, (:curly, :floor, (:<:, :T, (:curly, :Union, :Signed, :Unsigned))), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 137, :none),
            (:||, (:comparison, (:call, :typemin, :T), :(<=), :x, :(<=), (:call, :typemax, :T)), (:call, :throw, (:call, :InexactError))),
            (:line, 138, :none),
            (:call, :unsafe_cast, :T, :x, :RoundDown)
          )),
        (:line, 140, :none),
        (:function, (:call, (:curly, :ceil, (:<:, :T, (:curly, :Union, :Signed, :Unsigned))), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 141, :none),
            (:||, (:comparison, (:call, :typemin, :T), :(<=), :x, :(<=), (:call, :typemax, :T)), (:call, :throw, (:call, :InexactError))),
            (:line, 142, :none),
            (:call, :unsafe_cast, :T, :x, :RoundUp)
          )),
        (:line, 145, :none),
        (:function, (:call, (:curly, :round, (:<:, :T, (:curly, :Union, :Signed, :Unsigned))), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 146, :none),
            (:||, (:comparison, (:call, :typemin, :T), :(<=), :x, :(<=), (:call, :typemax, :T)), (:call, :throw, (:call, :InexactError))),
            (:line, 147, :none),
            (:call, :unsafe_cast, :T, :x, (:ref, :ROUNDING_MODE))
          )),
        (:line, 150, :none),
        (:(=), (:call, :trunc, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat)), (:block,
            (:line, 150, :none),
            (:call, :unsafe_cast, :BigInt, :x, :RoundToZero)
          )),
        (:line, 151, :none),
        (:(=), (:call, :floor, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat)), (:block,
            (:line, 151, :none),
            (:call, :unsafe_cast, :BigInt, :x, :RoundDown)
          )),
        (:line, 152, :none),
        (:(=), (:call, :ceil, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat)), (:block,
            (:line, 152, :none),
            (:call, :unsafe_cast, :BigInt, :x, :RoundUp)
          )),
        (:line, 153, :none),
        (:(=), (:call, :round, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat)), (:block,
            (:line, 153, :none),
            (:call, :unsafe_cast, :BigInt, :x, (:ref, :ROUNDING_MODE))
          )),
        (:line, 156, :none),
        (:(=), (:call, :trunc, (:(::), (:curly, :Type, :Integer)), (:(::), :x, :BigFloat)), (:block,
            (:line, 156, :none),
            (:call, :trunc, :BigInt, :x)
          )),
        (:line, 157, :none),
        (:(=), (:call, :floor, (:(::), (:curly, :Type, :Integer)), (:(::), :x, :BigFloat)), (:block,
            (:line, 157, :none),
            (:call, :floor, :BigInt, :x)
          )),
        (:line, 158, :none),
        (:(=), (:call, :ceil, (:(::), (:curly, :Type, :Integer)), (:(::), :x, :BigFloat)), (:block,
            (:line, 158, :none),
            (:call, :ceil, :BigInt, :x)
          )),
        (:line, 159, :none),
        (:(=), (:call, :round, (:(::), (:curly, :Type, :Integer)), (:(::), :x, :BigFloat)), (:block,
            (:line, 159, :none),
            (:call, :round, :BigInt, :x)
          )),
        (:line, 161, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :Bool)), (:(::), :x, :BigFloat)), (:block,
            (:line, 161, :none),
            (:if, (:call, :(==), :x, 0), false, (:if, (:call, :(==), :x, 1), true, (:call, :throw, (:call, :InexactError))))
          )),
        (:line, 162, :none),
        (:function, (:call, :convert, (:(::), (:curly, :Type, :BigInt)), (:(::), :x, :BigFloat)), (:block,
            (:line, 163, :none),
            (:||, (:call, :isinteger, :x), (:call, :throw, (:call, :InexactError))),
            (:line, 164, :none),
            (:call, :trunc, :BigInt, :x)
          )),
        (:line, 167, :none),
        (:function, (:call, (:curly, :convert, (:<:, :T, :Integer)), (:(::), (:curly, :Type, :T)), (:(::), :x, :BigFloat)), (:block,
            (:line, 168, :none),
            (:||, (:call, :isinteger, :x), (:call, :throw, (:call, :InexactError))),
            (:line, 169, :none),
            (:call, :trunc, :T, :x)
          )),
        (:line, 173, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :Float64)), (:(::), :x, :BigFloat)), (:block,
            (:line, 173, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_d
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Float64, (:tuple, (:curly, :Ptr, :BigFloat), :Int32), (:&, :x), (:ref, :ROUNDING_MODE))
          )),
        (:line, 175, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :Float32)), (:(::), :x, :BigFloat)), (:block,
            (:line, 175, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_flt
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Float32, (:tuple, (:curly, :Ptr, :BigFloat), :Int32), (:&, :x), (:ref, :ROUNDING_MODE))
          )),
        (:line, 178, :none),
        (:(=), (:call, :convert, (:(::), (:curly, :Type, :Float16)), (:(::), :x, :BigFloat)), (:block,
            (:line, 178, :none),
            (:call, :convert, :Float16, (:call, :convert, :Float32, :x))
          )),
        (:line, 180, :none),
        (:(=), (:call, (:(::), (:curly, :Type, :Float64)), (:(::), :x, :BigFloat), (:(::), :r, :RoundingMode)), (:block,
            (:line, 180, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_d
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Float64, (:tuple, (:curly, :Ptr, :BigFloat), :Int32), (:&, :x), (:call, :to_mpfr, :r))
          )),
        (:line, 182, :none),
        (:(=), (:call, (:(::), (:curly, :Type, :Float32)), (:(::), :x, :BigFloat), (:(::), :r, :RoundingMode)), (:block,
            (:line, 182, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_flt
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Float32, (:tuple, (:curly, :Ptr, :BigFloat), :Int32), (:&, :x), (:call, :to_mpfr, :r))
          )),
        (:line, 185, :none),
        (:(=), (:call, (:(::), (:curly, :Type, :Float16)), (:(::), :x, :BigFloat), (:(::), :r, :RoundingMode)), (:block,
            (:line, 185, :none),
            (:call, :convert, :Float16, (:call, :Float32, :x, :r))
          )),
        (:line, 188, :none),
        (:(=), (:call, (:curly, :promote_rule, (:<:, :T, :Real)), (:(::), (:curly, :Type, :BigFloat)), (:(::), (:curly, :Type, :T))), (:block,
            (:line, 188, :none),
            :BigFloat
          )),
        (:line, 189, :none),
        (:(=), (:call, (:curly, :promote_rule, (:<:, :T, :AbstractFloat)), (:(::), (:curly, :Type, :BigInt)), (:(::), (:curly, :Type, :T))), (:block,
            (:line, 189, :none),
            :BigFloat
          )),
        (:line, 190, :none),
        (:(=), (:call, (:curly, :promote_rule, (:<:, :T, :AbstractFloat)), (:(::), (:curly, :Type, :BigFloat)), (:(::), (:curly, :Type, :T))), (:block,
            (:line, 190, :none),
            :BigFloat
          )),
        (:line, 192, :none),
        (:function, (:call, :convert, (:(::), (:curly, :Type, (:curly, :Rational, :BigInt))), (:(::), :x, :AbstractFloat)), (:block,
            (:line, 193, :none),
            (:if, (:call, :isnan, :x), (:block,
                (:line, 193, :none),
                (:return, (:call, ://, (:call, :zero, :BigInt), (:call, :zero, :BigInt)))
              )),
            (:line, 194, :none),
            (:if, (:call, :isinf, :x), (:block,
                (:line, 194, :none),
                (:return, (:call, ://, (:call, :copysign, (:call, :one, :BigInt), :x), (:call, :zero, :BigInt)))
              )),
            (:line, 195, :none),
            (:if, (:call, :(==), :x, 0), (:block,
                (:line, 195, :none),
                (:return, (:call, ://, (:call, :zero, :BigInt), (:call, :one, :BigInt)))
              )),
            (:line, 196, :none),
            (:(=), :s, (:call, :max, (:call, :-, (:call, :precision, :x), (:call, :exponent, :x)), 0)),
            (:line, 197, :none),
            (:call, ://, (:call, :BigInt, (:call, :ldexp, :x, :s)), (:call, :<<, (:call, :BigInt, 1), :s))
          )),
        (:line, 201, :none),
        (:for, (:(=), (:tuple, :fJ, :fC), (:tuple, (:tuple, (:quote, #QuoteNode
                  :+
                ), (:quote, #QuoteNode
                  :add
                )), (:tuple, (:quote, #QuoteNode
                  :*
                ), (:quote, #QuoteNode
                  :mul
                )))), (:block,
            (:line, 202, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 204, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
                    (:line, 205, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 206, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
                    (:line, 207, :none),
                    (:return, :z)
                  )),
                (:line, 211, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :CulongMax)), (:block,
                    (:line, 212, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 213, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_ui
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 214, :none),
                    (:return, :z)
                  )),
                (:line, 216, :none),
                (:(=), (:call, (:$, :fJ), (:(::), :c, :CulongMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 216, :none),
                    (:call, (:$, :fJ), :x, :c)
                  )),
                (:line, 219, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :ClongMax)), (:block,
                    (:line, 220, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 221, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_si
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 222, :none),
                    (:return, :z)
                  )),
                (:line, 224, :none),
                (:(=), (:call, (:$, :fJ), (:(::), :c, :ClongMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 224, :none),
                    (:call, (:$, :fJ), :x, :c)
                  )),
                (:line, 227, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :CdoubleMax)), (:block,
                    (:line, 228, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 229, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_d
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cdouble, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 230, :none),
                    (:return, :z)
                  )),
                (:line, 232, :none),
                (:(=), (:call, (:$, :fJ), (:(::), :c, :CdoubleMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 232, :none),
                    (:call, (:$, :fJ), :x, :c)
                  )),
                (:line, 235, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :BigInt)), (:block,
                    (:line, 236, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 237, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_z
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), :Int32), (:&, :z), (:&, :x), (:&, :c), (:ref, :ROUNDING_MODE)),
                    (:line, 238, :none),
                    (:return, :z)
                  )),
                (:line, 240, :none),
                (:(=), (:call, (:$, :fJ), (:(::), :c, :BigInt), (:(::), :x, :BigFloat)), (:block,
                    (:line, 240, :none),
                    (:call, (:$, :fJ), :x, :c)
                  ))
              ))
          )),
        (:line, 244, :none),
        (:for, (:(=), (:tuple, :fJ, :fC), (:tuple, (:tuple, (:quote, #QuoteNode
                  :-
                ), (:quote, #QuoteNode
                  :sub
                )), (:tuple, (:quote, #QuoteNode
                  :/
                ), (:quote, #QuoteNode
                  :div
                )))), (:block,
            (:line, 245, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 247, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
                    (:line, 248, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 249, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
                    (:line, 250, :none),
                    (:return, :z)
                  )),
                (:line, 254, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :CulongMax)), (:block,
                    (:line, 255, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 256, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_ui
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 257, :none),
                    (:return, :z)
                  )),
                (:line, 259, :none),
                (:function, (:call, (:$, :fJ), (:(::), :c, :CulongMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 260, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 261, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), (:quote, #QuoteNode
                              :ui_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Culong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:ref, :ROUNDING_MODE)),
                    (:line, 262, :none),
                    (:return, :z)
                  )),
                (:line, 266, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :ClongMax)), (:block,
                    (:line, 267, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 268, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_si
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 269, :none),
                    (:return, :z)
                  )),
                (:line, 271, :none),
                (:function, (:call, (:$, :fJ), (:(::), :c, :ClongMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 272, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 273, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), (:quote, #QuoteNode
                              :si_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Clong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:ref, :ROUNDING_MODE)),
                    (:line, 274, :none),
                    (:return, :z)
                  )),
                (:line, 278, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :CdoubleMax)), (:block,
                    (:line, 279, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 280, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_d
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cdouble, :Int32), (:&, :z), (:&, :x), :c, (:ref, :ROUNDING_MODE)),
                    (:line, 281, :none),
                    (:return, :z)
                  )),
                (:line, 283, :none),
                (:function, (:call, (:$, :fJ), (:(::), :c, :CdoubleMax), (:(::), :x, :BigFloat)), (:block,
                    (:line, 284, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 285, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), (:quote, #QuoteNode
                              :d_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Cdouble, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:ref, :ROUNDING_MODE)),
                    (:line, 286, :none),
                    (:return, :z)
                  )),
                (:line, 290, :none),
                (:function, (:call, (:$, :fJ), (:(::), :x, :BigFloat), (:(::), :c, :BigInt)), (:block,
                    (:line, 291, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 292, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC, (:quote, #QuoteNode
                              :_z
                            ))), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), :Int32), (:&, :z), (:&, :x), (:&, :c), (:ref, :ROUNDING_MODE)),
                    (:line, 293, :none),
                    (:return, :z)
                  ))
              ))
          )),
        (:line, 299, :none),
        (:function, (:call, :-, (:(::), :c, :BigInt), (:(::), :x, :BigFloat)), (:block,
            (:line, 300, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 301, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_z_sub
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :c), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 302, :none),
            (:return, :z)
          )),
        (:line, 305, :none),
        (:function, (:call, :fma, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat), (:(::), :z, :BigFloat)), (:block,
            (:line, 306, :none),
            (:(=), :r, (:call, :BigFloat)),
            (:line, 307, :none),
            (:ccall, (:tuple, "mpfr_fma", (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :r), (:&, :x), (:&, :y), (:&, :z), (:ref, :ROUNDING_MODE)),
            (:line, 308, :none),
            (:return, :r)
          )),
        (:line, 313, :none),
        (:function, (:call, :div, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 314, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 315, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_div
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:call, :to_mpfr, :RoundToZero)),
            (:line, 316, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 317, :none),
            (:return, :z)
          )),
        (:line, 321, :none),
        (:function, (:call, :div, (:(::), :x, :BigFloat), (:(::), :c, :CulongMax)), (:block,
            (:line, 322, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 323, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_div_ui
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), (:&, :x), :c, (:call, :to_mpfr, :RoundToZero)),
            (:line, 324, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 325, :none),
            (:return, :z)
          )),
        (:line, 327, :none),
        (:function, (:call, :div, (:(::), :c, :CulongMax), (:(::), :x, :BigFloat)), (:block,
            (:line, 328, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 329, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_ui_div
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Culong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:call, :to_mpfr, :RoundToZero)),
            (:line, 330, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 331, :none),
            (:return, :z)
          )),
        (:line, 335, :none),
        (:function, (:call, :div, (:(::), :x, :BigFloat), (:(::), :c, :ClongMax)), (:block,
            (:line, 336, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 337, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_div_si
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :x), :c, (:call, :to_mpfr, :RoundToZero)),
            (:line, 338, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 339, :none),
            (:return, :z)
          )),
        (:line, 341, :none),
        (:function, (:call, :div, (:(::), :c, :ClongMax), (:(::), :x, :BigFloat)), (:block,
            (:line, 342, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 343, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_si_div
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Clong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:call, :to_mpfr, :RoundToZero)),
            (:line, 344, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 345, :none),
            (:return, :z)
          )),
        (:line, 349, :none),
        (:function, (:call, :div, (:(::), :x, :BigFloat), (:(::), :c, :CdoubleMax)), (:block,
            (:line, 350, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 351, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_div_d
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cdouble, :Int32), (:&, :z), (:&, :x), :c, (:call, :to_mpfr, :RoundToZero)),
            (:line, 352, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 353, :none),
            (:return, :z)
          )),
        (:line, 355, :none),
        (:function, (:call, :div, (:(::), :c, :CdoubleMax), (:(::), :x, :BigFloat)), (:block,
            (:line, 356, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 357, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_d_div
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Cdouble, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :c, (:&, :x), (:call, :to_mpfr, :RoundToZero)),
            (:line, 358, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 359, :none),
            (:return, :z)
          )),
        (:line, 363, :none),
        (:function, (:call, :div, (:(::), :x, :BigFloat), (:(::), :c, :BigInt)), (:block,
            (:line, 364, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 365, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_div_z
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), :Int32), (:&, :z), (:&, :x), (:&, :c), (:call, :to_mpfr, :RoundToZero)),
            (:line, 366, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_trunc
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :z)),
            (:line, 367, :none),
            (:return, :z)
          )),
        (:line, 372, :none),
        (:for, (:(=), (:tuple, :fJ, :fC, :fI), (:tuple, (:tuple, (:quote, #QuoteNode
                  :+
                ), (:quote, #QuoteNode
                  :add
                ), 0), (:tuple, (:quote, #QuoteNode
                  :*
                ), (:quote, #QuoteNode
                  :mul
                ), 1))), (:block,
            (:line, 373, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 374, :none),
                (:function, (:call, (:$, :fJ), (:(::), :a, :BigFloat), (:(::), :b, :BigFloat), (:(::), :c, :BigFloat)), (:block,
                    (:line, 375, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 376, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :a), (:&, :b), (:ref, :ROUNDING_MODE)),
                    (:line, 377, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :c), (:ref, :ROUNDING_MODE)),
                    (:line, 378, :none),
                    (:return, :z)
                  )),
                (:line, 380, :none),
                (:function, (:call, (:$, :fJ), (:(::), :a, :BigFloat), (:(::), :b, :BigFloat), (:(::), :c, :BigFloat), (:(::), :d, :BigFloat)), (:block,
                    (:line, 381, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 382, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :a), (:&, :b), (:ref, :ROUNDING_MODE)),
                    (:line, 383, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :c), (:ref, :ROUNDING_MODE)),
                    (:line, 384, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :d), (:ref, :ROUNDING_MODE)),
                    (:line, 385, :none),
                    (:return, :z)
                  )),
                (:line, 387, :none),
                (:function, (:call, (:$, :fJ), (:(::), :a, :BigFloat), (:(::), :b, :BigFloat), (:(::), :c, :BigFloat), (:(::), :d, :BigFloat), (:(::), :e, :BigFloat)), (:block,
                    (:line, 388, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 389, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :a), (:&, :b), (:ref, :ROUNDING_MODE)),
                    (:line, 390, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :c), (:ref, :ROUNDING_MODE)),
                    (:line, 391, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :d), (:ref, :ROUNDING_MODE)),
                    (:line, 392, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :fC)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :z), (:&, :e), (:ref, :ROUNDING_MODE)),
                    (:line, 393, :none),
                    (:return, :z)
                  ))
              ))
          )),
        (:line, 398, :none),
        (:function, (:call, :-, (:(::), :x, :BigFloat)), (:block,
            (:line, 399, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 400, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_neg
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 401, :none),
            (:return, :z)
          )),
        (:line, 404, :none),
        (:function, (:call, :sqrt, (:(::), :x, :BigFloat)), (:block,
            (:line, 405, :none),
            (:&&, (:call, :isnan, :x), (:return, :x)),
            (:line, 406, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 407, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_sqrt
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 408, :none),
            (:if, (:call, :isnan, :z), (:block,
                (:line, 409, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 411, :none),
            (:return, :z)
          )),
        (:line, 414, :none),
        (:(=), (:call, :sqrt, (:(::), :x, :BigInt)), (:block,
            (:line, 414, :none),
            (:call, :sqrt, (:call, :BigFloat, :x))
          )),
        (:line, 416, :none),
        (:function, (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 417, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 418, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_pow
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 419, :none),
            (:return, :z)
          )),
        (:line, 422, :none),
        (:function, (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :CulongMax)), (:block,
            (:line, 423, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 424, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_pow_ui
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), (:&, :x), :y, (:ref, :ROUNDING_MODE)),
            (:line, 425, :none),
            (:return, :z)
          )),
        (:line, 428, :none),
        (:function, (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :ClongMax)), (:block,
            (:line, 429, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 430, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_pow_si
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :x), :y, (:ref, :ROUNDING_MODE)),
            (:line, 431, :none),
            (:return, :z)
          )),
        (:line, 434, :none),
        (:function, (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :BigInt)), (:block,
            (:line, 435, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 436, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_pow_z
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 437, :none),
            (:return, :z)
          )),
        (:line, 440, :none),
        (:(=), (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :Integer)), (:block,
            (:line, 440, :none),
            (:if, (:comparison, (:call, :typemin, :Clong), :(<=), :y, :(<=), (:call, :typemax, :Clong)), (:call, :^, :x, (:call, :Clong, :y)), (:call, :^, :x, (:call, :BigInt, :y)))
          )),
        (:line, 441, :none),
        (:(=), (:call, :^, (:(::), :x, :BigFloat), (:(::), :y, :Unsigned)), (:block,
            (:line, 441, :none),
            (:if, (:comparison, (:call, :typemin, :Culong), :(<=), :y, :(<=), (:call, :typemax, :Culong)), (:call, :^, :x, (:call, :Culong, :y)), (:call, :^, :x, (:call, :BigInt, :y)))
          )),
        (:line, 443, :none),
        (:for, (:(=), :f, (:tuple, (:quote, #QuoteNode
                :exp
              ), (:quote, #QuoteNode
                :exp2
              ), (:quote, #QuoteNode
                :exp10
              ), (:quote, #QuoteNode
                :expm1
              ), (:quote, #QuoteNode
                :digamma
              ), (:quote, #QuoteNode
                :erf
              ), (:quote, #QuoteNode
                :erfc
              ), (:quote, #QuoteNode
                :zeta
              ), (:quote, #QuoteNode
                :cosh
              ), (:quote, #QuoteNode
                :sinh
              ), (:quote, #QuoteNode
                :tanh
              ), (:quote, #QuoteNode
                :sech
              ), (:quote, #QuoteNode
                :csch
              ), (:quote, #QuoteNode
                :coth
              ), (:quote, #QuoteNode
                :cbrt
              ))), (:block,
            (:line, 445, :none),
            (:macrocall, Symbol("@eval"), (:function, (:call, (:$, :f), (:(::), :x, :BigFloat)), (:block,
                  (:line, 446, :none),
                  (:(=), :z, (:call, :BigFloat)),
                  (:line, 447, :none),
                  (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                            :mpfr_
                          ), :f)), (:quote, #QuoteNode
                        :libmpfr
                      )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
                  (:line, 448, :none),
                  (:return, :z)
                )))
          )),
        (:line, 453, :none),
        (:function, (:call, :big_ln2), (:block,
            (:line, 454, :none),
            (:(=), :c, (:call, :BigFloat)),
            (:line, 455, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_const_log2
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Cint, (:tuple, (:curly, :Ptr, :BigFloat), :Int32), (:&, :c), (:ref, (:., :MPFR, (:quote, #QuoteNode
                    :ROUNDING_MODE
                  )))),
            (:line, 457, :none),
            (:return, :c)
          )),
        (:line, 460, :none),
        (:function, (:call, :eta, (:(::), :x, :BigFloat)), (:block,
            (:line, 461, :none),
            (:&&, (:call, :(==), :x, 1), (:return, (:call, :big_ln2))),
            (:line, 462, :none),
            (:return, (:call, :*, (:call, :-, (:call, :zeta, :x)), (:call, :expm1, (:call, :*, (:call, :big_ln2), (:call, :-, 1, :x)))))
          )),
        (:line, 465, :none),
        (:function, (:call, :airyai, (:(::), :x, :BigFloat)), (:block,
            (:line, 466, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 467, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_ai
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 468, :none),
            (:return, :z)
          )),
        (:line, 470, :none),
        (:(=), (:call, :airy, (:(::), :x, :BigFloat)), (:block,
            (:line, 470, :none),
            (:call, :airyai, :x)
          )),
        (:line, 472, :none),
        (:function, (:call, :ldexp, (:(::), :x, :BigFloat), (:(::), :n, :Clong)), (:block,
            (:line, 473, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 474, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_mul_2si
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :x), :n, (:ref, :ROUNDING_MODE)),
            (:line, 475, :none),
            (:return, :z)
          )),
        (:line, 477, :none),
        (:function, (:call, :ldexp, (:(::), :x, :BigFloat), (:(::), :n, :Culong)), (:block,
            (:line, 478, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 479, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_mul_2ui
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), (:&, :x), :n, (:ref, :ROUNDING_MODE)),
            (:line, 480, :none),
            (:return, :z)
          )),
        (:line, 482, :none),
        (:(=), (:call, :ldexp, (:(::), :x, :BigFloat), (:(::), :n, :ClongMax)), (:block,
            (:line, 482, :none),
            (:call, :ldexp, :x, (:call, :convert, :Clong, :n))
          )),
        (:line, 483, :none),
        (:(=), (:call, :ldexp, (:(::), :x, :BigFloat), (:(::), :n, :CulongMax)), (:block,
            (:line, 483, :none),
            (:call, :ldexp, :x, (:call, :convert, :Culong, :n))
          )),
        (:line, 484, :none),
        (:(=), (:call, :ldexp, (:(::), :x, :BigFloat), (:(::), :n, :Integer)), (:block,
            (:line, 484, :none),
            (:call, :*, :x, (:call, :exp2, (:call, :BigFloat, :n)))
          )),
        (:line, 486, :none),
        (:function, (:call, :besselj0, (:(::), :x, :BigFloat)), (:block,
            (:line, 487, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 488, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_j0
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 489, :none),
            (:return, :z)
          )),
        (:line, 492, :none),
        (:function, (:call, :besselj1, (:(::), :x, :BigFloat)), (:block,
            (:line, 493, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 494, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_j1
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 495, :none),
            (:return, :z)
          )),
        (:line, 498, :none),
        (:function, (:call, :besselj, (:(::), :n, :Integer), (:(::), :x, :BigFloat)), (:block,
            (:line, 499, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 500, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_jn
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Clong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :n, (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 501, :none),
            (:return, :z)
          )),
        (:line, 504, :none),
        (:function, (:call, :bessely0, (:(::), :x, :BigFloat)), (:block,
            (:line, 505, :none),
            (:if, (:call, :<, :x, 0), (:block,
                (:line, 506, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 508, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 509, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_y0
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 510, :none),
            (:return, :z)
          )),
        (:line, 513, :none),
        (:function, (:call, :bessely1, (:(::), :x, :BigFloat)), (:block,
            (:line, 514, :none),
            (:if, (:call, :<, :x, 0), (:block,
                (:line, 515, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 517, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 518, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_y1
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 519, :none),
            (:return, :z)
          )),
        (:line, 522, :none),
        (:function, (:call, :bessely, (:(::), :n, :Integer), (:(::), :x, :BigFloat)), (:block,
            (:line, 523, :none),
            (:if, (:call, :<, :x, 0), (:block,
                (:line, 524, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 526, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 527, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_yn
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Clong, (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :n, (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 528, :none),
            (:return, :z)
          )),
        (:line, 531, :none),
        (:function, (:call, :factorial, (:(::), :x, :BigFloat)), (:block,
            (:line, 532, :none),
            (:if, (:||, (:call, :<, :x, 0), (:call, :!, (:call, :isinteger, :x))), (:block,
                (:line, 533, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 535, :none),
            (:(=), :ui, (:call, :convert, :Culong, :x)),
            (:line, 536, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 537, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_fac_ui
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Culong, :Int32), (:&, :z), :ui, (:ref, :ROUNDING_MODE)),
            (:line, 538, :none),
            (:return, :z)
          )),
        (:line, 541, :none),
        (:function, (:call, :hypot, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 542, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 543, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_hypot
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 544, :none),
            (:return, :z)
          )),
        (:line, 547, :none),
        (:for, (:(=), :f, (:tuple, (:quote, #QuoteNode
                :log
              ), (:quote, #QuoteNode
                :log2
              ), (:quote, #QuoteNode
                :log10
              ))), (:block,
            (:line, 548, :none),
            (:macrocall, Symbol("@eval"), (:function, (:call, (:$, :f), (:(::), :x, :BigFloat)), (:block,
                  (:line, 549, :none),
                  (:if, (:call, :<, :x, 0), (:block,
                      (:line, 550, :none),
                      (:call, :throw, (:call, :DomainError))
                    )),
                  (:line, 552, :none),
                  (:(=), :z, (:call, :BigFloat)),
                  (:line, 553, :none),
                  (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                            :mpfr_
                          ), :f)), (:quote, #QuoteNode
                        :libmpfr
                      )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
                  (:line, 554, :none),
                  (:return, :z)
                )))
          )),
        (:line, 558, :none),
        (:function, (:call, :log1p, (:(::), :x, :BigFloat)), (:block,
            (:line, 559, :none),
            (:if, (:call, :<, :x, -1), (:block,
                (:line, 560, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 562, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 563, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_log1p
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 564, :none),
            (:return, :z)
          )),
        (:line, 567, :none),
        (:function, (:call, :max, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 568, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 569, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_max
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 570, :none),
            (:return, :z)
          )),
        (:line, 573, :none),
        (:function, (:call, :min, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 574, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 575, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_min
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 576, :none),
            (:return, :z)
          )),
        (:line, 579, :none),
        (:function, (:call, :modf, (:(::), :x, :BigFloat)), (:block,
            (:line, 580, :none),
            (:if, (:call, :isinf, :x), (:block,
                (:line, 581, :none),
                (:return, (:tuple, (:call, :BigFloat, :NaN), :x))
              )),
            (:line, 583, :none),
            (:(=), :zint, (:call, :BigFloat)),
            (:line, 584, :none),
            (:(=), :zfloat, (:call, :BigFloat)),
            (:line, 585, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_modf
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :zint), (:&, :zfloat), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 586, :none),
            (:return, (:tuple, :zfloat, :zint))
          )),
        (:line, 589, :none),
        (:function, (:call, :rem, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 590, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 591, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_fmod
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 592, :none),
            (:return, :z)
          )),
        (:line, 595, :none),
        (:function, (:call, :sum, (:(::), :arr, (:curly, :AbstractArray, :BigFloat))), (:block,
            (:line, 596, :none),
            (:(=), :z, (:call, :BigFloat, 0)),
            (:line, 597, :none),
            (:for, (:(=), :i, :arr), (:block,
                (:line, 598, :none),
                (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_add
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cint), (:&, :z), (:&, :z), (:&, :i), 0)
              )),
            (:line, 602, :none),
            (:return, :z)
          )),
        (:line, 606, :none),
        (:for, (:(=), :f, (:tuple, (:quote, #QuoteNode
                :sin
              ), (:quote, #QuoteNode
                :cos
              ), (:quote, #QuoteNode
                :tan
              ), (:quote, #QuoteNode
                :sec
              ), (:quote, #QuoteNode
                :csc
              ), (:quote, #QuoteNode
                :acos
              ), (:quote, #QuoteNode
                :asin
              ), (:quote, #QuoteNode
                :atan
              ), (:quote, #QuoteNode
                :acosh
              ), (:quote, #QuoteNode
                :asinh
              ), (:quote, #QuoteNode
                :atanh
              ), (:quote, #QuoteNode
                :gamma
              ))), (:block,
            (:line, 608, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 609, :none),
                (:function, (:call, (:$, :f), (:(::), :x, :BigFloat)), (:block,
                    (:line, 610, :none),
                    (:if, (:call, :isnan, :x), (:block,
                        (:line, 611, :none),
                        (:return, :x)
                      )),
                    (:line, 613, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 614, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :f)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
                    (:line, 615, :none),
                    (:if, (:call, :isnan, :z), (:block,
                        (:line, 616, :none),
                        (:call, :throw, (:call, :DomainError))
                      )),
                    (:line, 618, :none),
                    (:return, :z)
                  ))
              ))
          )),
        (:line, 624, :none),
        (:const, (:(=), :lgamma_signp, (:call, (:curly, :Array, :Cint), 1))),
        (:line, 625, :none),
        (:function, (:call, :lgamma, (:(::), :x, :BigFloat)), (:block,
            (:line, 626, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 627, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_lgamma
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Cint, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :Cint), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), :lgamma_signp, (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 628, :none),
            (:return, :z)
          )),
        (:line, 631, :none),
        (:(=), (:call, :lgamma_r, (:(::), :x, :BigFloat)), (:block,
            (:line, 631, :none),
            (:tuple, (:call, :lgamma, :x), (:ref, :lgamma_signp, 1))
          )),
        (:line, 633, :none),
        (:function, (:call, :atan2, (:(::), :y, :BigFloat), (:(::), :x, :BigFloat)), (:block,
            (:line, 634, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 635, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_atan2
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :y), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 636, :none),
            (:return, :z)
          )),
        (:line, 640, :none),
        (:(=), (:call, :(==), (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 640, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_equal_p
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :x), (:&, :y)), 0)
          )),
        (:line, 641, :none),
        (:(=), (:call, :(<=), (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 641, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_lessequal_p
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :x), (:&, :y)), 0)
          )),
        (:line, 642, :none),
        (:(=), (:call, :(>=), (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 642, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_greaterequal_p
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :x), (:&, :y)), 0)
          )),
        (:line, 643, :none),
        (:(=), (:call, :<, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 643, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_less_p
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :x), (:&, :y)), 0)
          )),
        (:line, 644, :none),
        (:(=), (:call, :>, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 644, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_greater_p
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :x), (:&, :y)), 0)
          )),
        (:line, 646, :none),
        (:function, (:call, :cmp, (:(::), :x, :BigFloat), (:(::), :y, :BigInt)), (:block,
            (:line, 647, :none),
            (:&&, (:call, :isnan, :x), (:call, :throw, (:call, :DomainError))),
            (:line, 648, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_cmp_z
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigInt)), (:&, :x), (:&, :y))
          )),
        (:line, 650, :none),
        (:function, (:call, :cmp, (:(::), :x, :BigFloat), (:(::), :y, :ClongMax)), (:block,
            (:line, 651, :none),
            (:&&, (:call, :isnan, :x), (:call, :throw, (:call, :DomainError))),
            (:line, 652, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_cmp_si
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Clong), (:&, :x), :y)
          )),
        (:line, 654, :none),
        (:function, (:call, :cmp, (:(::), :x, :BigFloat), (:(::), :y, :CulongMax)), (:block,
            (:line, 655, :none),
            (:&&, (:call, :isnan, :x), (:call, :throw, (:call, :DomainError))),
            (:line, 656, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_cmp_ui
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Culong), (:&, :x), :y)
          )),
        (:line, 658, :none),
        (:(=), (:call, :cmp, (:(::), :x, :BigFloat), (:(::), :y, :Integer)), (:block,
            (:line, 658, :none),
            (:call, :cmp, :x, (:call, :big, :y))
          )),
        (:line, 659, :none),
        (:(=), (:call, :cmp, (:(::), :x, :Integer), (:(::), :y, :BigFloat)), (:block,
            (:line, 659, :none),
            (:call, :-, (:call, :cmp, :y, :x))
          )),
        (:line, 661, :none),
        (:function, (:call, :cmp, (:(::), :x, :BigFloat), (:(::), :y, :CdoubleMax)), (:block,
            (:line, 662, :none),
            (:&&, (:||, (:call, :isnan, :x), (:call, :isnan, :y)), (:call, :throw, (:call, :DomainError))),
            (:line, 663, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_cmp_d
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), :Cdouble), (:&, :x), :y)
          )),
        (:line, 665, :none),
        (:(=), (:call, :cmp, (:(::), :x, :CdoubleMax), (:(::), :y, :BigFloat)), (:block,
            (:line, 665, :none),
            (:call, :-, (:call, :cmp, :y, :x))
          )),
        (:line, 667, :none),
        (:(=), (:call, :(==), (:(::), :x, :BigFloat), (:(::), :y, :Integer)), (:block,
            (:line, 667, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:call, :(==), (:call, :cmp, :x, :y), 0))
          )),
        (:line, 668, :none),
        (:(=), (:call, :(==), (:(::), :x, :Integer), (:(::), :y, :BigFloat)), (:block,
            (:line, 668, :none),
            (:call, :(==), :y, :x)
          )),
        (:line, 669, :none),
        (:(=), (:call, :(==), (:(::), :x, :BigFloat), (:(::), :y, :CdoubleMax)), (:block,
            (:line, 669, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :(==), (:call, :cmp, :x, :y), 0)))
          )),
        (:line, 670, :none),
        (:(=), (:call, :(==), (:(::), :x, :CdoubleMax), (:(::), :y, :BigFloat)), (:block,
            (:line, 670, :none),
            (:call, :(==), :y, :x)
          )),
        (:line, 672, :none),
        (:(=), (:call, :<, (:(::), :x, :BigFloat), (:(::), :y, :Integer)), (:block,
            (:line, 672, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:call, :<, (:call, :cmp, :x, :y), 0))
          )),
        (:line, 673, :none),
        (:(=), (:call, :<, (:(::), :x, :Integer), (:(::), :y, :BigFloat)), (:block,
            (:line, 673, :none),
            (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :>, (:call, :cmp, :y, :x), 0))
          )),
        (:line, 674, :none),
        (:(=), (:call, :<, (:(::), :x, :BigFloat), (:(::), :y, :CdoubleMax)), (:block,
            (:line, 674, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :<, (:call, :cmp, :x, :y), 0)))
          )),
        (:line, 675, :none),
        (:(=), (:call, :<, (:(::), :x, :CdoubleMax), (:(::), :y, :BigFloat)), (:block,
            (:line, 675, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :>, (:call, :cmp, :y, :x), 0)))
          )),
        (:line, 677, :none),
        (:(=), (:call, :(<=), (:(::), :x, :BigFloat), (:(::), :y, :Integer)), (:block,
            (:line, 677, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:call, :(<=), (:call, :cmp, :x, :y), 0))
          )),
        (:line, 678, :none),
        (:(=), (:call, :(<=), (:(::), :x, :Integer), (:(::), :y, :BigFloat)), (:block,
            (:line, 678, :none),
            (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :(>=), (:call, :cmp, :y, :x), 0))
          )),
        (:line, 679, :none),
        (:(=), (:call, :(<=), (:(::), :x, :BigFloat), (:(::), :y, :CdoubleMax)), (:block,
            (:line, 679, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :(<=), (:call, :cmp, :x, :y), 0)))
          )),
        (:line, 680, :none),
        (:(=), (:call, :(<=), (:(::), :x, :CdoubleMax), (:(::), :y, :BigFloat)), (:block,
            (:line, 680, :none),
            (:&&, (:call, :!, (:call, :isnan, :x)), (:&&, (:call, :!, (:call, :isnan, :y)), (:call, :(>=), (:call, :cmp, :y, :x), 0)))
          )),
        (:line, 682, :none),
        (:(=), (:call, :signbit, (:(::), :x, :BigFloat)), (:block,
            (:line, 682, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_signbit
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)), 0)
          )),
        (:line, 684, :none),
        (:function, (:call, :precision, (:(::), :x, :BigFloat)), (:block,
            (:line, 685, :none),
            (:return, (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_get_prec
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Clong, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)))
          )),
        (:line, 688, :none),
        (:(=), (:call, :precision, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 688, :none),
            (:ref, :DEFAULT_PRECISION, :end)
          )),
        (:line, 690, :none),
        (:macrocall, :(Core.@doc), "    setprecision([T=BigFloat,] precision::Int)\n\nSet the precision (in bits) to be used for `T` arithmetic.\n", (:function, (:call, :setprecision, (:(::), (:curly, :Type, :BigFloat)), (:(::), :precision, :Int)), (:block,
              (:line, 696, :none),
              (:if, (:call, :<, :precision, 2), (:block,
                  (:line, 697, :none),
                  (:call, :throw, (:call, :DomainError))
                )),
              (:line, 699, :none),
              (:(=), (:ref, :DEFAULT_PRECISION, :end), :precision)
            ))),
        (:line, 702, :none),
        (:(=), (:call, :setprecision, (:(::), :precision, :Int)), (:block,
            (:line, 702, :none),
            (:call, :setprecision, :BigFloat, :precision)
          )),
        (:line, 704, :none),
        (:(=), (:call, :maxintfloat, (:(::), :x, :BigFloat)), (:block,
            (:line, 704, :none),
            (:call, :^, (:call, :BigFloat, 2), (:call, :precision, :x))
          )),
        (:line, 705, :none),
        (:(=), (:call, :maxintfloat, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 705, :none),
            (:call, :^, (:call, :BigFloat, 2), (:call, :precision, :BigFloat))
          )),
        (:line, 707, :none),
        (:(=), (:call, :to_mpfr, (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :Nearest
                )))), (:block,
            (:line, 707, :none),
            (:call, :Cint, 0)
          )),
        (:line, 708, :none),
        (:(=), (:call, :to_mpfr, (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :ToZero
                )))), (:block,
            (:line, 708, :none),
            (:call, :Cint, 1)
          )),
        (:line, 709, :none),
        (:(=), (:call, :to_mpfr, (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :Up
                )))), (:block,
            (:line, 709, :none),
            (:call, :Cint, 2)
          )),
        (:line, 710, :none),
        (:(=), (:call, :to_mpfr, (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :Down
                )))), (:block,
            (:line, 710, :none),
            (:call, :Cint, 3)
          )),
        (:line, 711, :none),
        (:(=), (:call, :to_mpfr, (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :FromZero
                )))), (:block,
            (:line, 711, :none),
            (:call, :Cint, 4)
          )),
        (:line, 713, :none),
        (:function, (:call, :from_mpfr, (:(::), :c, :Integer)), (:block,
            (:line, 714, :none),
            (:if, (:call, :(==), :c, 0), (:block,
                (:line, 715, :none),
                (:return, :RoundNearest)
              ), (:block,
                (:line, 716, :none),
                (:if, (:call, :(==), :c, 1), (:block,
                    (:line, 717, :none),
                    (:return, :RoundToZero)
                  ), (:block,
                    (:line, 718, :none),
                    (:if, (:call, :(==), :c, 2), (:block,
                        (:line, 719, :none),
                        (:return, :RoundUp)
                      ), (:block,
                        (:line, 720, :none),
                        (:if, (:call, :(==), :c, 3), (:block,
                            (:line, 721, :none),
                            (:return, :RoundDown)
                          ), (:block,
                            (:line, 722, :none),
                            (:if, (:call, :(==), :c, 4), (:block,
                                (:line, 723, :none),
                                (:return, :RoundFromZero)
                              ), (:block,
                                (:line, 725, :none),
                                (:call, :throw, (:call, :ArgumentError, (:string, "invalid MPFR rounding mode code: ", :c)))
                              ))
                          ))
                      ))
                  ))
              )),
            (:line, 727, :none),
            (:call, :RoundingMode, :c)
          )),
        (:line, 730, :none),
        (:(=), (:call, :rounding_raw, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 730, :none),
            (:ref, :ROUNDING_MODE)
          )),
        (:line, 731, :none),
        (:(=), (:call, :setrounding_raw, (:(::), (:curly, :Type, :BigFloat)), (:(::), :i, :Integer)), (:block,
            (:line, 731, :none),
            (:(=), (:ref, :ROUNDING_MODE), :i)
          )),
        (:line, 733, :none),
        (:(=), (:call, :rounding, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 733, :none),
            (:call, :from_mpfr, (:call, :rounding_raw, :BigFloat))
          )),
        (:line, 734, :none),
        (:(=), (:call, :setrounding, (:(::), (:curly, :Type, :BigFloat)), (:(::), :r, :RoundingMode)), (:block,
            (:line, 734, :none),
            (:call, :setrounding_raw, :BigFloat, (:call, :to_mpfr, :r))
          )),
        (:line, 736, :none),
        (:function, (:call, :copysign, (:(::), :x, :BigFloat), (:(::), :y, :BigFloat)), (:block,
            (:line, 737, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 738, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_copysign
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:&, :y), (:ref, :ROUNDING_MODE)),
            (:line, 739, :none),
            (:return, :z)
          )),
        (:line, 742, :none),
        (:function, (:call, :exponent, (:(::), :x, :BigFloat)), (:block,
            (:line, 743, :none),
            (:if, (:||, (:call, :(==), :x, 0), (:call, :!, (:call, :isfinite, :x))), (:block,
                (:line, 744, :none),
                (:call, :throw, (:call, :DomainError))
              )),
            (:line, 747, :none),
            (:return, (:call, :-, (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_get_exp
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Clong, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)), 1))
          )),
        (:line, 750, :none),
        (:function, (:call, :frexp, (:(::), :x, :BigFloat)), (:block,
            (:line, 751, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 752, :none),
            (:(=), :c, (:call, (:curly, :Ref, :Clong))),
            (:line, 753, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_frexp
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :Clong), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cint), :c, (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 754, :none),
            (:return, (:tuple, :z, (:ref, :c)))
          )),
        (:line, 757, :none),
        (:function, (:call, :significand, (:(::), :x, :BigFloat)), (:block,
            (:line, 758, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 759, :none),
            (:(=), :c, (:call, (:curly, :Ref, :Clong))),
            (:line, 760, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_frexp
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :Clong), (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cint), :c, (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 762, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_mul_si
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Clong, :Int32), (:&, :z), (:&, :z), 2, (:ref, :ROUNDING_MODE)),
            (:line, 763, :none),
            (:return, :z)
          )),
        (:line, 766, :none),
        (:function, (:call, :isinteger, (:(::), :x, :BigFloat)), (:block,
            (:line, 767, :none),
            (:return, (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_integer_p
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)), 0))
          )),
        (:line, 770, :none),
        (:for, (:(=), :f, (:tuple, (:quote, #QuoteNode
                :ceil
              ), (:quote, #QuoteNode
                :floor
              ), (:quote, #QuoteNode
                :trunc
              ))), (:block,
            (:line, 771, :none),
            (:macrocall, Symbol("@eval"), (:block,
                (:line, 772, :none),
                (:function, (:call, (:$, :f), (:(::), :x, :BigFloat)), (:block,
                    (:line, 773, :none),
                    (:(=), :z, (:call, :BigFloat)),
                    (:line, 774, :none),
                    (:ccall, (:tuple, (:$, (:call, :string, (:quote, #QuoteNode
                              :mpfr_
                            ), :f)), (:quote, #QuoteNode
                          :libmpfr
                        )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :x)),
                    (:line, 775, :none),
                    (:return, :z)
                  ))
              ))
          )),
        (:line, 780, :none),
        (:function, (:call, :round, (:(::), :x, :BigFloat)), (:block,
            (:line, 781, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 782, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_rint
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Cint), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 783, :none),
            (:return, :z)
          )),
        (:line, 785, :none),
        (:function, (:call, :round, (:(::), :x, :BigFloat), (:(::), (:curly, :RoundingMode, (:quote, #QuoteNode
                  :NearestTiesAway
                )))), (:block,
            (:line, 786, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 787, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_round
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat)), (:&, :z), (:&, :x)),
            (:line, 788, :none),
            (:return, :z)
          )),
        (:line, 791, :none),
        (:function, (:call, :isinf, (:(::), :x, :BigFloat)), (:block,
            (:line, 792, :none),
            (:return, (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_inf_p
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)), 0))
          )),
        (:line, 795, :none),
        (:function, (:call, :isnan, (:(::), :x, :BigFloat)), (:block,
            (:line, 796, :none),
            (:return, (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                      :mpfr_nan_p
                    ), (:quote, #QuoteNode
                      :libmpfr
                    )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :x)), 0))
          )),
        (:line, 799, :none),
        (:(=), (:call, :isfinite, (:(::), :x, :BigFloat)), (:block,
            (:line, 799, :none),
            (:&&, (:call, :!, (:call, :isinf, :x)), (:call, :!, (:call, :isnan, :x)))
          )),
        (:line, 801, :none),
        (:macrocall, Symbol("@eval"), (:(=), (:call, :typemax, (:(::), (:curly, :Type, :BigFloat))), (:block,
              (:line, 801, :none),
              (:$, (:call, :BigFloat, :Inf))
            ))),
        (:line, 802, :none),
        (:macrocall, Symbol("@eval"), (:(=), (:call, :typemin, (:(::), (:curly, :Type, :BigFloat))), (:block,
              (:line, 802, :none),
              (:$, (:call, :BigFloat, (:call, :-, :Inf)))
            ))),
        (:line, 804, :none),
        (:function, (:call, :nextfloat, (:(::), :x, :BigFloat)), (:block,
            (:line, 805, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 806, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 808, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_nextabove
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :z)), 0),
            (:line, 809, :none),
            (:return, :z)
          )),
        (:line, 812, :none),
        (:function, (:call, :prevfloat, (:(::), :x, :BigFloat)), (:block,
            (:line, 813, :none),
            (:(=), :z, (:call, :BigFloat)),
            (:line, 814, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :z), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 816, :none),
            (:call, :(!=), (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_nextbelow
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat)), (:&, :z)), 0),
            (:line, 817, :none),
            (:return, :z)
          )),
        (:line, 820, :none),
        (:(=), (:call, :eps, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 820, :none),
            (:call, :-, (:call, :nextfloat, (:call, :BigFloat, 1)), (:call, :BigFloat, 1))
          )),
        (:line, 822, :none),
        (:(=), (:call, :realmin, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 822, :none),
            (:call, :nextfloat, (:call, :zero, :BigFloat))
          )),
        (:line, 823, :none),
        (:(=), (:call, :realmax, (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 823, :none),
            (:call, :prevfloat, (:call, :BigFloat, :Inf))
          )),
        (:line, 825, :none),
        (:macrocall, :(Core.@doc), "    setprecision(f::Function, [T=BigFloat,] precision::Integer)\n\nChange the `T` arithmetic precision (in bits) for the duration of `f`.\nIt is logically equivalent to:\n\n    old = precision(BigFloat)\n    setprecision(BigFloat, precision)\n    f()\n    setprecision(BigFloat, old)\n\nOften used as `setprecision(T, precision) do ... end`\n", (:function, (:call, (:curly, :setprecision, :T), (:(::), :f, :Function), (:(::), (:curly, :Type, :T)), (:(::), :prec, :Integer)), (:block,
              (:line, 839, :none),
              (:(=), :old_prec, (:call, :precision, :T)),
              (:line, 840, :none),
              (:call, :setprecision, :T, :prec),
              (:line, 841, :none),
              (:try, (:block,
                  (:line, 842, :none),
                  (:return, (:call, :f))
                ), false, false, (:block,
                  (:line, 844, :none),
                  (:call, :setprecision, :T, :old_prec)
                ))
            ))),
        (:line, 848, :none),
        (:(=), (:call, :setprecision, (:(::), :f, :Function), (:(::), :precision, :Integer)), (:block,
            (:line, 848, :none),
            (:call, :setprecision, :f, :BigFloat, :precision)
          )),
        (:line, 850, :none),
        (:function, (:call, :string, (:(::), :x, :BigFloat)), (:block,
            (:line, 853, :none),
            (:(=), :k, (:call, :ceil, :Int32, (:call, :*, (:call, :precision, :x), 0.3010299956639812))),
            (:line, 854, :none),
            (:(=), :lng, (:call, :+, :k, (:call, :Int32, 8))),
            (:line, 855, :none),
            (:(=), :buf, (:call, (:curly, :Array, :UInt8), (:call, :+, :lng, 1))),
            (:line, 857, :none),
            (:(=), :lng, (:ccall, (:tuple, (:quote, #QuoteNode
                    :mpfr_snprintf
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )), :Int32, (:tuple, (:curly, :Ptr, :UInt8), :Culong, (:curly, :Ptr, :UInt8), (:..., (:curly, :Ptr, :BigFloat))), :buf, (:call, :+, :lng, 1), "%.Re", (:&, :x))),
            (:line, 858, :none),
            (:if, (:call, :<, :lng, (:call, :+, :k, 5)), (:block,
                (:line, 859, :none),
                (:(=), :lng, (:ccall, (:tuple, (:quote, #QuoteNode
                        :mpfr_sprintf
                      ), (:quote, #QuoteNode
                        :libmpfr
                      )), :Int32, (:tuple, (:curly, :Ptr, :UInt8), (:curly, :Ptr, :UInt8), (:..., (:curly, :Ptr, :BigFloat))), :buf, (:string, "%.", :k, "Re"), (:&, :x)))
              ), (:block,
                (:line, 860, :none),
                (:if, (:call, :>, :lng, (:call, :+, :k, 8)), (:block,
                    (:line, 861, :none),
                    (:(=), :buf, (:call, (:curly, :Array, :UInt8), (:call, :+, :lng, 1))),
                    (:line, 862, :none),
                    (:(=), :lng, (:ccall, (:tuple, (:quote, #QuoteNode
                            :mpfr_snprintf
                          ), (:quote, #QuoteNode
                            :libmpfr
                          )), :Int32, (:tuple, (:curly, :Ptr, :UInt8), :Culong, (:curly, :Ptr, :UInt8), (:..., (:curly, :Ptr, :BigFloat))), :buf, (:call, :+, :lng, 1), "%.Re", (:&, :x)))
                  ))
              )),
            (:line, 864, :none),
            (:(=), :n, (:if, (:||, (:comparison, 1, :(<=), :x, :<, 10), (:||, (:comparison, -10, :<, :x, :(<=), -1), (:call, :(==), :x, 0))), (:call, :-, :lng, 4), :lng)),
            (:line, 865, :none),
            (:return, (:call, :String, (:ref, :buf, (:(:), 1, :n))))
          )),
        (:line, 868, :none),
        (:(=), (:call, :print, (:(::), :io, :IO), (:(::), :b, :BigFloat)), (:block,
            (:line, 868, :none),
            (:call, :print, :io, (:call, :string, :b))
          )),
        (:line, 869, :none),
        (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :b, :BigFloat)), (:block,
            (:line, 869, :none),
            (:call, :print, :io, (:call, :string, :b))
          )),
        (:line, 872, :none),
        (:(=), (:call, :get_emax), (:block,
            (:line, 872, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emax
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 873, :none),
        (:(=), (:call, :get_emax_min), (:block,
            (:line, 873, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emax_min
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 874, :none),
        (:(=), (:call, :get_emax_max), (:block,
            (:line, 874, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emax_max
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 876, :none),
        (:(=), (:call, :get_emin), (:block,
            (:line, 876, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emin
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 877, :none),
        (:(=), (:call, :get_emin_min), (:block,
            (:line, 877, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emin_min
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 878, :none),
        (:(=), (:call, :get_emin_max), (:block,
            (:line, 878, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_get_emin_max
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Clong, (:tuple,))
          )),
        (:line, 880, :none),
        (:(=), (:call, :set_emax!, :x), (:block,
            (:line, 880, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set_emax
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Void, (:tuple, :Clong), :x)
          )),
        (:line, 881, :none),
        (:(=), (:call, :set_emin!, :x), (:block,
            (:line, 881, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set_emin
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Void, (:tuple, :Clong), :x)
          )),
        (:line, 883, :none),
        (:function, (:call, (:., :Base, (:quote, #QuoteNode
                :deepcopy_internal
              )), (:(::), :x, :BigFloat), (:(::), :stackdict, :ObjectIdDict)), (:block,
            (:line, 884, :none),
            (:if, (:call, :haskey, :stackdict, :x), (:block,
                (:line, 885, :none),
                (:return, (:ref, :stackdict, :x))
              )),
            (:line, 887, :none),
            (:(=), :N, (:call, :precision, :x)),
            (:line, 888, :none),
            (:(=), :y, (:call, :BigFloat, (:call, :zero, :Clong), (:call, :zero, :Cint), (:call, :zero, :Clong), :C_NULL)),
            (:line, 889, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_init2
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Void, (:tuple, (:curly, :Ptr, :BigFloat), :Clong), (:&, :y), :N),
            (:line, 890, :none),
            (:call, :finalizer, :y, (:call, :cglobal, (:tuple, (:quote, #QuoteNode
                    :mpfr_clear
                  ), (:quote, #QuoteNode
                    :libmpfr
                  )))),
            (:line, 891, :none),
            (:ccall, (:tuple, (:quote, #QuoteNode
                  :mpfr_set
                ), (:quote, #QuoteNode
                  :libmpfr
                )), :Int32, (:tuple, (:curly, :Ptr, :BigFloat), (:curly, :Ptr, :BigFloat), :Int32), (:&, :y), (:&, :x), (:ref, :ROUNDING_MODE)),
            (:line, 893, :none),
            (:(=), (:ref, :stackdict, :x), :y),
            (:line, 894, :none),
            (:return, :y)
          ))
      ))
  ))