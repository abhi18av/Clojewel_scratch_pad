(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :Serializer, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:toplevel, (:import, :Base, :GMP), (:import, :Base, :Bottom), (:import, :Base, :unsafe_convert), (:import, :Base, :uncompressed_ast), (:import, :Base, :datatype_pointerfree)),
        (:line, 6, :none),
        (:import, :Core, :svec),
        (:line, 7, :none),
        (:toplevel, (:using, :Base, :ViewIndex), (:using, :Base, :index_lengths)),
        (:line, 9, :none),
        (:export, :serialize, :deserialize, :SerializationState),
        (:line, 11, :none),
        (:type, true, (:<:, (:curly, :SerializationState, (:<:, :I, :IO)), :AbstractSerializer), (:block,
            (:line, 12, :none),
            (:(::), :io, :I),
            (:line, 13, :none),
            (:(::), :counter, :Int),
            (:line, 14, :none),
            (:(::), :table, :ObjectIdDict),
            (:line, 15, :none),
            (:(=), (:call, :SerializationState, (:(::), :io, :I)), (:block,
                (:line, 15, :none),
                (:call, :new, :io, 0, (:call, :ObjectIdDict))
              ))
          )),
        (:line, 18, :none),
        (:(=), (:call, :SerializationState, (:(::), :io, :IO)), (:block,
            (:line, 18, :none),
            (:call, (:curly, :SerializationState, (:call, :typeof, :io)), :io)
          )),
        (:line, 24, :none),
        (:const, (:(=), :TAGS, (:ref, :Any, :Symbol, :Int8, :UInt8, :Int16, :UInt16, :Int32, :UInt32, :Int64, :UInt64, :Int128, :UInt128, :Float32, :Float64, :Char, :Ptr, :DataType, :Union, :TypeName, :Tuple, :Array, :Expr, :Symbol, :Tuple, :Expr, :LineNumberNode, :Slot, :LabelNode, :GotoNode, :QuoteNode, (:quote, #QuoteNode
                :reserved23
              ), :TypeVar, (:., :Core, (:quote, #QuoteNode
                  :Box
                )), :LambdaInfo, :Module, :Symbol, :Task, :String, :Float16, :SimpleVector, :Symbol, :Method, :GlobalRef, (:tuple,), :Bool, :Any, (:quote, #QuoteNode
                :Any
              ), :Bottom, (:quote, #QuoteNode
                :reserved21
              ), (:quote, #QuoteNode
                :reserved22
              ), :Type, (:quote, #QuoteNode
                :Array
              ), (:quote, #QuoteNode
                :TypeVar
              ), (:quote, #QuoteNode
                :Box
              ), (:quote, #QuoteNode
                :lambda
              ), (:quote, #QuoteNode
                :body
              ), (:quote, #QuoteNode
                :return
              ), (:quote, #QuoteNode
                :call
              ), (:call, :Symbol, "::"), (:quote, #QuoteNode
                :(=)
              ), (:quote, #QuoteNode
                :null
              ), (:quote, #QuoteNode
                :gotoifnot
              ), (:quote, #QuoteNode
                :A
              ), (:quote, #QuoteNode
                :B
              ), (:quote, #QuoteNode
                :C
              ), (:quote, #QuoteNode
                :M
              ), (:quote, #QuoteNode
                :N
              ), (:quote, #QuoteNode
                :T
              ), (:quote, #QuoteNode
                :S
              ), (:quote, #QuoteNode
                :X
              ), (:quote, #QuoteNode
                :Y
              ), (:quote, #QuoteNode
                :a
              ), (:quote, #QuoteNode
                :b
              ), (:quote, #QuoteNode
                :c
              ), (:quote, #QuoteNode
                :d
              ), (:quote, #QuoteNode
                :e
              ), (:quote, #QuoteNode
                :f
              ), (:quote, #QuoteNode
                :g
              ), (:quote, #QuoteNode
                :h
              ), (:quote, #QuoteNode
                :i
              ), (:quote, #QuoteNode
                :j
              ), (:quote, #QuoteNode
                :k
              ), (:quote, #QuoteNode
                :l
              ), (:quote, #QuoteNode
                :m
              ), (:quote, #QuoteNode
                :n
              ), (:quote, #QuoteNode
                :o
              ), (:quote, #QuoteNode
                :p
              ), (:quote, #QuoteNode
                :q
              ), (:quote, #QuoteNode
                :r
              ), (:quote, #QuoteNode
                :s
              ), (:quote, #QuoteNode
                :t
              ), (:quote, #QuoteNode
                :u
              ), (:quote, #QuoteNode
                :v
              ), (:quote, #QuoteNode
                :w
              ), (:quote, #QuoteNode
                :x
              ), (:quote, #QuoteNode
                :y
              ), (:quote, #QuoteNode
                :z
              ), (:quote, #QuoteNode
                :add_int
              ), (:quote, #QuoteNode
                :sub_int
              ), (:quote, #QuoteNode
                :mul_int
              ), (:quote, #QuoteNode
                :add_float
              ), (:quote, #QuoteNode
                :sub_float
              ), (:quote, #QuoteNode
                :mul_float
              ), (:quote, #QuoteNode
                :unbox
              ), (:quote, #QuoteNode
                :box
              ), (:quote, #QuoteNode
                :eq_int
              ), (:quote, #QuoteNode
                :slt_int
              ), (:quote, #QuoteNode
                :sle_int
              ), (:quote, #QuoteNode
                :ne_int
              ), (:quote, #QuoteNode
                :arrayset
              ), (:quote, #QuoteNode
                :arrayref
              ), (:quote, #QuoteNode
                :Core
              ), (:quote, #QuoteNode
                :Base
              ), (:call, :svec), (:curly, :Tuple), (:quote, #QuoteNode
                :reserved17
              ), (:quote, #QuoteNode
                :reserved18
              ), (:quote, #QuoteNode
                :reserved19
              ), (:quote, #QuoteNode
                :reserved20
              ), false, true, :nothing, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))),
        (:line, 53, :none),
        (:const, (:(=), :ser_version, 4)),
        (:line, 55, :none),
        (:const, (:(=), :NTAGS, (:call, :length, :TAGS))),
        (:line, 57, :none),
        (:function, (:call, :sertag, (:(::), :v, :ANY)), (:block,
            (:line, 58, :none),
            (:(=), :ptr, (:call, :pointer_from_objref, :v)),
            (:line, 59, :none),
            (:(=), :ptags, (:call, :convert, (:curly, :Ptr, (:curly, :Ptr, :Void)), (:call, :pointer, :TAGS))),
            (:line, 60, :none),
            (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:(:), 1, :NTAGS)), (:block,
                  (:line, 61, :none),
                  (:&&, (:call, :(==), :ptr, (:call, :unsafe_load, :ptags, :i)), (:return, (:call, :%, (:call, :+, :i, 1), :Int32)))
                ))),
            (:line, 63, :none),
            (:return, (:call, :Int32, -1))
          )),
        (:line, 65, :none),
        (:(=), (:call, :desertag, (:(::), :i, :Int32)), (:block,
            (:line, 65, :none),
            (:ref, :TAGS, (:call, :-, :i, 1))
          )),
        (:line, 68, :none),
        (:const, (:(=), :VALUE_TAGS, (:call, :sertag, (:tuple,)))),
        (:line, 69, :none),
        (:const, (:(=), :ZERO_TAG, (:call, :sertag, 0))),
        (:line, 70, :none),
        (:const, (:(=), :TRUE_TAG, (:call, :sertag, true))),
        (:line, 71, :none),
        (:const, (:(=), :FALSE_TAG, (:call, :sertag, false))),
        (:line, 72, :none),
        (:const, (:(=), :EMPTYTUPLE_TAG, (:call, :sertag, (:tuple,)))),
        (:line, 73, :none),
        (:const, (:(=), :TUPLE_TAG, (:call, :sertag, :Tuple))),
        (:line, 74, :none),
        (:const, (:(=), :LONGTUPLE_TAG, (:call, :Int32, (:call, :+, (:call, :sertag, :Expr), 2)))),
        (:line, 75, :none),
        (:const, (:(=), :SIMPLEVECTOR_TAG, (:call, :sertag, :SimpleVector))),
        (:line, 76, :none),
        (:const, (:(=), :SYMBOL_TAG, (:call, :sertag, :Symbol))),
        (:line, 77, :none),
        (:const, (:(=), :LONGSYMBOL_TAG, (:call, :Int32, (:call, :+, (:call, :sertag, :Expr), 1)))),
        (:line, 78, :none),
        (:const, (:(=), :ARRAY_TAG, (:call, :sertag, :Array))),
        (:line, 79, :none),
        (:const, (:(=), :UNDEFREF_TAG, (:call, :Int32, (:call, :+, (:call, :sertag, :Module), 1)))),
        (:line, 80, :none),
        (:const, (:(=), :BACKREF_TAG, (:call, :Int32, (:call, :+, (:call, :sertag, :SimpleVector), 1)))),
        (:line, 81, :none),
        (:const, (:(=), :EXPR_TAG, (:call, :sertag, :Expr))),
        (:line, 82, :none),
        (:const, (:(=), :LONGEXPR_TAG, (:call, :Int32, (:call, :+, (:call, :sertag, :Expr), 3)))),
        (:line, 83, :none),
        (:const, (:(=), :MODULE_TAG, (:call, :sertag, :Module))),
        (:line, 84, :none),
        (:const, (:(=), :LAMBDAINFO_TAG, (:call, :sertag, :LambdaInfo))),
        (:line, 85, :none),
        (:const, (:(=), :METHOD_TAG, (:call, :sertag, :Method))),
        (:line, 86, :none),
        (:const, (:(=), :TASK_TAG, (:call, :sertag, :Task))),
        (:line, 87, :none),
        (:const, (:(=), :DATATYPE_TAG, (:call, :sertag, :DataType))),
        (:line, 88, :none),
        (:const, (:(=), :TYPENAME_TAG, (:call, :sertag, :TypeName))),
        (:line, 89, :none),
        (:const, (:(=), :INT_TAG, (:call, :sertag, :Int))),
        (:line, 90, :none),
        (:const, (:(=), :GLOBALREF_TAG, (:call, :sertag, :GlobalRef))),
        (:line, 92, :none),
        (:(=), (:call, :writetag, (:(::), :s, :IO), :tag), (:block,
            (:line, 92, :none),
            (:call, :write, :s, (:call, :UInt8, :tag))
          )),
        (:line, 94, :none),
        (:function, (:call, :write_as_tag, (:(::), :s, :IO), :tag), (:block,
            (:line, 95, :none),
            (:&&, (:call, :<, :tag, :VALUE_TAGS), (:call, :write, :s, (:call, :UInt8, 0))),
            (:line, 96, :none),
            (:call, :write, :s, (:call, :UInt8, :tag))
          )),
        (:line, 100, :none),
        (:function, (:call, :serialize_cycle, (:(::), :s, :AbstractSerializer), :x), (:block,
            (:line, 101, :none),
            (:if, (:&&, (:call, :!, (:call, :isimmutable, :x)), (:call, :!, (:call, :datatype_pointerfree, (:call, :typeof, :x)))), (:block,
                (:line, 102, :none),
                (:(=), :offs, (:call, :get, (:., :s, (:quote, #QuoteNode
                        :table
                      )), :x, -1)),
                (:line, 103, :none),
                (:if, (:call, :(!=), :offs, -1), (:block,
                    (:line, 104, :none),
                    (:call, :writetag, (:., :s, (:quote, #QuoteNode
                          :io
                        )), :BACKREF_TAG),
                    (:line, 105, :none),
                    (:call, :write, (:., :s, (:quote, #QuoteNode
                          :io
                        )), (:call, :Int, :offs)),
                    (:line, 106, :none),
                    (:return, true)
                  )),
                (:line, 108, :none),
                (:(=), (:ref, (:., :s, (:quote, #QuoteNode
                        :table
                      )), :x), (:., :s, (:quote, #QuoteNode
                      :counter
                    ))),
                (:line, 109, :none),
                (:+=, (:., :s, (:quote, #QuoteNode
                      :counter
                    )), 1)
              )),
            (:line, 111, :none),
            (:return, false)
          )),
        (:line, 114, :none),
        (:function, (:call, :reset_state, (:(::), :s, :AbstractSerializer)), (:block,
            (:line, 115, :none),
            (:(=), (:., :s, (:quote, #QuoteNode
                  :counter
                )), 0),
            (:line, 116, :none),
            (:(=), (:., :s, (:quote, #QuoteNode
                  :table
                )), (:call, :ObjectIdDict)),
            (:line, 117, :none),
            :s
          )),
        (:line, 120, :none),
        (:(=), (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :x, :Bool)), (:block,
            (:line, 120, :none),
            (:if, :x, (:call, :writetag, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :TRUE_TAG), (:call, :writetag, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :FALSE_TAG))
          )),
        (:line, 123, :none),
        (:(=), (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :p, :Ptr)), (:block,
            (:line, 123, :none),
            (:call, :serialize_any, :s, (:call, :oftype, :p, :C_NULL))
          )),
        (:line, 125, :none),
        (:(=), (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Tuple))), (:block,
            (:line, 125, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :EMPTYTUPLE_TAG)
          )),
        (:line, 127, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :Tuple)), (:block,
            (:line, 128, :none),
            (:(=), :l, (:call, :length, :t)),
            (:line, 129, :none),
            (:if, (:call, :(<=), :l, 255), (:block,
                (:line, 130, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :TUPLE_TAG),
                (:line, 131, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :UInt8, :l))
              ), (:block,
                (:line, 133, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :LONGTUPLE_TAG),
                (:line, 134, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :Int32, :l))
              )),
            (:line, 136, :none),
            (:for, (:(=), :x, :t), (:block,
                (:line, 137, :none),
                (:call, :serialize, :s, :x)
              ))
          )),
        (:line, 141, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :v, :SimpleVector)), (:block,
            (:line, 142, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :SIMPLEVECTOR_TAG),
            (:line, 143, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), (:call, :Int32, (:call, :length, :v))),
            (:line, 144, :none),
            (:for, (:(=), :x, :v), (:block,
                (:line, 145, :none),
                (:call, :serialize, :s, :x)
              ))
          )),
        (:line, 149, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :x, :Symbol)), (:block,
            (:line, 150, :none),
            (:(=), :tag, (:call, :sertag, :x)),
            (:line, 151, :none),
            (:if, (:call, :>, :tag, 0), (:block,
                (:line, 152, :none),
                (:return, (:call, :write_as_tag, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :tag))
              )),
            (:line, 154, :none),
            (:(=), :pname, (:call, :unsafe_convert, (:curly, :Ptr, :UInt8), :x)),
            (:line, 155, :none),
            (:(=), :ln, (:call, :Int, (:ccall, (:quote, #QuoteNode
                    :strlen
                  ), :Csize_t, (:tuple, :Cstring), :pname))),
            (:line, 156, :none),
            (:if, (:call, :(<=), :ln, 255), (:block,
                (:line, 157, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :SYMBOL_TAG),
                (:line, 158, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :UInt8, :ln))
              ), (:block,
                (:line, 160, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :LONGSYMBOL_TAG),
                (:line, 161, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :Int32, :ln))
              )),
            (:line, 163, :none),
            (:call, :unsafe_write, (:., :s, (:quote, #QuoteNode
                  :io
                )), :pname, :ln)
          )),
        (:line, 166, :none),
        (:function, (:call, :serialize_array_data, (:(::), :s, :IO), :a), (:block,
            (:line, 167, :none),
            (:(=), :elty, (:call, :eltype, :a)),
            (:line, 168, :none),
            (:if, (:&&, (:call, :(===), :elty, :Bool), (:call, :!, (:call, :isempty, :a))), (:block,
                (:line, 169, :none),
                (:(=), :last, (:ref, :a, 1)),
                (:line, 170, :none),
                (:(=), :count, 1),
                (:line, 171, :none),
                (:for, (:(=), :i, (:(:), 2, (:call, :length, :a))), (:block,
                    (:line, 172, :none),
                    (:if, (:||, (:call, :(!=), (:ref, :a, :i), :last), (:call, :(==), :count, 127)), (:block,
                        (:line, 173, :none),
                        (:call, :write, :s, (:call, :UInt8, (:call, :|, (:call, :<<, (:call, :UInt8, :last), 7), :count))),
                        (:line, 174, :none),
                        (:(=), :last, (:ref, :a, :i)),
                        (:line, 175, :none),
                        (:(=), :count, 1)
                      ), (:block,
                        (:line, 177, :none),
                        (:+=, :count, 1)
                      ))
                  )),
                (:line, 180, :none),
                (:call, :write, :s, (:call, :UInt8, (:call, :|, (:call, :<<, (:call, :UInt8, :last), 7), :count)))
              ), (:block,
                (:line, 182, :none),
                (:call, :write, :s, :a)
              ))
          )),
        (:line, 186, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :a, :Array)), (:block,
            (:line, 187, :none),
            (:(=), :elty, (:call, :eltype, :a)),
            (:line, 188, :none),
            (:if, (:call, :!, (:call, :isbits, :elty)), (:block,
                (:line, 192, :none),
                (:(=), :offs, (:call, :get, (:., :s, (:quote, #QuoteNode
                        :table
                      )), :a, -1)),
                (:line, 193, :none),
                (:if, (:call, :(!=), :offs, -1), (:block,
                    (:line, 194, :none),
                    (:call, :writetag, (:., :s, (:quote, #QuoteNode
                          :io
                        )), :BACKREF_TAG),
                    (:line, 195, :none),
                    (:call, :write, (:., :s, (:quote, #QuoteNode
                          :io
                        )), (:call, :Int, :offs)),
                    (:line, 196, :none),
                    (:return, nothing)
                  ))
              )),
            (:line, 199, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :ARRAY_TAG),
            (:line, 200, :none),
            (:if, (:call, :(!==), :elty, :UInt8), (:block,
                (:line, 201, :none),
                (:call, :serialize, :s, :elty)
              )),
            (:line, 203, :none),
            (:if, (:call, :!, (:call, :isbits, :elty)), (:block,
                (:line, 204, :none),
                (:(=), (:ref, (:., :s, (:quote, #QuoteNode
                        :table
                      )), :a), (:., :s, (:quote, #QuoteNode
                      :counter
                    ))),
                (:line, 205, :none),
                (:+=, (:., :s, (:quote, #QuoteNode
                      :counter
                    )), 1)
              )),
            (:line, 207, :none),
            (:if, (:call, :(!=), (:call, :ndims, :a), 1), (:block,
                (:line, 208, :none),
                (:call, :serialize, :s, (:call, :size, :a))
              ), (:block,
                (:line, 210, :none),
                (:call, :serialize, :s, (:call, :length, :a))
              )),
            (:line, 212, :none),
            (:if, (:call, :isbits, :elty), (:block,
                (:line, 213, :none),
                (:call, :serialize_array_data, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :a)
              ), (:block,
                (:line, 215, :none),
                (:for, (:(=), :i, (:call, :eachindex, :a)), (:block,
                    (:line, 216, :none),
                    (:if, (:call, :isdefined, :a, :i), (:block,
                        (:line, 217, :none),
                        (:call, :serialize, :s, (:ref, :a, :i))
                      ), (:block,
                        (:line, 219, :none),
                        (:call, :writetag, (:., :s, (:quote, #QuoteNode
                              :io
                            )), :UNDEFREF_TAG)
                      ))
                  ))
              ))
          )),
        (:line, 225, :none),
        (:function, (:call, (:curly, :serialize, :T, :N, (:<:, :A, :Array)), (:(::), :s, :AbstractSerializer), (:(::), :a, (:curly, :SubArray, :T, :N, :A))), (:block,
            (:line, 226, :none),
            (:(=), :b, (:call, :trimmedsubarray, :a)),
            (:line, 227, :none),
            (:call, :serialize_any, :s, :b)
          )),
        (:line, 230, :none),
        (:function, (:call, (:curly, :trimmedsubarray, :T, :N, (:<:, :A, :Array)), (:(::), :V, (:curly, :SubArray, :T, :N, :A))), (:block,
            (:line, 231, :none),
            (:(=), :dest, (:call, (:curly, :Array, (:call, :eltype, :V)), (:call, :trimmedsize, :V))),
            (:line, 232, :none),
            (:call, :copy!, :dest, :V),
            (:line, 233, :none),
            (:call, :_trimmedsubarray, :dest, :V, (:tuple,), (:..., (:., :V, (:quote, #QuoteNode
                    :indexes
                  ))))
          )),
        (:line, 236, :none),
        (:(=), (:call, :trimmedsize, :V), (:block,
            (:line, 236, :none),
            (:call, :index_lengths, (:., :V, (:quote, #QuoteNode
                  :parent
                )), (:..., (:., :V, (:quote, #QuoteNode
                    :indexes
                  ))))
          )),
        (:line, 238, :none),
        (:function, (:call, (:curly, :_trimmedsubarray, :T, :N, :P, :I, :LD), :A, (:(::), :V, (:curly, :SubArray, :T, :N, :P, :I, :LD)), :newindexes), (:block,
            (:line, 239, :none),
            (:&&, :LD, (:return, (:call, (:curly, :SubArray, :T, :N, :P, :I, :LD), :A, :newindexes, (:call, (:., :Base, (:quote, #QuoteNode
                        :compute_offset1
                      )), :A, 1, :newindexes), 1))),
            (:line, 240, :none),
            (:call, (:curly, :SubArray, :T, :N, :P, :I, :LD), :A, :newindexes, 0, 0)
          )),
        (:line, 242, :none),
        (:(=), (:call, :_trimmedsubarray, :A, :V, :newindexes, (:(::), :index, :ViewIndex), (:..., :indexes)), (:block,
            (:line, 242, :none),
            (:call, :_trimmedsubarray, :A, :V, (:tuple, (:..., :newindexes), (:call, :trimmedindex, (:., :V, (:quote, #QuoteNode
                      :parent
                    )), (:call, :+, (:call, :length, :newindexes), 1), :index)), (:..., :indexes))
          )),
        (:line, 244, :none),
        (:(=), (:call, :trimmedindex, :P, :d, (:(::), :i, :Real)), (:block,
            (:line, 244, :none),
            (:call, :oftype, :i, 1)
          )),
        (:line, 245, :none),
        (:(=), (:call, :trimmedindex, :P, :d, (:(::), :i, :Colon)), (:block,
            (:line, 245, :none),
            :i
          )),
        (:line, 246, :none),
        (:(=), (:call, :trimmedindex, :P, :d, (:(::), :i, :AbstractArray)), (:block,
            (:line, 246, :none),
            (:call, :oftype, :i, (:call, :reshape, (:call, :linearindices, :i), (:call, :indices, :i)))
          )),
        (:line, 248, :none),
        (:function, (:call, (:curly, :serialize, (:<:, :T, :AbstractString)), (:(::), :s, :AbstractSerializer), (:(::), :ss, (:curly, :SubString, :T))), (:block,
            (:line, 250, :none),
            (:call, :serialize_any, :s, (:call, :convert, (:curly, :SubString, :T), (:call, :convert, :T, :ss)))
          )),
        (:line, 254, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :r, :Regex)), (:block,
            (:line, 255, :none),
            (:call, :serialize_type, :s, (:call, :typeof, :r)),
            (:line, 256, :none),
            (:call, :serialize, :s, (:., :r, (:quote, #QuoteNode
                  :pattern
                ))),
            (:line, 257, :none),
            (:call, :serialize, :s, (:., :r, (:quote, #QuoteNode
                  :compile_options
                ))),
            (:line, 258, :none),
            (:call, :serialize, :s, (:., :r, (:quote, #QuoteNode
                  :match_options
                )))
          )),
        (:line, 261, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :n, :BigInt)), (:block,
            (:line, 262, :none),
            (:call, :serialize_type, :s, :BigInt),
            (:line, 263, :none),
            (:call, :serialize, :s, (:call, :base, 62, :n))
          )),
        (:line, 266, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :n, :BigFloat)), (:block,
            (:line, 267, :none),
            (:call, :serialize_type, :s, :BigFloat),
            (:line, 268, :none),
            (:call, :serialize, :s, (:call, :string, :n))
          )),
        (:line, 271, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :ex, :Expr)), (:block,
            (:line, 272, :none),
            (:&&, (:call, :serialize_cycle, :s, :ex), (:return, nothing)),
            (:line, 273, :none),
            (:(=), :l, (:call, :length, (:., :ex, (:quote, #QuoteNode
                    :args
                  )))),
            (:line, 274, :none),
            (:if, (:call, :(<=), :l, 255), (:block,
                (:line, 275, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :EXPR_TAG),
                (:line, 276, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :UInt8, :l))
              ), (:block,
                (:line, 278, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :LONGEXPR_TAG),
                (:line, 279, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :Int32, :l))
              )),
            (:line, 281, :none),
            (:call, :serialize, :s, (:., :ex, (:quote, #QuoteNode
                  :head
                ))),
            (:line, 282, :none),
            (:call, :serialize, :s, (:., :ex, (:quote, #QuoteNode
                  :typ
                ))),
            (:line, 283, :none),
            (:for, (:(=), :a, (:., :ex, (:quote, #QuoteNode
                    :args
                  ))), (:block,
                (:line, 284, :none),
                (:call, :serialize, :s, :a)
              ))
          )),
        (:line, 288, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :Dict)), (:block,
            (:line, 289, :none),
            (:&&, (:call, :serialize_cycle, :s, :t), (:return, nothing)),
            (:line, 290, :none),
            (:call, :serialize_type, :s, (:call, :typeof, :t)),
            (:line, 291, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), (:call, :Int32, (:call, :length, :t))),
            (:line, 292, :none),
            (:for, (:(=), (:tuple, :k, :v), :t), (:block,
                (:line, 293, :none),
                (:call, :serialize, :s, :k),
                (:line, 294, :none),
                (:call, :serialize, :s, :v)
              ))
          )),
        (:line, 298, :none),
        (:function, (:call, :serialize_mod_names, (:(::), :s, :AbstractSerializer), (:(::), :m, :Module)), (:block,
            (:line, 299, :none),
            (:(=), :p, (:call, :module_parent, :m)),
            (:line, 300, :none),
            (:if, (:call, :(!==), :m, :p), (:block,
                (:line, 301, :none),
                (:call, :serialize_mod_names, :s, :p),
                (:line, 302, :none),
                (:call, :serialize, :s, (:call, :module_name, :m))
              ))
          )),
        (:line, 306, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :m, :Module)), (:block,
            (:line, 307, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :MODULE_TAG),
            (:line, 308, :none),
            (:call, :serialize_mod_names, :s, :m),
            (:line, 309, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :EMPTYTUPLE_TAG)
          )),
        (:line, 313, :none),
        (:const, (:(=), :object_numbers, (:call, :WeakKeyDict))),
        (:line, 314, :none),
        (:(=), :obj_number_salt, 0),
        (:line, 315, :none),
        (:function, (:call, :object_number, (:(::), :l, :ANY)), (:block,
            (:line, 316, :none),
            (:global, :obj_number_salt, :object_numbers),
            (:line, 317, :none),
            (:if, (:call, :haskey, :object_numbers, :l), (:block,
                (:line, 318, :none),
                (:return, (:ref, :object_numbers, :l))
              )),
            (:line, 322, :none),
            (:(=), :ln, (:call, :+, :obj_number_salt, (:call, :<<, (:call, :UInt64, (:call, :myid)), 44))),
            (:line, 323, :none),
            (:+=, :obj_number_salt, 1),
            (:line, 324, :none),
            (:(=), (:ref, :object_numbers, :l), :ln),
            (:line, 325, :none),
            (:return, (:(::), :ln, :UInt64))
          )),
        (:line, 328, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :meth, :Method)), (:block,
            (:line, 329, :none),
            (:&&, (:call, :serialize_cycle, :s, :meth), (:return, nothing)),
            (:line, 330, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :METHOD_TAG),
            (:line, 331, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), (:call, :object_number, :meth)),
            (:line, 332, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :module
                ))),
            (:line, 333, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :name
                ))),
            (:line, 334, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :file
                ))),
            (:line, 335, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :line
                ))),
            (:line, 336, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :sig
                ))),
            (:line, 337, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :tvars
                ))),
            (:line, 338, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :ambig
                ))),
            (:line, 339, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :isstaged
                ))),
            (:line, 340, :none),
            (:call, :serialize, :s, (:., :meth, (:quote, #QuoteNode
                  :lambda_template
                ))),
            (:line, 341, :none),
            :nothing
          )),
        (:line, 344, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :linfo, :LambdaInfo)), (:block,
            (:line, 345, :none),
            (:&&, (:call, :serialize_cycle, :s, :linfo), (:return, nothing)),
            (:line, 346, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :LAMBDAINFO_TAG),
            (:line, 347, :none),
            (:call, :serialize, :s, (:call, :uncompressed_ast, :linfo)),
            (:line, 348, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :slotnames
                ))),
            (:line, 349, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :slottypes
                ))),
            (:line, 350, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :slotflags
                ))),
            (:line, 351, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :ssavaluetypes
                ))),
            (:line, 352, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :sparam_syms
                ))),
            (:line, 353, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :sparam_vals
                ))),
            (:line, 354, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :rettype
                ))),
            (:line, 355, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :specTypes
                ))),
            (:line, 356, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :inferred
                ))),
            (:line, 357, :none),
            (:if, (:call, :isdefined, :linfo, (:quote, #QuoteNode
                  :def
                )), (:block,
                (:line, 358, :none),
                (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                      :def
                    )))
              ), (:block,
                (:line, 360, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :UNDEFREF_TAG)
              )),
            (:line, 362, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :pure
                ))),
            (:line, 363, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :nargs
                ))),
            (:line, 364, :none),
            (:call, :serialize, :s, (:., :linfo, (:quote, #QuoteNode
                  :isva
                )))
          )),
        (:line, 367, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :Task)), (:block,
            (:line, 368, :none),
            (:&&, (:call, :serialize_cycle, :s, :t), (:return, nothing)),
            (:line, 369, :none),
            (:if, (:&&, (:call, :istaskstarted, :t), (:call, :!, (:call, :istaskdone, :t))), (:block,
                (:line, 370, :none),
                (:call, :error, "cannot serialize a running Task")
              )),
            (:line, 372, :none),
            (:(=), :state, (:vect, (:., :t, (:quote, #QuoteNode
                    :code
                  )), (:., :t, (:quote, #QuoteNode
                    :storage
                  )), (:if, (:||, (:call, :(==), (:., :t, (:quote, #QuoteNode
                          :state
                        )), (:quote, #QuoteNode
                        :queued
                      )), (:call, :(==), (:., :t, (:quote, #QuoteNode
                          :state
                        )), (:quote, #QuoteNode
                        :runnable
                      ))), (:quote, #QuoteNode
                    :runnable
                  ), (:., :t, (:quote, #QuoteNode
                      :state
                    ))), (:., :t, (:quote, #QuoteNode
                    :result
                  )), (:., :t, (:quote, #QuoteNode
                    :exception
                  )))),
            (:line, 377, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :TASK_TAG),
            (:line, 378, :none),
            (:for, (:(=), :fld, :state), (:block,
                (:line, 379, :none),
                (:call, :serialize, :s, :fld)
              ))
          )),
        (:line, 383, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :g, :GlobalRef)), (:block,
            (:line, 384, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :GLOBALREF_TAG),
            (:line, 385, :none),
            (:if, (:&&, (:call, :(===), (:., :g, (:quote, #QuoteNode
                      :mod
                    )), :Main), (:&&, (:call, :isdefined, (:., :g, (:quote, #QuoteNode
                        :mod
                      )), (:., :g, (:quote, #QuoteNode
                        :name
                      ))), (:call, :isconst, (:., :g, (:quote, #QuoteNode
                        :mod
                      )), (:., :g, (:quote, #QuoteNode
                        :name
                      ))))), (:block,
                (:line, 386, :none),
                (:(=), :v, (:call, :getfield, (:., :g, (:quote, #QuoteNode
                        :mod
                      )), (:., :g, (:quote, #QuoteNode
                        :name
                      )))),
                (:line, 387, :none),
                (:if, (:&&, (:call, :isa, :v, :DataType), (:&&, (:call, :(===), :v, (:., (:., :v, (:quote, #QuoteNode
                              :name
                            )), (:quote, #QuoteNode
                            :primary
                          ))), (:call, :should_send_whole_type, :s, :v))), (:block,
                    (:line, 390, :none),
                    (:call, :write, (:., :s, (:quote, #QuoteNode
                          :io
                        )), (:call, :UInt8, 1)),
                    (:line, 391, :none),
                    (:call, :serialize, :s, :v),
                    (:line, 392, :none),
                    (:return, nothing)
                  ))
              )),
            (:line, 395, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), (:call, :UInt8, 0)),
            (:line, 396, :none),
            (:call, :serialize, :s, (:., :g, (:quote, #QuoteNode
                  :mod
                ))),
            (:line, 397, :none),
            (:call, :serialize, :s, (:., :g, (:quote, #QuoteNode
                  :name
                )))
          )),
        (:line, 401, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :TypeName)), (:block,
            (:line, 402, :none),
            (:&&, (:call, :serialize_cycle, :s, :t), (:return, nothing)),
            (:line, 403, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :TYPENAME_TAG),
            (:line, 404, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), (:call, :object_number, :t)),
            (:line, 405, :none),
            (:call, :serialize_typename, :s, :t)
          )),
        (:line, 408, :none),
        (:function, (:call, :serialize_typename, (:(::), :s, :AbstractSerializer), (:(::), :t, :TypeName)), (:block,
            (:line, 409, :none),
            (:call, :serialize, :s, (:., :t, (:quote, #QuoteNode
                  :name
                ))),
            (:line, 410, :none),
            (:call, :serialize, :s, (:., :t, (:quote, #QuoteNode
                  :names
                ))),
            (:line, 411, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :super
                ))),
            (:line, 412, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :parameters
                ))),
            (:line, 413, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :types
                ))),
            (:line, 414, :none),
            (:call, :serialize, :s, (:call, :isdefined, (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :instance
                ))),
            (:line, 415, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :abstract
                ))),
            (:line, 416, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :mutable
                ))),
            (:line, 417, :none),
            (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                    :primary
                  )), (:quote, #QuoteNode
                  :ninitialized
                ))),
            (:line, 418, :none),
            (:if, (:call, :isdefined, :t, (:quote, #QuoteNode
                  :mt
                )), (:block,
                (:line, 419, :none),
                (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                        :mt
                      )), (:quote, #QuoteNode
                      :name
                    ))),
                (:line, 420, :none),
                (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                        :mt
                      )), (:quote, #QuoteNode
                      :defs
                    ))),
                (:line, 421, :none),
                (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                        :mt
                      )), (:quote, #QuoteNode
                      :max_args
                    ))),
                (:line, 422, :none),
                (:if, (:call, :isdefined, (:., :t, (:quote, #QuoteNode
                        :mt
                      )), (:quote, #QuoteNode
                      :kwsorter
                    )), (:block,
                    (:line, 423, :none),
                    (:call, :serialize, :s, (:., (:., :t, (:quote, #QuoteNode
                            :mt
                          )), (:quote, #QuoteNode
                          :kwsorter
                        )))
                  ), (:block,
                    (:line, 425, :none),
                    (:call, :writetag, (:., :s, (:quote, #QuoteNode
                          :io
                        )), :UNDEFREF_TAG)
                  ))
              ), (:block,
                (:line, 428, :none),
                (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :UNDEFREF_TAG)
              )),
            (:line, 430, :none),
            :nothing
          )),
        (:line, 434, :none),
        (:function, (:call, :should_send_whole_type, :s, (:(::), :t, :DataType)), (:block,
            (:line, 435, :none),
            (:(=), :tn, (:., :t, (:quote, #QuoteNode
                  :name
                ))),
            (:line, 436, :none),
            (:if, (:call, :isdefined, :tn, (:quote, #QuoteNode
                  :mt
                )), (:block,
                (:line, 439, :none),
                (:(=), :name, (:., (:., :tn, (:quote, #QuoteNode
                        :mt
                      )), (:quote, #QuoteNode
                      :name
                    ))),
                (:line, 440, :none),
                (:(=), :mod, (:., :tn, (:quote, #QuoteNode
                      :module
                    ))),
                (:line, 441, :none),
                (:(=), :isanonfunction, (:&&, (:call, :(===), :mod, :Main), (:&&, (:call, :(===), (:., :t, (:quote, #QuoteNode
                            :super
                          )), :Function), (:&&, (:call, :(==), (:call, :unsafe_load, (:call, :unsafe_convert, (:curly, :Ptr, :UInt8), (:., :tn, (:quote, #QuoteNode
                                  :name
                                )))), (:call, :UInt8, '#')), (:||, (:call, :!, (:call, :isdefined, :mod, :name)), (:call, :(!=), :t, (:call, :typeof, (:call, :getfield, :mod, :name)))))))),
                (:line, 448, :none),
                (:return, (:||, (:call, :(===), :mod, :__deserialized_types__), :isanonfunction))
              )),
            (:line, 450, :none),
            (:return, false)
          )),
        (:line, 455, :none),
        (:function, (:call, :serialize_type_data, :s, (:(::), :t, :DataType), (:(::), :type_itself, :Bool)), (:block,
            (:line, 456, :none),
            (:(=), :whole, (:call, :should_send_whole_type, :s, :t)),
            (:line, 457, :none),
            (:(=), :form, (:if, :type_itself, (:call, :UInt8, 0), (:call, :UInt8, 1))),
            (:line, 458, :none),
            (:if, :whole, (:block,
                (:line, 459, :none),
                (:|=, :form, (:call, :UInt8, 2))
              )),
            (:line, 461, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :DATATYPE_TAG),
            (:line, 462, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), :form),
            (:line, 463, :none),
            (:if, :whole, (:block,
                (:line, 464, :none),
                (:call, :serialize, :s, (:., :t, (:quote, #QuoteNode
                      :name
                    )))
              ), (:block,
                (:line, 466, :none),
                (:(=), :tname, (:., (:., :t, (:quote, #QuoteNode
                        :name
                      )), (:quote, #QuoteNode
                      :name
                    ))),
                (:line, 467, :none),
                (:call, :serialize, :s, :tname),
                (:line, 468, :none),
                (:(=), :mod, (:., (:., :t, (:quote, #QuoteNode
                        :name
                      )), (:quote, #QuoteNode
                      :module
                    ))),
                (:line, 469, :none),
                (:call, :serialize, :s, :mod)
              )),
            (:line, 471, :none),
            (:if, (:call, :!, (:call, :isempty, (:., :t, (:quote, #QuoteNode
                      :parameters
                    )))), (:block,
                (:line, 472, :none),
                (:if, (:if, :whole, (:call, :(===), :t, (:., (:., :t, (:quote, #QuoteNode
                            :name
                          )), (:quote, #QuoteNode
                          :primary
                        ))), (:&&, (:call, :isdefined, :mod, :tname), (:call, :(===), :t, (:call, :getfield, :mod, :tname)))), (:block,
                    (:line, 473, :none),
                    (:call, :serialize, :s, (:call, :svec))
                  ), (:block,
                    (:line, 475, :none),
                    (:call, :serialize, :s, (:., :t, (:quote, #QuoteNode
                          :parameters
                        )))
                  ))
              ))
          )),
        (:line, 480, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :DataType)), (:block,
            (:line, 481, :none),
            (:(=), :tag, (:call, :sertag, :t)),
            (:line, 482, :none),
            (:&&, (:call, :>, :tag, 0), (:return, (:call, :write_as_tag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :tag))),
            (:line, 483, :none),
            (:if, (:call, :(===), :t, :Tuple), (:block,
                (:line, 488, :none),
                (:return, (:call, :write_as_tag, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :TUPLE_TAG))
              )),
            (:line, 490, :none),
            (:call, :serialize_type_data, :s, :t, true)
          )),
        (:line, 493, :none),
        (:function, (:call, :serialize_type, (:(::), :s, :AbstractSerializer), (:(::), :t, :DataType)), (:block,
            (:line, 494, :none),
            (:(=), :tag, (:call, :sertag, :t)),
            (:line, 495, :none),
            (:&&, (:call, :>, :tag, 0), (:return, (:call, :writetag, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :tag))),
            (:line, 496, :none),
            (:call, :serialize_type_data, :s, :t, false)
          )),
        (:line, 499, :none),
        (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :n, :Int)), (:block,
            (:line, 500, :none),
            (:if, (:comparison, 0, :(<=), :n, :(<=), 32), (:block,
                (:line, 501, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), (:call, :UInt8, (:call, :+, :ZERO_TAG, :n))),
                (:line, 502, :none),
                (:return, nothing)
              )),
            (:line, 504, :none),
            (:call, :writetag, (:., :s, (:quote, #QuoteNode
                  :io
                )), :INT_TAG),
            (:line, 505, :none),
            (:call, :write, (:., :s, (:quote, #QuoteNode
                  :io
                )), :n)
          )),
        (:line, 508, :none),
        (:(=), (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :x, :ANY)), (:block,
            (:line, 508, :none),
            (:call, :serialize_any, :s, :x)
          )),
        (:line, 510, :none),
        (:function, (:call, :serialize_any, (:(::), :s, :AbstractSerializer), (:(::), :x, :ANY)), (:block,
            (:line, 511, :none),
            (:(=), :tag, (:call, :sertag, :x)),
            (:line, 512, :none),
            (:if, (:call, :>, :tag, 0), (:block,
                (:line, 513, :none),
                (:return, (:call, :write_as_tag, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :tag))
              )),
            (:line, 515, :none),
            (:(=), :t, (:(::), (:call, :typeof, :x), :DataType)),
            (:line, 516, :none),
            (:(=), :nf, (:call, :nfields, :t)),
            (:line, 517, :none),
            (:if, (:&&, (:call, :(==), :nf, 0), (:call, :>, (:., :t, (:quote, #QuoteNode
                      :size
                    )), 0)), (:block,
                (:line, 518, :none),
                (:call, :serialize_type, :s, :t),
                (:line, 519, :none),
                (:call, :write, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :x)
              ), (:block,
                (:line, 521, :none),
                (:&&, (:., :t, (:quote, #QuoteNode
                      :mutable
                    )), (:&&, (:call, :haskey, (:., :s, (:quote, #QuoteNode
                          :table
                        )), :x), (:&&, (:call, :serialize_cycle, :s, :x), (:return, nothing)))),
                (:line, 522, :none),
                (:call, :serialize_type, :s, :t),
                (:line, 523, :none),
                (:&&, (:., :t, (:quote, #QuoteNode
                      :mutable
                    )), (:call, :serialize_cycle, :s, :x)),
                (:line, 524, :none),
                (:for, (:(=), :i, (:(:), 1, :nf)), (:block,
                    (:line, 525, :none),
                    (:if, (:call, :isdefined, :x, :i), (:block,
                        (:line, 526, :none),
                        (:call, :serialize, :s, (:call, :getfield, :x, :i))
                      ), (:block,
                        (:line, 528, :none),
                        (:call, :writetag, (:., :s, (:quote, #QuoteNode
                              :io
                            )), :UNDEFREF_TAG)
                      ))
                  ))
              ))
          )),
        (:line, 534, :none),
        (:(=), (:call, :serialize, (:(::), :s, :IO), :x), (:block,
            (:line, 534, :none),
            (:call, :serialize, (:call, :SerializationState, :s), :x)
          )),
        (:line, 538, :none),
        (:(=), (:call, :deserialize, (:(::), :s, :IO)), (:block,
            (:line, 538, :none),
            (:call, :deserialize, (:call, :SerializationState, :s))
          )),
        (:line, 540, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer)), (:block,
            (:line, 541, :none),
            (:call, :handle_deserialize, :s, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :UInt8), :UInt8)))
          )),
        (:line, 544, :none),
        (:function, (:call, :deserialize_cycle, (:(::), :s, :AbstractSerializer), (:(::), :x, :ANY)), (:block,
            (:line, 545, :none),
            (:if, (:&&, (:call, :!, (:call, :isimmutable, :x)), (:call, :!, (:call, :datatype_pointerfree, (:call, :typeof, :x)))), (:block,
                (:line, 546, :none),
                (:(=), (:ref, (:., :s, (:quote, #QuoteNode
                        :table
                      )), (:., :s, (:quote, #QuoteNode
                        :counter
                      ))), :x),
                (:line, 547, :none),
                (:+=, (:., :s, (:quote, #QuoteNode
                      :counter
                    )), 1)
              )),
            (:line, 549, :none),
            :nothing
          )),
        (:line, 555, :none),
        (:function, (:call, :handle_deserialize, (:(::), :s, :AbstractSerializer), (:(::), :b, :Int32)), (:block,
            (:line, 556, :none),
            (:if, (:call, :(==), :b, 0), (:block,
                (:line, 557, :none),
                (:return, (:call, :desertag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                              :io
                            )), :UInt8), :UInt8))))
              )),
            (:line, 559, :none),
            (:if, (:call, :(>=), :b, :VALUE_TAGS), (:block,
                (:line, 560, :none),
                (:return, (:call, :desertag, :b))
              ), (:block,
                (:line, 561, :none),
                (:if, (:call, :(==), :b, :TUPLE_TAG), (:block,
                    (:line, 562, :none),
                    (:return, (:call, :deserialize_tuple, :s, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                  :io
                                )), :UInt8), :UInt8))))
                  ), (:block,
                    (:line, 563, :none),
                    (:if, (:call, :(==), :b, :LONGTUPLE_TAG), (:block,
                        (:line, 564, :none),
                        (:return, (:call, :deserialize_tuple, :s, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                      :io
                                    )), :Int32), :Int32))))
                      ), (:block,
                        (:line, 565, :none),
                        (:if, (:call, :(==), :b, :BACKREF_TAG), (:block,
                            (:line, 566, :none),
                            (:(=), :id, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                      :io
                                    )), :Int), :Int)),
                            (:line, 567, :none),
                            (:return, (:ref, (:., :s, (:quote, #QuoteNode
                                    :table
                                  )), :id))
                          ), (:block,
                            (:line, 568, :none),
                            (:if, (:call, :(==), :b, :ARRAY_TAG), (:block,
                                (:line, 569, :none),
                                (:return, (:call, :deserialize_array, :s))
                              ), (:block,
                                (:line, 570, :none),
                                (:if, (:call, :(==), :b, :DATATYPE_TAG), (:block,
                                    (:line, 571, :none),
                                    (:return, (:call, :deserialize_datatype, :s))
                                  ), (:block,
                                    (:line, 572, :none),
                                    (:if, (:call, :(==), :b, :SYMBOL_TAG), (:block,
                                        (:line, 573, :none),
                                        (:return, (:call, :Symbol, (:call, :read, (:., :s, (:quote, #QuoteNode
                                                  :io
                                                )), :UInt8, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                                        :io
                                                      )), :UInt8), :UInt8)))))
                                      ), (:block,
                                        (:line, 574, :none),
                                        (:if, (:call, :(==), :b, :LONGSYMBOL_TAG), (:block,
                                            (:line, 575, :none),
                                            (:return, (:call, :Symbol, (:call, :read, (:., :s, (:quote, #QuoteNode
                                                      :io
                                                    )), :UInt8, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                                            :io
                                                          )), :Int32), :Int32)))))
                                          ), (:block,
                                            (:line, 576, :none),
                                            (:if, (:call, :(==), :b, :EXPR_TAG), (:block,
                                                (:line, 577, :none),
                                                (:return, (:call, :deserialize_expr, :s, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                                              :io
                                                            )), :UInt8), :UInt8))))
                                              ), (:block,
                                                (:line, 578, :none),
                                                (:if, (:call, :(==), :b, :LONGEXPR_TAG), (:block,
                                                    (:line, 579, :none),
                                                    (:return, (:call, :deserialize_expr, :s, (:call, :Int, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                                                  :io
                                                                )), :Int32), :Int32))))
                                                  ))
                                              ))
                                          ))
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  ))
              )),
            (:line, 581, :none),
            (:return, (:call, :deserialize, :s, (:call, :desertag, :b)))
          )),
        (:line, 584, :none),
        (:(=), (:call, :deserialize_tuple, (:(::), :s, :AbstractSerializer), :len), (:block,
            (:line, 584, :none),
            (:call, :ntuple, (:->, :i, (:block,
                  (:line, 584, :none),
                  (:call, :deserialize, :s)
                )), :len)
          )),
        (:line, 586, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :SimpleVector))), (:block,
            (:line, 587, :none),
            (:(=), :n, (:call, :read, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :Int32)),
            (:line, 588, :none),
            (:call, :svec, (:..., (:comprehension, (:generator, (:call, :deserialize, :s), (:(=), :i, (:(:), 1, :n))))))
          )),
        (:line, 591, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :Module))), (:block,
            (:line, 592, :none),
            (:(=), :path, (:call, :deserialize, :s)),
            (:line, 593, :none),
            (:(=), :m, :Main),
            (:line, 594, :none),
            (:if, (:&&, (:call, :isa, :path, :Tuple), (:call, :(!==), :path, (:tuple,))), (:block,
                (:line, 596, :none),
                (:for, (:(=), :mname, :path), (:block,
                    (:line, 597, :none),
                    (:(=), :m, (:(::), (:call, :getfield, :m, :mname), :Module))
                  ))
              ), (:block,
                (:line, 600, :none),
                (:(=), :mname, :path),
                (:line, 601, :none),
                (:while, (:call, :(!==), :mname, (:tuple,)), (:block,
                    (:line, 602, :none),
                    (:(=), :m, (:(::), (:call, :getfield, :m, :mname), :Module)),
                    (:line, 603, :none),
                    (:(=), :mname, (:call, :deserialize, :s))
                  ))
              )),
            (:line, 606, :none),
            :m
          )),
        (:line, 609, :none),
        (:const, (:(=), :known_object_data, (:call, :Dict))),
        (:line, 611, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :Method))), (:block,
            (:line, 612, :none),
            (:(=), :lnumber, (:call, :read, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :UInt64)),
            (:line, 613, :none),
            (:if, (:call, :haskey, :known_object_data, :lnumber), (:block,
                (:line, 614, :none),
                (:(=), :meth, (:(::), (:ref, :known_object_data, :lnumber), :Method)),
                (:line, 615, :none),
                (:(=), :makenew, false)
              ), (:block,
                (:line, 617, :none),
                (:(=), :meth, (:ccall, (:quote, #QuoteNode
                      :jl_new_method_uninit
                    ), (:curly, :Ref, :Method), (:tuple,))),
                (:line, 618, :none),
                (:(=), :makenew, true)
              )),
            (:line, 620, :none),
            (:call, :deserialize_cycle, :s, :meth),
            (:line, 621, :none),
            (:(=), :mod, (:(::), (:call, :deserialize, :s), :Module)),
            (:line, 622, :none),
            (:(=), :name, (:(::), (:call, :deserialize, :s), :Symbol)),
            (:line, 623, :none),
            (:(=), :file, (:(::), (:call, :deserialize, :s), :Symbol)),
            (:line, 624, :none),
            (:(=), :line, (:call, :deserialize, :s)),
            (:line, 625, :none),
            (:(=), :sig, (:call, :deserialize, :s)),
            (:line, 626, :none),
            (:(=), :tvars, (:call, :deserialize, :s)),
            (:line, 627, :none),
            (:(=), :ambig, (:call, :deserialize, :s)),
            (:line, 628, :none),
            (:(=), :isstaged, (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 629, :none),
            (:(=), :template, (:(::), (:call, :deserialize, :s), :LambdaInfo)),
            (:line, 630, :none),
            (:if, :makenew, (:block,
                (:line, 631, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :module
                    )), :mod),
                (:line, 632, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :name
                    )), :name),
                (:line, 633, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :file
                    )), :file),
                (:line, 634, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :line
                    )), :line),
                (:line, 635, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :sig
                    )), :sig),
                (:line, 636, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :tvars
                    )), :tvars),
                (:line, 637, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :ambig
                    )), :ambig),
                (:line, 638, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :isstaged
                    )), :isstaged),
                (:line, 639, :none),
                (:(=), (:., :meth, (:quote, #QuoteNode
                      :lambda_template
                    )), :template),
                (:line, 640, :none),
                (:ccall, (:quote, #QuoteNode
                    :jl_method_init_properties
                  ), :Void, (:tuple, :Any), :meth),
                (:line, 641, :none),
                (:(=), (:ref, :known_object_data, :lnumber), :meth)
              )),
            (:line, 643, :none),
            (:return, :meth)
          )),
        (:line, 646, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :LambdaInfo))), (:block,
            (:line, 647, :none),
            (:(=), :linfo, (:ccall, (:quote, #QuoteNode
                  :jl_new_lambda_info_uninit
                ), (:curly, :Ref, :LambdaInfo), (:tuple, (:curly, :Ptr, :Void)), :C_NULL)),
            (:line, 648, :none),
            (:call, :deserialize_cycle, :s, :linfo),
            (:line, 649, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :code
                )), (:call, :deserialize, :s)),
            (:line, 650, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :slotnames
                )), (:call, :deserialize, :s)),
            (:line, 651, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :slottypes
                )), (:call, :deserialize, :s)),
            (:line, 652, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :slotflags
                )), (:call, :deserialize, :s)),
            (:line, 653, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :ssavaluetypes
                )), (:call, :deserialize, :s)),
            (:line, 654, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :sparam_syms
                )), (:(::), (:call, :deserialize, :s), :SimpleVector)),
            (:line, 655, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :sparam_vals
                )), (:(::), (:call, :deserialize, :s), :SimpleVector)),
            (:line, 656, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :rettype
                )), (:call, :deserialize, :s)),
            (:line, 657, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :specTypes
                )), (:call, :deserialize, :s)),
            (:line, 658, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :inferred
                )), (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 659, :none),
            (:(=), :tag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :UInt8), :UInt8))),
            (:line, 660, :none),
            (:if, (:call, :(!=), :tag, :UNDEFREF_TAG), (:block,
                (:line, 661, :none),
                (:(=), (:., :linfo, (:quote, #QuoteNode
                      :def
                    )), (:(::), (:call, :handle_deserialize, :s, :tag), :Method))
              )),
            (:line, 663, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :pure
                )), (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 664, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :nargs
                )), (:call, :deserialize, :s)),
            (:line, 665, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :isva
                )), (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 666, :none),
            (:return, :linfo)
          )),
        (:line, 669, :none),
        (:function, (:call, :deserialize_array, (:(::), :s, :AbstractSerializer)), (:block,
            (:line, 670, :none),
            (:(=), :d1, (:call, :deserialize, :s)),
            (:line, 671, :none),
            (:if, (:call, :isa, :d1, :Type), (:block,
                (:line, 672, :none),
                (:(=), :elty, :d1),
                (:line, 673, :none),
                (:(=), :d1, (:call, :deserialize, :s))
              ), (:block,
                (:line, 675, :none),
                (:(=), :elty, :UInt8)
              )),
            (:line, 677, :none),
            (:if, (:call, :isa, :d1, :Integer), (:block,
                (:line, 678, :none),
                (:if, (:&&, (:call, :(!==), :elty, :Bool), (:call, :isbits, :elty)), (:block,
                    (:line, 679, :none),
                    (:(=), :a, (:call, (:curly, :Array, :elty, 1), :d1)),
                    (:line, 680, :none),
                    (:return, (:call, :read!, (:., :s, (:quote, #QuoteNode
                            :io
                          )), :a))
                  )),
                (:line, 682, :none),
                (:(=), :dims, (:tuple, (:call, :Int, :d1)))
              ), (:block,
                (:line, 684, :none),
                (:(=), :dims, (:(::), (:call, :convert, :Dims, :d1), :Dims))
              )),
            (:line, 686, :none),
            (:if, (:call, :isbits, :elty), (:block,
                (:line, 687, :none),
                (:(=), :n, (:(::), (:call, :prod, :dims), :Int)),
                (:line, 688, :none),
                (:if, (:&&, (:call, :(===), :elty, :Bool), (:call, :>, :n, 0)), (:block,
                    (:line, 689, :none),
                    (:(=), :A, (:call, (:curly, :Array, :Bool, (:call, :length, :dims)), :dims)),
                    (:line, 690, :none),
                    (:(=), :i, 1),
                    (:line, 691, :none),
                    (:while, (:call, :(<=), :i, :n), (:block,
                        (:line, 692, :none),
                        (:(=), :b, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                  :io
                                )), :UInt8), :UInt8)),
                        (:line, 693, :none),
                        (:(=), :v, (:call, :(!=), (:call, :>>, :b, 7), 0)),
                        (:line, 694, :none),
                        (:(=), :count, (:call, :&, :b, 0x7f)),
                        (:line, 695, :none),
                        (:(=), :nxt, (:call, :+, :i, :count)),
                        (:line, 696, :none),
                        (:while, (:call, :<, :i, :nxt), (:block,
                            (:line, 697, :none),
                            (:(=), (:ref, :A, :i), :v),
                            (:line, 698, :none),
                            (:+=, :i, 1)
                          ))
                      ))
                  ), (:block,
                    (:line, 702, :none),
                    (:(=), :A, (:call, :read, (:., :s, (:quote, #QuoteNode
                            :io
                          )), :elty, :dims))
                  )),
                (:line, 704, :none),
                (:return, :A)
              )),
            (:line, 706, :none),
            (:(=), :A, (:call, (:curly, :Array, :elty, (:call, :length, :dims)), :dims)),
            (:line, 707, :none),
            (:call, :deserialize_cycle, :s, :A),
            (:line, 708, :none),
            (:for, (:(=), :i, (:call, :eachindex, :A)), (:block,
                (:line, 709, :none),
                (:(=), :tag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                            :io
                          )), :UInt8), :UInt8))),
                (:line, 710, :none),
                (:if, (:call, :(!=), :tag, :UNDEFREF_TAG), (:block,
                    (:line, 711, :none),
                    (:(=), (:ref, :A, :i), (:call, :handle_deserialize, :s, :tag))
                  ))
              )),
            (:line, 714, :none),
            (:return, :A)
          )),
        (:line, 717, :none),
        (:function, (:call, :deserialize_expr, (:(::), :s, :AbstractSerializer), :len), (:block,
            (:line, 718, :none),
            (:(=), :hd, (:(::), (:call, :deserialize, :s), :Symbol)),
            (:line, 719, :none),
            (:(=), :e, (:call, :Expr, :hd)),
            (:line, 720, :none),
            (:call, :deserialize_cycle, :s, :e),
            (:line, 721, :none),
            (:(=), :ty, (:call, :deserialize, :s)),
            (:line, 722, :none),
            (:(=), (:., :e, (:quote, #QuoteNode
                  :args
                )), (:typed_comprehension, :Any, (:generator, (:call, :deserialize, :s), (:(=), :i, (:(:), 1, :len))))),
            (:line, 723, :none),
            (:(=), (:., :e, (:quote, #QuoteNode
                  :typ
                )), :ty),
            (:line, 724, :none),
            :e
          )),
        (:line, 727, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :GlobalRef))), (:block,
            (:line, 728, :none),
            (:(=), :kind, (:call, :read, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :UInt8)),
            (:line, 729, :none),
            (:if, (:call, :(==), :kind, 0), (:block,
                (:line, 730, :none),
                (:return, (:call, :GlobalRef, (:(::), (:call, :deserialize, :s), :Module), (:(::), (:call, :deserialize, :s), :Symbol)))
              ), (:block,
                (:line, 732, :none),
                (:(=), :ty, (:call, :deserialize, :s)),
                (:line, 733, :none),
                (:return, (:call, :GlobalRef, (:., (:., :ty, (:quote, #QuoteNode
                          :name
                        )), (:quote, #QuoteNode
                        :module
                      )), (:., (:., :ty, (:quote, #QuoteNode
                          :name
                        )), (:quote, #QuoteNode
                        :name
                      ))))
              ))
          )),
        (:line, 737, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :Union))), (:block,
            (:line, 738, :none),
            (:(=), :types, (:call, :deserialize, :s)),
            (:line, 739, :none),
            (:curly, :Union, (:..., :types))
          )),
        (:line, 742, :none),
        (:module, true, :__deserialized_types__, (:block,
            (:line, 742, :none),
            (:line, 742, :none)
          )),
        (:line, 744, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :TypeName))), (:block,
            (:line, 747, :none),
            (:(=), :number, (:call, :read, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :UInt64)),
            (:line, 748, :none),
            (:return, (:call, :deserialize_typename, :s, :number))
          )),
        (:line, 751, :none),
        (:function, (:call, :deserialize_typename, (:(::), :s, :AbstractSerializer), :number), (:block,
            (:line, 752, :none),
            (:(=), :name, (:(::), (:call, :deserialize, :s), :Symbol)),
            (:line, 753, :none),
            (:(=), :tn, (:call, :get, :known_object_data, :number, :nothing)),
            (:line, 754, :none),
            (:if, (:call, :(!==), :tn, :nothing), (:block,
                (:line, 755, :none),
                (:(=), :makenew, false)
              ), (:block,
                (:line, 758, :none),
                (:(=), :tn_name, (:if, (:call, :isdefined, :__deserialized_types__, :name), (:call, :gensym), :name)),
                (:line, 759, :none),
                (:(=), :tn, (:ccall, (:quote, #QuoteNode
                      :jl_new_typename_in
                    ), (:curly, :Ref, :TypeName), (:tuple, :Any, :Any), :tn_name, :__deserialized_types__)),
                (:line, 761, :none),
                (:(=), :makenew, true),
                (:line, 762, :none),
                (:(=), (:ref, :known_object_data, :number), :tn)
              )),
            (:line, 764, :none),
            (:if, (:call, :!, (:call, :haskey, :object_numbers, :tn)), (:block,
                (:line, 766, :none),
                (:(=), (:ref, :object_numbers, :tn), :number)
              )),
            (:line, 768, :none),
            (:call, :deserialize_cycle, :s, :tn),
            (:line, 770, :none),
            (:(=), :names, (:(::), (:call, :deserialize, :s), :SimpleVector)),
            (:line, 771, :none),
            (:(=), :super, (:(::), (:call, :deserialize, :s), :Type)),
            (:line, 772, :none),
            (:(=), :parameters, (:(::), (:call, :deserialize, :s), :SimpleVector)),
            (:line, 773, :none),
            (:(=), :types, (:(::), (:call, :deserialize, :s), :SimpleVector)),
            (:line, 774, :none),
            (:(=), :has_instance, (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 775, :none),
            (:(=), :abstr, (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 776, :none),
            (:(=), :mutable, (:(::), (:call, :deserialize, :s), :Bool)),
            (:line, 777, :none),
            (:(=), :ninitialized, (:(::), (:call, :deserialize, :s), :Int32)),
            (:line, 779, :none),
            (:if, :makenew, (:block,
                (:line, 780, :none),
                (:(=), (:., :tn, (:quote, #QuoteNode
                      :names
                    )), :names),
                (:line, 784, :none),
                (:(=), (:., :tn, (:quote, #QuoteNode
                      :primary
                    )), (:ccall, (:quote, #QuoteNode
                      :jl_new_datatype
                    ), :Any, (:tuple, :Any, :Any, :Any, :Any, :Any, :Cint, :Cint, :Cint), :tn, :super, :parameters, :names, :types, :abstr, :mutable, :ninitialized)),
                (:line, 787, :none),
                (:(=), :ty, (:., :tn, (:quote, #QuoteNode
                      :primary
                    ))),
                (:line, 788, :none),
                (:ccall, (:quote, #QuoteNode
                    :jl_set_const
                  ), :Void, (:tuple, :Any, :Any, :Any), (:., :tn, (:quote, #QuoteNode
                      :module
                    )), (:., :tn, (:quote, #QuoteNode
                      :name
                    )), :ty),
                (:line, 789, :none),
                (:if, (:&&, :has_instance, (:call, :!, (:call, :isdefined, :ty, (:quote, #QuoteNode
                          :instance
                        )))), (:block,
                    (:line, 791, :none),
                    (:call, (:., :Core, (:quote, #QuoteNode
                          :setfield!
                        )), :ty, (:quote, #QuoteNode
                        :instance
                      ), (:ccall, (:quote, #QuoteNode
                          :jl_new_struct
                        ), :Any, (:tuple, :Any, (:..., :Any)), :ty))
                  ))
              )),
            (:line, 795, :none),
            (:(=), :tag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :UInt8), :UInt8))),
            (:line, 796, :none),
            (:if, (:call, :(!=), :tag, :UNDEFREF_TAG), (:block,
                (:line, 797, :none),
                (:(=), :mtname, (:call, :handle_deserialize, :s, :tag)),
                (:line, 798, :none),
                (:(=), :defs, (:call, :deserialize, :s)),
                (:line, 799, :none),
                (:(=), :maxa, (:(::), (:call, :deserialize, :s), :Int)),
                (:line, 800, :none),
                (:if, :makenew, (:block,
                    (:line, 801, :none),
                    (:(=), (:., :tn, (:quote, #QuoteNode
                          :mt
                        )), (:ccall, (:quote, #QuoteNode
                          :jl_new_method_table
                        ), :Any, (:tuple, :Any, :Any), :name, (:., :tn, (:quote, #QuoteNode
                            :module
                          )))),
                    (:line, 802, :none),
                    (:(=), (:., (:., :tn, (:quote, #QuoteNode
                            :mt
                          )), (:quote, #QuoteNode
                          :name
                        )), :mtname),
                    (:line, 803, :none),
                    (:(=), (:., (:., :tn, (:quote, #QuoteNode
                            :mt
                          )), (:quote, #QuoteNode
                          :defs
                        )), :defs),
                    (:line, 804, :none),
                    (:(=), (:., (:., :tn, (:quote, #QuoteNode
                            :mt
                          )), (:quote, #QuoteNode
                          :max_args
                        )), :maxa)
                  )),
                (:line, 806, :none),
                (:(=), :tag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                            :io
                          )), :UInt8), :UInt8))),
                (:line, 807, :none),
                (:if, (:call, :(!=), :tag, :UNDEFREF_TAG), (:block,
                    (:line, 808, :none),
                    (:(=), :kws, (:call, :handle_deserialize, :s, :tag)),
                    (:line, 809, :none),
                    (:if, :makenew, (:block,
                        (:line, 810, :none),
                        (:(=), (:., (:., :tn, (:quote, #QuoteNode
                                :mt
                              )), (:quote, #QuoteNode
                              :kwsorter
                            )), :kws)
                      ))
                  ))
              )),
            (:line, 814, :none),
            (:return, (:(::), :tn, :TypeName))
          )),
        (:line, 817, :none),
        (:function, (:call, :deserialize_datatype, (:(::), :s, :AbstractSerializer)), (:block,
            (:line, 818, :none),
            (:(=), :form, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                      :io
                    )), :UInt8), :UInt8)),
            (:line, 819, :none),
            (:if, (:call, :(!=), (:call, :&, :form, 2), 0), (:block,
                (:line, 820, :none),
                (:(=), :tname, (:(::), (:call, :deserialize, :s), :TypeName)),
                (:line, 821, :none),
                (:(=), :ty, (:., :tname, (:quote, #QuoteNode
                      :primary
                    )))
              ), (:block,
                (:line, 823, :none),
                (:(=), :name, (:(::), (:call, :deserialize, :s), :Symbol)),
                (:line, 824, :none),
                (:(=), :mod, (:(::), (:call, :deserialize, :s), :Module)),
                (:line, 825, :none),
                (:(=), :ty, (:call, :getfield, :mod, :name))
              )),
            (:line, 827, :none),
            (:call, :assert, (:call, :isa, :ty, :DataType)),
            (:line, 828, :none),
            (:if, (:call, :isempty, (:., :ty, (:quote, #QuoteNode
                    :parameters
                  ))), (:block,
                (:line, 829, :none),
                (:(=), :t, :ty)
              ), (:block,
                (:line, 831, :none),
                (:(=), :params, (:call, :deserialize, :s)),
                (:line, 832, :none),
                (:(=), :t, (:curly, :ty, (:..., :params)))
              )),
            (:line, 834, :none),
            (:if, (:call, :(==), (:call, :&, :form, 1), 0), (:block,
                (:line, 835, :none),
                (:return, :t)
              )),
            (:line, 837, :none),
            (:call, :deserialize, :s, :t)
          )),
        (:line, 840, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :Task))), (:block,
            (:line, 841, :none),
            (:(=), :t, (:call, :Task, (:->, (:tuple,), (:block,
                    (:line, 841, :none),
                    :nothing
                  )))),
            (:line, 842, :none),
            (:call, :deserialize_cycle, :s, :t),
            (:line, 843, :none),
            (:(=), (:., :t, (:quote, #QuoteNode
                  :code
                )), (:call, :deserialize, :s)),
            (:line, 844, :none),
            (:(=), (:., :t, (:quote, #QuoteNode
                  :storage
                )), (:call, :deserialize, :s)),
            (:line, 845, :none),
            (:(=), (:., :t, (:quote, #QuoteNode
                  :state
                )), (:call, :deserialize, :s)),
            (:line, 846, :none),
            (:(=), (:., :t, (:quote, #QuoteNode
                  :result
                )), (:call, :deserialize, :s)),
            (:line, 847, :none),
            (:(=), (:., :t, (:quote, #QuoteNode
                  :exception
                )), (:call, :deserialize, :s)),
            (:line, 848, :none),
            :t
          )),
        (:line, 852, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), :t, :DataType)), (:block,
            (:line, 853, :none),
            (:(=), :nf, (:call, :nfields, :t)),
            (:line, 854, :none),
            (:if, (:&&, (:call, :(==), :nf, 0), (:call, :>, (:., :t, (:quote, #QuoteNode
                      :size
                    )), 0)), (:block,
                (:line, 856, :none),
                (:return, (:call, :read, (:., :s, (:quote, #QuoteNode
                        :io
                      )), :t))
              )),
            (:line, 858, :none),
            (:if, (:call, :(==), :nf, 0), (:block,
                (:line, 859, :none),
                (:return, (:ccall, (:quote, #QuoteNode
                      :jl_new_struct
                    ), :Any, (:tuple, :Any, (:..., :Any)), :t))
              ), (:block,
                (:line, 860, :none),
                (:if, (:call, :isbits, :t), (:block,
                    (:line, 861, :none),
                    (:if, (:call, :(==), :nf, 1), (:block,
                        (:line, 862, :none),
                        (:(=), :f1, (:call, :deserialize, :s)),
                        (:line, 863, :none),
                        (:return, (:ccall, (:quote, #QuoteNode
                              :jl_new_struct
                            ), :Any, (:tuple, :Any, (:..., :Any)), :t, :f1))
                      ), (:block,
                        (:line, 864, :none),
                        (:if, (:call, :(==), :nf, 2), (:block,
                            (:line, 865, :none),
                            (:(=), :f1, (:call, :deserialize, :s)),
                            (:line, 866, :none),
                            (:(=), :f2, (:call, :deserialize, :s)),
                            (:line, 867, :none),
                            (:return, (:ccall, (:quote, #QuoteNode
                                  :jl_new_struct
                                ), :Any, (:tuple, :Any, (:..., :Any)), :t, :f1, :f2))
                          ), (:block,
                            (:line, 868, :none),
                            (:if, (:call, :(==), :nf, 3), (:block,
                                (:line, 869, :none),
                                (:(=), :f1, (:call, :deserialize, :s)),
                                (:line, 870, :none),
                                (:(=), :f2, (:call, :deserialize, :s)),
                                (:line, 871, :none),
                                (:(=), :f3, (:call, :deserialize, :s)),
                                (:line, 872, :none),
                                (:return, (:ccall, (:quote, #QuoteNode
                                      :jl_new_struct
                                    ), :Any, (:tuple, :Any, (:..., :Any)), :t, :f1, :f2, :f3))
                              ), (:block,
                                (:line, 874, :none),
                                (:(=), :flds, (:typed_comprehension, :Any, (:generator, (:call, :deserialize, :s), (:(=), :i, (:(:), 1, :nf))))),
                                (:line, 875, :none),
                                (:return, (:ccall, (:quote, #QuoteNode
                                      :jl_new_structv
                                    ), :Any, (:tuple, :Any, (:curly, :Ptr, :Void), :UInt32), :t, :flds, :nf))
                              ))
                          ))
                      ))
                  ), (:block,
                    (:line, 878, :none),
                    (:(=), :x, (:ccall, (:quote, #QuoteNode
                          :jl_new_struct_uninit
                        ), :Any, (:tuple, :Any), :t)),
                    (:line, 879, :none),
                    (:&&, (:., :t, (:quote, #QuoteNode
                          :mutable
                        )), (:call, :deserialize_cycle, :s, :x)),
                    (:line, 880, :none),
                    (:for, (:(=), :i, (:(:), 1, :nf)), (:block,
                        (:line, 881, :none),
                        (:(=), :tag, (:call, :Int32, (:(::), (:call, :read, (:., :s, (:quote, #QuoteNode
                                    :io
                                  )), :UInt8), :UInt8))),
                        (:line, 882, :none),
                        (:if, (:call, :(!=), :tag, :UNDEFREF_TAG), (:block,
                            (:line, 883, :none),
                            (:ccall, (:quote, #QuoteNode
                                :jl_set_nth_field
                              ), :Void, (:tuple, :Any, :Csize_t, :Any), :x, (:call, :-, :i, 1), (:call, :handle_deserialize, :s, :tag))
                          ))
                      )),
                    (:line, 886, :none),
                    (:return, :x)
                  ))
              ))
          )),
        (:line, 890, :none),
        (:function, (:call, (:curly, :deserialize, :K, :V), (:(::), :s, :AbstractSerializer), (:(::), :T, (:curly, :Type, (:curly, :Dict, :K, :V)))), (:block,
            (:line, 891, :none),
            (:(=), :n, (:call, :read, (:., :s, (:quote, #QuoteNode
                    :io
                  )), :Int32)),
            (:line, 892, :none),
            (:(=), :t, (:call, :T)),
            (:line, 892, :none),
            (:call, :sizehint!, :t, :n),
            (:line, 893, :none),
            (:call, :deserialize_cycle, :s, :t),
            (:line, 894, :none),
            (:for, (:(=), :i, (:(:), 1, :n)), (:block,
                (:line, 895, :none),
                (:(=), :k, (:call, :deserialize, :s)),
                (:line, 896, :none),
                (:(=), :v, (:call, :deserialize, :s)),
                (:line, 897, :none),
                (:(=), (:ref, :t, :k), :v)
              )),
            (:line, 899, :none),
            (:return, :t)
          )),
        (:line, 902, :none),
        (:(=), (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :BigFloat))), (:block,
            (:line, 902, :none),
            (:call, :parse, :BigFloat, (:call, :deserialize, :s))
          )),
        (:line, 904, :none),
        (:(=), (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), (:curly, :Type, :BigInt))), (:block,
            (:line, 904, :none),
            (:call, :parse, :BigInt, (:call, :deserialize, :s), 62)
          )),
        (:line, 906, :none),
        (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), :t, (:curly, :Type, :Regex))), (:block,
            (:line, 907, :none),
            (:(=), :pattern, (:call, :deserialize, :s)),
            (:line, 908, :none),
            (:(=), :compile_options, (:call, :deserialize, :s)),
            (:line, 909, :none),
            (:(=), :match_options, (:call, :deserialize, :s)),
            (:line, 910, :none),
            (:call, :Regex, :pattern, :compile_options, :match_options)
          )),
        (:line, 913, :none),
        (:if, (:call, :!, (:call, :is_windows)), (:block,
            (:line, 914, :none),
            (:function, (:call, :serialize, (:(::), :s, :AbstractSerializer), (:(::), :rd, :RandomDevice)), (:block,
                (:line, 915, :none),
                (:call, :serialize_type, :s, (:call, :typeof, :rd)),
                (:line, 916, :none),
                (:call, :serialize, :s, (:., :rd, (:quote, #QuoteNode
                      :unlimited
                    )))
              )),
            (:line, 918, :none),
            (:function, (:call, :deserialize, (:(::), :s, :AbstractSerializer), (:(::), :t, (:curly, :Type, :RandomDevice))), (:block,
                (:line, 919, :none),
                (:(=), :unlimited, (:call, :deserialize, :s)),
                (:line, 920, :none),
                (:return, (:call, :RandomDevice, :unlimited))
              ))
          ))
      ))
  ))