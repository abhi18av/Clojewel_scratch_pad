(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :Sys, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:export, :CPU_CORES, :WORD_SIZE, :ARCH, :MACHINE, :KERNEL, :JIT, :cpu_info, :cpu_name, :cpu_summary, :uptime, :loadavg, :free_memory, :total_memory),
        (:line, 19, :none),
        (:import, :., :., :Base, :show),
        (:line, 21, :none),
        (:global, :CPU_CORES),
        (:line, 22, :none),
        (:macrocall, :(Core.@doc), "    Sys.CPU_CORES\n\nThe number of logical CPU cores available in the system.\n\nSee the Hwloc.jl package for extended information, including number of physical cores.\n", (:quote, #QuoteNode
            :CPU_CORES
          )),
        (:line, 31, :none),
        (:macrocall, :(Core.@doc), "    Sys.ARCH\n\nA symbol representing the architecture of the build configuration.\n", (:const, (:(=), :ARCH, (:ccall, (:quote, #QuoteNode
                  :jl_get_ARCH
                ), :Any, (:tuple,))))),
        (:line, 39, :none),
        (:macrocall, :(Core.@doc), "    Sys.KERNEL\n\nA symbol representing the name of the operating system, as returned by `uname` of the build configuration.\n", (:const, (:(=), :KERNEL, (:ccall, (:quote, #QuoteNode
                  :jl_get_UNAME
                ), :Any, (:tuple,))))),
        (:line, 46, :none),
        (:macrocall, :(Core.@doc), "    Sys.MACHINE\n\nA string containing the build triple.\n", (:const, (:(=), :MACHINE, (:., :Base, (:quote, #QuoteNode
                  :MACHINE
                ))))),
        (:line, 53, :none),
        (:macrocall, :(Core.@doc), "    Sys.WORD_SIZE\n\nStandard word size on the current machine, in bits.\n", (:const, (:(=), :WORD_SIZE, (:call, :*, (:call, (:., :Core, (:quote, #QuoteNode
                      :sizeof
                    )), :Int), 8)))),
        (:line, 60, :none),
        (:function, (:call, :__init__), (:block,
            (:line, 62, :none),
            (:global, (:(=), :CPU_CORES, (:if, (:call, :haskey, :ENV, "JULIA_CPU_CORES"), (:call, :parse, :Int, (:ref, :ENV, "JULIA_CPU_CORES")), (:call, :Int, (:ccall, (:quote, #QuoteNode
                        :jl_cpu_cores
                      ), :Int32, (:tuple,)))))),
            (:line, 65, :none),
            (:global, (:(=), :SC_CLK_TCK, (:ccall, (:quote, #QuoteNode
                    :jl_SC_CLK_TCK
                  ), :Clong, (:tuple,)))),
            (:line, 66, :none),
            (:global, (:(=), :cpu_name, (:ccall, (:quote, #QuoteNode
                    :jl_get_cpu_name
                  ), (:curly, :Ref, :String), (:tuple,)))),
            (:line, 67, :none),
            (:global, (:(=), :JIT, (:ccall, (:quote, #QuoteNode
                    :jl_get_JIT
                  ), (:curly, :Ref, :String), (:tuple,))))
          )),
        (:line, 70, :none),
        (:type, true, :UV_cpu_info_t, (:block,
            (:line, 71, :none),
            (:(::), :model, (:curly, :Ptr, :UInt8)),
            (:line, 72, :none),
            (:(::), :speed, :Int32),
            (:line, 73, :none),
            (:(::), :cpu_times!user, :UInt64),
            (:line, 74, :none),
            (:(::), :cpu_times!nice, :UInt64),
            (:line, 75, :none),
            (:(::), :cpu_times!sys, :UInt64),
            (:line, 76, :none),
            (:(::), :cpu_times!idle, :UInt64),
            (:line, 77, :none),
            (:(::), :cpu_times!irq, :UInt64)
          )),
        (:line, 79, :none),
        (:type, true, :CPUinfo, (:block,
            (:line, 80, :none),
            (:(::), :model, :String),
            (:line, 81, :none),
            (:(::), :speed, :Int32),
            (:line, 82, :none),
            (:(::), :cpu_times!user, :UInt64),
            (:line, 83, :none),
            (:(::), :cpu_times!nice, :UInt64),
            (:line, 84, :none),
            (:(::), :cpu_times!sys, :UInt64),
            (:line, 85, :none),
            (:(::), :cpu_times!idle, :UInt64),
            (:line, 86, :none),
            (:(::), :cpu_times!irq, :UInt64),
            (:line, 87, :none),
            (:(=), (:call, :CPUinfo, :model, :speed, :u, :n, :s, :id, :ir), (:block,
                (:line, 87, :none),
                (:call, :new, :model, :speed, :u, :n, :s, :id, :ir)
              ))
          )),
        (:line, 89, :none),
        (:(=), (:call, :CPUinfo, (:(::), :info, :UV_cpu_info_t)), (:block,
            (:line, 89, :none),
            (:call, :CPUinfo, (:call, :unsafe_string, (:., :info, (:quote, #QuoteNode
                    :model
                  ))), (:., :info, (:quote, #QuoteNode
                  :speed
                )), (:., :info, (:quote, #QuoteNode
                  :cpu_times!user
                )), (:., :info, (:quote, #QuoteNode
                  :cpu_times!nice
                )), (:., :info, (:quote, #QuoteNode
                  :cpu_times!sys
                )), (:., :info, (:quote, #QuoteNode
                  :cpu_times!idle
                )), (:., :info, (:quote, #QuoteNode
                  :cpu_times!irq
                )))
          )),
        (:line, 93, :none),
        (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :info, :CPUinfo)), (:block,
            (:line, 93, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :_show_cpuinfo
                )), :io, :info, true, "    ")
          )),
        (:line, 95, :none),
        (:function, (:call, :_cpu_summary, (:(::), :io, :IO), (:(::), :cpu, (:curly, :Array, :CPUinfo)), :i, :j), (:block,
            (:line, 96, :none),
            (:if, (:call, :<, (:call, :-, :j, :i), 9), (:block,
                (:line, 97, :none),
                (:(=), :header, true),
                (:line, 98, :none),
                (:for, (:(=), :x, (:(:), :i, :j)), (:block,
                    (:line, 99, :none),
                    (:||, :header, (:call, :println, :io)),
                    (:line, 100, :none),
                    (:call, (:., :Base, (:quote, #QuoteNode
                          :_show_cpuinfo
                        )), :io, (:ref, :cpu, :x), :header, (:string, "#", (:call, :+, (:call, :-, :x, :i), 1), " ")),
                    (:line, 101, :none),
                    (:(=), :header, false)
                  ))
              ), (:block,
                (:line, 104, :none),
                (:(=), :summary, (:call, :CPUinfo, (:., (:ref, :cpu, :i), (:quote, #QuoteNode
                        :model
                      )), 0, 0, 0, 0, 0, 0)),
                (:line, 105, :none),
                (:(=), :count, (:call, :+, (:call, :-, :j, :i), 1)),
                (:line, 106, :none),
                (:for, (:(=), :x, (:(:), :i, :j)), (:block,
                    (:line, 107, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :speed
                        )), (:., (:ref, :cpu, :i), (:quote, #QuoteNode
                          :speed
                        ))),
                    (:line, 108, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :cpu_times!user
                        )), (:., (:ref, :cpu, :x), (:quote, #QuoteNode
                          :cpu_times!user
                        ))),
                    (:line, 109, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :cpu_times!nice
                        )), (:., (:ref, :cpu, :x), (:quote, #QuoteNode
                          :cpu_times!nice
                        ))),
                    (:line, 110, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :cpu_times!sys
                        )), (:., (:ref, :cpu, :x), (:quote, #QuoteNode
                          :cpu_times!sys
                        ))),
                    (:line, 111, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :cpu_times!idle
                        )), (:., (:ref, :cpu, :x), (:quote, #QuoteNode
                          :cpu_times!idle
                        ))),
                    (:line, 112, :none),
                    (:+=, (:., :summary, (:quote, #QuoteNode
                          :cpu_times!irq
                        )), (:., (:ref, :cpu, :x), (:quote, #QuoteNode
                          :cpu_times!irq
                        )))
                  )),
                (:line, 114, :none),
                (:(=), (:., :summary, (:quote, #QuoteNode
                      :speed
                    )), (:call, :div, (:., :summary, (:quote, #QuoteNode
                        :speed
                      )), :count)),
                (:line, 115, :none),
                (:call, (:., :Base, (:quote, #QuoteNode
                      :_show_cpuinfo
                    )), :io, :summary, true, (:string, "#1-", :count, " "))
              )),
            (:line, 117, :none),
            (:call, :println, :io)
          )),
        (:line, 120, :none),
        (:function, (:call, :cpu_summary, (:kw, (:(::), :io, :IO), :STDOUT), (:kw, (:(::), :cpu, (:curly, :Array, :CPUinfo)), (:call, :cpu_info))), (:block,
            (:line, 121, :none),
            (:(=), :model, (:., (:ref, :cpu, 1), (:quote, #QuoteNode
                  :model
                ))),
            (:line, 122, :none),
            (:(=), :first, 1),
            (:line, 123, :none),
            (:for, (:(=), :i, (:(:), 2, (:call, :length, :cpu))), (:block,
                (:line, 124, :none),
                (:if, (:call, :(!=), :model, (:., (:ref, :cpu, :i), (:quote, #QuoteNode
                        :model
                      ))), (:block,
                    (:line, 125, :none),
                    (:call, :_cpu_summary, :io, :cpu, :first, (:call, :-, :i, 1)),
                    (:line, 126, :none),
                    (:(=), :first, :i)
                  ))
              )),
            (:line, 129, :none),
            (:call, :_cpu_summary, :io, :cpu, :first, (:call, :length, :cpu))
          )),
        (:line, 132, :none),
        (:function, (:call, :cpu_info), (:block,
            (:line, 133, :none),
            (:(=), :UVcpus, (:call, (:curly, :Array, (:curly, :Ptr, :UV_cpu_info_t)), 1)),
            (:line, 134, :none),
            (:(=), :count, (:call, (:curly, :Array, :Int32), 1)),
            (:line, 135, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :uv_error
                )), "uv_cpu_info", (:ccall, (:quote, #QuoteNode
                  :uv_cpu_info
                ), :Int32, (:tuple, (:curly, :Ptr, (:curly, :Ptr, :UV_cpu_info_t)), (:curly, :Ptr, :Int32)), :UVcpus, :count)),
            (:line, 136, :none),
            (:(=), :cpus, (:call, (:curly, :Array, :CPUinfo), (:ref, :count, 1))),
            (:line, 137, :none),
            (:for, (:(=), :i, (:(:), 1, (:call, :length, :cpus))), (:block,
                (:line, 138, :none),
                (:(=), (:ref, :cpus, :i), (:call, :CPUinfo, (:call, :unsafe_load, (:ref, :UVcpus, 1), :i)))
              )),
            (:line, 140, :none),
            (:ccall, (:quote, #QuoteNode
                :uv_free_cpu_info
              ), :Void, (:tuple, (:curly, :Ptr, :UV_cpu_info_t), :Int32), (:ref, :UVcpus, 1), (:ref, :count, 1)),
            (:line, 141, :none),
            (:return, :cpus)
          )),
        (:line, 144, :none),
        (:function, (:call, :uptime), (:block,
            (:line, 145, :none),
            (:(=), :uptime_, (:call, (:curly, :Array, :Float64), 1)),
            (:line, 146, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :uv_error
                )), "uv_uptime", (:ccall, (:quote, #QuoteNode
                  :uv_uptime
                ), :Int32, (:tuple, (:curly, :Ptr, :Float64)), :uptime_)),
            (:line, 147, :none),
            (:return, (:ref, :uptime_, 1))
          )),
        (:line, 150, :none),
        (:function, (:call, :loadavg), (:block,
            (:line, 151, :none),
            (:(=), :loadavg_, (:call, (:curly, :Array, :Float64), 3)),
            (:line, 152, :none),
            (:ccall, (:quote, #QuoteNode
                :uv_loadavg
              ), :Void, (:tuple, (:curly, :Ptr, :Float64)), :loadavg_),
            (:line, 153, :none),
            (:return, :loadavg_)
          )),
        (:line, 156, :none),
        (:(=), (:call, :free_memory), (:block,
            (:line, 156, :none),
            (:ccall, (:quote, #QuoteNode
                :uv_get_free_memory
              ), :UInt64, (:tuple,))
          )),
        (:line, 157, :none),
        (:(=), (:call, :total_memory), (:block,
            (:line, 157, :none),
            (:ccall, (:quote, #QuoteNode
                :uv_get_total_memory
              ), :UInt64, (:tuple,))
          )),
        (:line, 159, :none),
        (:function, (:call, :get_process_title), (:block,
            (:line, 160, :none),
            (:(=), :buf, (:call, :zeros, :UInt8, 512)),
            (:line, 161, :none),
            (:(=), :err, (:ccall, (:quote, #QuoteNode
                  :uv_get_process_title
                ), :Cint, (:tuple, (:curly, :Ptr, :UInt8), :Cint), :buf, 512)),
            (:line, 162, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :uv_error
                )), "get_process_title", :err),
            (:line, 163, :none),
            (:return, (:call, :unsafe_string, (:call, :pointer, :buf)))
          )),
        (:line, 166, :none),
        (:function, (:call, :set_process_title, (:(::), :title, :AbstractString)), (:block,
            (:line, 167, :none),
            (:(=), :err, (:ccall, (:quote, #QuoteNode
                  :uv_set_process_title
                ), :Cint, (:tuple, :Cstring), :title)),
            (:line, 168, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :uv_error
                )), "set_process_title", :err)
          )),
        (:line, 171, :none),
        (:(=), (:call, :maxrss), (:block,
            (:line, 171, :none),
            (:ccall, (:quote, #QuoteNode
                :jl_maxrss
              ), :Csize_t, (:tuple,))
          )),
        (:line, 173, :none),
        (:if, (:call, :is_windows), (:block,
            (:line, 174, :none),
            (:function, (:call, :windows_version), (:block,
                (:line, 175, :none),
                (:(=), :verinfo, (:ccall, (:quote, #QuoteNode
                      :GetVersion
                    ), :UInt32, (:tuple,))),
                (:line, 176, :none),
                (:tuple, (:call, :Int, (:call, :&, :verinfo, 0xff)), (:call, :Int, (:call, :&, (:call, :>>, :verinfo, 8), 0xff)))
              ))
          ), (:block,
            (:line, 179, :none),
            (:(=), (:call, :windows_version), (:block,
                (:line, 179, :none),
                (:tuple, 0, 0)
              ))
          )),
        (:line, 181, :none),
        (:macrocall, :(Core.@doc), "    windows_version()\n\nReturns the version number for the Windows NT Kernel as a (major, minor) pair,\nor `(0, 0)` if this is not running on Windows.\n", :windows_version),
        (:line, 189, :none),
        (:const, (:(=), :WINDOWS_VISTA_VER, (:tuple, 6, 0)))
      ))
  ))