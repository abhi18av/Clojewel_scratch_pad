(:quote, (:block,
    (:line, 5, :none),
    (:const, (:(=), :sizeof_ios_t, (:call, :Int, (:ccall, (:quote, #QuoteNode
              :jl_sizeof_ios_t
            ), :Cint, (:tuple,))))),
    (:line, 7, :none),
    (:type, true, (:<:, :IOStream, :IO), (:block,
        (:line, 8, :none),
        (:(::), :handle, (:curly, :Ptr, :Void)),
        (:line, 9, :none),
        (:(::), :ios, (:curly, :Array, :UInt8, 1)),
        (:line, 10, :none),
        (:(::), :name, :AbstractString),
        (:line, 11, :none),
        (:(::), :mark, :Int64),
        (:line, 13, :none),
        (:(=), (:call, :IOStream, (:(::), :name, :AbstractString), (:(::), :buf, (:curly, :Array, :UInt8, 1))), (:block,
            (:line, 13, :none),
            (:call, :new, (:call, :pointer, :buf), :buf, :name, -1)
          ))
      )),
    (:line, 17, :none),
    (:function, (:call, :IOStream, (:(::), :name, :AbstractString), (:(::), :finalize, :Bool)), (:block,
        (:line, 18, :none),
        (:(=), :buf, (:call, :zeros, :UInt8, :sizeof_ios_t)),
        (:line, 19, :none),
        (:(=), :x, (:call, :IOStream, :name, :buf)),
        (:line, 20, :none),
        (:if, :finalize, (:block,
            (:line, 21, :none),
            (:call, :finalizer, :x, :close)
          )),
        (:line, 23, :none),
        (:return, :x)
      )),
    (:line, 25, :none),
    (:(=), (:call, :IOStream, (:(::), :name, :AbstractString)), (:block,
        (:line, 25, :none),
        (:call, :IOStream, :name, true)
      )),
    (:line, 27, :none),
    (:(=), (:call, :unsafe_convert, (:(::), :T, (:curly, :Type, (:curly, :Ptr, :Void))), (:(::), :s, :IOStream)), (:block,
        (:line, 27, :none),
        (:call, :convert, :T, (:call, :pointer, (:., :s, (:quote, #QuoteNode
                :ios
              ))))
      )),
    (:line, 28, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :s, :IOStream)), (:block,
        (:line, 28, :none),
        (:call, :print, :io, "IOStream(", (:., :s, (:quote, #QuoteNode
              :name
            )), ")")
      )),
    (:line, 29, :none),
    (:(=), (:call, :fd, (:(::), :s, :IOStream)), (:block,
        (:line, 29, :none),
        (:call, :Int, (:ccall, (:quote, #QuoteNode
              :jl_ios_fd
            ), :Clong, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))))
      )),
    (:line, 30, :none),
    (:(=), (:call, :stat, (:(::), :s, :IOStream)), (:block,
        (:line, 30, :none),
        (:call, :stat, (:call, :fd, :s))
      )),
    (:line, 31, :none),
    (:(=), (:call, :close, (:(::), :s, :IOStream)), (:block,
        (:line, 31, :none),
        (:ccall, (:quote, #QuoteNode
            :ios_close
          ), :Void, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
              :ios
            )))
      )),
    (:line, 32, :none),
    (:(=), (:call, :isopen, (:(::), :s, :IOStream)), (:block,
        (:line, 32, :none),
        (:call, :(!=), (:ccall, (:quote, #QuoteNode
              :ios_isopen
            ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))), 0)
      )),
    (:line, 33, :none),
    (:function, (:call, :flush, (:(::), :s, :IOStream)), (:block,
        (:line, 34, :none),
        (:call, :sigatomic_begin),
        (:line, 35, :none),
        (:(=), :bad, (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :ios_flush
              ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                  :ios
                ))), 0)),
        (:line, 36, :none),
        (:call, :sigatomic_end),
        (:line, 37, :none),
        (:call, :systemerror, "flush", :bad)
      )),
    (:line, 39, :none),
    (:(=), (:call, :iswritable, (:(::), :s, :IOStream)), (:block,
        (:line, 39, :none),
        (:call, :(!=), (:ccall, (:quote, #QuoteNode
              :ios_get_writable
            ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))), 0)
      )),
    (:line, 40, :none),
    (:(=), (:call, :isreadable, (:(::), :s, :IOStream)), (:block,
        (:line, 40, :none),
        (:call, :(!=), (:ccall, (:quote, #QuoteNode
              :ios_get_readable
            ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))), 0)
      )),
    (:line, 42, :none),
    (:function, (:call, :truncate, (:(::), :s, :IOStream), (:(::), :n, :Integer)), (:block,
        (:line, 43, :none),
        (:call, :systemerror, "truncate", (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :ios_trunc
              ), :Cint, (:tuple, (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
                  :ios
                )), :n), 0)),
        (:line, 44, :none),
        (:return, :s)
      )),
    (:line, 47, :none),
    (:function, (:call, :seek, (:(::), :s, :IOStream), (:(::), :n, :Integer)), (:block,
        (:line, 48, :none),
        (:(=), :ret, (:ccall, (:quote, #QuoteNode
              :ios_seek
            ), :Int64, (:tuple, (:curly, :Ptr, :Void), :Int64), (:., :s, (:quote, #QuoteNode
                :ios
              )), :n)),
        (:line, 49, :none),
        (:call, :systemerror, "seek", (:call, :(==), :ret, -1)),
        (:line, 50, :none),
        (:&&, (:call, :<, :ret, -1), (:call, :error, "seek failed")),
        (:line, 51, :none),
        (:return, :s)
      )),
    (:line, 54, :none),
    (:(=), (:call, :seekstart, (:(::), :s, :IO)), (:block,
        (:line, 54, :none),
        (:call, :seek, :s, 0)
      )),
    (:line, 56, :none),
    (:function, (:call, :seekend, (:(::), :s, :IOStream)), (:block,
        (:line, 57, :none),
        (:call, :systemerror, "seekend", (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :ios_seek_end
              ), :Int64, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                  :ios
                ))), 0)),
        (:line, 58, :none),
        (:return, :s)
      )),
    (:line, 61, :none),
    (:function, (:call, :skip, (:(::), :s, :IOStream), (:(::), :delta, :Integer)), (:block,
        (:line, 62, :none),
        (:(=), :ret, (:ccall, (:quote, #QuoteNode
              :ios_skip
            ), :Int64, (:tuple, (:curly, :Ptr, :Void), :Int64), (:., :s, (:quote, #QuoteNode
                :ios
              )), :delta)),
        (:line, 63, :none),
        (:call, :systemerror, "skip", (:call, :(==), :ret, -1)),
        (:line, 64, :none),
        (:&&, (:call, :<, :ret, -1), (:call, :error, "skip failed")),
        (:line, 65, :none),
        (:return, :s)
      )),
    (:line, 68, :none),
    (:function, (:call, :position, (:(::), :s, :IOStream)), (:block,
        (:line, 69, :none),
        (:(=), :pos, (:ccall, (:quote, #QuoteNode
              :ios_pos
            ), :Int64, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              )))),
        (:line, 70, :none),
        (:call, :systemerror, "position", (:call, :(==), :pos, -1)),
        (:line, 71, :none),
        (:return, :pos)
      )),
    (:line, 74, :none),
    (:(=), (:call, :eof, (:(::), :s, :IOStream)), (:block,
        (:line, 74, :none),
        (:call, :(!=), (:ccall, (:quote, #QuoteNode
              :ios_eof_blocking
            ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))), 0)
      )),
    (:line, 79, :none),
    (:function, (:call, :fdio, (:(::), :name, :AbstractString), (:(::), :fd, :Integer), (:kw, (:(::), :own, :Bool), false)), (:block,
        (:line, 80, :none),
        (:(=), :s, (:call, :IOStream, :name)),
        (:line, 81, :none),
        (:ccall, (:quote, #QuoteNode
            :ios_fd
          ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :Void), :Clong, :Cint, :Cint), (:., :s, (:quote, #QuoteNode
              :ios
            )), :fd, 0, :own),
        (:line, 83, :none),
        (:return, :s)
      )),
    (:line, 85, :none),
    (:(=), (:call, :fdio, (:(::), :fd, :Integer), (:kw, (:(::), :own, :Bool), false)), (:block,
        (:line, 85, :none),
        (:call, :fdio, (:call, :string, "<fd ", :fd, ">"), :fd, :own)
      )),
    (:line, 87, :none),
    (:function, (:call, :open, (:(::), :fname, :AbstractString), (:(::), :rd, :Bool), (:(::), :wr, :Bool), (:(::), :cr, :Bool), (:(::), :tr, :Bool), (:(::), :ff, :Bool)), (:block,
        (:line, 88, :none),
        (:(=), :s, (:call, :IOStream, (:call, :string, "<file ", :fname, ">"))),
        (:line, 89, :none),
        (:call, :systemerror, (:string, "opening file ", :fname), (:call, :(==), (:ccall, (:quote, #QuoteNode
                :ios_file
              ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :UInt8), :Cstring, :Cint, :Cint, :Cint, :Cint), (:., :s, (:quote, #QuoteNode
                  :ios
                )), :fname, :rd, :wr, :cr, :tr), :C_NULL)),
        (:line, 93, :none),
        (:if, :ff, (:block,
            (:line, 94, :none),
            (:call, :systemerror, (:string, "seeking to end of file ", :fname), (:call, :(!=), (:ccall, (:quote, #QuoteNode
                    :ios_seek_end
                  ), :Int64, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                      :ios
                    ))), 0))
          )),
        (:line, 96, :none),
        (:return, :s)
      )),
    (:line, 98, :none),
    (:(=), (:call, :open, (:(::), :fname, :AbstractString)), (:block,
        (:line, 98, :none),
        (:call, :open, :fname, true, false, false, false, false)
      )),
    (:line, 100, :none),
    (:function, (:call, :open, (:(::), :fname, :AbstractString), (:(::), :mode, :AbstractString)), (:block,
        (:line, 101, :none),
        (:if, (:call, :(==), :mode, "r"), (:call, :open, :fname, true, false, false, false, false), (:if, (:call, :(==), :mode, "r+"), (:call, :open, :fname, true, true, false, false, false), (:if, (:call, :(==), :mode, "w"), (:call, :open, :fname, false, true, true, true, false), (:if, (:call, :(==), :mode, "w+"), (:call, :open, :fname, true, true, true, true, false), (:if, (:call, :(==), :mode, "a"), (:call, :open, :fname, false, true, true, false, true), (:if, (:call, :(==), :mode, "a+"), (:call, :open, :fname, true, true, true, false, true), (:call, :throw, (:call, :ArgumentError, (:string, "invalid open mode: ", :mode)))))))))
      )),
    (:line, 110, :none),
    (:function, (:call, :open, (:(::), :f, :Function), (:..., :args)), (:block,
        (:line, 111, :none),
        (:(=), :io, (:call, :open, (:..., :args))),
        (:line, 112, :none),
        (:try, (:block,
            (:line, 113, :none),
            (:call, :f, :io)
          ), false, false, (:block,
            (:line, 115, :none),
            (:call, :close, :io)
          ))
      )),
    (:line, 121, :none),
    (:(=), (:call, :write, (:(::), :s, :IOStream), (:(::), :b, :UInt8)), (:block,
        (:line, 121, :none),
        (:call, :Int, (:ccall, (:quote, #QuoteNode
              :ios_putc
            ), :Cint, (:tuple, :Cint, (:curly, :Ptr, :Void)), :b, (:., :s, (:quote, #QuoteNode
                :ios
              ))))
      )),
    (:line, 123, :none),
    (:function, (:call, :unsafe_write, (:(::), :s, :IOStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :nb, :UInt)), (:block,
        (:line, 124, :none),
        (:if, (:call, :!, (:call, :iswritable, :s)), (:block,
            (:line, 125, :none),
            (:call, :throw, (:call, :ArgumentError, "write failed, IOStream is not writeable"))
          )),
        (:line, 127, :none),
        (:return, (:call, :Int, (:ccall, (:quote, #QuoteNode
                :ios_write
              ), :Csize_t, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
                  :ios
                )), :p, :nb)))
      )),
    (:line, 130, :none),
    (:function, (:call, (:curly, :write, :T, :N, (:<:, :A, :Array)), (:(::), :s, :IOStream), (:(::), :a, (:curly, :SubArray, :T, :N, :A))), (:block,
        (:line, 131, :none),
        (:if, (:||, (:call, :!, (:call, :isbits, :T)), (:call, :(!=), (:call, :stride, :a, 1), 1)), (:block,
            (:line, 132, :none),
            (:return, (:call, :invoke, :write, (:curly, :Tuple, :Any, :AbstractArray), :s, :a))
          )),
        (:line, 134, :none),
        (:(=), :colsz, (:call, :*, (:call, :size, :a, 1), (:call, :sizeof, :T))),
        (:line, 135, :none),
        (:if, (:call, :(<=), :N, 1), (:block,
            (:line, 136, :none),
            (:return, (:call, :unsafe_write, :s, (:call, :pointer, :a, 1), :colsz))
          ), (:block,
            (:line, 138, :none),
            (:for, (:(=), :idxs, (:call, :CartesianRange, (:tuple, 1, (:..., (:ref, (:call, :size, :a), (:(:), 2, :end)))))), (:block,
                (:line, 139, :none),
                (:call, :unsafe_write, :s, (:call, :pointer, :a, (:., :idxs, (:quote, #QuoteNode
                        :I
                      ))), :colsz)
              )),
            (:line, 141, :none),
            (:return, (:call, :*, :colsz, (:call, :trailingsize, :a, 2)))
          ))
      )),
    (:line, 146, :none),
    (:(=), (:call, :nb_available, (:(::), :s, :IOStream)), (:block,
        (:line, 146, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_nb_available
          ), :Int32, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
              :ios
            )))
      )),
    (:line, 148, :none),
    (:(=), (:call, :readavailable, (:(::), :s, :IOStream)), (:block,
        (:line, 148, :none),
        (:call, :read!, :s, (:call, (:curly, :Vector, :UInt8), (:call, :nb_available, :s)))
      )),
    (:line, 150, :none),
    (:function, (:call, :read, (:(::), :s, :IOStream), (:(::), (:curly, :Type, :UInt8))), (:block,
        (:line, 151, :none),
        (:(=), :b, (:ccall, (:quote, #QuoteNode
              :ios_getc
            ), :Cint, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              )))),
        (:line, 152, :none),
        (:if, (:call, :(==), :b, -1), (:block,
            (:line, 153, :none),
            (:call, :throw, (:call, :EOFError))
          )),
        (:line, 155, :none),
        (:return, (:call, :%, :b, :UInt8))
      )),
    (:line, 158, :none),
    (:if, (:call, :(==), :ENDIAN_BOM, 0x04030201), (:block,
        (:line, 159, :none),
        (:function, (:call, :read, (:(::), :s, :IOStream), (:(::), :T, (:curly, :Union, (:curly, :Type, :Int16), (:curly, :Type, :UInt16), (:curly, :Type, :Int32), (:curly, :Type, :UInt32), (:curly, :Type, :Int64), (:curly, :Type, :UInt64)))), (:block,
            (:line, 160, :none),
            (:return, (:call, :%, (:ccall, (:quote, #QuoteNode
                    :jl_ios_get_nbyte_int
                  ), :UInt64, (:tuple, (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
                      :ios
                    )), (:call, :sizeof, :T)), :T))
          ))
      )),
    (:line, 164, :none),
    (:function, (:call, :unsafe_read, (:(::), :s, :IOStream), (:(::), :p, (:curly, :Ptr, :UInt8)), (:(::), :nb, :UInt)), (:block,
        (:line, 165, :none),
        (:if, (:call, :(!=), (:ccall, (:quote, #QuoteNode
                :ios_readall
              ), :Csize_t, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Csize_t), :s, :p, :nb), :nb), (:block,
            (:line, 167, :none),
            (:call, :throw, (:call, :EOFError))
          )),
        (:line, 169, :none),
        :nothing
      )),
    (:line, 174, :none),
    (:function, (:call, :write, (:(::), :s, :IOStream), (:(::), :c, :Char)), (:block,
        (:line, 175, :none),
        (:if, (:call, :!, (:call, :iswritable, :s)), (:block,
            (:line, 176, :none),
            (:call, :throw, (:call, :ArgumentError, "write failed, IOStream is not writeable"))
          )),
        (:line, 178, :none),
        (:call, :Int, (:ccall, (:quote, #QuoteNode
              :ios_pututf8
            ), :Cint, (:tuple, (:curly, :Ptr, :Void), :UInt32), (:., :s, (:quote, #QuoteNode
                :ios
              )), :c))
      )),
    (:line, 180, :none),
    (:(=), (:call, :read, (:(::), :s, :IOStream), (:(::), (:curly, :Type, :Char))), (:block,
        (:line, 180, :none),
        (:call, :Char, (:ccall, (:quote, #QuoteNode
              :jl_getutf8
            ), :UInt32, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              ))))
      )),
    (:line, 182, :none),
    (:(=), (:call, :takebuf_string, (:(::), :s, :IOStream)), (:block,
        (:line, 182, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_takebuf_string
          ), (:curly, :Ref, :String), (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
              :ios
            )))
      )),
    (:line, 185, :none),
    (:(=), (:call, :takebuf_array, (:(::), :s, :IOStream)), (:block,
        (:line, 185, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_takebuf_array
          ), (:curly, :Vector, :UInt8), (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
              :ios
            )))
      )),
    (:line, 188, :none),
    (:function, (:call, :takebuf_raw, (:(::), :s, :IOStream)), (:block,
        (:line, 189, :none),
        (:(=), :sz, (:call, :position, :s)),
        (:line, 190, :none),
        (:(=), :buf, (:ccall, (:quote, #QuoteNode
              :jl_takebuf_raw
            ), (:curly, :Ptr, :UInt8), (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                :ios
              )))),
        (:line, 191, :none),
        (:return, (:tuple, :buf, :sz))
      )),
    (:line, 194, :none),
    (:(=), (:call, :write, :x), (:block,
        (:line, 194, :none),
        (:call, :write, (:(::), :STDOUT, :IO), :x)
      )),
    (:line, 196, :none),
    (:function, (:call, :readuntil, (:(::), :s, :IOStream), (:(::), :delim, :UInt8)), (:block,
        (:line, 197, :none),
        (:ccall, (:quote, #QuoteNode
            :jl_readuntil
          ), (:curly, :Array, :UInt8, 1), (:tuple, (:curly, :Ptr, :Void), :UInt8), (:., :s, (:quote, #QuoteNode
              :ios
            )), :delim)
      )),
    (:line, 200, :none),
    (:function, (:call, :readbytes_all!, (:(::), :s, :IOStream), (:(::), :b, (:curly, :Array, :UInt8)), :nb), (:block,
        (:line, 201, :none),
        (:(=), :olb, (:(=), :lb, (:call, :length, :b))),
        (:line, 202, :none),
        (:(=), :nr, 0),
        (:line, 203, :none),
        (:while, (:call, :<, :nr, :nb), (:block,
            (:line, 204, :none),
            (:if, (:call, :<, :lb, (:call, :+, :nr, 1)), (:block,
                (:line, 205, :none),
                (:(=), :lb, (:call, :max, 65536, (:call, :*, (:call, :+, :nr, 1), 2))),
                (:line, 206, :none),
                (:call, :resize!, :b, :lb)
              )),
            (:line, 208, :none),
            (:+=, :nr, (:call, :Int, (:ccall, (:quote, #QuoteNode
                    :ios_readall
                  ), :Csize_t, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
                      :ios
                    )), (:call, :pointer, :b, (:call, :+, :nr, 1)), (:call, :min, (:call, :-, :lb, :nr), (:call, :-, :nb, :nr))))),
            (:line, 210, :none),
            (:&&, (:call, :eof, :s), (:break,))
          )),
        (:line, 212, :none),
        (:if, (:&&, (:call, :>, :lb, :olb), (:call, :>, :lb, :nr)), (:block,
            (:line, 213, :none),
            (:call, :resize!, :b, :nr)
          )),
        (:line, 215, :none),
        (:return, :nr)
      )),
    (:line, 218, :none),
    (:function, (:call, :readbytes_some!, (:(::), :s, :IOStream), (:(::), :b, (:curly, :Array, :UInt8)), :nb), (:block,
        (:line, 219, :none),
        (:(=), :olb, (:(=), :lb, (:call, :length, :b))),
        (:line, 220, :none),
        (:if, (:call, :>, :nb, :lb), (:block,
            (:line, 221, :none),
            (:call, :resize!, :b, :nb)
          )),
        (:line, 223, :none),
        (:(=), :nr, (:call, :Int, (:ccall, (:quote, #QuoteNode
                :ios_read
              ), :Csize_t, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
                  :ios
                )), (:call, :pointer, :b), :nb))),
        (:line, 225, :none),
        (:if, (:&&, (:call, :>, :lb, :olb), (:call, :>, :lb, :nr)), (:block,
            (:line, 226, :none),
            (:call, :resize!, :b, :nr)
          )),
        (:line, 228, :none),
        (:return, :nr)
      )),
    (:line, 231, :none),
    (:function, (:call, :readbytes!, (:parameters, (:kw, (:(::), :all, :Bool), true)), (:(::), :s, :IOStream), (:(::), :b, (:curly, :Array, :UInt8)), (:kw, :nb, (:call, :length, :b))), (:block,
        (:line, 232, :none),
        (:return, (:if, :all, (:call, :readbytes_all!, :s, :b, :nb), (:call, :readbytes_some!, :s, :b, :nb)))
      )),
    (:line, 235, :none),
    (:function, (:call, :read, (:(::), :s, :IOStream)), (:block,
        (:line, 236, :none),
        (:(=), :sz, 0),
        (:line, 237, :none),
        (:try, (:block,
            (:line, 238, :none),
            (:(=), :sz, (:call, :filesize, :s)),
            (:line, 239, :none),
            (:(=), :pos, (:ccall, (:quote, #QuoteNode
                  :ios_pos
                ), :Int64, (:tuple, (:curly, :Ptr, :Void)), (:., :s, (:quote, #QuoteNode
                    :ios
                  )))),
            (:line, 240, :none),
            (:if, (:call, :>, :pos, 0), (:block,
                (:line, 241, :none),
                (:-=, :sz, :pos)
              ))
          ), false, (:block,)),
        (:line, 244, :none),
        (:(=), :b, (:call, (:curly, :Array, :UInt8), (:if, (:call, :(<=), :sz, 0), 1024, :sz))),
        (:line, 245, :none),
        (:(=), :nr, (:call, :readbytes_all!, :s, :b, (:call, :typemax, :Int))),
        (:line, 246, :none),
        (:call, :resize!, :b, :nr)
      )),
    (:line, 249, :none),
    "    read(s::IOStream, nb::Integer; all=true)\n\nRead at most `nb` bytes from `s`, returning a `Vector{UInt8}` of the bytes read.\n\nIf `all` is `true` (the default), this function will block repeatedly trying to read all\nrequested bytes, until an error or end-of-file occurs. If `all` is `false`, at most one\n`read` call is performed, and the amount of data returned is device-dependent. Note that not\nall stream types support the `all` option.\n",
    (:line, 259, :none),
    (:function, (:call, :read, (:parameters, (:kw, (:(::), :all, :Bool), true)), (:(::), :s, :IOStream), (:(::), :nb, :Integer)), (:block,
        (:line, 260, :none),
        (:(=), :b, (:call, (:curly, :Array, :UInt8), :nb)),
        (:line, 261, :none),
        (:(=), :nr, (:call, :readbytes!, :s, :b, :nb, (:kw, :all, :all))),
        (:line, 262, :none),
        (:call, :resize!, :b, :nr)
      )),
    (:line, 266, :none),
    (:const, (:(=), :_chtmp, (:call, (:curly, :Array, :Char), 1))),
    (:line, 267, :none),
    (:function, (:call, :peekchar, (:(::), :s, :IOStream)), (:block,
        (:line, 268, :none),
        (:if, (:call, :<, (:ccall, (:quote, #QuoteNode
                :ios_peekutf8
              ), :Cint, (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Char)), :s, :_chtmp), 0), (:block,
            (:line, 269, :none),
            (:return, (:call, :Char, -1))
          )),
        (:line, 271, :none),
        (:return, (:ref, :_chtmp, 1))
      )),
    (:line, 274, :none),
    (:function, (:call, :peek, (:(::), :s, :IOStream)), (:block,
        (:line, 275, :none),
        (:ccall, (:quote, #QuoteNode
            :ios_peekc
          ), :Cint, (:tuple, (:curly, :Ptr, :Void)), :s)
      )),
    (:line, 278, :none),
    (:function, (:call, :skipchars, (:parameters, (:kw, (:(::), :linecomment, :Char), (:call, :Char, 0xffffffff))), (:(::), :s, :IOStream), :pred), (:block,
        (:line, 279, :none),
        (:(=), :ch, (:call, :peekchar, :s)),
        (:line, 279, :none),
        (:(=), :status, (:call, :Int, :ch)),
        (:line, 280, :none),
        (:while, (:&&, (:call, :(>=), :status, 0), (:||, (:call, :pred, :ch), (:call, :(==), :ch, :linecomment))), (:block,
            (:line, 281, :none),
            (:if, (:call, :(==), :ch, :linecomment), (:block,
                (:line, 282, :none),
                (:call, :readline, :s)
              ), (:block,
                (:line, 284, :none),
                (:call, :read, :s, :Char)
              )),
            (:line, 286, :none),
            (:(=), :ch, (:call, :peekchar, :s)),
            (:line, 286, :none),
            (:(=), :status, (:call, :Int, :ch))
          )),
        (:line, 288, :none),
        (:return, :s)
      ))
  ))