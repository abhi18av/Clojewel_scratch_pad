(:quote, (:block,
    (:line, 5, :none),
    (:function, (:call, :shell_parse, (:(::), :raw, :AbstractString), (:(::), :interp, :Bool)), (:block,
        (:line, 6, :none),
        (:(=), :s, (:call, :lstrip, :raw)),
        (:line, 8, :none),
        (:(=), :r, (:call, :RevString, :s)),
        (:line, 9, :none),
        (:(=), :i, (:call, :start, :r)),
        (:line, 10, :none),
        (:(=), :c_old, :nothing),
        (:line, 11, :none),
        (:while, (:call, :!, (:call, :done, :r, :i)), (:block,
            (:line, 12, :none),
            (:(=), (:tuple, :c, :j), (:call, :next, :r, :i)),
            (:line, 13, :none),
            (:if, (:&&, (:call, :(==), :c, '\\'), (:call, :(==), :c_old, ' ')), (:block,
                (:line, 14, :none),
                (:-=, :i, 1),
                (:line, 15, :none),
                (:break,)
              ), (:block,
                (:line, 16, :none),
                (:if, (:call, :!, (:call, :in, :c, :_default_delims)), (:block,
                    (:line, 17, :none),
                    (:break,)
                  ))
              )),
            (:line, 19, :none),
            (:(=), :i, :j),
            (:line, 20, :none),
            (:(=), :c_old, :c)
          )),
        (:line, 22, :none),
        (:(=), :s, (:ref, :s, (:(:), 1, (:call, :+, (:call, :-, :end, :i), 1)))),
        (:line, 24, :none),
        (:(=), :last_parse, (:(:), 0, -1)),
        (:line, 25, :none),
        (:&&, (:call, :isempty, :s), (:return, (:if, :interp, (:tuple, (:call, :Expr, (:quote, #QuoteNode
                    :tuple
                  ), (:quote, (:tuple,))), :last_parse), (:tuple, (:vect,), :last_parse)))),
        (:line, 27, :none),
        (:(=), :in_single_quotes, false),
        (:line, 28, :none),
        (:(=), :in_double_quotes, false),
        (:line, 30, :none),
        (:(=), (:(::), :args, (:curly, :Vector, :Any)), (:vect,)),
        (:line, 31, :none),
        (:(=), (:(::), :arg, (:curly, :Vector, :Any)), (:vect,)),
        (:line, 32, :none),
        (:(=), :i, (:call, :start, :s)),
        (:line, 33, :none),
        (:(=), :j, :i),
        (:line, 35, :none),
        (:function, (:call, :update_arg, :x), (:block,
            (:line, 36, :none),
            (:if, (:||, (:call, :!, (:call, :isa, :x, :AbstractString)), (:call, :!, (:call, :isempty, :x))), (:block,
                (:line, 37, :none),
                (:call, :push!, :arg, :x)
              ))
          )),
        (:line, 40, :none),
        (:function, (:call, :append_arg), (:block,
            (:line, 41, :none),
            (:if, (:call, :isempty, :arg), (:block,
                (:line, 41, :none),
                (:(=), :arg, (:ref, :Any, ""))
              )),
            (:line, 42, :none),
            (:call, :push!, :args, :arg),
            (:line, 43, :none),
            (:(=), :arg, (:vect,))
          )),
        (:line, 46, :none),
        (:while, (:call, :!, (:call, :done, :s, :j)), (:block,
            (:line, 47, :none),
            (:(=), (:tuple, :c, :k), (:call, :next, :s, :j)),
            (:line, 48, :none),
            (:if, (:&&, (:call, :!, :in_single_quotes), (:&&, (:call, :!, :in_double_quotes), (:call, :isspace, :c))), (:block,
                (:line, 49, :none),
                (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                (:line, 50, :none),
                (:call, :append_arg),
                (:line, 51, :none),
                (:(=), :j, :k),
                (:line, 52, :none),
                (:while, (:call, :!, (:call, :done, :s, :j)), (:block,
                    (:line, 53, :none),
                    (:(=), (:tuple, :c, :k), (:call, :next, :s, :j)),
                    (:line, 54, :none),
                    (:if, (:call, :!, (:call, :isspace, :c)), (:block,
                        (:line, 55, :none),
                        (:(=), :i, :j),
                        (:line, 56, :none),
                        (:break,)
                      )),
                    (:line, 58, :none),
                    (:(=), :j, :k)
                  ))
              ), (:block,
                (:line, 60, :none),
                (:if, (:&&, :interp, (:&&, (:call, :!, :in_single_quotes), (:call, :(==), :c, '$'))), (:block,
                    (:line, 61, :none),
                    (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                    (:line, 61, :none),
                    (:(=), :i, :k),
                    (:line, 61, :none),
                    (:(=), :j, :k),
                    (:line, 62, :none),
                    (:if, (:call, :done, :s, :k), (:block,
                        (:line, 63, :none),
                        (:call, :error, "\$ right before end of command")
                      )),
                    (:line, 65, :none),
                    (:if, (:call, :isspace, (:ref, :s, :k)), (:block,
                        (:line, 66, :none),
                        (:call, :error, "space not allowed right after \$")
                      )),
                    (:line, 68, :none),
                    (:(=), :stpos, :j),
                    (:line, 69, :none),
                    (:(=), (:tuple, :ex, :j), (:call, :parse, :s, :j, (:kw, :greedy, false))),
                    (:line, 70, :none),
                    (:(=), :last_parse, (:(:), :stpos, :j)),
                    (:line, 71, :none),
                    (:call, :update_arg, (:call, :esc, :ex)),
                    (:line, 71, :none),
                    (:(=), :i, :j)
                  ), (:block,
                    (:line, 73, :none),
                    (:if, (:&&, (:call, :!, :in_double_quotes), (:call, :(==), :c, '\'')), (:block,
                        (:line, 74, :none),
                        (:(=), :in_single_quotes, (:call, :!, :in_single_quotes)),
                        (:line, 75, :none),
                        (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                        (:line, 75, :none),
                        (:(=), :i, :k)
                      ), (:block,
                        (:line, 76, :none),
                        (:if, (:&&, (:call, :!, :in_single_quotes), (:call, :(==), :c, '"')), (:block,
                            (:line, 77, :none),
                            (:(=), :in_double_quotes, (:call, :!, :in_double_quotes)),
                            (:line, 78, :none),
                            (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                            (:line, 78, :none),
                            (:(=), :i, :k)
                          ), (:block,
                            (:line, 79, :none),
                            (:if, (:call, :(==), :c, '\\'), (:block,
                                (:line, 80, :none),
                                (:if, :in_double_quotes, (:block,
                                    (:line, 81, :none),
                                    (:if, (:call, :done, :s, :k), (:block,
                                        (:line, 82, :none),
                                        (:call, :error, "unterminated double quote")
                                      )),
                                    (:line, 84, :none),
                                    (:if, (:||, (:call, :(==), (:ref, :s, :k), '"'), (:||, (:call, :(==), (:ref, :s, :k), '$'), (:call, :(==), (:ref, :s, :k), '\\'))), (:block,
                                        (:line, 85, :none),
                                        (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                                        (:line, 85, :none),
                                        (:(=), :i, :k),
                                        (:line, 86, :none),
                                        (:(=), (:tuple, :c, :k), (:call, :next, :s, :k))
                                      ))
                                  ), (:block,
                                    (:line, 88, :none),
                                    (:if, (:call, :!, :in_single_quotes), (:block,
                                        (:line, 89, :none),
                                        (:if, (:call, :done, :s, :k), (:block,
                                            (:line, 90, :none),
                                            (:call, :error, "dangling backslash")
                                          )),
                                        (:line, 92, :none),
                                        (:call, :update_arg, (:ref, :s, (:(:), :i, (:call, :-, :j, 1)))),
                                        (:line, 92, :none),
                                        (:(=), :i, :k),
                                        (:line, 93, :none),
                                        (:(=), (:tuple, :c, :k), (:call, :next, :s, :k))
                                      ))
                                  ))
                              ))
                          ))
                      )),
                    (:line, 96, :none),
                    (:(=), :j, :k)
                  ))
              ))
          )),
        (:line, 100, :none),
        (:if, :in_single_quotes, (:block,
            (:line, 100, :none),
            (:call, :error, "unterminated single quote")
          )),
        (:line, 101, :none),
        (:if, :in_double_quotes, (:block,
            (:line, 101, :none),
            (:call, :error, "unterminated double quote")
          )),
        (:line, 103, :none),
        (:call, :update_arg, (:ref, :s, (:(:), :i, :end))),
        (:line, 104, :none),
        (:call, :append_arg),
        (:line, 106, :none),
        (:if, (:call, :!, :interp), (:block,
            (:line, 107, :none),
            (:return, (:tuple, :args, :last_parse))
          )),
        (:line, 111, :none),
        (:(=), :ex, (:call, :Expr, (:quote, #QuoteNode
              :tuple
            ))),
        (:line, 112, :none),
        (:for, (:(=), :arg, :args), (:block,
            (:line, 113, :none),
            (:call, :push!, (:., :ex, (:quote, #QuoteNode
                  :args
                )), (:call, :Expr, (:quote, #QuoteNode
                  :tuple
                ), (:..., :arg)))
          )),
        (:line, 115, :none),
        (:tuple, :ex, :last_parse)
      )),
    (:line, 117, :none),
    (:(=), (:call, :shell_parse, (:(::), :s, :AbstractString)), (:block,
        (:line, 117, :none),
        (:call, :shell_parse, :s, true)
      )),
    (:line, 119, :none),
    (:function, (:call, :shell_split, (:(::), :s, :AbstractString)), (:block,
        (:line, 120, :none),
        (:(=), :parsed, (:ref, (:call, :shell_parse, :s, false), 1)),
        (:line, 121, :none),
        (:(=), :args, (:ref, :AbstractString)),
        (:line, 122, :none),
        (:for, (:(=), :arg, :parsed), (:block,
            (:line, 123, :none),
            (:call, :push!, :args, (:call, :string, (:..., :arg)))
          )),
        (:line, 125, :none),
        :args
      )),
    (:line, 128, :none),
    (:function, (:call, :print_shell_word, (:(::), :io, :IO), (:(::), :word, :AbstractString)), (:block,
        (:line, 129, :none),
        (:if, (:call, :isempty, :word), (:block,
            (:line, 130, :none),
            (:call, :print, :io, "''")
          )),
        (:line, 132, :none),
        (:(=), :has_single, false),
        (:line, 133, :none),
        (:(=), :has_special, false),
        (:line, 134, :none),
        (:for, (:(=), :c, :word), (:block,
            (:line, 135, :none),
            (:if, (:||, (:call, :isspace, :c), (:||, (:call, :(==), :c, '\\'), (:||, (:call, :(==), :c, '\''), (:||, (:call, :(==), :c, '"'), (:call, :(==), :c, '$'))))), (:block,
                (:line, 136, :none),
                (:(=), :has_special, true),
                (:line, 137, :none),
                (:if, (:call, :(==), :c, '\''), (:block,
                    (:line, 138, :none),
                    (:(=), :has_single, true)
                  ))
              ))
          )),
        (:line, 142, :none),
        (:if, (:call, :!, :has_special), (:block,
            (:line, 143, :none),
            (:call, :print, :io, :word)
          ), (:block,
            (:line, 144, :none),
            (:if, (:call, :!, :has_single), (:block,
                (:line, 145, :none),
                (:call, :print, :io, '\'', :word, '\'')
              ), (:block,
                (:line, 147, :none),
                (:call, :print, :io, '"'),
                (:line, 148, :none),
                (:for, (:(=), :c, :word), (:block,
                    (:line, 149, :none),
                    (:if, (:||, (:call, :(==), :c, '"'), (:call, :(==), :c, '$')), (:block,
                        (:line, 150, :none),
                        (:call, :print, :io, '\\')
                      )),
                    (:line, 152, :none),
                    (:call, :print, :io, :c)
                  )),
                (:line, 154, :none),
                (:call, :print, :io, '"')
              ))
          ))
      )),
    (:line, 158, :none),
    (:function, (:call, :print_shell_escaped, (:(::), :io, :IO), (:(::), :cmd, :AbstractString), (:..., (:(::), :args, :AbstractString))), (:block,
        (:line, 159, :none),
        (:call, :print_shell_word, :io, :cmd),
        (:line, 160, :none),
        (:for, (:(=), :arg, :args), (:block,
            (:line, 161, :none),
            (:call, :print, :io, ' '),
            (:line, 162, :none),
            (:call, :print_shell_word, :io, :arg)
          ))
      )),
    (:line, 165, :none),
    (:(=), (:call, :print_shell_escaped, (:(::), :io, :IO)), (:block,
        (:line, 165, :none),
        :nothing
      )),
    (:line, 167, :none),
    (:(=), (:call, :shell_escape, (:..., (:(::), :args, :AbstractString))), (:block,
        (:line, 167, :none),
        (:call, :sprint, :print_shell_escaped, (:..., :args))
      ))
  ))