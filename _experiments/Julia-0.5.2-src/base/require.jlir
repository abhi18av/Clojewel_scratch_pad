(:quote, (:block,
    (:line, 4, :none),
    (:module, true, :OldRequire, (:block,
        (:line, 4, :none),
        (:line, 6, :none),
        (:function, (:call, :find_in_path, (:(::), :name, :AbstractString)), (:block,
            (:line, 7, :none),
            (:&&, (:call, :isabspath, :name), (:return, :name)),
            (:line, 8, :none),
            (:&&, (:call, :isfile, :name), (:return, (:call, :abspath, :name))),
            (:line, 9, :none),
            (:(=), :base, :name),
            (:line, 10, :none),
            (:if, (:call, :endswith, :name, ".jl"), (:block,
                (:line, 11, :none),
                (:(=), :base, (:ref, :name, (:(:), 1, (:call, :-, :end, 3))))
              ), (:block,
                (:line, 13, :none),
                (:(=), :name, (:call, :string, :base, ".jl")),
                (:line, 14, :none),
                (:&&, (:call, :isfile, :name), (:return, (:call, :abspath, :name)))
              )),
            (:line, 16, :none),
            (:for, (:(=), :prefix, (:vcat, (:call, (:., :Pkg, (:quote, #QuoteNode
                        :dir
                      ))), :LOAD_PATH)), (:block,
                (:line, 17, :none),
                (:(=), :path, (:call, :joinpath, :prefix, :name)),
                (:line, 18, :none),
                (:&&, (:call, :isfile, :path), (:return, (:call, :abspath, :path))),
                (:line, 19, :none),
                (:(=), :path, (:call, :joinpath, :prefix, :base, "src", :name)),
                (:line, 20, :none),
                (:&&, (:call, :isfile, :path), (:return, (:call, :abspath, :path))),
                (:line, 21, :none),
                (:(=), :path, (:call, :joinpath, :prefix, :name, "src", :name)),
                (:line, 22, :none),
                (:&&, (:call, :isfile, :path), (:return, (:call, :abspath, :path)))
              )),
            (:line, 24, :none),
            (:return, :nothing)
          )),
        (:line, 27, :none),
        (:(=), (:call, :find_in_node1_path, :name), (:block,
            (:line, 27, :none),
            (:if, (:call, :(==), (:call, :myid), 1), (:call, :find_in_path, :name), (:call, :remotecall_fetch, :find_in_path, 1, :name))
          )),
        (:line, 31, :none),
        (:(=), :package_list, (:call, (:curly, :Dict, :String, :Float64))),
        (:line, 33, :none),
        (:(=), :package_locks, (:call, (:curly, :Dict, :String, :Any))),
        (:line, 36, :none),
        (:(=), :toplevel_load, true),
        (:line, 38, :none),
        (:(=), (:call, :require, (:(::), :fname, :AbstractString)), (:block,
            (:line, 38, :none),
            (:call, :require, (:call, :String, :fname))
          )),
        (:line, 39, :none),
        (:(=), (:call, :require, (:(::), :f, :AbstractString), (:..., (:(::), :fs, :AbstractString))), (:block,
            (:line, 39, :none),
            (:block,
              (:call, :require, :f),
              (:for, (:(=), :x, :fs), (:block,
                  (:line, 39, :none),
                  (:call, :require, :x)
                ))
            )
          )),
        (:line, 41, :none),
        (:function, (:call, :require, (:(::), :name, :String)), (:block,
            (:line, 42, :none),
            (:(=), :path, (:call, :find_in_node1_path, :name)),
            (:line, 43, :none),
            (:&&, (:call, :(===), :path, :nothing), (:call, :error, (:string, :name, " not found"))),
            (:line, 45, :none),
            (:if, (:&&, (:call, :(==), (:call, :myid), 1), :toplevel_load), (:block,
                (:line, 46, :none),
                (:(=), :refs, (:typed_comprehension, :Any, (:generator, (:macrocall, Symbol("@spawnat"), :p, (:call, :_require, :path)), (:(=), :p, (:call, :filter, (:->, :x, (:block,
                              (:line, 46, :none),
                              (:call, :(!=), :x, 1)
                            )), (:call, :procs)))))),
                (:line, 47, :none),
                (:call, :_require, :path),
                (:line, 48, :none),
                (:for, (:(=), :r, :refs), (:block,
                    (:line, 48, :none),
                    (:call, :wait, :r)
                  ))
              ), (:block,
                (:line, 50, :none),
                (:call, :_require, :path)
              )),
            (:line, 52, :none),
            :nothing
          )),
        (:line, 55, :none),
        (:function, (:call, :_require, :path), (:block,
            (:line, 56, :none),
            (:global, :toplevel_load),
            (:line, 57, :none),
            (:if, (:call, :haskey, :package_list, :path), (:block,
                (:line, 58, :none),
                (:call, :wait, (:ref, :package_locks, :path))
              ), (:block,
                (:line, 60, :none),
                (:(=), :last, :toplevel_load),
                (:line, 61, :none),
                (:(=), :toplevel_load, false),
                (:line, 62, :none),
                (:try, (:block,
                    (:line, 63, :none),
                    (:call, :reload_path, :path)
                  ), false, false, (:block,
                    (:line, 65, :none),
                    (:(=), :toplevel_load, :last)
                  ))
              ))
          )),
        (:line, 72, :none),
        (:function, (:call, :source_path, (:kw, (:(::), :default, (:curly, :Union, :AbstractString, :Void)), "")), (:block,
            (:line, 73, :none),
            (:(=), :t, (:call, :current_task)),
            (:line, 74, :none),
            (:while, true, (:block,
                (:line, 75, :none),
                (:(=), :s, (:., :t, (:quote, #QuoteNode
                      :storage
                    ))),
                (:line, 76, :none),
                (:if, (:&&, (:call, :!, (:call, :is, :s, :nothing)), (:call, :haskey, :s, (:quote, #QuoteNode
                        :SOURCE_PATH
                      ))), (:block,
                    (:line, 77, :none),
                    (:return, (:ref, :s, (:quote, #QuoteNode
                          :SOURCE_PATH
                        )))
                  )),
                (:line, 79, :none),
                (:if, (:call, :is, :t, (:., :t, (:quote, #QuoteNode
                        :parent
                      ))), (:block,
                    (:line, 80, :none),
                    (:return, :default)
                  )),
                (:line, 82, :none),
                (:(=), :t, (:., :t, (:quote, #QuoteNode
                      :parent
                    )))
              ))
          )),
        (:line, 86, :none),
        (:function, (:call, :include_from_node1, (:(::), :path, :AbstractString)), (:block,
            (:line, 87, :none),
            (:(=), :prev, (:call, :source_path, :nothing)),
            (:line, 88, :none),
            (:(=), :path, (:if, (:call, :(===), :prev, :nothing), (:call, :abspath, :path), (:call, :joinpath, (:call, :dirname, :prev), :path))),
            (:line, 89, :none),
            (:(=), :tls, (:call, :task_local_storage)),
            (:line, 90, :none),
            (:(=), (:ref, :tls, (:quote, #QuoteNode
                  :SOURCE_PATH
                )), :path),
            (:line, 91, :none),
            (:local, :result),
            (:line, 92, :none),
            (:try, (:block,
                (:line, 93, :none),
                (:if, (:call, :(==), (:call, :myid), 1), (:block,
                    (:line, 95, :none),
                    (:&&, (:call, :>, (:call, :nprocs), 1), (:call, :sleep, 0.005)),
                    (:line, 96, :none),
                    (:(=), :result, (:call, (:., :Core, (:quote, #QuoteNode
                            :include
                          )), :path)),
                    (:line, 97, :none),
                    (:&&, (:call, :>, (:call, :nprocs), 1), (:call, :sleep, 0.005))
                  ), (:block,
                    (:line, 99, :none),
                    (:(=), :result, (:call, :include_string, (:call, :remotecall_fetch, :readstring, 1, :path), :path))
                  ))
              ), false, false, (:block,
                (:line, 102, :none),
                (:if, (:call, :(===), :prev, :nothing), (:block,
                    (:line, 103, :none),
                    (:call, :delete!, :tls, (:quote, #QuoteNode
                        :SOURCE_PATH
                      ))
                  ), (:block,
                    (:line, 105, :none),
                    (:(=), (:ref, :tls, (:quote, #QuoteNode
                          :SOURCE_PATH
                        )), :prev)
                  ))
              )),
            (:line, 108, :none),
            :result
          )),
        (:line, 111, :none),
        (:function, (:call, :reload_path, (:(::), :path, :AbstractString)), (:block,
            (:line, 112, :none),
            (:(=), :had, (:call, :haskey, :package_list, :path)),
            (:line, 113, :none),
            (:if, (:call, :!, :had), (:block,
                (:line, 114, :none),
                (:(=), (:ref, :package_locks, :path), (:call, :RemoteChannel))
              )),
            (:line, 116, :none),
            (:(=), (:ref, :package_list, :path), (:call, :time)),
            (:line, 117, :none),
            (:(=), :tls, (:call, :task_local_storage)),
            (:line, 118, :none),
            (:(=), :prev, (:call, :pop!, :tls, (:quote, #QuoteNode
                  :SOURCE_PATH
                ), :nothing)),
            (:line, 119, :none),
            (:try, (:block,
                (:line, 120, :none),
                (:call, :eval, :Main, (:quote, (:call, (:., :Base, (:quote, #QuoteNode
                          :include_from_node1
                        )), (:$, :path))))
              ), :e, (:block,
                (:line, 122, :none),
                (:||, :had, (:call, :delete!, :package_list, :path)),
                (:line, 123, :none),
                (:call, :rethrow, :e)
              ), (:block,
                (:line, 125, :none),
                (:if, (:call, :(!==), :prev, :nothing), (:block,
                    (:line, 126, :none),
                    (:(=), (:ref, :tls, (:quote, #QuoteNode
                          :SOURCE_PATH
                        )), :prev)
                  ))
              )),
            (:line, 129, :none),
            (:if, (:call, :!, (:call, :isready, (:ref, :package_locks, :path))), (:block,
                (:line, 130, :none),
                (:call, :put!, (:ref, :package_locks, :path), :nothing)
              )),
            (:line, 132, :none),
            :nothing
          ))
      ))
  ))