(:quote, (:block,
    (:line, 3, :none),
    (:type, false, (:<:, (:curly, :Complex, (:<:, :T, :Real)), :Number), (:block,
        (:line, 4, :none),
        (:(::), :re, :T),
        (:line, 5, :none),
        (:(::), :im, :T)
      )),
    (:line, 7, :none),
    (:(=), (:call, :Complex, (:(::), :x, :Real), (:(::), :y, :Real)), (:block,
        (:line, 7, :none),
        (:call, :Complex, (:..., (:call, :promote, :x, :y)))
      )),
    (:line, 8, :none),
    (:(=), (:call, :Complex, (:(::), :x, :Real)), (:block,
        (:line, 8, :none),
        (:call, :Complex, :x, (:call, :zero, :x))
      )),
    (:line, 10, :none),
    "    im\n\nThe imaginary unit.\n",
    (:line, 15, :none),
    (:const, (:(=), :im, (:call, :Complex, false, true))),
    (:line, 17, :none),
    (:typealias, :Complex128, (:curly, :Complex, :Float64)),
    (:line, 18, :none),
    (:typealias, :Complex64, (:curly, :Complex, :Float32)),
    (:line, 19, :none),
    (:typealias, :Complex32, (:curly, :Complex, :Float16)),
    (:line, 21, :none),
    (:(=), (:call, (:curly, :convert, (:<:, :T, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T))), (:(::), :x, :Real)), (:block,
        (:line, 21, :none),
        (:call, (:curly, :Complex, :T), :x, 0)
      )),
    (:line, 22, :none),
    (:(=), (:call, (:curly, :convert, (:<:, :T, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T))), (:(::), :z, :Complex)), (:block,
        (:line, 22, :none),
        (:call, (:curly, :Complex, :T), (:call, :real, :z), (:call, :imag, :z))
      )),
    (:line, 23, :none),
    (:(=), (:call, (:curly, :convert, (:<:, :T, :Real)), (:(::), (:curly, :Type, :T)), (:(::), :z, :Complex)), (:block,
        (:line, 23, :none),
        (:if, (:call, :isreal, :z), (:call, :convert, :T, (:call, :real, :z)), (:call, :throw, (:call, :InexactError)))
      )),
    (:line, 26, :none),
    (:(=), (:call, :convert, (:(::), (:curly, :Type, :Complex)), (:(::), :z, :Complex)), (:block,
        (:line, 26, :none),
        :z
      )),
    (:line, 27, :none),
    (:(=), (:call, :convert, (:(::), (:curly, :Type, :Complex)), (:(::), :x, :Real)), (:block,
        (:line, 27, :none),
        (:call, :Complex, :x)
      )),
    (:line, 29, :none),
    (:(=), (:call, (:curly, :promote_rule, (:<:, :T, :Real), (:<:, :S, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T))), (:(::), (:curly, :Type, :S))), (:block,
        (:line, 29, :none),
        (:curly, :Complex, (:call, :promote_type, :T, :S))
      )),
    (:line, 31, :none),
    (:(=), (:call, (:curly, :promote_rule, (:<:, :T, :Real), (:<:, :S, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T))), (:(::), (:curly, :Type, (:curly, :Complex, :S)))), (:block,
        (:line, 31, :none),
        (:curly, :Complex, (:call, :promote_type, :T, :S))
      )),
    (:line, 34, :none),
    (:(=), (:call, (:curly, :widen, :T), (:(::), (:curly, :Type, (:curly, :Complex, :T)))), (:block,
        (:line, 34, :none),
        (:curly, :Complex, (:call, :widen, :T))
      )),
    (:line, 36, :none),
    (:(=), (:call, :real, (:(::), :z, :Complex)), (:block,
        (:line, 36, :none),
        (:., :z, (:quote, #QuoteNode
            :re
          ))
      )),
    (:line, 37, :none),
    (:(=), (:call, :imag, (:(::), :z, :Complex)), (:block,
        (:line, 37, :none),
        (:., :z, (:quote, #QuoteNode
            :im
          ))
      )),
    (:line, 38, :none),
    (:(=), (:call, :real, (:(::), :x, :Real)), (:block,
        (:line, 38, :none),
        :x
      )),
    (:line, 39, :none),
    (:(=), (:call, :imag, (:(::), :x, :Real)), (:block,
        (:line, 39, :none),
        (:call, :zero, :x)
      )),
    (:line, 40, :none),
    (:(=), (:call, :reim, :z), (:block,
        (:line, 40, :none),
        (:tuple, (:call, :real, :z), (:call, :imag, :z))
      )),
    (:line, 42, :none),
    (:(=), (:call, (:curly, :real, (:<:, :T, :Real)), (:(::), (:curly, :Type, :T))), (:block,
        (:line, 42, :none),
        :T
      )),
    (:line, 43, :none),
    (:(=), (:call, (:curly, :real, (:<:, :T, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T)))), (:block,
        (:line, 43, :none),
        :T
      )),
    (:line, 45, :none),
    (:(=), (:call, (:curly, :complex, (:<:, :T, :Real)), (:(::), (:curly, :Type, :T))), (:block,
        (:line, 45, :none),
        (:curly, :Complex, :T)
      )),
    (:line, 46, :none),
    (:(=), (:call, (:curly, :complex, (:<:, :T, :Real)), (:(::), (:curly, :Type, (:curly, :Complex, :T)))), (:block,
        (:line, 46, :none),
        (:curly, :Complex, :T)
      )),
    (:line, 48, :none),
    (:(=), (:call, :isreal, (:(::), :x, :Real)), (:block,
        (:line, 48, :none),
        true
      )),
    (:line, 49, :none),
    (:(=), (:call, :isreal, (:(::), :z, :Complex)), (:block,
        (:line, 49, :none),
        (:call, :(==), (:call, :imag, :z), 0)
      )),
    (:line, 50, :none),
    "    isimag(z) -> Bool\n\nTest whether `z` is purely imaginary, i.e. has a real part equal to 0.\n",
    (:line, 55, :none),
    (:(=), (:call, :isimag, (:(::), :z, :Number)), (:block,
        (:line, 55, :none),
        (:call, :(==), (:call, :real, :z), 0)
      )),
    (:line, 56, :none),
    (:(=), (:call, :isinteger, (:(::), :z, :Complex)), (:block,
        (:line, 56, :none),
        (:call, :&, (:call, :isreal, :z), (:call, :isinteger, (:call, :real, :z)))
      )),
    (:line, 57, :none),
    (:(=), (:call, :isfinite, (:(::), :z, :Complex)), (:block,
        (:line, 57, :none),
        (:call, :&, (:call, :isfinite, (:call, :real, :z)), (:call, :isfinite, (:call, :imag, :z)))
      )),
    (:line, 58, :none),
    (:(=), (:call, :isnan, (:(::), :z, :Complex)), (:block,
        (:line, 58, :none),
        (:call, :|, (:call, :isnan, (:call, :real, :z)), (:call, :isnan, (:call, :imag, :z)))
      )),
    (:line, 59, :none),
    (:(=), (:call, :isinf, (:(::), :z, :Complex)), (:block,
        (:line, 59, :none),
        (:call, :|, (:call, :isinf, (:call, :real, :z)), (:call, :isinf, (:call, :imag, :z)))
      )),
    (:line, 61, :none),
    (:(=), (:call, :complex, (:(::), :x, :Real), (:(::), :y, :Real)), (:block,
        (:line, 61, :none),
        (:call, :Complex, :x, :y)
      )),
    (:line, 62, :none),
    (:(=), (:call, :complex, (:(::), :x, :Real)), (:block,
        (:line, 62, :none),
        (:call, :Complex, :x)
      )),
    (:line, 63, :none),
    (:(=), (:call, :complex, (:(::), :z, :Complex)), (:block,
        (:line, 63, :none),
        :z
      )),
    (:line, 65, :none),
    (:(=), (:call, :flipsign, (:(::), :x, :Complex), (:(::), :y, :Real)), (:block,
        (:line, 65, :none),
        (:call, :ifelse, (:call, :signbit, :y), (:call, :-, :x), :x)
      )),
    (:line, 67, :none),
    (:function, (:call, :show, (:(::), :io, :IO), (:(::), :z, :Complex)), (:block,
        (:line, 68, :none),
        (:(=), (:tuple, :r, :i), (:call, :reim, :z)),
        (:line, 69, :none),
        (:(=), :compact, (:call, :get, :io, (:quote, #QuoteNode
              :compact
            ), false)),
        (:line, 70, :none),
        (:call, :show, :io, :r),
        (:line, 71, :none),
        (:if, (:&&, (:call, :signbit, :i), (:call, :!, (:call, :isnan, :i))), (:block,
            (:line, 72, :none),
            (:(=), :i, (:call, :-, :i)),
            (:line, 73, :none),
            (:call, :print, :io, (:if, :compact, "-", " - "))
          ), (:block,
            (:line, 75, :none),
            (:call, :print, :io, (:if, :compact, "+", " + "))
          )),
        (:line, 77, :none),
        (:call, :show, :io, :i),
        (:line, 78, :none),
        (:if, (:call, :!, (:||, (:&&, (:call, :isa, :i, :Integer), (:call, :!, (:call, :isa, :i, :Bool))), (:&&, (:call, :isa, :i, :AbstractFloat), (:call, :isfinite, :i)))), (:block,
            (:line, 79, :none),
            (:call, :print, :io, "*")
          )),
        (:line, 81, :none),
        (:call, :print, :io, "im")
      )),
    (:line, 83, :none),
    (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 83, :none),
        (:call, :print, :io, (:if, (:call, :(==), :z, :im), "im", (:string, "Complex(", (:., :z, (:quote, #QuoteNode
                  :re
                )), ",", (:., :z, (:quote, #QuoteNode
                  :im
                )), ")")))
      )),
    (:line, 86, :none),
    (:function, (:call, (:curly, :read, (:<:, :T, :Real)), (:(::), :s, :IO), (:(::), (:curly, :Type, (:curly, :Complex, :T)))), (:block,
        (:line, 87, :none),
        (:(=), :r, (:call, :read, :s, :T)),
        (:line, 88, :none),
        (:(=), :i, (:call, :read, :s, :T)),
        (:line, 89, :none),
        (:call, (:curly, :Complex, :T), :r, :i)
      )),
    (:line, 91, :none),
    (:function, (:call, :write, (:(::), :s, :IO), (:(::), :z, :Complex)), (:block,
        (:line, 92, :none),
        (:call, :write, :s, (:call, :real, :z), (:call, :imag, :z))
      )),
    (:line, 97, :none),
    (:(=), (:call, :(==), (:(::), :z, :Complex), (:(::), :w, :Complex)), (:block,
        (:line, 97, :none),
        (:call, :&, (:call, :(==), (:call, :real, :z), (:call, :real, :w)), (:call, :(==), (:call, :imag, :z), (:call, :imag, :w)))
      )),
    (:line, 98, :none),
    (:(=), (:call, :(==), (:(::), :z, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 98, :none),
        (:&&, (:call, :isreal, :z), (:call, :(==), (:call, :real, :z), :x))
      )),
    (:line, 99, :none),
    (:(=), (:call, :(==), (:(::), :x, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 99, :none),
        (:&&, (:call, :isreal, :z), (:call, :(==), (:call, :real, :z), :x))
      )),
    (:line, 101, :none),
    (:(=), (:call, :isequal, (:(::), :z, :Complex), (:(::), :w, :Complex)), (:block,
        (:line, 101, :none),
        (:call, :&, (:call, :isequal, (:call, :real, :z), (:call, :real, :w)), (:call, :isequal, (:call, :imag, :z), (:call, :imag, :w)))
      )),
    (:line, 103, :none),
    (:if, (:call, :(===), :UInt, :UInt64), (:block,
        (:line, 104, :none),
        (:const, (:(=), :h_imag, 0x32a7a07f3e7cd1f9))
      ), (:block,
        (:line, 106, :none),
        (:const, (:(=), :h_imag, 0x3e7cd1f9))
      )),
    (:line, 108, :none),
    (:const, (:(=), :hash_0_imag, (:call, :hash, 0, :h_imag))),
    (:line, 110, :none),
    (:function, (:call, :hash, (:(::), :z, :Complex), (:(::), :h, :UInt)), (:block,
        (:line, 113, :none),
        (:call, :hash, (:call, :real, :z), (:call, :$, (:call, :$, :h, (:call, :hash, (:call, :imag, :z), :h_imag)), :hash_0_imag))
      )),
    (:line, 118, :none),
    (:(=), (:call, :conj, (:(::), :z, :Complex)), (:block,
        (:line, 118, :none),
        (:call, :Complex, (:call, :real, :z), (:call, :-, (:call, :imag, :z)))
      )),
    (:line, 119, :none),
    (:(=), (:call, :abs, (:(::), :z, :Complex)), (:block,
        (:line, 119, :none),
        (:call, :hypot, (:call, :real, :z), (:call, :imag, :z))
      )),
    (:line, 120, :none),
    (:(=), (:call, :abs2, (:(::), :z, :Complex)), (:block,
        (:line, 120, :none),
        (:call, :+, (:call, :*, (:call, :real, :z), (:call, :real, :z)), (:call, :*, (:call, :imag, :z), (:call, :imag, :z)))
      )),
    (:line, 121, :none),
    (:(=), (:call, :inv, (:(::), :z, :Complex)), (:block,
        (:line, 121, :none),
        (:call, :/, (:call, :conj, :z), (:call, :abs2, :z))
      )),
    (:line, 122, :none),
    (:(=), (:call, (:curly, :inv, (:<:, :T, :Integer)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 122, :none),
        (:call, :inv, (:call, :float, :z))
      )),
    (:line, 124, :none),
    (:(=), (:call, :-, (:(::), :z, :Complex)), (:block,
        (:line, 124, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z)), (:call, :-, (:call, :imag, :z)))
      )),
    (:line, 125, :none),
    (:(=), (:call, :+, (:(::), :z, :Complex), (:(::), :w, :Complex)), (:block,
        (:line, 125, :none),
        (:call, :Complex, (:call, :+, (:call, :real, :z), (:call, :real, :w)), (:call, :+, (:call, :imag, :z), (:call, :imag, :w)))
      )),
    (:line, 126, :none),
    (:(=), (:call, :-, (:(::), :z, :Complex), (:(::), :w, :Complex)), (:block,
        (:line, 126, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z), (:call, :real, :w)), (:call, :-, (:call, :imag, :z), (:call, :imag, :w)))
      )),
    (:line, 127, :none),
    (:(=), (:call, :*, (:(::), :z, :Complex), (:(::), :w, :Complex)), (:block,
        (:line, 127, :none),
        (:call, :Complex, (:call, :-, (:call, :*, (:call, :real, :z), (:call, :real, :w)), (:call, :*, (:call, :imag, :z), (:call, :imag, :w))), (:call, :+, (:call, :*, (:call, :real, :z), (:call, :imag, :w)), (:call, :*, (:call, :imag, :z), (:call, :real, :w))))
      )),
    (:line, 130, :none),
    (:(=), (:call, :muladd, (:(::), :z, :Complex), (:(::), :w, :Complex), (:(::), :x, :Complex)), (:block,
        (:line, 130, :none),
        (:call, :Complex, (:call, :-, (:call, :muladd, (:call, :real, :z), (:call, :real, :w), (:call, :real, :x)), (:call, :*, (:call, :imag, :z), (:call, :imag, :w))), (:call, :muladd, (:call, :real, :z), (:call, :imag, :w), (:call, :muladd, (:call, :imag, :z), (:call, :real, :w), (:call, :imag, :x))))
      )),
    (:line, 136, :none),
    (:(=), (:call, :+, (:(::), :x, :Bool), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 136, :none),
        (:call, :Complex, (:call, :+, :x, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 137, :none),
    (:(=), (:call, :+, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Bool)), (:block,
        (:line, 137, :none),
        (:call, :Complex, (:call, :+, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 138, :none),
    (:(=), (:call, :-, (:(::), :x, :Bool), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 138, :none),
        (:call, :Complex, (:call, :-, :x, (:call, :real, :z)), (:call, :-, (:call, :imag, :z)))
      )),
    (:line, 139, :none),
    (:(=), (:call, :-, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Bool)), (:block,
        (:line, 139, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 140, :none),
    (:(=), (:call, :*, (:(::), :x, :Bool), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 140, :none),
        (:call, :Complex, (:call, :*, :x, (:call, :real, :z)), (:call, :*, :x, (:call, :imag, :z)))
      )),
    (:line, 141, :none),
    (:(=), (:call, :*, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Bool)), (:block,
        (:line, 141, :none),
        (:call, :Complex, (:call, :*, (:call, :real, :z), :x), (:call, :*, (:call, :imag, :z), :x))
      )),
    (:line, 143, :none),
    (:(=), (:call, :+, (:(::), :x, :Bool), (:(::), :z, :Complex)), (:block,
        (:line, 143, :none),
        (:call, :Complex, (:call, :+, :x, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 144, :none),
    (:(=), (:call, :+, (:(::), :z, :Complex), (:(::), :x, :Bool)), (:block,
        (:line, 144, :none),
        (:call, :Complex, (:call, :+, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 145, :none),
    (:(=), (:call, :-, (:(::), :x, :Bool), (:(::), :z, :Complex)), (:block,
        (:line, 145, :none),
        (:call, :Complex, (:call, :-, :x, (:call, :real, :z)), (:call, :-, (:call, :imag, :z)))
      )),
    (:line, 146, :none),
    (:(=), (:call, :-, (:(::), :z, :Complex), (:(::), :x, :Bool)), (:block,
        (:line, 146, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 147, :none),
    (:(=), (:call, :*, (:(::), :x, :Bool), (:(::), :z, :Complex)), (:block,
        (:line, 147, :none),
        (:call, :Complex, (:call, :*, :x, (:call, :real, :z)), (:call, :*, :x, (:call, :imag, :z)))
      )),
    (:line, 148, :none),
    (:(=), (:call, :*, (:(::), :z, :Complex), (:(::), :x, :Bool)), (:block,
        (:line, 148, :none),
        (:call, :Complex, (:call, :*, (:call, :real, :z), :x), (:call, :*, (:call, :imag, :z), :x))
      )),
    (:line, 150, :none),
    (:(=), (:call, :+, (:(::), :x, :Real), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 150, :none),
        (:call, :Complex, (:call, :+, :x, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 151, :none),
    (:(=), (:call, :+, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Real)), (:block,
        (:line, 151, :none),
        (:call, :Complex, (:call, :+, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 152, :none),
    (:function, (:call, :-, (:(::), :x, :Real), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 154, :none),
        (:(=), :re, (:call, :-, :x, (:call, :real, :z))),
        (:line, 155, :none),
        (:call, :Complex, :re, (:call, :-, (:call, :oftype, :re, (:call, :imag, :z))))
      )),
    (:line, 157, :none),
    (:(=), (:call, :-, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Real)), (:block,
        (:line, 157, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 158, :none),
    (:(=), (:call, :*, (:(::), :x, :Real), (:(::), :z, (:curly, :Complex, :Bool))), (:block,
        (:line, 158, :none),
        (:call, :Complex, (:call, :*, :x, (:call, :real, :z)), (:call, :*, :x, (:call, :imag, :z)))
      )),
    (:line, 159, :none),
    (:(=), (:call, :*, (:(::), :z, (:curly, :Complex, :Bool)), (:(::), :x, :Real)), (:block,
        (:line, 159, :none),
        (:call, :Complex, (:call, :*, (:call, :real, :z), :x), (:call, :*, (:call, :imag, :z), :x))
      )),
    (:line, 162, :none),
    (:(=), (:call, :+, (:(::), :x, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 162, :none),
        (:call, :Complex, (:call, :+, :x, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 163, :none),
    (:(=), (:call, :+, (:(::), :z, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 163, :none),
        (:call, :Complex, (:call, :+, :x, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 164, :none),
    (:function, (:call, :-, (:(::), :x, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 166, :none),
        (:(=), :re, (:call, :-, :x, (:call, :real, :z))),
        (:line, 167, :none),
        (:call, :Complex, :re, (:call, :-, (:call, :oftype, :re, (:call, :imag, :z))))
      )),
    (:line, 169, :none),
    (:(=), (:call, :-, (:(::), :z, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 169, :none),
        (:call, :Complex, (:call, :-, (:call, :real, :z), :x), (:call, :imag, :z))
      )),
    (:line, 170, :none),
    (:(=), (:call, :*, (:(::), :x, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 170, :none),
        (:call, :Complex, (:call, :*, :x, (:call, :real, :z)), (:call, :*, :x, (:call, :imag, :z)))
      )),
    (:line, 171, :none),
    (:(=), (:call, :*, (:(::), :z, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 171, :none),
        (:call, :Complex, (:call, :*, :x, (:call, :real, :z)), (:call, :*, :x, (:call, :imag, :z)))
      )),
    (:line, 173, :none),
    (:(=), (:call, :muladd, (:(::), :x, :Real), (:(::), :z, :Complex), (:(::), :y, :Number)), (:block,
        (:line, 173, :none),
        (:call, :muladd, :z, :x, :y)
      )),
    (:line, 174, :none),
    (:(=), (:call, :muladd, (:(::), :z, :Complex), (:(::), :x, :Real), (:(::), :y, :Real)), (:block,
        (:line, 174, :none),
        (:call, :Complex, (:call, :muladd, (:call, :real, :z), :x, :y), (:call, :*, (:call, :imag, :z), :x))
      )),
    (:line, 175, :none),
    (:(=), (:call, :muladd, (:(::), :z, :Complex), (:(::), :x, :Real), (:(::), :w, :Complex)), (:block,
        (:line, 175, :none),
        (:call, :Complex, (:call, :muladd, (:call, :real, :z), :x, (:call, :real, :w)), (:call, :muladd, (:call, :imag, :z), :x, (:call, :imag, :w)))
      )),
    (:line, 177, :none),
    (:(=), (:call, :muladd, (:(::), :x, :Real), (:(::), :y, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 177, :none),
        (:call, :Complex, (:call, :muladd, :x, :y, (:call, :real, :z)), (:call, :imag, :z))
      )),
    (:line, 178, :none),
    (:(=), (:call, :muladd, (:(::), :z, :Complex), (:(::), :w, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 178, :none),
        (:call, :Complex, (:call, :-, (:call, :muladd, (:call, :real, :z), (:call, :real, :w), :x), (:call, :*, (:call, :imag, :z), (:call, :imag, :w))), (:call, :muladd, (:call, :real, :z), (:call, :imag, :w), (:call, :*, (:call, :imag, :z), (:call, :real, :w))))
      )),
    (:line, 182, :none),
    (:(=), (:call, :/, (:(::), :a, :Real), (:(::), :z, :Complex)), (:block,
        (:line, 182, :none),
        (:call, :*, :a, (:call, :inv, :z))
      )),
    (:line, 183, :none),
    (:(=), (:call, :/, (:(::), :z, :Complex), (:(::), :x, :Real)), (:block,
        (:line, 183, :none),
        (:call, :Complex, (:call, :/, (:call, :real, :z), :x), (:call, :/, (:call, :imag, :z), :x))
      )),
    (:line, 185, :none),
    (:function, (:call, (:curly, :/, (:<:, :T, :Real)), (:(::), :a, (:curly, :Complex, :T)), (:(::), :b, (:curly, :Complex, :T))), (:block,
        (:line, 186, :none),
        (:(=), :are, (:call, :real, :a)),
        (:line, 186, :none),
        (:(=), :aim, (:call, :imag, :a)),
        (:line, 186, :none),
        (:(=), :bre, (:call, :real, :b)),
        (:line, 186, :none),
        (:(=), :bim, (:call, :imag, :b)),
        (:line, 187, :none),
        (:if, (:call, :(<=), (:call, :abs, :bre), (:call, :abs, :bim)), (:block,
            (:line, 188, :none),
            (:if, (:&&, (:call, :isinf, :bre), (:call, :isinf, :bim)), (:block,
                (:line, 189, :none),
                (:(=), :r, (:call, :/, (:call, :sign, :bre), (:call, :sign, :bim)))
              ), (:block,
                (:line, 191, :none),
                (:(=), :r, (:call, :/, :bre, :bim))
              )),
            (:line, 193, :none),
            (:(=), :den, (:call, :+, :bim, (:call, :*, :r, :bre))),
            (:line, 194, :none),
            (:call, :Complex, (:call, :/, (:call, :+, (:call, :*, :are, :r), :aim), :den), (:call, :/, (:call, :-, (:call, :*, :aim, :r), :are), :den))
          ), (:block,
            (:line, 196, :none),
            (:if, (:&&, (:call, :isinf, :bre), (:call, :isinf, :bim)), (:block,
                (:line, 197, :none),
                (:(=), :r, (:call, :/, (:call, :sign, :bim), (:call, :sign, :bre)))
              ), (:block,
                (:line, 199, :none),
                (:(=), :r, (:call, :/, :bim, :bre))
              )),
            (:line, 201, :none),
            (:(=), :den, (:call, :+, :bre, (:call, :*, :r, :bim))),
            (:line, 202, :none),
            (:call, :Complex, (:call, :/, (:call, :+, :are, (:call, :*, :aim, :r)), :den), (:call, :/, (:call, :-, :aim, (:call, :*, :are, :r)), :den))
          ))
      )),
    (:line, 206, :none),
    (:(=), (:call, (:curly, :inv, (:<:, :T, (:curly, :Union, :Float16, :Float32))), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 206, :none),
        (:call, :oftype, :z, (:call, :/, (:call, :conj, (:call, :widen, :z)), (:call, :abs2, (:call, :widen, :z))))
      )),
    (:line, 209, :none),
    (:(=), (:call, (:curly, :/, (:<:, :T, (:curly, :Union, :Float16, :Float32))), (:(::), :z, (:curly, :Complex, :T)), (:(::), :w, (:curly, :Complex, :T))), (:block,
        (:line, 209, :none),
        (:call, :oftype, :z, (:call, :*, (:call, :widen, :z), (:call, :inv, (:call, :widen, :w))))
      )),
    (:line, 220, :none),
    (:function, (:call, :/, (:(::), :z, :Complex128), (:(::), :w, :Complex128)), (:block,
        (:line, 221, :none),
        (:(=), (:tuple, :a, :b), (:call, :reim, :z)),
        (:line, 221, :none),
        (:(=), (:tuple, :c, :d), (:call, :reim, :w)),
        (:line, 222, :none),
        (:(=), :half, 0.5),
        (:line, 223, :none),
        (:(=), :two, 2.0),
        (:line, 224, :none),
        (:(=), :ab, (:call, :max, (:call, :abs, :a), (:call, :abs, :b))),
        (:line, 225, :none),
        (:(=), :cd, (:call, :max, (:call, :abs, :c), (:call, :abs, :d))),
        (:line, 226, :none),
        (:(=), :ov, (:call, :realmax, :a)),
        (:line, 227, :none),
        (:(=), :un, (:call, :realmin, :a)),
        (:line, 228, :none),
        (:(=), :ϵ, (:call, :eps, :Float64)),
        (:line, 229, :none),
        (:(=), :bs, (:call, :/, :two, (:call, :*, :ϵ, :ϵ))),
        (:line, 230, :none),
        (:(=), :s, 1.0),
        (:line, 231, :none),
        (:&&, (:call, :(>=), :ab, (:call, :*, :half, :ov)), (:block,
            (:(=), :a, (:call, :*, :half, :a)),
            (:(=), :b, (:call, :*, :half, :b)),
            (:(=), :s, (:call, :*, :two, :s))
          )),
        (:line, 232, :none),
        (:&&, (:call, :(>=), :cd, (:call, :*, :half, :ov)), (:block,
            (:(=), :c, (:call, :*, :half, :c)),
            (:(=), :d, (:call, :*, :half, :d)),
            (:(=), :s, (:call, :*, :s, :half))
          )),
        (:line, 233, :none),
        (:&&, (:call, :(<=), :ab, (:call, :/, (:call, :*, :un, :two), :ϵ)), (:block,
            (:(=), :a, (:call, :*, :a, :bs)),
            (:(=), :b, (:call, :*, :b, :bs)),
            (:(=), :s, (:call, :/, :s, :bs))
          )),
        (:line, 234, :none),
        (:&&, (:call, :(<=), :cd, (:call, :/, (:call, :*, :un, :two), :ϵ)), (:block,
            (:(=), :c, (:call, :*, :c, :bs)),
            (:(=), :d, (:call, :*, :d, :bs)),
            (:(=), :s, (:call, :*, :s, :bs))
          )),
        (:line, 235, :none),
        (:if, (:call, :(<=), (:call, :abs, :d), (:call, :abs, :c)), (:(=), (:tuple, :p, :q), (:call, :robust_cdiv1, :a, :b, :c, :d)), (:block,
            (:(=), (:tuple, :p, :q), (:call, :robust_cdiv1, :b, :a, :d, :c)),
            (:(=), :q, (:call, :-, :q))
          )),
        (:line, 236, :none),
        (:return, (:call, :Complex128, (:call, :*, :p, :s), (:call, :*, :q, :s)))
      )),
    (:line, 238, :none),
    (:function, (:call, :robust_cdiv1, (:(::), :a, :Float64), (:(::), :b, :Float64), (:(::), :c, :Float64), (:(::), :d, :Float64)), (:block,
        (:line, 239, :none),
        (:(=), :r, (:call, :/, :d, :c)),
        (:line, 240, :none),
        (:(=), :t, (:call, :/, 1.0, (:call, :+, :c, (:call, :*, :d, :r)))),
        (:line, 241, :none),
        (:(=), :p, (:call, :robust_cdiv2, :a, :b, :c, :d, :r, :t)),
        (:line, 242, :none),
        (:(=), :q, (:call, :robust_cdiv2, :b, (:call, :-, :a), :c, :d, :r, :t)),
        (:line, 243, :none),
        (:return, (:tuple, :p, :q))
      )),
    (:line, 245, :none),
    (:function, (:call, :robust_cdiv2, (:(::), :a, :Float64), (:(::), :b, :Float64), (:(::), :c, :Float64), (:(::), :d, :Float64), (:(::), :r, :Float64), (:(::), :t, :Float64)), (:block,
        (:line, 246, :none),
        (:if, (:call, :(!=), :r, 0), (:block,
            (:line, 247, :none),
            (:(=), :br, (:call, :*, :b, :r)),
            (:line, 248, :none),
            (:return, (:if, (:call, :(!=), :br, 0), (:call, :*, (:call, :+, :a, :br), :t), (:call, :+, (:call, :*, :a, :t), (:call, :*, (:call, :*, :b, :t), :r))))
          ), (:block,
            (:line, 250, :none),
            (:return, (:call, :*, (:call, :+, :a, (:call, :*, :d, (:call, :/, :b, :c))), :t))
          ))
      )),
    (:line, 254, :none),
    (:function, (:call, :inv, (:(::), :w, :Complex128)), (:block,
        (:line, 255, :none),
        (:(=), (:tuple, :c, :d), (:call, :reim, :w)),
        (:line, 256, :none),
        (:(=), :half, 0.5),
        (:line, 257, :none),
        (:(=), :two, 2.0),
        (:line, 258, :none),
        (:(=), :cd, (:call, :max, (:call, :abs, :c), (:call, :abs, :d))),
        (:line, 259, :none),
        (:(=), :ov, (:call, :realmax, :c)),
        (:line, 260, :none),
        (:(=), :un, (:call, :realmin, :c)),
        (:line, 261, :none),
        (:(=), :ϵ, (:call, :eps, :Float64)),
        (:line, 262, :none),
        (:(=), :bs, (:call, :/, :two, (:call, :*, :ϵ, :ϵ))),
        (:line, 263, :none),
        (:(=), :s, 1.0),
        (:line, 264, :none),
        (:&&, (:call, :(>=), :cd, (:call, :*, :half, :ov)), (:block,
            (:(=), :c, (:call, :*, :half, :c)),
            (:(=), :d, (:call, :*, :half, :d)),
            (:(=), :s, (:call, :*, :s, :half))
          )),
        (:line, 265, :none),
        (:&&, (:call, :(<=), :cd, (:call, :/, (:call, :*, :un, :two), :ϵ)), (:block,
            (:(=), :c, (:call, :*, :c, :bs)),
            (:(=), :d, (:call, :*, :d, :bs)),
            (:(=), :s, (:call, :*, :s, :bs))
          )),
        (:line, 266, :none),
        (:if, (:call, :(<=), (:call, :abs, :d), (:call, :abs, :c)), (:block,
            (:line, 267, :none),
            (:(=), :r, (:call, :/, :d, :c)),
            (:line, 268, :none),
            (:(=), :t, (:call, :/, 1.0, (:call, :+, :c, (:call, :*, :d, :r)))),
            (:line, 269, :none),
            (:(=), :p, :t),
            (:line, 270, :none),
            (:(=), :q, (:call, :*, (:call, :-, :r), :t))
          ), (:block,
            (:line, 272, :none),
            (:(=), (:tuple, :c, :d), (:tuple, :d, :c)),
            (:line, 273, :none),
            (:(=), :r, (:call, :/, :d, :c)),
            (:line, 274, :none),
            (:(=), :t, (:call, :/, 1.0, (:call, :+, :c, (:call, :*, :d, :r)))),
            (:line, 275, :none),
            (:(=), :p, (:call, :*, :r, :t)),
            (:line, 276, :none),
            (:(=), :q, (:call, :-, :t))
          )),
        (:line, 278, :none),
        (:return, (:call, :Complex128, (:call, :*, :p, :s), (:call, :*, :q, :s)))
      )),
    (:line, 281, :none),
    (:function, (:call, (:curly, :ssqs, (:<:, :T, :AbstractFloat)), (:(::), :x, :T), (:(::), :y, :T)), (:block,
        (:line, 282, :none),
        (:(=), (:(::), :k, :Int), 0),
        (:line, 283, :none),
        (:(=), :ρ, (:call, :+, (:call, :*, :x, :x), (:call, :*, :y, :y))),
        (:line, 284, :none),
        (:if, (:&&, (:call, :!, (:call, :isfinite, :ρ)), (:||, (:call, :isinf, :x), (:call, :isinf, :y))), (:block,
            (:line, 285, :none),
            (:(=), :ρ, (:call, :convert, :T, :Inf))
          ), (:block,
            (:line, 286, :none),
            (:if, (:||, (:call, :isinf, :ρ), (:||, (:&&, (:call, :(==), :ρ, 0), (:||, (:call, :(!=), :x, 0), (:call, :(!=), :y, 0))), (:call, :<, :ρ, (:call, :/, (:call, :nextfloat, (:call, :zero, :T)), (:call, :*, 2, (:call, :^, (:call, :eps, :T), 2)))))), (:block,
                (:line, 287, :none),
                (:(=), (:(::), :m, :T), (:call, :max, (:call, :abs, :x), (:call, :abs, :y))),
                (:line, 288, :none),
                (:(=), :k, (:if, (:call, :(==), :m, 0), :m, (:call, :exponent, :m))),
                (:line, 289, :none),
                (:(=), (:tuple, :xk, :yk), (:tuple, (:call, :ldexp, :x, (:call, :-, :k)), (:call, :ldexp, :y, (:call, :-, :k)))),
                (:line, 290, :none),
                (:(=), :ρ, (:call, :+, (:call, :*, :xk, :xk), (:call, :*, :yk, :yk)))
              ))
          )),
        (:line, 292, :none),
        (:tuple, :ρ, :k)
      )),
    (:line, 295, :none),
    (:function, (:call, (:curly, :sqrt, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 296, :none),
        (:(=), (:tuple, :x, :y), (:call, :reim, :z)),
        (:line, 297, :none),
        (:if, (:comparison, :x, :(==), :y, :(==), 0), (:block,
            (:line, 298, :none),
            (:return, (:call, :Complex, (:call, :zero, :x), :y))
          )),
        (:line, 300, :none),
        (:(=), (:tuple, :ρ, (:(::), :k, :Int)), (:call, :ssqs, :x, :y)),
        (:line, 301, :none),
        (:if, (:call, :isfinite, :x), (:block,
            (:line, 301, :none),
            (:(=), :ρ, (:call, :+, (:call, :ldexp, (:call, :abs, :x), (:call, :-, :k)), (:call, :sqrt, :ρ)))
          )),
        (:line, 302, :none),
        (:if, (:call, :isodd, :k), (:block,
            (:line, 303, :none),
            (:(=), :k, (:call, :div, (:call, :-, :k, 1), 2))
          ), (:block,
            (:line, 305, :none),
            (:(=), :k, (:call, :-, (:call, :div, :k, 2), 1)),
            (:line, 306, :none),
            (:+=, :ρ, :ρ)
          )),
        (:line, 308, :none),
        (:(=), :ρ, (:call, :ldexp, (:call, :sqrt, :ρ), :k)),
        (:line, 309, :none),
        (:(=), :ξ, :ρ),
        (:line, 310, :none),
        (:(=), :η, :y),
        (:line, 311, :none),
        (:if, (:call, :(!=), :ρ, 0), (:block,
            (:line, 312, :none),
            (:if, (:call, :isfinite, :η), (:block,
                (:line, 312, :none),
                (:(=), :η, (:call, :/, (:call, :/, :η, :ρ), 2))
              )),
            (:line, 313, :none),
            (:if, (:call, :<, :x, 0), (:block,
                (:line, 314, :none),
                (:(=), :ξ, (:call, :abs, :η)),
                (:line, 315, :none),
                (:(=), :η, (:call, :copysign, :ρ, :y))
              ))
          )),
        (:line, 318, :none),
        (:call, :Complex, :ξ, :η)
      )),
    (:line, 320, :none),
    (:(=), (:call, :sqrt, (:(::), :z, :Complex)), (:block,
        (:line, 320, :none),
        (:call, :sqrt, (:call, :float, :z))
      )),
    (:line, 336, :none),
    (:(=), (:call, :cis, (:(::), :theta, :Real)), (:block,
        (:line, 336, :none),
        (:call, :Complex, (:call, :cos, :theta), (:call, :sin, :theta))
      )),
    (:line, 337, :none),
    (:function, (:call, :cis, (:(::), :z, :Complex)), (:block,
        (:line, 338, :none),
        (:(=), :v, (:call, :exp, (:call, :-, (:call, :imag, :z)))),
        (:line, 339, :none),
        (:call, :Complex, (:call, :*, :v, (:call, :cos, (:call, :real, :z))), (:call, :*, :v, (:call, :sin, (:call, :real, :z))))
      )),
    (:line, 341, :none),
    (:macrocall, Symbol("@vectorize_1arg"), :Number, :cis),
    (:line, 343, :none),
    (:(=), (:call, :angle, (:(::), :z, :Complex)), (:block,
        (:line, 343, :none),
        (:call, :atan2, (:call, :imag, :z), (:call, :real, :z))
      )),
    (:line, 345, :none),
    (:function, (:call, (:curly, :log, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 346, :none),
        (:const, (:(=), (:(::), :T1, :T), 1.25)),
        (:line, 347, :none),
        (:const, (:(=), (:(::), :T2, :T), 3)),
        (:line, 348, :none),
        (:const, (:(=), (:(::), :ln2, :T), (:call, :log, (:call, :convert, :T, 2)))),
        (:line, 349, :none),
        (:(=), (:tuple, :x, :y), (:call, :reim, :z)),
        (:line, 350, :none),
        (:(=), (:tuple, :ρ, :k), (:call, :ssqs, :x, :y)),
        (:line, 351, :none),
        (:(=), :ax, (:call, :abs, :x)),
        (:line, 352, :none),
        (:(=), :ay, (:call, :abs, :y)),
        (:line, 353, :none),
        (:if, (:call, :<, :ax, :ay), (:block,
            (:line, 354, :none),
            (:(=), (:tuple, :θ, :β), (:tuple, :ax, :ay))
          ), (:block,
            (:line, 356, :none),
            (:(=), (:tuple, :θ, :β), (:tuple, :ay, :ax))
          )),
        (:line, 358, :none),
        (:if, (:&&, (:call, :(==), :k, 0), (:&&, (:call, :<, 0.5, (:call, :*, :β, :β)), (:||, (:call, :(<=), :β, :T1), (:call, :<, :ρ, :T2)))), (:block,
            (:line, 359, :none),
            (:(=), :ρρ, (:call, :/, (:call, :log1p, (:call, :+, (:call, :*, (:call, :-, :β, 1), (:call, :+, :β, 1)), (:call, :*, :θ, :θ))), 2))
          ), (:block,
            (:line, 361, :none),
            (:(=), :ρρ, (:call, :+, (:call, :/, (:call, :log, :ρ), 2), (:call, :*, :k, :ln2)))
          )),
        (:line, 363, :none),
        (:call, :Complex, :ρρ, (:call, :angle, :z))
      )),
    (:line, 365, :none),
    (:(=), (:call, :log, (:(::), :z, :Complex)), (:block,
        (:line, 365, :none),
        (:call, :log, (:call, :float, :z))
      )),
    (:line, 386, :none),
    (:function, (:call, :log10, (:(::), :z, :Complex)), (:block,
        (:line, 387, :none),
        (:(=), :a, (:call, :log, :z)),
        (:line, 388, :none),
        (:call, :/, :a, (:call, :log, (:call, :oftype, (:call, :real, :a), 10)))
      )),
    (:line, 390, :none),
    (:function, (:call, :log2, (:(::), :z, :Complex)), (:block,
        (:line, 391, :none),
        (:(=), :a, (:call, :log, :z)),
        (:line, 392, :none),
        (:call, :/, :a, (:call, :log, (:call, :oftype, (:call, :real, :a), 2)))
      )),
    (:line, 395, :none),
    (:function, (:call, :exp, (:(::), :z, :Complex)), (:block,
        (:line, 396, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 397, :none),
        (:if, (:call, :isnan, :zr), (:block,
            (:line, 398, :none),
            (:call, :Complex, :zr, (:if, (:call, :(==), :zi, 0), :zi, :zr))
          ), (:block,
            (:line, 399, :none),
            (:if, (:call, :!, (:call, :isfinite, :zi)), (:block,
                (:line, 400, :none),
                (:if, (:call, :(==), :zr, :Inf), (:block,
                    (:line, 401, :none),
                    (:call, :Complex, (:call, :-, :zr), (:call, :oftype, :zr, :NaN))
                  ), (:block,
                    (:line, 402, :none),
                    (:if, (:call, :(==), :zr, (:call, :-, :Inf)), (:block,
                        (:line, 403, :none),
                        (:call, :Complex, (:call, :-, (:call, :zero, :zr)), (:call, :copysign, (:call, :zero, :zi), :zi))
                      ), (:block,
                        (:line, 405, :none),
                        (:call, :Complex, (:call, :oftype, :zr, :NaN), (:call, :oftype, :zi, :NaN))
                      ))
                  ))
              ), (:block,
                (:line, 408, :none),
                (:(=), :er, (:call, :exp, :zr)),
                (:line, 409, :none),
                (:if, (:call, :(==), :zi, (:call, :zero, :zi)), (:block,
                    (:line, 410, :none),
                    (:call, :Complex, :er, :zi)
                  ), (:block,
                    (:line, 412, :none),
                    (:call, :Complex, (:call, :*, :er, (:call, :cos, :zi)), (:call, :*, :er, (:call, :sin, :zi)))
                  ))
              ))
          ))
      )),
    (:line, 417, :none),
    (:function, (:call, :expm1, (:(::), :z, :Complex)), (:block,
        (:line, 418, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 419, :none),
        (:if, (:call, :isnan, :zr), (:block,
            (:line, 420, :none),
            (:call, :Complex, :zr, (:if, (:call, :(==), :zi, 0), :zi, :zr))
          ), (:block,
            (:line, 421, :none),
            (:if, (:call, :!, (:call, :isfinite, :zi)), (:block,
                (:line, 422, :none),
                (:if, (:call, :(==), :zr, :Inf), (:block,
                    (:line, 423, :none),
                    (:call, :Complex, (:call, :-, :zr), (:call, :oftype, :zr, :NaN))
                  ), (:block,
                    (:line, 424, :none),
                    (:if, (:call, :(==), :zr, (:call, :-, :Inf)), (:block,
                        (:line, 425, :none),
                        (:call, :Complex, (:call, :-, (:call, :one, :zr)), (:call, :copysign, (:call, :zero, :zi), :zi))
                      ), (:block,
                        (:line, 427, :none),
                        (:call, :Complex, (:call, :oftype, :zr, :NaN), (:call, :oftype, :zi, :NaN))
                      ))
                  ))
              ), (:block,
                (:line, 430, :none),
                (:(=), :erm1, (:call, :expm1, :zr)),
                (:line, 431, :none),
                (:if, (:call, :(==), :zi, 0), (:block,
                    (:line, 432, :none),
                    (:call, :Complex, :erm1, :zi)
                  ), (:block,
                    (:line, 434, :none),
                    (:(=), :er, (:call, :+, :erm1, (:call, :one, :erm1))),
                    (:line, 435, :none),
                    (:(=), :wr, (:if, (:call, :isfinite, :er), (:call, :-, :erm1, (:call, :*, 2.0, :er, (:call, :^, (:call, :sin, (:call, :*, 0.5, :zi)), 2))), (:call, :*, :er, (:call, :cos, :zi)))),
                    (:line, 436, :none),
                    (:call, :Complex, :wr, (:call, :*, :er, (:call, :sin, :zi)))
                  ))
              ))
          ))
      )),
    (:line, 441, :none),
    (:function, (:call, (:curly, :log1p, :T), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 442, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 443, :none),
        (:if, (:call, :isfinite, :zr), (:block,
            (:line, 444, :none),
            (:&&, (:call, :isinf, :zi), (:return, (:call, :log, :z))),
            (:line, 448, :none),
            (:(=), :u, (:call, :+, (:call, :float, (:call, :one, :T)), :z)),
            (:line, 449, :none),
            (:if, (:call, :(==), :u, 1), (:call, :convert, (:call, :typeof, :u), :z), (:if, (:call, :(<=), (:call, :real, :u), 0), (:call, :log, :u), (:call, :/, (:call, :*, (:call, :log, :u), :z), (:call, :-, :u, 1))))
          ), (:block,
            (:line, 450, :none),
            (:if, (:call, :isnan, :zr), (:block,
                (:line, 451, :none),
                (:call, :Complex, :zr, :zr)
              ), (:block,
                (:line, 452, :none),
                (:if, (:call, :isfinite, :zi), (:block,
                    (:line, 453, :none),
                    (:call, :Complex, (:call, :T, :Inf), (:call, :copysign, (:if, (:call, :>, :zr, 0), (:call, :zero, :T), (:call, :convert, :T, :pi)), :zi))
                  ), (:block,
                    (:line, 455, :none),
                    (:call, :Complex, (:call, :T, :Inf), (:call, :T, :NaN))
                  ))
              ))
          ))
      )),
    (:line, 459, :none),
    (:function, (:(::), (:call, (:curly, :^, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T)), (:(::), :p, (:curly, :Complex, :T))), (:curly, :Complex, :T)), (:block,
        (:line, 460, :none),
        (:if, (:call, :(==), :p, 2), (:block,
            (:line, 461, :none),
            (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
            (:line, 462, :none),
            (:(=), :x, (:call, :*, (:call, :-, :zr, :zi), (:call, :+, :zr, :zi))),
            (:line, 463, :none),
            (:(=), :y, (:call, :*, 2, :zr, :zi)),
            (:line, 464, :none),
            (:if, (:call, :isnan, :x), (:block,
                (:line, 465, :none),
                (:if, (:call, :isinf, :y), (:block,
                    (:line, 466, :none),
                    (:(=), :x, (:call, :copysign, (:call, :zero, :T), :zr))
                  ), (:block,
                    (:line, 467, :none),
                    (:if, (:call, :isinf, :zi), (:block,
                        (:line, 468, :none),
                        (:(=), :x, (:call, :convert, :T, (:call, :-, :Inf)))
                      ), (:block,
                        (:line, 469, :none),
                        (:if, (:call, :isinf, :zr), (:block,
                            (:line, 470, :none),
                            (:(=), :x, (:call, :convert, :T, :Inf))
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 472, :none),
                (:if, (:&&, (:call, :isnan, :y), (:call, :isinf, :x)), (:block,
                    (:line, 473, :none),
                    (:(=), :y, (:call, :copysign, (:call, :zero, :T), :y))
                  ))
              )),
            (:line, 475, :none),
            (:call, :Complex, :x, :y)
          ), (:block,
            (:line, 476, :none),
            (:if, (:call, :(!=), :z, 0), (:block,
                (:line, 477, :none),
                (:if, (:&&, (:call, :(!=), :p, 0), (:call, :isinteger, :p)), (:block,
                    (:line, 478, :none),
                    (:(=), :rp, (:call, :real, :p)),
                    (:line, 479, :none),
                    (:if, (:call, :<, :rp, 0), (:block,
                        (:line, 480, :none),
                        (:return, (:call, :power_by_squaring, (:call, :inv, :z), (:call, :convert, :Integer, (:call, :-, :rp))))
                      ), (:block,
                        (:line, 482, :none),
                        (:return, (:call, :power_by_squaring, :z, (:call, :convert, :Integer, :rp)))
                      ))
                  )),
                (:line, 485, :none),
                (:call, :exp, (:call, :*, :p, (:call, :log, :z)))
              ), (:block,
                (:line, 486, :none),
                (:if, (:call, :(!=), :p, 0), (:block,
                    (:line, 487, :none),
                    (:call, :zero, :z)
                  ), (:block,
                    (:line, 489, :none),
                    (:(=), :zer, (:call, :*, (:call, :copysign, (:call, :zero, :T), (:call, :real, :p)), (:call, :copysign, (:call, :zero, :T), (:call, :imag, :z)))),
                    (:line, 490, :none),
                    (:call, :Complex, (:call, :one, :T), :zer)
                  ))
              ))
          ))
      )),
    (:line, 494, :none),
    (:function, (:call, (:curly, :exp2, :T), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 495, :none),
        (:(=), :er, (:call, :exp2, (:call, :real, :z))),
        (:line, 496, :none),
        (:(=), :theta, (:call, :*, (:call, :imag, :z), (:call, :log, (:call, :convert, :T, 2)))),
        (:line, 497, :none),
        (:call, :Complex, (:call, :*, :er, (:call, :cos, :theta)), (:call, :*, :er, (:call, :sin, :theta)))
      )),
    (:line, 500, :none),
    (:function, (:call, (:curly, :exp10, :T), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 501, :none),
        (:(=), :er, (:call, :exp10, (:call, :real, :z))),
        (:line, 502, :none),
        (:(=), :theta, (:call, :*, (:call, :imag, :z), (:call, :log, (:call, :convert, :T, 10)))),
        (:line, 503, :none),
        (:call, :Complex, (:call, :*, :er, (:call, :cos, :theta)), (:call, :*, :er, (:call, :sin, :theta)))
      )),
    (:line, 506, :none),
    (:function, (:call, (:curly, :^, (:<:, :T, :Complex)), (:(::), :z, :T), (:(::), :p, :T)), (:block,
        (:line, 507, :none),
        (:if, (:call, :isinteger, :p), (:block,
            (:line, 508, :none),
            (:(=), :rp, (:call, :real, :p)),
            (:line, 509, :none),
            (:if, (:call, :<, :rp, 0), (:block,
                (:line, 510, :none),
                (:return, (:call, :power_by_squaring, (:call, :inv, (:call, :float, :z)), (:call, :convert, :Integer, (:call, :-, :rp))))
              ), (:block,
                (:line, 512, :none),
                (:return, (:call, :power_by_squaring, (:call, :float, :z), (:call, :convert, :Integer, :rp)))
              ))
          )),
        (:line, 515, :none),
        (:(=), (:tuple, :pr, :pim), (:call, :reim, :p)),
        (:line, 516, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 517, :none),
        (:(=), :r, (:call, :abs, :z)),
        (:line, 518, :none),
        (:(=), :rp, (:call, :^, :r, :pr)),
        (:line, 519, :none),
        (:(=), :theta, (:call, :atan2, :zi, :zr)),
        (:line, 520, :none),
        (:(=), :ntheta, (:call, :*, :pr, :theta)),
        (:line, 521, :none),
        (:if, (:&&, (:call, :(!=), :pim, 0), (:call, :(!=), :r, 0)), (:block,
            (:line, 522, :none),
            (:(=), :rp, (:call, :*, :rp, (:call, :exp, (:call, :*, (:call, :-, :pim), :theta)))),
            (:line, 523, :none),
            (:(=), :ntheta, (:call, :+, :ntheta, (:call, :*, :pim, (:call, :log, :r))))
          )),
        (:line, 525, :none),
        (:(=), :cosntheta, (:call, :cos, :ntheta)),
        (:line, 526, :none),
        (:(=), :sinntheta, (:call, :sin, :ntheta)),
        (:line, 527, :none),
        (:(=), (:tuple, :re, :im), (:tuple, (:call, :*, :rp, :cosntheta), (:call, :*, :rp, :sinntheta))),
        (:line, 528, :none),
        (:if, (:call, :isinf, :rp), (:block,
            (:line, 529, :none),
            (:if, (:call, :isnan, :re), (:block,
                (:line, 530, :none),
                (:(=), :re, (:call, :copysign, (:call, :zero, :re), :cosntheta))
              )),
            (:line, 532, :none),
            (:if, (:call, :isnan, :im), (:block,
                (:line, 533, :none),
                (:(=), :im, (:call, :copysign, (:call, :zero, :im), :sinntheta))
              ))
          )),
        (:line, 538, :none),
        (:if, (:call, :(==), :pim, 0), (:block,
            (:line, 539, :none),
            (:if, (:call, :isinteger, :pr), (:block,
                (:line, 540, :none),
                (:if, (:call, :(==), :zi, 0), (:block,
                    (:line, 541, :none),
                    (:(=), :im, (:call, :copysign, (:call, :zero, :im), :im))
                  ), (:block,
                    (:line, 542, :none),
                    (:if, (:call, :(==), :zr, 0), (:block,
                        (:line, 543, :none),
                        (:if, (:call, :isinteger, (:call, :*, 0.5, :pr)), (:block,
                            (:line, 544, :none),
                            (:(=), :im, (:call, :copysign, (:call, :zero, :im), :im))
                          ), (:block,
                            (:line, 546, :none),
                            (:(=), :re, (:call, :copysign, (:call, :zero, :re), :re))
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 550, :none),
                (:(=), :dr, (:call, :*, :pr, 2)),
                (:line, 551, :none),
                (:if, (:&&, (:call, :isinteger, :dr), (:call, :(==), :zi, 0)), (:block,
                    (:line, 552, :none),
                    (:if, (:call, :<, :zr, 0), (:block,
                        (:line, 553, :none),
                        (:(=), :re, (:call, :copysign, (:call, :zero, :re), :re))
                      ), (:block,
                        (:line, 555, :none),
                        (:(=), :im, (:call, :copysign, (:call, :zero, :im), :im))
                      ))
                  ))
              ))
          )),
        (:line, 561, :none),
        (:call, :Complex, :re, :im)
      )),
    (:line, 564, :none),
    (:(=), (:call, :^, (:(::), :z, :Complex), (:(::), :n, :Bool)), (:block,
        (:line, 564, :none),
        (:if, :n, :z, (:call, :one, :z))
      )),
    (:line, 565, :none),
    (:(=), (:call, :^, (:(::), :z, :Complex), (:(::), :n, :Integer)), (:block,
        (:line, 565, :none),
        (:call, :^, :z, (:call, :Complex, :n))
      )),
    (:line, 567, :none),
    (:(=), (:call, (:curly, :^, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T)), (:(::), :n, :Bool)), (:block,
        (:line, 567, :none),
        (:if, :n, :z, (:call, :one, :z))
      )),
    (:line, 568, :none),
    (:(=), (:call, (:curly, :^, (:<:, :T, :Integer)), (:(::), :z, (:curly, :Complex, :T)), (:(::), :n, :Bool)), (:block,
        (:line, 568, :none),
        (:if, :n, :z, (:call, :one, :z))
      )),
    (:line, 570, :none),
    (:(=), (:call, (:curly, :^, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T)), (:(::), :n, :Integer)), (:block,
        (:line, 570, :none),
        (:if, (:call, :(>=), :n, 0), (:call, :power_by_squaring, :z, :n), (:call, :power_by_squaring, (:call, :inv, :z), (:call, :-, :n)))
      )),
    (:line, 572, :none),
    (:(=), (:call, (:curly, :^, (:<:, :T, :Integer)), (:(::), :z, (:curly, :Complex, :T)), (:(::), :n, :Integer)), (:block,
        (:line, 572, :none),
        (:call, :power_by_squaring, :z, :n)
      )),
    (:line, 574, :none),
    (:function, (:call, (:curly, :sin, :T), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 575, :none),
        (:(=), :F, (:call, :float, :T)),
        (:line, 576, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 577, :none),
        (:if, (:call, :(==), :zr, 0), (:block,
            (:line, 578, :none),
            (:call, :Complex, (:call, :F, :zr), (:call, :sinh, :zi))
          ), (:block,
            (:line, 579, :none),
            (:if, (:call, :!, (:call, :isfinite, :zr)), (:block,
                (:line, 580, :none),
                (:if, (:||, (:call, :(==), :zi, 0), (:call, :isinf, :zi)), (:block,
                    (:line, 581, :none),
                    (:call, :Complex, (:call, :F, :NaN), (:call, :F, :zi))
                  ), (:block,
                    (:line, 583, :none),
                    (:call, :Complex, (:call, :F, :NaN), (:call, :F, :NaN))
                  ))
              ), (:block,
                (:line, 586, :none),
                (:call, :Complex, (:call, :*, (:call, :sin, :zr), (:call, :cosh, :zi)), (:call, :*, (:call, :cos, :zr), (:call, :sinh, :zi)))
              ))
          ))
      )),
    (:line, 591, :none),
    (:function, (:call, (:curly, :cos, :T), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 592, :none),
        (:(=), :F, (:call, :float, :T)),
        (:line, 593, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 594, :none),
        (:if, (:call, :(==), :zr, 0), (:block,
            (:line, 595, :none),
            (:call, :Complex, (:call, :cosh, :zi), (:if, (:call, :isnan, :zi), (:call, :F, :zr), (:call, :-, (:call, :flipsign, (:call, :F, :zr), :zi))))
          ), (:block,
            (:line, 596, :none),
            (:if, (:call, :!, (:call, :isfinite, :zr)), (:block,
                (:line, 597, :none),
                (:if, (:call, :(==), :zi, 0), (:block,
                    (:line, 598, :none),
                    (:call, :Complex, (:call, :F, :NaN), (:if, (:call, :isnan, :zr), (:call, :zero, :F), (:call, :-, (:call, :flipsign, (:call, :F, :zi), :zr))))
                  ), (:block,
                    (:line, 599, :none),
                    (:if, (:call, :isinf, :zi), (:block,
                        (:line, 600, :none),
                        (:call, :Complex, (:call, :F, :Inf), (:call, :F, :NaN))
                      ), (:block,
                        (:line, 602, :none),
                        (:call, :Complex, (:call, :F, :NaN), (:call, :F, :NaN))
                      ))
                  ))
              ), (:block,
                (:line, 605, :none),
                (:call, :Complex, (:call, :*, (:call, :cos, :zr), (:call, :cosh, :zi)), (:call, :*, (:call, :-, (:call, :sin, :zr)), (:call, :sinh, :zi)))
              ))
          ))
      )),
    (:line, 610, :none),
    (:function, (:call, :tan, (:(::), :z, :Complex)), (:block,
        (:line, 611, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 612, :none),
        (:(=), :w, (:call, :tanh, (:call, :Complex, (:call, :-, :zi), :zr))),
        (:line, 613, :none),
        (:call, :Complex, (:call, :imag, :w), (:call, :-, (:call, :real, :w)))
      )),
    (:line, 616, :none),
    (:function, (:call, :asin, (:(::), :z, :Complex)), (:block,
        (:line, 617, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 618, :none),
        (:if, (:&&, (:call, :isinf, :zr), (:call, :isinf, :zi)), (:block,
            (:line, 619, :none),
            (:return, (:call, :Complex, (:call, :copysign, (:call, :/, (:call, :oftype, :zr, :pi), 4), :zr), :zi))
          ), (:block,
            (:line, 620, :none),
            (:if, (:&&, (:call, :isnan, :zi), (:call, :isinf, :zr)), (:block,
                (:line, 621, :none),
                (:return, (:call, :Complex, :zi, (:call, :oftype, :zr, :Inf)))
              ))
          )),
        (:line, 623, :none),
        (:(=), :ξ, (:if, (:call, :(==), :zr, 0), :zr, (:if, (:call, :!, (:call, :isfinite, :zr)), (:call, :*, (:call, :/, (:call, :oftype, :zr, :pi), 2), (:call, :sign, :zr)), (:call, :atan2, :zr, (:call, :real, (:call, :*, (:call, :sqrt, (:call, :-, 1, :z)), (:call, :sqrt, (:call, :+, 1, :z)))))))),
        (:line, 626, :none),
        (:(=), :η, (:call, :asinh, (:call, :copysign, (:call, :imag, (:call, :*, (:call, :sqrt, (:call, :conj, (:call, :-, 1, :z))), (:call, :sqrt, (:call, :+, 1, :z)))), (:call, :imag, :z)))),
        (:line, 627, :none),
        (:call, :Complex, :ξ, :η)
      )),
    (:line, 630, :none),
    (:function, (:call, (:curly, :acos, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 631, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 632, :none),
        (:if, (:call, :isnan, :zr), (:block,
            (:line, 633, :none),
            (:if, (:call, :isinf, :zi), (:block,
                (:line, 633, :none),
                (:return, (:call, :Complex, :zr, (:call, :-, :zi)))
              ), (:block,
                (:line, 634, :none),
                (:return, (:call, :Complex, :zr, :zr))
              ))
          ), (:block,
            (:line, 635, :none),
            (:if, (:call, :isnan, :zi), (:block,
                (:line, 636, :none),
                (:if, (:call, :isinf, :zr), (:block,
                    (:line, 636, :none),
                    (:return, (:call, :Complex, :zi, (:call, :abs, :zr)))
                  ), (:block,
                    (:line, 637, :none),
                    (:if, (:call, :(==), :zr, 0), (:block,
                        (:line, 637, :none),
                        (:return, (:call, :Complex, (:call, :/, (:call, :oftype, :zr, :pi), 2), :zi))
                      ), (:block,
                        (:line, 638, :none),
                        (:return, (:call, :Complex, :zi, :zi))
                      ))
                  ))
              ), (:block,
                (:line, 639, :none),
                (:if, (:comparison, :zr, :(==), :zi, :(==), 0), (:block,
                    (:line, 640, :none),
                    (:return, (:call, :Complex, (:call, :/, (:call, :oftype, :zr, :pi), 2), (:call, :-, :zi)))
                  ), (:block,
                    (:line, 641, :none),
                    (:if, (:&&, (:call, :(==), :zr, :Inf), (:call, :(===), :zi, 0.0)), (:block,
                        (:line, 642, :none),
                        (:return, (:call, :Complex, :zi, (:call, :-, :zr)))
                      ), (:block,
                        (:line, 643, :none),
                        (:if, (:&&, (:call, :(==), :zr, (:call, :-, :Inf)), (:call, :(===), :zi, -0.0)), (:block,
                            (:line, 644, :none),
                            (:return, (:call, :Complex, (:call, :oftype, :zi, :pi), (:call, :-, :zr)))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 646, :none),
        (:(=), :ξ, (:call, :*, 2, (:call, :atan2, (:call, :real, (:call, :sqrt, (:call, :-, 1, :z))), (:call, :real, (:call, :sqrt, (:call, :+, 1, :z)))))),
        (:line, 647, :none),
        (:(=), :η, (:call, :asinh, (:call, :imag, (:call, :*, (:call, :sqrt, (:call, :conj, (:call, :+, 1, :z))), (:call, :sqrt, (:call, :-, 1, :z)))))),
        (:line, 648, :none),
        (:if, (:&&, (:call, :isinf, :zr), (:call, :isinf, :zi)), (:block,
            (:line, 648, :none),
            (:-=, :ξ, (:call, :*, (:call, :/, (:call, :oftype, :η, :pi), 4), (:call, :sign, :zr)))
          )),
        (:line, 649, :none),
        (:call, :Complex, :ξ, :η)
      )),
    (:line, 651, :none),
    (:(=), (:call, :acos, (:(::), :z, :Complex)), (:block,
        (:line, 651, :none),
        (:call, :acos, (:call, :float, :z))
      )),
    (:line, 653, :none),
    (:function, (:call, :atan, (:(::), :z, :Complex)), (:block,
        (:line, 654, :none),
        (:(=), :w, (:call, :atanh, (:call, :Complex, (:call, :-, (:call, :imag, :z)), (:call, :real, :z)))),
        (:line, 655, :none),
        (:call, :Complex, (:call, :imag, :w), (:call, :-, (:call, :real, :w)))
      )),
    (:line, 658, :none),
    (:function, (:call, :sinh, (:(::), :z, :Complex)), (:block,
        (:line, 659, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 660, :none),
        (:(=), :w, (:call, :sin, (:call, :Complex, :zi, :zr))),
        (:line, 661, :none),
        (:call, :Complex, (:call, :imag, :w), (:call, :real, :w))
      )),
    (:line, 664, :none),
    (:function, (:call, :cosh, (:(::), :z, :Complex)), (:block,
        (:line, 665, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 666, :none),
        (:call, :cos, (:call, :Complex, :zi, (:call, :-, :zr)))
      )),
    (:line, 669, :none),
    (:function, (:call, (:curly, :tanh, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 670, :none),
        (:const, (:(=), :Ω, (:call, :prevfloat, (:call, :typemax, :T)))),
        (:line, 671, :none),
        (:(=), (:tuple, :ξ, :η), (:call, :reim, :z)),
        (:line, 672, :none),
        (:if, (:&&, (:call, :isnan, :ξ), (:call, :(==), :η, 0)), (:block,
            (:line, 672, :none),
            (:return, (:call, :Complex, :ξ, :η))
          )),
        (:line, 673, :none),
        (:if, (:call, :>, (:call, :*, 4, (:call, :abs, :ξ)), (:call, :asinh, :Ω)), (:block,
            (:line, 674, :none),
            (:call, :Complex, (:call, :copysign, (:call, :one, :T), :ξ), (:call, :copysign, (:call, :zero, :T), (:call, :*, :η, (:if, (:call, :isfinite, :η), (:call, :sin, (:call, :*, 2, (:call, :abs, :η))), (:call, :one, :η)))))
          ), (:block,
            (:line, 677, :none),
            (:(=), :t, (:call, :tan, :η)),
            (:line, 678, :none),
            (:(=), :β, (:call, :+, 1, (:call, :*, :t, :t))),
            (:line, 679, :none),
            (:(=), :s, (:call, :sinh, :ξ)),
            (:line, 680, :none),
            (:(=), :ρ, (:call, :sqrt, (:call, :+, 1, (:call, :*, :s, :s)))),
            (:line, 681, :none),
            (:if, (:call, :isinf, :t), (:block,
                (:line, 682, :none),
                (:call, :Complex, (:call, :/, :ρ, :s), (:call, :/, 1, :t))
              ), (:block,
                (:line, 684, :none),
                (:call, :/, (:call, :Complex, (:call, :*, :β, :ρ, :s), :t), (:call, :+, 1, (:call, :*, :β, :s, :s)))
              ))
          ))
      )),
    (:line, 688, :none),
    (:(=), (:call, :tanh, (:(::), :z, :Complex)), (:block,
        (:line, 688, :none),
        (:call, :tanh, (:call, :float, :z))
      )),
    (:line, 690, :none),
    (:function, (:call, :asinh, (:(::), :z, :Complex)), (:block,
        (:line, 691, :none),
        (:(=), :w, (:call, :asin, (:call, :Complex, (:call, :-, (:call, :imag, :z)), (:call, :real, :z)))),
        (:line, 692, :none),
        (:call, :Complex, (:call, :imag, :w), (:call, :-, (:call, :real, :w)))
      )),
    (:line, 695, :none),
    (:function, (:call, :acosh, (:(::), :z, :Complex)), (:block,
        (:line, 696, :none),
        (:(=), (:tuple, :zr, :zi), (:call, :reim, :z)),
        (:line, 697, :none),
        (:if, (:||, (:call, :isnan, :zr), (:call, :isnan, :zi)), (:block,
            (:line, 698, :none),
            (:if, (:||, (:call, :isinf, :zr), (:call, :isinf, :zi)), (:block,
                (:line, 699, :none),
                (:return, (:call, :Complex, (:call, :oftype, :zr, :Inf), (:call, :oftype, :zi, :NaN)))
              ), (:block,
                (:line, 701, :none),
                (:return, (:call, :Complex, (:call, :oftype, :zr, :NaN), (:call, :oftype, :zi, :NaN)))
              ))
          ), (:block,
            (:line, 703, :none),
            (:if, (:&&, (:call, :(==), :zr, (:call, :-, :Inf)), (:call, :(===), :zi, -0.0)), (:block,
                (:line, 704, :none),
                (:return, (:call, :Complex, (:call, :oftype, :zr, :Inf), (:call, :oftype, :zi, (:call, :-, :pi))))
              ))
          )),
        (:line, 706, :none),
        (:(=), :ξ, (:call, :asinh, (:call, :real, (:call, :*, (:call, :sqrt, (:call, :conj, (:call, :-, :z, 1))), (:call, :sqrt, (:call, :+, :z, 1)))))),
        (:line, 707, :none),
        (:(=), :η, (:call, :*, 2, (:call, :atan2, (:call, :imag, (:call, :sqrt, (:call, :-, :z, 1))), (:call, :real, (:call, :sqrt, (:call, :+, :z, 1)))))),
        (:line, 708, :none),
        (:if, (:&&, (:call, :isinf, :zr), (:call, :isinf, :zi)), (:block,
            (:line, 709, :none),
            (:-=, :η, (:call, :*, (:call, :/, (:call, :oftype, :η, :pi), 4), (:call, :sign, :zi), (:call, :sign, :zr)))
          )),
        (:line, 711, :none),
        (:call, :Complex, :ξ, :η)
      )),
    (:line, 714, :none),
    (:function, (:call, (:curly, :atanh, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 715, :none),
        (:const, (:(=), :Ω, (:call, :prevfloat, (:call, :typemax, :T)))),
        (:line, 716, :none),
        (:const, (:(=), :θ, (:call, :/, (:call, :sqrt, :Ω), 4))),
        (:line, 717, :none),
        (:const, (:(=), :ρ, (:call, :/, 1, :θ))),
        (:line, 718, :none),
        (:(=), (:tuple, :x, :y), (:call, :reim, :z)),
        (:line, 719, :none),
        (:(=), :ax, (:call, :abs, :x)),
        (:line, 720, :none),
        (:(=), :ay, (:call, :abs, :y)),
        (:line, 721, :none),
        (:if, (:||, (:call, :>, :ax, :θ), (:call, :>, :ay, :θ)), (:block,
            (:line, 722, :none),
            (:if, (:call, :isnan, :y), (:block,
                (:line, 723, :none),
                (:if, (:call, :isinf, :x), (:block,
                    (:line, 724, :none),
                    (:return, (:call, :Complex, (:call, :copysign, (:call, :zero, :x), :x), :y))
                  ), (:block,
                    (:line, 726, :none),
                    (:return, (:call, :Complex, (:call, :real, (:call, :/, 1, :z)), :y))
                  ))
              )),
            (:line, 729, :none),
            (:if, (:call, :isinf, :y), (:block,
                (:line, 730, :none),
                (:return, (:call, :Complex, (:call, :copysign, (:call, :zero, :x), :x), (:call, :copysign, (:call, :/, (:call, :oftype, :y, :pi), 2), :y)))
              )),
            (:line, 732, :none),
            (:return, (:call, :Complex, (:call, :real, (:call, :/, 1, :z)), (:call, :copysign, (:call, :/, (:call, :oftype, :y, :pi), 2), :y)))
          ), (:block,
            (:line, 733, :none),
            (:if, (:call, :(==), :ax, 1), (:block,
                (:line, 734, :none),
                (:if, (:call, :(==), :y, 0), (:block,
                    (:line, 735, :none),
                    (:(=), :ξ, (:call, :copysign, (:call, :oftype, :x, :Inf), :x)),
                    (:line, 736, :none),
                    (:(=), :η, (:call, :zero, :y))
                  ), (:block,
                    (:line, 738, :none),
                    (:(=), :ym, (:call, :+, :ay, :ρ)),
                    (:line, 739, :none),
                    (:(=), :ξ, (:call, :log, (:call, :/, (:call, :sqrt, (:call, :sqrt, (:call, :+, 4, (:call, :*, :y, :y)))), (:call, :sqrt, :ym)))),
                    (:line, 740, :none),
                    (:(=), :η, (:call, :/, (:call, :copysign, (:call, :+, (:call, :/, (:call, :oftype, :y, :pi), 2), (:call, :atan, (:call, :/, :ym, 2))), :y), 2))
                  ))
              ), (:block,
                (:line, 743, :none),
                (:(=), :ysq, (:call, :^, (:call, :+, :ay, :ρ), 2)),
                (:line, 744, :none),
                (:if, (:call, :(==), :x, 0), (:block,
                    (:line, 745, :none),
                    (:(=), :ξ, :x)
                  ), (:block,
                    (:line, 747, :none),
                    (:(=), :ξ, (:call, :/, (:call, :log1p, (:call, :/, (:call, :*, 4, :x), (:call, :+, (:call, :^, (:call, :-, 1, :x), 2), :ysq))), 4))
                  )),
                (:line, 749, :none),
                (:(=), :η, (:call, :/, (:call, :angle, (:call, :Complex, (:call, :-, (:call, :*, (:call, :-, 1, :x), (:call, :+, 1, :x)), :ysq), (:call, :*, 2, :y))), 2))
              ))
          )),
        (:line, 751, :none),
        (:call, :Complex, :ξ, :η)
      )),
    (:line, 753, :none),
    (:(=), (:call, :atanh, (:(::), :z, :Complex)), (:block,
        (:line, 753, :none),
        (:call, :atanh, (:call, :float, :z))
      )),
    (:line, 755, :none),
    (:function, (:call, :lexcmp, (:(::), :a, :Complex), (:(::), :b, :Complex)), (:block,
        (:line, 756, :none),
        (:(=), :c, (:call, :cmp, (:call, :real, :a), (:call, :real, :b))),
        (:line, 757, :none),
        (:||, (:call, :(==), :c, 0), (:return, :c)),
        (:line, 758, :none),
        (:call, :cmp, (:call, :imag, :a), (:call, :imag, :b))
      )),
    (:line, 763, :none),
    "    round(z, RoundingModeReal, RoundingModeImaginary)\n\nReturns the nearest integral value of the same type as the complex-valued `z` to `z`,\nbreaking ties using the specified [`RoundingMode`](:obj:`RoundingMode`)s. The first\n[`RoundingMode`](:obj:`RoundingMode`) is used for rounding the real components while the\nsecond is used for rounding the imaginary components.\n",
    (:line, 771, :none),
    (:function, (:call, (:curly, :round, (:<:, :T, :AbstractFloat), :MR, :MI), (:(::), :z, (:curly, :Complex, :T)), (:(::), (:curly, :RoundingMode, :MR)), (:(::), (:curly, :RoundingMode, :MI))), (:block,
        (:line, 772, :none),
        (:call, :Complex, (:call, :round, (:call, :real, :z), (:call, (:curly, :RoundingMode, :MR))), (:call, :round, (:call, :imag, :z), (:call, (:curly, :RoundingMode, :MI))))
      )),
    (:line, 775, :none),
    (:(=), (:call, :round, (:(::), :z, :Complex)), (:block,
        (:line, 775, :none),
        (:call, :Complex, (:call, :round, (:call, :real, :z)), (:call, :round, (:call, :imag, :z)))
      )),
    (:line, 777, :none),
    (:macrocall, Symbol("@vectorize_1arg"), :Complex, :round),
    (:line, 779, :none),
    (:function, (:call, :round, (:(::), :z, :Complex), (:(::), :digits, :Integer), (:kw, (:(::), :base, :Integer), 10)), (:block,
        (:line, 780, :none),
        (:call, :Complex, (:call, :round, (:call, :real, :z), :digits, :base), (:call, :round, (:call, :imag, :z), :digits, :base))
      )),
    (:line, 784, :none),
    (:(=), (:call, (:curly, :float, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 784, :none),
        :z
      )),
    (:line, 785, :none),
    (:(=), (:call, :float, (:(::), :z, :Complex)), (:block,
        (:line, 785, :none),
        (:call, :Complex, (:call, :float, (:call, :real, :z)), (:call, :float, (:call, :imag, :z)))
      )),
    (:line, 786, :none),
    (:macrocall, Symbol("@vectorize_1arg"), :Complex, :float),
    (:line, 788, :none),
    (:(=), (:call, (:curly, :big, (:<:, :T, :AbstractFloat)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 788, :none),
        (:call, (:curly, :Complex, :BigFloat), :z)
      )),
    (:line, 789, :none),
    (:(=), (:call, (:curly, :big, (:<:, :T, :Integer)), (:(::), :z, (:curly, :Complex, :T))), (:block,
        (:line, 789, :none),
        (:call, (:curly, :Complex, :BigInt), :z)
      )),
    (:line, 793, :none),
    (:(=), (:call, (:curly, :complex, (:<:, :T, :Complex)), (:(::), :A, (:curly, :AbstractArray, :T))), (:block,
        (:line, 793, :none),
        :A
      )),
    (:line, 795, :none),
    (:function, (:call, (:curly, :complex, :T), (:(::), :A, (:curly, :AbstractArray, :T))), (:block,
        (:line, 796, :none),
        (:if, (:call, :!, (:call, :isleaftype, :T)), (:block,
            (:line, 797, :none),
            (:call, :error, "`complex` not defined on abstractly-typed arrays; please convert to a more specific type")
          )),
        (:line, 799, :none),
        (:call, :convert, (:curly, :AbstractArray, (:call, :typeof, (:call, :complex, (:call, :zero, :T)))), :A)
      )),
    (:line, 802, :none),
    (:(=), (:call, (:curly, :big, (:<:, :T, :Integer), :N), (:(::), :A, (:curly, :AbstractArray, (:curly, :Complex, :T), :N))), (:block,
        (:line, 802, :none),
        (:call, :convert, (:curly, :AbstractArray, (:curly, :Complex, :BigInt), :N), :A)
      )),
    (:line, 803, :none),
    (:(=), (:call, (:curly, :big, (:<:, :T, :AbstractFloat), :N), (:(::), :A, (:curly, :AbstractArray, (:curly, :Complex, :T), :N))), (:block,
        (:line, 803, :none),
        (:call, :convert, (:curly, :AbstractArray, (:curly, :Complex, :BigFloat), :N), :A)
      )),
    (:line, 807, :none),
    (:(=), (:call, :_default_type, (:(::), :T, (:curly, :Type, :Complex))), (:block,
        (:line, 807, :none),
        (:curly, :Complex, :Int)
      )),
    (:line, 808, :none),
    (:(=), (:call, (:curly, :promote_array_type, (:<:, :S, (:curly, :Union, :Complex, :Real)), (:<:, :T, :AbstractFloat)), :F, (:(::), (:curly, :Type, :S)), (:(::), (:curly, :Type, (:curly, :Complex, :T))), (:(::), :Type)), (:block,
        (:line, 808, :none),
        (:curly, :Complex, :T)
      )),
    (:line, 810, :none),
    (:function, (:call, (:curly, :complex, (:<:, :S, :Real), (:<:, :T, :Real)), (:(::), :A, (:curly, :AbstractArray, :S)), (:(::), :B, (:curly, :AbstractArray, :T))), (:block,
        (:line, 811, :none),
        (:if, (:call, :(!=), (:call, :size, :A), (:call, :size, :B)), (:block,
            (:line, 811, :none),
            (:call, :throw, (:call, :DimensionMismatch))
          )),
        (:line, 812, :none),
        (:(=), :F, (:call, :similar, :A, (:call, :typeof, (:call, :complex, (:call, :zero, :S), (:call, :zero, :T))))),
        (:line, 813, :none),
        (:(=), (:tuple, :RF, :RA, :RB), (:tuple, (:call, :eachindex, :F), (:call, :eachindex, :A), (:call, :eachindex, :B))),
        (:line, 814, :none),
        (:if, (:comparison, :RF, :(==), :RA, :(==), :RB), (:block,
            (:line, 815, :none),
            (:for, (:(=), :i, :RA), (:block,
                (:line, 816, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :i), (:call, :complex, (:ref, :A, :i), (:ref, :B, :i))))
              ))
          ), (:block,
            (:line, 819, :none),
            (:for, (:(=), (:tuple, :iF, :iA, :iB), (:call, :zip, :RF, :RA, :RB)), (:block,
                (:line, 820, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :iF), (:call, :complex, (:ref, :A, :iA), (:ref, :B, :iB))))
              ))
          )),
        (:line, 823, :none),
        (:return, :F)
      )),
    (:line, 826, :none),
    (:function, (:call, (:curly, :complex, (:<:, :T, :Real)), (:(::), :A, :Real), (:(::), :B, (:curly, :AbstractArray, :T))), (:block,
        (:line, 827, :none),
        (:(=), :F, (:call, :similar, :B, (:call, :typeof, (:call, :complex, :A, (:call, :zero, :T))))),
        (:line, 828, :none),
        (:(=), (:tuple, :RF, :RB), (:tuple, (:call, :eachindex, :F), (:call, :eachindex, :B))),
        (:line, 829, :none),
        (:if, (:call, :(==), :RF, :RB), (:block,
            (:line, 830, :none),
            (:for, (:(=), :i, :RB), (:block,
                (:line, 831, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :i), (:call, :complex, :A, (:ref, :B, :i))))
              ))
          ), (:block,
            (:line, 834, :none),
            (:for, (:(=), (:tuple, :iF, :iB), (:call, :zip, :RF, :RB)), (:block,
                (:line, 835, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :iF), (:call, :complex, :A, (:ref, :B, :iB))))
              ))
          )),
        (:line, 838, :none),
        (:return, :F)
      )),
    (:line, 841, :none),
    (:function, (:call, (:curly, :complex, (:<:, :T, :Real)), (:(::), :A, (:curly, :AbstractArray, :T)), (:(::), :B, :Real)), (:block,
        (:line, 842, :none),
        (:(=), :F, (:call, :similar, :A, (:call, :typeof, (:call, :complex, (:call, :zero, :T), :B)))),
        (:line, 843, :none),
        (:(=), (:tuple, :RF, :RA), (:tuple, (:call, :eachindex, :F), (:call, :eachindex, :A))),
        (:line, 844, :none),
        (:if, (:call, :(==), :RF, :RA), (:block,
            (:line, 845, :none),
            (:for, (:(=), :i, :RA), (:block,
                (:line, 846, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :i), (:call, :complex, (:ref, :A, :i), :B)))
              ))
          ), (:block,
            (:line, 849, :none),
            (:for, (:(=), (:tuple, :iF, :iA), (:call, :zip, :RF, :RA)), (:block,
                (:line, 850, :none),
                (:macrocall, Symbol("@inbounds"), (:(=), (:ref, :F, :iF), (:call, :complex, (:ref, :A, :iA), :B)))
              ))
          )),
        (:line, 853, :none),
        (:return, :F)
      ))
  ))