(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :Multimedia, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:export, :Display, :display, :pushdisplay, :popdisplay, :displayable, :redisplay, :MIME, Symbol("@MIME_str"), :reprmime, :stringmime, :istextmime, :mimewritable, :TextDisplay),
        (:line, 14, :none),
        (:type, false, (:curly, :MIME, :mime), (:block,
            (:line, 14, :none)
          )),
        (:line, 16, :none),
        (:toplevel, (:import, :Base, :show), (:import, :Base, :print), (:import, :Base, :string), (:import, :Base, :convert)),
        (:line, 17, :none),
        (:(=), (:call, :MIME, :s), (:block,
            (:line, 17, :none),
            (:call, (:curly, :MIME, (:call, :Symbol, :s)))
          )),
        (:line, 18, :none),
        (:(=), (:call, (:curly, :show, :mime), (:(::), :io, :IO), (:(::), (:curly, :MIME, :mime))), (:block,
            (:line, 18, :none),
            (:call, :print, :io, "MIME type ", (:call, :string, :mime))
          )),
        (:line, 19, :none),
        (:(=), (:call, (:curly, :print, :mime), (:(::), :io, :IO), (:(::), (:curly, :MIME, :mime))), (:block,
            (:line, 19, :none),
            (:call, :print, :io, :mime)
          )),
        (:line, 21, :none),
        (:macro, (:call, :MIME_str, :s), (:block,
            (:line, 22, :none),
            (:quote, (:curly, :MIME, (:$, (:call, :Expr, (:quote, #QuoteNode
                      :quote
                    ), (:call, :Symbol, :s)))))
          )),
        (:line, 29, :none),
        (:(=), (:call, (:curly, :mimewritable, :mime), (:(::), (:curly, :MIME, :mime)), :x), (:block,
            (:line, 29, :none),
            (:call, :method_exists, :show, (:curly, :Tuple, :IO, (:curly, :MIME, :mime), (:call, :typeof, :x)))
          )),
        (:line, 33, :none),
        (:(=), (:call, :show, (:(::), :io, :IO), (:(::), :m, :AbstractString), :x), (:block,
            (:line, 33, :none),
            (:call, :show, :io, (:call, :MIME, :m), :x)
          )),
        (:line, 34, :none),
        (:(=), (:call, :mimewritable, (:(::), :m, :AbstractString), :x), (:block,
            (:line, 34, :none),
            (:call, :mimewritable, (:call, :MIME, :m), :x)
          )),
        (:line, 50, :none),
        (:(=), (:call, :verbose_show, :io, :m, :x), (:block,
            (:line, 50, :none),
            (:call, :show, (:call, :IOContext, :io, (:kw, :limit, false)), :m, :x)
          )),
        (:line, 52, :none),
        (:macro, (:call, :textmime, :mime), (:block,
            (:line, 53, :none),
            (:quote, (:block,
                (:line, 54, :none),
                (:(=), :mimeT, (:curly, :MIME, (:call, :Symbol, (:$, :mime)))),
                (:line, 57, :none),
                (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Multimedia
                        )), (:quote, #QuoteNode
                        :reprmime
                      )), (:(::), :m, :mimeT), (:(::), :x, (:curly, :Vector, :UInt8))), (:block,
                    (:line, 57, :none),
                    (:call, :sprint, :verbose_show, :m, :x)
                  )),
                (:line, 58, :none),
                (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Multimedia
                        )), (:quote, #QuoteNode
                        :stringmime
                      )), (:(::), :m, :mimeT), (:(::), :x, (:curly, :Vector, :UInt8))), (:block,
                    (:line, 58, :none),
                    (:call, :reprmime, :m, :x)
                  )),
                (:line, 60, :none),
                (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Multimedia
                        )), (:quote, #QuoteNode
                        :istextmime
                      )), (:(::), :mimeT)), (:block,
                    (:line, 60, :none),
                    true
                  )),
                (:line, 61, :none),
                (:if, (:$, (:call, :(!=), :mime, "text/plain")), (:block,
                    (:line, 62, :none),
                    (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                              :Multimedia
                            )), (:quote, #QuoteNode
                            :reprmime
                          )), (:(::), :m, :mimeT), (:(::), :x, :AbstractString)), (:block,
                        (:line, 62, :none),
                        :x
                      ))
                  )),
                (:line, 64, :none),
                (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Multimedia
                        )), (:quote, #QuoteNode
                        :reprmime
                      )), (:(::), :m, :mimeT), :x), (:block,
                    (:line, 64, :none),
                    (:call, :sprint, :verbose_show, :m, :x)
                  )),
                (:line, 65, :none),
                (:(=), (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Multimedia
                        )), (:quote, #QuoteNode
                        :stringmime
                      )), (:(::), :m, :mimeT), :x), (:block,
                    (:line, 65, :none),
                    (:call, :reprmime, :m, :x)
                  ))
              ))
          )),
        (:line, 69, :none),
        (:(=), (:call, :istextmime, (:(::), :MIME)), (:block,
            (:line, 69, :none),
            false
          )),
        (:line, 70, :none),
        (:function, (:call, :reprmime, (:(::), :m, :MIME), :x), (:block,
            (:line, 71, :none),
            (:(=), :s, (:call, :IOBuffer)),
            (:line, 72, :none),
            (:call, :verbose_show, :s, :m, :x),
            (:line, 73, :none),
            (:call, :takebuf_array, :s)
          )),
        (:line, 75, :none),
        (:(=), (:call, :reprmime, (:(::), :m, :MIME), (:(::), :x, (:curly, :Vector, :UInt8))), (:block,
            (:line, 75, :none),
            :x
          )),
        (:line, 76, :none),
        (:(=), (:call, :stringmime, (:(::), :m, :MIME), :x), (:block,
            (:line, 76, :none),
            (:call, :base64encode, :verbose_show, :m, :x)
          )),
        (:line, 77, :none),
        (:(=), (:call, :stringmime, (:(::), :m, :MIME), (:(::), :x, (:curly, :Vector, :UInt8))), (:block,
            (:line, 77, :none),
            (:call, :base64encode, :write, :x)
          )),
        (:line, 80, :none),
        (:(=), (:call, :istextmime, (:(::), :m, :AbstractString)), (:block,
            (:line, 80, :none),
            (:call, :istextmime, (:call, :MIME, :m))
          )),
        (:line, 81, :none),
        (:(=), (:call, :reprmime, (:(::), :m, :AbstractString), :x), (:block,
            (:line, 81, :none),
            (:call, :reprmime, (:call, :MIME, :m), :x)
          )),
        (:line, 82, :none),
        (:(=), (:call, :stringmime, (:(::), :m, :AbstractString), :x), (:block,
            (:line, 82, :none),
            (:call, :stringmime, (:call, :MIME, :m), :x)
          )),
        (:line, 84, :none),
        (:for, (:(=), :mime, (:vect, "text/vnd.graphviz", "text/latex", "text/calendar", "text/n3", "text/richtext", "text/x-setext", "text/sgml", "text/tab-separated-values", "text/x-vcalendar", "text/x-vcard", "text/cmd", "text/css", "text/csv", "text/html", "text/javascript", "text/markdown", "text/plain", "text/vcard", "text/xml", "application/atom+xml", "application/ecmascript", "application/json", "application/rdf+xml", "application/rss+xml", "application/xml-dtd", "application/postscript", "image/svg+xml", "application/x-latex", "application/xhtml+xml", "application/javascript", "application/xml", "model/x3d+xml", "model/x3d+vrml", "model/vrml")), (:block,
            (:line, 85, :none),
            (:macrocall, Symbol("@eval"), (:macrocall, Symbol("@textmime"), (:$, :mime)))
          )),
        (:line, 99, :none),
        (:abstract, :Display),
        (:line, 102, :none),
        (:(=), (:call, :display, (:(::), :d, :Display), (:(::), :mime, :AbstractString), :x), (:block,
            (:line, 102, :none),
            (:call, :display, :d, (:call, :MIME, :mime), :x)
          )),
        (:line, 103, :none),
        (:(=), (:call, :display, (:(::), :mime, :AbstractString), :x), (:block,
            (:line, 103, :none),
            (:call, :display, (:call, :MIME, :mime), :x)
          )),
        (:line, 104, :none),
        (:(=), (:call, :displayable, (:(::), :d, :Display), (:(::), :mime, :AbstractString)), (:block,
            (:line, 104, :none),
            (:call, :displayable, :d, (:call, :MIME, :mime))
          )),
        (:line, 105, :none),
        (:(=), (:call, :displayable, (:(::), :mime, :AbstractString)), (:block,
            (:line, 105, :none),
            (:call, :displayable, (:call, :MIME, :mime))
          )),
        (:line, 108, :none),
        (:type, false, (:<:, :TextDisplay, :Display), (:block,
            (:line, 109, :none),
            (:(::), :io, :IO)
          )),
        (:line, 111, :none),
        (:(=), (:call, :display, (:(::), :d, :TextDisplay), (:(::), :M, (:macrocall, Symbol("@MIME_str"), "text/plain")), :x), (:block,
            (:line, 111, :none),
            (:call, :show, (:., :d, (:quote, #QuoteNode
                  :io
                )), :M, :x)
          )),
        (:line, 112, :none),
        (:(=), (:call, :display, (:(::), :d, :TextDisplay), :x), (:block,
            (:line, 112, :none),
            (:call, :display, :d, (:call, (:macrocall, Symbol("@MIME_str"), "text/plain")), :x)
          )),
        (:line, 114, :none),
        (:toplevel, (:import, :Base, :close), (:import, :Base, :flush)),
        (:line, 115, :none),
        (:(=), (:call, :flush, (:(::), :d, :TextDisplay)), (:block,
            (:line, 115, :none),
            (:call, :flush, (:., :d, (:quote, #QuoteNode
                  :io
                )))
          )),
        (:line, 116, :none),
        (:(=), (:call, :close, (:(::), :d, :TextDisplay)), (:block,
            (:line, 116, :none),
            (:call, :close, (:., :d, (:quote, #QuoteNode
                  :io
                )))
          )),
        (:line, 122, :none),
        (:const, (:(=), :displays, (:ref, :Display))),
        (:line, 123, :none),
        (:function, (:call, :pushdisplay, (:(::), :d, :Display)), (:block,
            (:line, 124, :none),
            (:global, :displays),
            (:line, 125, :none),
            (:call, :push!, :displays, :d)
          )),
        (:line, 127, :none),
        (:(=), (:call, :popdisplay), (:block,
            (:line, 127, :none),
            (:call, :pop!, :displays)
          )),
        (:line, 128, :none),
        (:function, (:call, :popdisplay, (:(::), :d, :Display)), (:block,
            (:line, 129, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :displays), -1, 1)), (:block,
                (:line, 130, :none),
                (:if, (:call, :(==), :d, (:ref, :displays, :i)), (:block,
                    (:line, 131, :none),
                    (:return, (:call, :splice!, :displays, :i))
                  ))
              )),
            (:line, 134, :none),
            (:call, :throw, (:call, :KeyError, :d))
          )),
        (:line, 136, :none),
        (:function, (:call, :reinit_displays), (:block,
            (:line, 137, :none),
            (:call, :empty!, :displays),
            (:line, 138, :none),
            (:call, :pushdisplay, (:call, :TextDisplay, :STDOUT))
          )),
        (:line, 141, :none),
        (:macro, (:call, :try_display, :expr), (:block,
            (:line, 142, :none),
            (:quote, (:block,
                (:line, 143, :none),
                (:try, (:block,
                    (:line, 143, :none),
                    (:$, (:call, :esc, :expr))
                  ), :e, (:block,
                    (:line, 145, :none),
                    (:||, (:&&, (:call, :isa, :e, :MethodError), (:call, :in, (:., :e, (:quote, #QuoteNode
                              :f
                            )), (:tuple, :display, :redisplay, :show))), (:call, :rethrow))
                  ))
              ))
          )),
        (:line, 151, :none),
        (:(=), (:call, :xdisplayable, (:(::), :D, :Display), (:..., :args)), (:block,
            (:line, 151, :none),
            (:call, :applicable, :display, :D, (:..., :args))
          )),
        (:line, 153, :none),
        (:function, (:call, :display, :x), (:block,
            (:line, 154, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :displays), -1, 1)), (:block,
                (:line, 155, :none),
                (:&&, (:call, :xdisplayable, (:ref, :displays, :i), :x), (:macrocall, Symbol("@try_display"), (:return, (:call, :display, (:ref, :displays, :i), :x))))
              )),
            (:line, 158, :none),
            (:call, :throw, (:call, :MethodError, :display, (:tuple, :x)))
          )),
        (:line, 161, :none),
        (:function, (:call, :display, (:(::), :m, :MIME), :x), (:block,
            (:line, 162, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :displays), -1, 1)), (:block,
                (:line, 163, :none),
                (:&&, (:call, :xdisplayable, (:ref, :displays, :i), :m, :x), (:macrocall, Symbol("@try_display"), (:return, (:call, :display, (:ref, :displays, :i), :m, :x))))
              )),
            (:line, 166, :none),
            (:call, :throw, (:call, :MethodError, :display, (:tuple, :m, :x)))
          )),
        (:line, 169, :none),
        (:(=), (:call, (:curly, :displayable, (:<:, :D, :Display), :mime), (:(::), :d, :D), (:(::), (:curly, :MIME, :mime))), (:block,
            (:line, 169, :none),
            (:call, :method_exists, :display, (:curly, :Tuple, :D, (:curly, :MIME, :mime), :Any))
          )),
        (:line, 172, :none),
        (:function, (:call, :displayable, (:(::), :m, :MIME)), (:block,
            (:line, 173, :none),
            (:for, (:(=), :d, :displays), (:block,
                (:line, 174, :none),
                (:&&, (:call, :displayable, :d, :m), (:return, true))
              )),
            (:line, 176, :none),
            (:return, false)
          )),
        (:line, 187, :none),
        (:function, (:call, :redisplay, :x), (:block,
            (:line, 188, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :displays), -1, 1)), (:block,
                (:line, 189, :none),
                (:&&, (:call, :xdisplayable, (:ref, :displays, :i), :x), (:macrocall, Symbol("@try_display"), (:return, (:call, :redisplay, (:ref, :displays, :i), :x))))
              )),
            (:line, 192, :none),
            (:call, :throw, (:call, :MethodError, :redisplay, (:tuple, :x)))
          )),
        (:line, 195, :none),
        (:function, (:call, :redisplay, (:(::), :m, (:curly, :Union, :MIME, :AbstractString)), :x), (:block,
            (:line, 196, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :displays), -1, 1)), (:block,
                (:line, 197, :none),
                (:&&, (:call, :xdisplayable, (:ref, :displays, :i), :m, :x), (:macrocall, Symbol("@try_display"), (:return, (:call, :redisplay, (:ref, :displays, :i), :m, :x))))
              )),
            (:line, 200, :none),
            (:call, :throw, (:call, :MethodError, :redisplay, (:tuple, :m, :x)))
          )),
        (:line, 204, :none),
        (:(=), (:call, :redisplay, (:(::), :d, :Display), :x), (:block,
            (:line, 204, :none),
            (:call, :display, :d, :x)
          )),
        (:line, 205, :none),
        (:(=), (:call, :redisplay, (:(::), :d, :Display), (:(::), :m, (:curly, :Union, :MIME, :AbstractString)), :x), (:block,
            (:line, 205, :none),
            (:call, :display, :d, :m, :x)
          ))
      ))
  ))