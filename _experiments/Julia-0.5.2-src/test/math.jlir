(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 0, 1, 3), 1)),
    (:line, 4, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 1, 1, 3), 1)),
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 2, 1, 3), 2)),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 3, 1, 3), 3)),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 4, 1, 3), 3)),
    (:line, 9, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 0.0, 1, 3), 1.0)),
    (:line, 10, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 1.0, 1, 3), 1.0)),
    (:line, 11, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 2.0, 1, 3), 2.0)),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 3.0, 1, 3), 3.0)),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 4.0, 1, 3), 3.0)),
    (:line, 15, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, (:vect, 0, 1, 2, 3, 4), 1.0, 3.0), (:vect, 1.0, 1.0, 2.0, 3.0, 3.0))),
    (:line, 16, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, (:vcat, (:row, 0, 1), (:row, 2, 3)), 1.0, 3.0), (:vcat, (:row, 1.0, 1.0), (:row, 2.0, 3.0)))),
    (:line, 18, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :(==), :pi, :e))),
    (:line, 19, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :(==), :e, (:call, ://, 1, 2)))),
    (:line, 20, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, ://, 1, 2), :e)),
    (:line, 21, :none),
    (:macrocall, Symbol("@test"), (:call, :<, (:call, :big, (:call, ://, 1, 2)), :e)),
    (:line, 22, :none),
    (:macrocall, Symbol("@test"), (:call, :<, :e, (:call, :big, (:call, ://, 20, 6)))),
    (:line, 23, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, :pi), (:call, :exp, :pi))),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, 2), (:call, :exp, 2))),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, 2.4), (:call, :exp, 2.4))),
    (:line, 26, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, (:call, ://, 2, 3)), (:call, :exp, (:call, ://, 2, 3)))),
    (:line, 28, :none),
    (:macrocall, Symbol("@test"), (:call, :<, (:call, :Float16, 3.0), :pi)),
    (:line, 29, :none),
    (:macrocall, Symbol("@test"), (:call, :<, :pi, (:call, :Float16, 4.0))),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :contains, (:call, :sprint, :show, :π), "3.14159")),
    (:line, 32, :none),
    (:block,
      (:line, 33, :none),
      (:(=), :x, (:vect, 0.0, 1.0, 2.0, 3.0, 4.0)),
      (:line, 34, :none),
      (:call, :clamp!, :x, 1, 3),
      (:line, 35, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :x, (:vect, 1.0, 1.0, 2.0, 3.0, 3.0)))
    ),
    (:line, 39, :none),
    (:for, (:(=), :T, (:tuple, :Float16, :Float32, :Float64)), (:block,
        (:line, 40, :none),
        (:for, (:(=), :z, (:tuple, (:call, :zero, :T), (:call, :-, (:call, :zero, :T)))), (:block,
            (:line, 41, :none),
            (:call, :(===), (:call, :frexp, :z), (:tuple, :z, 0)),
            (:line, 42, :none),
            (:call, :(===), (:call, :significand, :z), :z),
            (:line, 43, :none),
            (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :exponent, :z))
          )),
        (:line, 46, :none),
        (:for, (:(=), (:tuple, :a, :b), (:vect, (:tuple, (:call, :T, 12.8), (:call, :T, 0.8)), (:tuple, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :nextfloat, (:call, :one, :T), -2)), (:tuple, (:call, :nextfloat, (:call, :zero, :T), 3), (:call, :T, 0.75)), (:tuple, (:call, :nextfloat, (:call, :zero, :T)), (:call, :T, 0.5)))), (:block,
            (:line, 50, :none),
            (:(=), :n, (:call, :Int, (:call, :log2, (:call, :/, :a, :b)))),
            (:line, 51, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, :a), (:tuple, :b, :n))),
            (:line, 52, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, :b, :n), :a)),
            (:line, 53, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, :a, (:call, :-, :n)), :b)),
            (:line, 54, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :significand, :a), (:call, :*, 2, :b))),
            (:line, 55, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exponent, :a), (:call, :-, :n, 1))),
            (:line, 57, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :-, :a)), (:tuple, (:call, :-, :b), :n))),
            (:line, 58, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :-, :b), :n), (:call, :-, :a))),
            (:line, 59, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :-, :a), (:call, :-, :n)), (:call, :-, :b))),
            (:line, 60, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :significand, (:call, :-, :a)), (:call, :*, -2, :b))),
            (:line, 61, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exponent, (:call, :-, :a)), (:call, :-, :n, 1)))
          )),
        (:line, 63, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :exponent, (:call, :convert, :T, :NaN))),
        (:line, 64, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :significand, (:call, :convert, :T, :NaN)))),
        (:line, 65, :none),
        (:(=), (:tuple, :x, :y), (:call, :frexp, (:call, :convert, :T, :NaN))),
        (:line, 66, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, :x)),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :y, 0))
      )),
    (:line, 73, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
        (:line, 74, :none),
        (:(=), :x, (:call, :T, (:call, ://, 1, 3))),
        (:line, 75, :none),
        (:(=), :y, (:call, :T, (:call, ://, 1, 2))),
        (:line, 76, :none),
        (:(=), :yi, 4),
        (:line, 78, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, :y), (:call, :^, (:call, :big, :x), (:call, :big, :y)))),
        (:line, 79, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, :yi), (:call, :^, (:call, :big, :x), :yi))),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acos, :x), (:call, :acos, (:call, :big, :x)))),
        (:line, 81, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acosh, (:call, :+, 1, :x)), (:call, :acosh, (:call, :big, (:call, :+, 1, :x))))),
        (:line, 82, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asin, :x), (:call, :asin, (:call, :big, :x)))),
        (:line, 83, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asinh, :x), (:call, :asinh, (:call, :big, :x)))),
        (:line, 84, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan, :x), (:call, :atan, (:call, :big, :x)))),
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan2, :x, :y), (:call, :atan2, (:call, :big, :x), (:call, :big, :y)))),
        (:line, 86, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atanh, :x), (:call, :atanh, (:call, :big, :x)))),
        (:line, 87, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cbrt, :x), (:call, :cbrt, (:call, :big, :x)))),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cos, :x), (:call, :cos, (:call, :big, :x)))),
        (:line, 89, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, :x), (:call, :cosh, (:call, :big, :x)))),
        (:line, 90, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp, :x), (:call, :exp, (:call, :big, :x)))),
        (:line, 91, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, :x), (:call, :exp10, (:call, :big, :x)))),
        (:line, 92, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, :x), (:call, :exp2, (:call, :big, :x)))),
        (:line, 93, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, :x), (:call, :expm1, (:call, :big, :x)))),
        (:line, 94, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hypot, :x, :y), (:call, :hypot, (:call, :big, :x), (:call, :big, :y)))),
        (:line, 95, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hypot, :x, :x, :y), (:call, :hypot, (:call, :hypot, (:call, :big, :x), (:call, :big, :x)), (:call, :big, :y)))),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hypot, :x, :x, :y, :y), (:call, :hypot, (:call, :hypot, (:call, :big, :x), (:call, :big, :x)), (:call, :hypot, (:call, :big, :y), (:call, :big, :y))))),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log, :x), (:call, :log, (:call, :big, :x)))),
        (:line, 98, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log10, :x), (:call, :log10, (:call, :big, :x)))),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, :x), (:call, :log1p, (:call, :big, :x)))),
        (:line, 100, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log2, :x), (:call, :log2, (:call, :big, :x)))),
        (:line, 101, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sin, :x), (:call, :sin, (:call, :big, :x)))),
        (:line, 102, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, :x), (:call, :sinh, (:call, :big, :x)))),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sqrt, :x), (:call, :sqrt, (:call, :big, :x)))),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, :x), (:call, :tan, (:call, :big, :x)))),
        (:line, 105, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, :x), (:call, :tanh, (:call, :big, :x)))),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :T, (:call, ://, 1, 4)), (:call, :T, (:call, ://, 1, 2))), (:call, :T, (:call, ://, 1, 2)))),
        (:line, 108, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :T, (:call, ://, 1, 4)), 2), (:call, :T, (:call, ://, 1, 16)))),
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 111, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :asin, (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 2), (:call, :eps, :T)),
        (:line, 112, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :atan, (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 4), (:call, :eps, :T)),
        (:line, 113, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :atan2, (:call, :T, 1), (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 4), (:call, :eps, :T)),
        (:line, 114, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 115, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 1)), (:call, :T, 1))),
        (:line, 116, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 1000000000)), (:call, :T, 1000))),
        (:line, 117, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :T, 0)), (:call, :T, 1))),
        (:line, 118, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :cos, (:call, :/, (:call, :T, :pi), 2)), (:call, :T, 0), (:call, :eps, :T)),
        (:line, 119, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :T, :pi)), (:call, :T, -1))),
        (:line, 120, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :exp, (:call, :T, 1)), (:call, :T, :e), (:call, :*, 10, (:call, :eps, :T))),
        (:line, 121, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp10, (:call, :T, 1)), (:call, :T, 10))),
        (:line, 122, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp2, (:call, :T, 1)), (:call, :T, 2))),
        (:line, 123, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 124, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :expm1, (:call, :T, 1)), (:call, :-, (:call, :T, :e), 1), (:call, :*, 10, (:call, :eps, :T))),
        (:line, 125, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :hypot, (:call, :T, 3), (:call, :T, 4)), (:call, :T, 5))),
        (:line, 126, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 127, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, :e, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 128, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :log, (:call, :T, :e)), (:call, :T, 1), (:call, :eps, :T)),
        (:line, 129, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log10, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 130, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log10, (:call, :T, 10)), (:call, :T, 1))),
        (:line, 131, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 132, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :log1p, (:call, :-, (:call, :T, :e), 1)), (:call, :T, 1), (:call, :eps, :T)),
        (:line, 133, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log2, (:call, :T, 1)), (:call, :T, 0))),
        (:line, 134, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log2, (:call, :T, 2)), (:call, :T, 1))),
        (:line, 135, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 136, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :/, (:call, :T, :pi), 2)), (:call, :T, 1))),
        (:line, 137, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :sin, (:call, :T, :pi)), (:call, :T, 0), (:call, :eps, :T)),
        (:line, 138, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 139, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 1)), (:call, :T, 1))),
        (:line, 140, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 100000000)), (:call, :T, 10000))),
        (:line, 141, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :T, 0)), (:call, :T, 0))),
        (:line, 142, :none),
        (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :tan, (:call, :/, (:call, :T, :pi), 4)), (:call, :T, 1), (:call, :eps, :T)),
        (:line, 144, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acos, (:call, :cos, :x)), :x)),
        (:line, 145, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acosh, (:call, :cosh, :x)), :x)),
        (:line, 146, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asin, (:call, :sin, :x)), :x)),
        (:line, 147, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, (:call, :cbrt, :x), 3), :x)),
        (:line, 148, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cbrt, (:call, :^, :x, 3)), :x)),
        (:line, 149, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asinh, (:call, :sinh, :x)), :x)),
        (:line, 150, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan, (:call, :tan, :x)), :x)),
        (:line, 151, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan2, :x, :y), (:call, :atan, (:call, :/, :x, :y)))),
        (:line, 152, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atanh, (:call, :tanh, :x)), :x)),
        (:line, 153, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cos, (:call, :acos, :x)), :x)),
        (:line, 154, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, (:call, :acosh, (:call, :+, 1, :x))), (:call, :+, 1, :x))),
        (:line, 155, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp, (:call, :log, :x)), :x)),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, (:call, :log10, :x)), :x)),
        (:line, 157, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, (:call, :log2, :x)), :x)),
        (:line, 158, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :log1p, :x)), :x)),
        (:line, 159, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log, (:call, :exp, :x)), :x)),
        (:line, 160, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log10, (:call, :exp10, :x)), :x)),
        (:line, 161, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, (:call, :expm1, :x)), :x)),
        (:line, 162, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log2, (:call, :exp2, :x)), :x)),
        (:line, 163, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sin, (:call, :asin, :x)), :x)),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, (:call, :asinh, :x)), :x)),
        (:line, 165, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, (:call, :sqrt, :x), 2), :x)),
        (:line, 166, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sqrt, (:call, :^, :x, 2)), :x)),
        (:line, 167, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, (:call, :atan, :x)), :x)),
        (:line, 168, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, (:call, :atanh, :x)), :x)),
        (:line, 170, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, :x), (:call, :/, (:call, :+, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
        (:line, 171, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :-, (:call, :^, (:call, :cosh, :x), 2), (:call, :^, (:call, :sinh, :x), 2)), 1)),
        (:line, 172, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hypot, :x, :y), (:call, :sqrt, (:call, :+, (:call, :^, :x, 2), (:call, :^, :y, 2))))),
        (:line, 173, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :+, (:call, :^, (:call, :sin, :x), 2), (:call, :^, (:call, :cos, :x), 2)), 1)),
        (:line, 174, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, :x), (:call, :/, (:call, :-, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, :x), (:call, :/, (:call, :sin, :x), (:call, :cos, :x)))),
        (:line, 176, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, :x), (:call, :/, (:call, :sinh, :x), (:call, :cosh, :x)))),
        (:line, 179, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :log, (:call, :zero, :T)))),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log, (:call, :convert, :T, :NaN)))),
        (:line, 181, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log, (:call, :-, (:call, :one, :T)))),
        (:line, 182, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :log1p, (:call, :-, (:call, :one, :T))))),
        (:line, 183, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log1p, (:call, :convert, :T, :NaN)))),
        (:line, 184, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log1p, (:call, :convert, :T, -2.0))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, 0), (:call, :T, 0)), (:call, :T, 0))),
        (:line, 186, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :Inf)), (:call, :T, :Inf))),
        (:line, 187, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :x)), (:call, :T, :Inf))),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :NaN)), (:call, :T, :Inf))),
        (:line, 189, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :hypot, (:call, :T, :x), (:call, :T, :NaN))))
      )),
    (:line, 191, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, 5), (:call, :exp10, 5.0))),
    (:line, 192, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, (:call, :Float16, 2.0)), (:call, :exp2, 2.0))),
    (:line, 193, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, :e), 1)),
    (:line, 196, :none),
    (:(=), :TAA, (:call, :rand, 2, 2)),
    (:line, 197, :none),
    (:(=), :TAA, (:call, :/, (:call, :+, :TAA, (:.', :TAA)), 2.0)),
    (:line, 198, :none),
    (:(=), :STAA, (:call, :Symmetric, :TAA)),
    (:line, 199, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:call, :atanh, :STAA)), (:call, :atanh, :TAA))),
    (:line, 200, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:call, :asinh, :STAA)), (:call, :asinh, :TAA))),
    (:line, 201, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:call, :acosh, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA))))), (:call, :acosh, (:call, :+, :TAA, (:call, :ones, :TAA))))),
    (:line, 202, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:call, :acsch, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA))))), (:call, :acsch, (:call, :+, :TAA, (:call, :ones, :TAA))))),
    (:line, 203, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:call, :acoth, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA))))), (:call, :acoth, (:call, :+, :TAA, (:call, :ones, :TAA))))),
    (:line, 206, :none),
    (:for, (:(=), :ii, (:(:), -2048, 2048)), (:block,
        (:line, 207, :none),
        (:(=), :expected, (:call, :exp2, (:call, :float, :ii))),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int16, :ii)), :expected)),
        (:line, 209, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int32, :ii)), :expected)),
        (:line, 210, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int64, :ii)), :expected)),
        (:line, 211, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int128, :ii)), :expected)),
        (:line, 212, :none),
        (:if, (:call, :(>=), :ii, 0), (:block,
            (:line, 213, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt16, :ii)), :expected)),
            (:line, 214, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt32, :ii)), :expected)),
            (:line, 215, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt64, :ii)), :expected)),
            (:line, 216, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt128, :ii)), :expected))
          ))
      )),
    (:line, 221, :none),
    (:for, (:(=), :T, (:tuple, :Int, :Float64, :BigFloat)), (:block,
        (:line, 222, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :deg2rad, (:call, :T, 180)), (:call, :*, 1, :pi))),
        (:line, 223, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :deg2rad, (:ref, :T, 45, 60)), (:vect, (:call, :/, :pi, (:call, :T, 4)), (:call, :/, :pi, (:call, :T, 3))))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :rad2deg, (:vect, (:call, :/, :pi, (:call, :T, 4)), (:call, :/, :pi, (:call, :T, 3)))), (:vect, 45, 60))),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :rad2deg, (:call, :*, (:call, :T, 1), :pi)), 180)),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :rad2deg, (:call, :T, 1)), (:call, :rad2deg, true))),
        (:line, 227, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :deg2rad, (:call, :T, 1)), (:call, :deg2rad, true)))
      )),
    (:line, 231, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64, (:curly, :Rational, :Int))), (:block,
        (:line, 232, :none),
        (:(=), :fT, (:call, :typeof, (:call, :float, (:call, :one, :T)))),
        (:line, 233, :none),
        (:for, (:(=), :x, (:(:), -400, 40, 400)), (:block,
            (:line, 234, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:(::), (:call, :sind, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :sin, (:call, :*, (:call, :/, :pi, 180), :x))), (:call, :eps, (:call, :deg2rad, (:call, :convert, :fT, :x)))),
            (:line, 235, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:(::), (:call, :cosd, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :cos, (:call, :*, (:call, :/, :pi, 180), :x))), (:call, :eps, (:call, :deg2rad, (:call, :convert, :fT, :x))))
          )),
        (:line, 238, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 0.0)), :fT), (:call, :zero, :fT))),
        (:line, 239, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 180.0)), :fT), (:call, :zero, :fT))),
        (:line, 240, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 360.0)), :fT), (:call, :zero, :fT))),
        (:line, 241, :none),
        (:&&, (:call, :(!=), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -0.0)), :fT), (:call, :-, (:call, :zero, :fT))))),
        (:line, 242, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -180.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
        (:line, 243, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -360.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
        (:line, 245, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, 90)), :fT), (:call, :zero, :fT))),
        (:line, 246, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, 270)), :fT), (:call, :zero, :fT))),
        (:line, 247, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, -90)), :fT), (:call, :zero, :fT))),
        (:line, 248, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, -270)), :fT), (:call, :zero, :fT))),
        (:line, 250, :none),
        (:for, (:(=), :x, (:(:), -3, 0.3, 3)), (:block,
            (:line, 251, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:(::), (:call, :sinpi, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :sin, (:call, :*, :pi, :x))), (:call, :eps, (:call, :*, :pi, (:call, :convert, :fT, :x)))),
            (:line, 252, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:(::), (:call, :cospi, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :cos, (:call, :*, :pi, :x))), (:call, :eps, (:call, :*, :pi, (:call, :convert, :fT, :x))))
          )),
        (:line, 255, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 0.0)), :fT), (:call, :zero, :fT))),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 1.0)), :fT), (:call, :zero, :fT))),
        (:line, 257, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 2.0)), :fT), (:call, :zero, :fT))),
        (:line, 258, :none),
        (:&&, (:call, :(!=), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -0.0)), :fT), (:call, :-, (:call, :zero, :fT))))),
        (:line, 259, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -1.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -2.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
        (:line, 261, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :sinpi, (:call, :convert, :T, :Inf))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, 0.5)), :fT), (:call, :zero, :fT))),
        (:line, 264, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, 1.5)), :fT), (:call, :zero, :fT))),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, -0.5)), :fT), (:call, :zero, :fT))),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, -1.5)), :fT), (:call, :zero, :fT))),
        (:line, 267, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :cospi, (:call, :convert, :T, :Inf))),
        (:line, 270, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sind, (:call, :convert, :T, 30)), 0.5)),
        (:line, 271, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosd, (:call, :convert, :T, 60)), 0.5)),
        (:line, 272, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sind, (:call, :convert, :T, 150)), 0.5)),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, (:call, :/, (:call, :one, :T), (:call, :convert, :T, 6))), 0.5)),
        (:line, 274, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :sind, (:call, :convert, :T, :Inf))),
        (:line, 275, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :cosd, (:call, :convert, :T, :Inf))),
        (:line, 276, :none),
        (:&&, (:call, :(!=), :T, :Float32), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, (:call, :/, (:call, :one, :T), (:call, :convert, :T, 3))), 0.5))),
        (:line, 277, :none),
        (:&&, (:call, :(==), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, (:call, ://, 5, 6)), 0.5)))
      )),
    (:line, 280, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, 1), 0)),
    (:line, 281, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, -1), 0)),
    (:line, 282, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, 1), -1)),
    (:line, 283, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, 2), 1)),
    (:line, 285, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, 1), 0)),
    (:line, 286, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, (:call, :complex, 1, 0)), 0)),
    (:line, 287, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, 0), 1)),
    (:line, 288, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, :Inf), 0)),
    (:line, 289, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, 1), -1)),
    (:line, 290, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, 0), 0)),
    (:line, 291, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, (:call, :complex, 1, 0)), -1)),
    (:line, 292, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, :Inf), 0)),
    (:line, 295, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64, :BigFloat)), (:block,
        (:line, 296, :none),
        (:for, (:(=), :f, (:tuple, :sind, :cosd, :sinpi, :cospi)), (:block,
            (:line, 297, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
                      :return_types
                    )), :f, (:curly, :Tuple, :T)), (:vect, :T)))
          ))
      )),
    (:line, 302, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erf, (:call, :Float16, 1)), 0.8427007929497149)),
    (:line, 303, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erf, 1), 0.8427007929497149)),
    (:line, 304, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfc, 1), 0.15729920705028513)),
    (:line, 305, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfc, (:call, :Float16, 1)), 0.15729920705028513)),
    (:line, 306, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfcx, 1), 0.427583576155807)),
    (:line, 307, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfcx, (:call, :Float32, 1)), 0.427583576155807)),
    (:line, 308, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfcx, (:call, :Complex64, 1)), 0.427583576155807)),
    (:line, 309, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfi, 1), 1.6504257587975428)),
    (:line, 310, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfinv, 0.8427007929497149), 1)),
    (:line, 311, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfcinv, 0.15729920705028513), 1)),
    (:line, 312, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :dawson, 1), 0.5380795069127684)),
    (:line, 314, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erf, (:call, :+, 1, (:call, :*, 2, :im))), (:call, :-, -0.536643565778565, (:call, :*, 5.049143703447035, :im)))),
    (:line, 315, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfc, (:call, :+, 1, (:call, :*, 2, :im))), (:call, :+, 1.536643565778565, (:call, :*, 5.049143703447035, :im)))),
    (:line, 316, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfcx, (:call, :+, 1, (:call, :*, 2, :im))), (:call, :-, 0.14023958136627795, (:call, :*, 0.2222134401798991, :im)))),
    (:line, 317, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :erfi, (:call, :+, 1, (:call, :*, 2, :im))), (:call, :+, -0.011259006028815025, (:call, :*, 1.0036063427256519, :im)))),
    (:line, 318, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :dawson, (:call, :+, 1, (:call, :*, 2, :im))), (:call, :-, -13.388927316482919, (:call, :*, 11.828715103889593, :im)))),
    (:line, 320, :none),
    (:for, (:(=), :elty, (:vect, :Float32, :Float64)), (:block,
        (:line, 321, :none),
        (:for, (:(=), :x, (:call, :logspace, -200, -0.01)), (:block,
            (:line, 322, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erf, (:call, :erfinv, :x)), :x, (:call, :*, 1.0e-12, :x)),
            (:line, 323, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erf, (:call, :erfinv, (:call, :-, :x))), (:call, :-, :x), (:call, :*, 1.0e-12, :x)),
            (:line, 324, :none),
            (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erfc, (:call, :erfcinv, (:call, :*, 2, :x))), (:call, :*, 2, :x), (:call, :*, 1.0e-12, :x)),
            (:line, 325, :none),
            (:if, (:call, :>, :x, 1.0e-20), (:block,
                (:line, 326, :none),
                (:(=), :xf, (:call, :Float32, :x)),
                (:line, 327, :none),
                (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erf, (:call, :erfinv, :xf)), :xf, (:call, :*, 1.0e-5, :xf)),
                (:line, 328, :none),
                (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erf, (:call, :erfinv, (:call, :-, :xf))), (:call, :-, :xf), (:call, :*, 1.0e-5, :xf)),
                (:line, 329, :none),
                (:macrocall, Symbol("@test_approx_eq_eps"), (:call, :erfc, (:call, :erfcinv, (:call, :*, 2, :xf))), (:call, :*, 2, :xf), (:call, :*, 1.0e-5, :xf))
              ))
          )),
        (:line, 332, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :erfinv, (:call, :one, :elty)), :Inf)),
        (:line, 333, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :erfinv, (:call, :-, (:call, :one, :elty))), (:call, :-, :Inf))),
        (:line, 334, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :erfinv, (:call, :convert, :elty, 2.0))),
        (:line, 336, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :erfcinv, (:call, :zero, :elty)), :Inf)),
        (:line, 337, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :erfcinv, (:call, :-, (:call, :one, :elty))))
      )),
    (:line, 340, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :erfinv, (:call, :one, :Int)), (:call, :erfinv, 1.0))),
    (:line, 341, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :erfcinv, (:call, :one, :Int)), (:call, :erfcinv, 1.0))),
    (:line, 344, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airy, 1.8), (:call, :airyai, 1.8))),
    (:line, 345, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyprime, 1.8), -0.06852478011861093)),
    (:line, 346, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyaiprime, 1.8), (:call, :airyprime, 1.8))),
    (:line, 347, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airybi, 1.8), 2.5958693567439064)),
    (:line, 348, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airybiprime, 1.8), 2.9855400508465992)),
    (:line, 349, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :airy, (:call, :*, 200, :im))),
    (:line, 350, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :airybi, 200)),
    (:line, 351, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :airy, 5, (:call, :one, :Complex128))),
    (:line, 352, :none),
    (:(=), :z, (:call, :+, 1.8, (:call, :*, 1.0, :im))),
    (:line, 353, :none),
    (:for, (:(=), :elty, (:vect, :Complex64, :Complex128)), (:block,
        (:line, 354, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airy, (:call, :convert, :elty, 1.8)), 0.0470362168668458)),
        (:line, 355, :none),
        (:(=), :z, (:call, :convert, :elty, :z)),
        (:line, 356, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyx, :z), (:call, :airyx, 0, :z))),
        (:line, 357, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyx, 0, :z), (:call, :*, (:call, :airy, 0, :z), (:call, :exp, (:call, :*, (:call, :/, 2, 3), :z, (:call, :sqrt, :z)))))),
        (:line, 358, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyx, 1, :z), (:call, :*, (:call, :airy, 1, :z), (:call, :exp, (:call, :*, (:call, :/, 2, 3), :z, (:call, :sqrt, :z)))))),
        (:line, 359, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyx, 2, :z), (:call, :*, (:call, :airy, 2, :z), (:call, :exp, (:call, :-, (:call, :abs, (:call, :real, (:call, :*, (:call, :/, 2, 3), :z, (:call, :sqrt, :z))))))))),
        (:line, 360, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :airyx, 3, :z), (:call, :*, (:call, :airy, 3, :z), (:call, :exp, (:call, :-, (:call, :abs, (:call, :real, (:call, :*, (:call, :/, 2, 3), :z, (:call, :sqrt, :z))))))))),
        (:line, 361, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :airyx, 5, :z))
      )),
    (:line, 363, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :airy, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 366, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj0, (:call, :Float32, 2.0)), (:call, :besselj0, (:call, :Float64, 2.0)))),
    (:line, 367, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj1, (:call, :Float32, 2.0)), (:call, :besselj1, (:call, :Float64, 2.0)))),
    (:line, 368, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely0, (:call, :Float32, 2.0)), (:call, :bessely0, (:call, :Float64, 2.0)))),
    (:line, 369, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely1, (:call, :Float32, 2.0)), (:call, :bessely1, (:call, :Float64, 2.0)))),
    (:line, 370, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj0, 2), (:call, :besselj0, 2.0))),
    (:line, 371, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj1, 2), (:call, :besselj1, 2.0))),
    (:line, 372, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely0, 2), (:call, :bessely0, 2.0))),
    (:line, 373, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely1, 2), (:call, :bessely1, 2.0))),
    (:line, 374, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj0, (:call, :+, 2.0, :im)), (:call, :besselj, 0, (:call, :+, 2.0, :im)))),
    (:line, 375, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj1, (:call, :+, 2.0, :im)), (:call, :besselj, 1, (:call, :+, 2.0, :im)))),
    (:line, 376, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely0, (:call, :+, 2.0, :im)), (:call, :bessely, 0, (:call, :+, 2.0, :im)))),
    (:line, 377, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely1, (:call, :+, 2.0, :im)), (:call, :bessely, 1, (:call, :+, 2.0, :im)))),
    (:line, 379, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselj, 1.2, (:call, :big, 1.0))),
    (:line, 380, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselj, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 381, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besseljx, 1, (:call, :big, 1.0))),
    (:line, 382, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besseljx, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 385, :none),
    (:(=), :true_h133, (:call, :-, 0.30906272225525167, (:call, :*, 0.5385416161050316, :im))),
    (:line, 386, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselh, 3, 1, 3), :true_h133)),
    (:line, 387, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselh, -3, 1, 3), (:call, :-, :true_h133))),
    (:line, 388, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselh, 3, 2, 3), (:call, :conj, :true_h133))),
    (:line, 389, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselh, -3, 2, 3), (:call, :-, (:call, :conj, :true_h133)))),
    (:line, 390, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besselh, 1, 0)),
    (:line, 392, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselh, 1, (:call, :big, 1.0))),
    (:line, 393, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselh, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 394, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselhx, 1, (:call, :big, 1.0))),
    (:line, 395, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselhx, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 398, :none),
    (:(=), :true_i33, 0.9597536294960078),
    (:line, 399, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseli, 3, 3), :true_i33)),
    (:line, 400, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseli, -3, 3), :true_i33)),
    (:line, 401, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseli, 3, -3), (:call, :-, :true_i33))),
    (:line, 402, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseli, -3, -3), (:call, :-, :true_i33))),
    (:line, 403, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseli, (:call, :Float32, -3), (:call, :Complex64, -3, 0)), (:call, :-, :true_i33))),
    (:line, 404, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besseli, 1, 1000)),
    (:line, 405, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besseli, 0.4, -1.0)),
    (:line, 407, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besseli, 1, (:call, :big, 1.0))),
    (:line, 408, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besseli, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 409, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselix, 1, (:call, :big, 1.0))),
    (:line, 410, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselix, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 414, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, 0, 0), 1)),
    (:line, 415, :none),
    (:for, (:(=), :i, (:(:), 1, 5)), (:block,
        (:line, 416, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, :i, 0), 0)),
        (:line, 417, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, (:call, :-, :i), 0), 0)),
        (:line, 418, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, (:call, :-, :i), (:call, :Float32, 0)), 0)),
        (:line, 419, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, (:call, :-, :i), (:call, :Float32, 0)), 0))
      )),
    (:line, 422, :none),
    (:(=), :j33, (:call, :besselj, 3, 3.0)),
    (:line, 423, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, 3, 3), :j33)),
    (:line, 424, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, -3, -3), :j33)),
    (:line, 425, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, -3, 3), (:call, :-, :j33))),
    (:line, 426, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, 3, -3), (:call, :-, :j33))),
    (:line, 427, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 3, 3.0f0), :j33)),
    (:line, 428, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 3, (:call, :complex, 3.0)), :j33)),
    (:line, 429, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 3, (:call, :complex, 3.0f0)), :j33)),
    (:line, 430, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 3, (:call, :complex, 3)), :j33)),
    (:line, 432, :none),
    (:(=), :j43, (:call, :besselj, 4, 3.0)),
    (:line, 433, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, 4, 3), :j43)),
    (:line, 434, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, -4, -3), :j43)),
    (:line, 435, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, -4, 3), :j43)),
    (:line, 436, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselj, 4, -3), :j43)),
    (:line, 437, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 4, 3.0f0), :j43)),
    (:line, 438, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 4, (:call, :complex, 3.0)), :j43)),
    (:line, 439, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 4, (:call, :complex, 3.0f0)), :j43)),
    (:line, 440, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 4, (:call, :complex, 3)), :j43)),
    (:line, 442, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, :j33, 0.30906272225525167)),
    (:line, 443, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, :j43, 0.13203418392461222)),
    (:line, 444, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besselj, 0.1, -0.4)),
    (:line, 445, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 0.1, (:call, :complex, -0.4)), (:call, :+, 0.820421842809029, (:call, :*, 0.2665712159483509, :im)))),
    (:line, 446, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 3.2, (:call, :+, 1.3, (:call, :*, 0.6, :im))), (:call, :+, 0.011353093058312202, (:call, :*, 0.039277190443935156, :im)))),
    (:line, 447, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 1, (:call, :*, 3, :im)), (:call, :*, 3.9533702174026093, :im))),
    (:line, 448, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselj, 1.0, (:call, :*, 3, :im)), (:call, :besselj, 1, (:call, :*, 3, :im)))),
    (:line, 449, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besselj, 20, (:call, :*, 1000, :im))),
    (:line, 450, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselj, (:call, :big, 1.0), (:call, :*, 3, :im))),
    (:line, 453, :none),
    (:(=), :true_k33, 0.12217037575718356),
    (:line, 454, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselk, 3, 3), :true_k33)),
    (:line, 455, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselk, -3, 3), :true_k33)),
    (:line, 456, :none),
    (:(=), :true_k3m3, (:call, :-, -0.12217037575718356, (:call, :*, 3.0151549516807985, :im))),
    (:line, 457, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besselk, 3, -3)),
    (:line, 458, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselk, 3, (:call, :complex, -3)), :true_k3m3)),
    (:line, 459, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselk, -3, (:call, :complex, -3)), :true_k3m3)),
    (:line, 460, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besselk, 200, 0.01)),
    (:line, 462, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselk, 1.0, 0.0), :Inf)),
    (:line, 464, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselk, 1, (:call, :big, 1.0))),
    (:line, 465, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselk, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 466, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselkx, 1, (:call, :big, 1.0))),
    (:line, 467, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselkx, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 471, :none),
    (:(=), :y33, (:call, :bessely, 3, 3.0)),
    (:line, 472, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :bessely, 3, 3), :y33)),
    (:line, 473, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :bessely, 3.0, 3.0), :y33)),
    (:line, 474, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely, 3, (:call, :Float32, 3.0)), :y33)),
    (:line, 475, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely, -3, 3), (:call, :-, :y33))),
    (:line, 476, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, :y33, -0.5385416161050316)),
    (:line, 477, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, 3, -3)),
    (:line, 478, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :bessely, 3, (:call, :complex, -3)), (:call, :-, 0.5385416161050316, (:call, :*, 0.6181254445105033, :im)))),
    (:line, 479, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :bessely, 200.5, 0.1)),
    (:line, 480, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, 0.4, -1.0)),
    (:line, 481, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, 0.4, (:call, :Float32, -1.0))),
    (:line, 482, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, 1, (:call, :Float32, -1.0))),
    (:line, 483, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, (:call, :Cint, 3), (:call, :Float32, -3.0))),
    (:line, 484, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :bessely, (:call, :Cint, 3), (:call, :Float64, -3.0))),
    (:line, 486, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :bessely, 1.2, (:call, :big, 1.0))),
    (:line, 487, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :bessely, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 488, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselyx, 1, (:call, :big, 1.0))),
    (:line, 489, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselyx, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 493, :none),
    (:for, (:(=), :elty, (:vect, :Complex64, :Complex128)), (:block,
        (:line, 494, :none),
        (:(=), :z, (:call, :convert, :elty, (:call, :+, 1.0, (:call, :*, 1.9, :im)))),
        (:line, 495, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselhx, 1.0, 1, :z), (:call, :convert, :elty, (:call, :-, -0.5949634147786144, (:call, :*, 0.18451272807835967, :im))))),
        (:line, 496, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselhx, (:call, :Float32, 1.0), 1, :z), (:call, :convert, :elty, (:call, :-, -0.5949634147786144, (:call, :*, 0.18451272807835967, :im)))))
      )),
    (:line, 499, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselh, 1, 1, (:call, :big, 1.0))),
    (:line, 500, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselh, 1, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 501, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselhx, 1, 1, (:call, :big, 1.0))),
    (:line, 502, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :besselhx, 1, 1, (:call, :complex, (:call, :big, 1.0)))),
    (:line, 505, :none),
    (:for, (:(=), :f, (:tuple, :besselj, :bessely, :besseli, :besselk, :hankelh1, :hankelh2)), (:block,
        (:line, 506, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :f, 0, 1), (:call, :f, 0, (:call, :Complex128, 1)))),
        (:line, 507, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :f, 0, 1), (:call, :f, 0, (:call, :Complex64, 1))))
      )),
    (:line, 511, :none),
    (:for, (:block,
        (:(=), :x, (:tuple, 1.0, 0.0, -1.0)),
        (:(=), :y, (:tuple, 1.0, 0.0, -1.0)),
        (:(=), :nu, (:tuple, 1.0, 0.0, -1.0))
      ), (:block,
        (:line, 512, :none),
        (:(=), :z, (:call, :Complex128, (:call, :+, :x, (:call, :*, :y, :im)))),
        (:line, 513, :none),
        (:||, (:call, :(==), :z, (:call, :zero, :z)), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hankelh1x, :nu, :z), (:call, :*, (:call, :hankelh1, :nu, :z), (:call, :exp, (:call, :*, (:call, :-, :z), :im)))))),
        (:line, 514, :none),
        (:||, (:call, :(==), :z, (:call, :zero, :z)), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :hankelh2x, :nu, :z), (:call, :*, (:call, :hankelh2, :nu, :z), (:call, :exp, (:call, :*, :z, :im)))))),
        (:line, 515, :none),
        (:||, (:&&, (:call, :<, :nu, 0), (:call, :(==), :z, (:call, :zero, :z))), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselix, :nu, :z), (:call, :*, (:call, :besseli, :nu, :z), (:call, :exp, (:call, :-, (:call, :abs, (:call, :real, :z)))))))),
        (:line, 516, :none),
        (:||, (:&&, (:call, :<, :nu, 0), (:call, :(==), :z, (:call, :zero, :z))), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besseljx, :nu, :z), (:call, :*, (:call, :besselj, :nu, :z), (:call, :exp, (:call, :-, (:call, :abs, (:call, :imag, :z)))))))),
        (:line, 517, :none),
        (:||, (:call, :(==), :z, (:call, :zero, :z)), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselkx, :nu, :z), (:call, :*, (:call, :besselk, :nu, :z), (:call, :exp, :z))))),
        (:line, 518, :none),
        (:||, (:call, :(==), :z, (:call, :zero, :z)), (:macrocall, Symbol("@test"), (:call, :≈, (:call, :besselyx, :nu, :z), (:call, :*, (:call, :bessely, :nu, :z), (:call, :exp, (:call, :-, (:call, :abs, (:call, :imag, :z))))))))
      )),
    (:line, 520, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :hankelh1x, 1, 0)),
    (:line, 521, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :hankelh2x, 1, 0)),
    (:line, 522, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besselix, -1, 0)),
    (:line, 523, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besseljx, -1, 0)),
    (:line, 524, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :besselkx, 1, 0), :Inf)),
    (:line, 525, :none),
    (:macrocall, Symbol("@test_throws"), (:., (:., :Base, (:quote, #QuoteNode
            :Math
          )), (:quote, #QuoteNode
          :AmosException
        )), (:call, :besselyx, 1, 0)),
    (:line, 526, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besselix, 0.4, -1.0)),
    (:line, 527, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besseljx, 0.4, -1.0)),
    (:line, 528, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besselkx, 0.4, -1.0)),
    (:line, 529, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :besselyx, 0.4, -1.0)),
    (:line, 532, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :beta, (:call, :/, 3, 2), (:call, :/, 7, 2)), (:call, :/, (:call, :*, 5, :π), 128))),
    (:line, 533, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :beta, 3, 5), (:call, :/, 1, 105))),
    (:line, 534, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lbeta, 5, 4), (:call, :log, (:call, :beta, 5, 4)))),
    (:line, 535, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :beta, 5, 4), (:call, :beta, 4, 5))),
    (:line, 536, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :beta, (:call, :/, -1, 2), 3), :≈, (:call, :beta, (:call, :+, (:call, :/, -1, 2), (:call, :*, 0, :im)), (:call, :+, 3, (:call, :*, 0, :im))), :≈, (:call, :/, -16, 3))),
    (:line, 537, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lbeta, (:call, :/, -1, 2), 3), (:call, :log, (:call, :/, 16, 3)))),
    (:line, 538, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :beta, (:call, :Float32, 5), (:call, :Float32, 4)), (:call, :beta, (:call, :Float32, 4), (:call, :Float32, 5)))),
    (:line, 539, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :beta, 3, 5), (:call, :beta, (:call, :+, 3, (:call, :*, 0, :im)), (:call, :+, 5, (:call, :*, 0, :im))))),
    (:line, 540, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :beta, (:call, :+, 3.2, (:call, :*, 0.1, :im)), (:call, :+, 5.3, (:call, :*, 0.3, :im))), :≈, (:call, :exp, (:call, :lbeta, (:call, :+, 3.2, (:call, :*, 0.1, :im)), (:call, :+, 5.3, (:call, :*, 0.3, :im)))), :≈, (:call, :-, 0.006346452477822695, (:call, :*, 0.0016949538484196452, :im)))),
    (:line, 545, :none),
    (:if, (:call, :(==), (:., (:., :Base, (:quote, #QuoteNode
              :Math
            )), (:quote, #QuoteNode
            :libm
          )), "libopenlibm"), (:block,
        (:line, 546, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :gamma, (:typed_vcat, :Float64, (:(:), 1, 25))), (:call, :gamma, (:(:), 1, 25))))
      ), (:block,
        (:line, 548, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :gamma, (:typed_vcat, :Float64, (:(:), 1, 25))), (:call, :gamma, (:(:), 1, 25))))
      )),
    (:line, 550, :none),
    (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
        (:line, 551, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :gamma, (:call, :convert, :elty, (:call, :/, 1, 2))), (:call, :convert, :elty, (:call, :sqrt, :π)))),
        (:line, 552, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :gamma, (:call, :convert, :elty, (:call, :/, -1, 2))), (:call, :convert, :elty, (:call, :*, -2, (:call, :sqrt, :π))))),
        (:line, 553, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lgamma, (:call, :convert, :elty, (:call, :/, -1, 2))), (:call, :convert, :elty, (:call, :log, (:call, :abs, (:call, :gamma, (:call, :/, -1, 2)))))))
      )),
    (:line, 555, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lgamma, (:call, :+, 1.4, (:call, :*, 3.7, :im))), (:call, :+, -3.7094025330996843, (:call, :*, 2.456809050276865, :im)))),
    (:line, 556, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lgamma, (:call, :+, 1.4, (:call, :*, 3.7, :im))), (:call, :log, (:call, :gamma, (:call, :+, 1.4, (:call, :*, 3.7, :im)))))),
    (:line, 557, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :lgamma, (:call, :+, -4.2, (:call, :*, 0, :im))), (:call, :-, (:call, :lgamma, -4.2), (:call, :*, :pi, :im)))),
    (:line, 558, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :factorial, 3.0), :(==), (:call, :gamma, 4.0), :(==), (:call, :factorial, 3))),
    (:line, 559, :none),
    (:for, (:(=), :x, (:tuple, 3.2, (:call, :+, 2, (:call, :*, 1, :im)), (:call, ://, 3, 2), (:call, :+, 3.2, (:call, :*, 0.1, :im)))), (:block,
        (:line, 560, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :factorial, :x), (:call, :gamma, (:call, :+, 1, :x))))
      )),
    (:line, 562, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lfact, 1), 0)),
    (:line, 563, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lfact, 2), (:call, :lgamma, 3))),
    (:line, 566, :none),
    (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
        (:line, 567, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 9)), (:call, :convert, :elty, 2.14064147795561))),
        (:line, 568, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 2.5)), (:call, :convert, :elty, 0.7031566406452432))),
        (:line, 569, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 0.1)), (:call, :convert, :elty, -10.423754940411078))),
        (:line, 570, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 0.0007)), (:call, :convert, :elty, -1429.1474933711202))),
        (:line, 571, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 7.0e-5)), (:call, :convert, :elty, -14286.291386239693))),
        (:line, 572, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 7.0e-6)), (:call, :convert, :elty, -142857.72006129328))),
        (:line, 573, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 2.0e-6)), (:call, :convert, :elty, -500000.57721237506))),
        (:line, 574, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 1.0e-6)), (:call, :convert, :elty, -1.00000057721402e6))),
        (:line, 575, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 7.0e-7)), (:call, :convert, :elty, -1.428572005785942e6))),
        (:line, 576, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, -0.5)), (:call, :convert, :elty, 0.03648997397857652))),
        (:line, 577, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, -1.1)), (:call, :convert, :elty, 10.154163959143858))),
        (:line, 579, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 0.1)), (:call, :convert, :elty, -10.42375494041108))),
        (:line, 580, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, (:call, :/, 1, 2))), (:call, :convert, :elty, (:call, :-, (:call, :-, :γ), (:call, :log, 4))))),
        (:line, 581, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 1)), (:call, :convert, :elty, (:call, :-, :γ)))),
        (:line, 582, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 2)), (:call, :convert, :elty, (:call, :-, 1, :γ)))),
        (:line, 583, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 3)), (:call, :convert, :elty, (:call, :-, (:call, :/, 3, 2), :γ)))),
        (:line, 584, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 4)), (:call, :convert, :elty, (:call, :-, (:call, :/, 11, 6), :γ)))),
        (:line, 585, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 5)), (:call, :convert, :elty, (:call, :-, (:call, :/, 25, 12), :γ)))),
        (:line, 586, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :digamma, (:call, :convert, :elty, 10)), (:call, :convert, :elty, (:call, :-, (:call, :/, 7129, 2520), :γ))))
      )),
    (:line, 590, :none),
    (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
        (:line, 591, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 0.1)), (:call, :convert, :elty, 101.43329915079276))),
        (:line, 592, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, (:call, :/, 1, 2))), (:call, :convert, :elty, (:call, :/, (:call, :^, :π, 2), 2)))),
        (:line, 593, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 1)), (:call, :convert, :elty, (:call, :/, (:call, :^, :π, 2), 6)))),
        (:line, 594, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 2)), (:call, :convert, :elty, (:call, :-, (:call, :/, (:call, :^, :π, 2), 6), 1)))),
        (:line, 595, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 3)), (:call, :convert, :elty, (:call, :-, (:call, :/, (:call, :^, :π, 2), 6), (:call, :/, 5, 4))))),
        (:line, 596, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 4)), (:call, :convert, :elty, (:call, :-, (:call, :/, (:call, :^, :π, 2), 6), (:call, :/, 49, 36))))),
        (:line, 597, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 5)), (:call, :convert, :elty, (:call, :-, (:call, :/, (:call, :^, :π, 2), 6), (:call, :/, 205, 144))))),
        (:line, 598, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :trigamma, (:call, :convert, :elty, 10)), (:call, :convert, :elty, (:call, :-, (:call, :/, (:call, :^, :π, 2), 6), (:call, :/, 9778141, 6350400)))))
      )),
    (:line, 602, :none),
    (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
        (:line, 603, :none),
        (:for, (:(=), :val, (:vect, 0.001, 0.01, 0.1, 1.0, 10.0)), (:block,
            (:line, 604, :none),
            (:macrocall, Symbol("@test"), (:call, :<, (:call, :abs, (:call, :-, (:call, :invdigamma, (:call, :digamma, (:call, :convert, :elty, :val))), (:call, :convert, :elty, :val))), 1.0e-8))
          ))
      )),
    (:line, 607, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :abs, (:call, :invdigamma, 2)), (:call, :abs, (:call, :invdigamma, 2.0)))),
    (:line, 609, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :polygamma, 20, 7.0), -4.644616027240543)),
    (:line, 610, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :polygamma, 20, (:call, :Float16, 7.0)), -4.644616027240543)),
    (:line, 613, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :eta, 1), (:call, :log, 2))),
    (:line, 614, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :eta, 2), (:call, :/, (:call, :^, :pi, 2), 12))),
    (:line, 615, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :eta, (:call, :Float32, 2)), (:call, :eta, 2))),
    (:line, 616, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :eta, (:call, :Complex64, 2)), (:call, :eta, 2))),
    (:line, 617, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, 0), -0.5)),
    (:line, 618, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, 2), (:call, :/, (:call, :^, :pi, 2), 6))),
    (:line, 619, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, (:call, :Complex64, 2)), (:call, :zeta, 2))),
    (:line, 620, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, 4), (:call, :/, (:call, :^, :pi, 4), 90))),
    (:line, 621, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, 1, (:call, :Float16, 2.0)), (:call, :zeta, 1, 2.0))),
    (:line, 622, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, 1.0, (:call, :Float16, 2.0)), (:call, :zeta, 1, 2.0))),
    (:line, 623, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :zeta, (:call, :Float16, 1.0), (:call, :Float16, 2.0)), (:call, :zeta, 1, 2.0))),
    (:line, 624, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, :NaN))),
    (:line, 625, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, 1.0))),
    (:line, 626, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, 1.0f0))),
    (:line, 627, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, (:call, :complex, 0, :Inf)))),
    (:line, 628, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, (:call, :complex, (:call, :-, :Inf), 0)))),
    (:line, 631, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, :cos, 0, 0.7, 1), 1), (:call, :sin, 1))),
    (:line, 632, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 632, :none),
                (:call, :exp, (:call, :*, :im, :x))
              )), 0, 0.7, 1), 1), (:call, :/, (:call, :-, (:call, :exp, (:call, :*, 1, :im)), 1), :im))),
    (:line, 633, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 633, :none),
                (:call, :exp, (:call, :*, :im, :x))
              )), 0, (:call, :*, 1, :im)), 1), (:call, :*, (:call, :*, -1, :im), (:call, :expm1, -1)))),
    (:line, 634, :none),
    (:macrocall, Symbol("@test_approx_eq_eps"), (:ref, (:call, :quadgk, :cos, 0, (:call, :BigFloat, 1), (:kw, :order, 40)), 1), (:call, :sin, (:call, :BigFloat, 1)), (:call, :*, 1000, (:call, :eps, :BigFloat))),
    (:line, 635, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 635, :none),
                (:call, :exp, (:call, :-, :x))
              )), 0, 0.7, :Inf), 1), 1.0)),
    (:line, 636, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 636, :none),
                (:call, :exp, :x)
              )), (:call, :-, :Inf), 0), 1), 1.0)),
    (:line, 637, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 637, :none),
                (:call, :exp, (:call, :-, (:call, :^, :x, 2)))
              )), (:call, :-, :Inf), :Inf), 1), (:call, :sqrt, :pi))),
    (:line, 638, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, (:->, :x, (:block,
                (:line, 638, :none),
                (:vect, (:call, :exp, (:call, :-, :x)), (:call, :exp, (:call, :*, -2, :x)))
              )), 0, :Inf), 1), (:vect, 1, 0.5))),
    (:line, 639, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :quadgk, :cos, 0, 0.7, 1, (:kw, :norm, :abs)), 1), (:call, :sin, 1))),
    (:line, 642, :none),
    (:macrocall, Symbol("@test"), (:call, :any, (:call, :.==, (:call, :set_zero_subnormals, true), (:vect, false, true)))),
    (:line, 643, :none),
    (:macrocall, Symbol("@test"), (:call, :any, (:call, :.==, (:call, :get_zero_subnormals), (:vect, false, true)))),
    (:line, 644, :none),
    (:macrocall, Symbol("@test"), (:call, :set_zero_subnormals, false)),
    (:line, 645, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :get_zero_subnormals))),
    (:line, 649, :none),
    (:(=), (:call, :relerr, :z, :x), (:block,
        (:line, 649, :none),
        (:if, (:call, :(==), :z, :x), 0.0, (:call, :/, (:call, :abs, (:call, :-, :z, :x)), (:call, :abs, :x)))
      )),
    (:line, 650, :none),
    (:(=), (:call, :relerrc, :z, :x), (:block,
        (:line, 650, :none),
        (:call, :max, (:call, :relerr, (:call, :real, :z), (:call, :real, :x)), (:call, :relerr, (:call, :imag, :z), (:call, :imag, :x)))
      )),
    (:line, 651, :none),
    (:(=), (:call, :≅, :a, :b), (:block,
        (:line, 651, :none),
        (:call, :≤, (:call, :relerrc, :a, :b), 1.0e-13)
      )),
    (:line, 653, :none),
    (:for, (:(=), :x, (:(:), -10.2, 0.3456, 50)), (:block,
        (:line, 654, :none),
        (:macrocall, Symbol("@test"), (:call, :>, 1.0e-12, (:call, :relerr, (:call, :digamma, (:call, :+, :x, (:call, :*, 0, :im))), (:call, :digamma, :x))))
      )),
    (:line, 658, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :digamma, (:call, :+, 7, (:call, :*, 0, :im))), 1.8727843350984672)),
    (:line, 659, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :digamma, (:call, :*, 7, :im)), (:call, :+, 1.9476143345843486, (:call, :*, 1.642224898223468, :im)))),
    (:line, 660, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :digamma, (:call, :+, -3.2, (:call, :*, 0.1, :im))), (:call, :+, 4.650225054977814, (:call, :*, 2.3267636484312835, :im)))),
    (:line, 661, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :trigamma, (:call, :+, 8, (:call, :*, 0, :im))), 0.1331370146940314)),
    (:line, 662, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :trigamma, (:call, :*, 8, :im)), (:call, :-, -0.0078125, (:call, :*, 0.12467345030312763, :im)))),
    (:line, 663, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :trigamma, (:call, :+, -3.2, (:call, :*, 0.1, :im))), (:call, :+, 15.207350644973364, (:call, :*, 15.708103885511356, :im)))),
    (:line, 664, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :polygamma, 2, (:call, :+, 8.1, (:call, :*, 0, :im))), -0.01723882695611191)),
    (:line, 665, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :polygamma, 30, (:call, :+, 8.1, (:call, :*, 2, :im))), (:call, :+, -2722.8895150799704, (:call, :*, 6935.8508929338095, :im)))),
    (:line, 666, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :polygamma, 3, (:call, :+, 2.1, (:call, :*, 1, :im))), (:call, :-, 0.0008332813702042181, (:call, :*, 0.2777611081963229, :im)))),
    (:line, 667, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-11, (:call, :relerr, (:call, :polygamma, 3, (:call, :+, -4.2, (:call, :*, 2, :im))), (:call, :-, -0.0037752884324358856, (:call, :*, 0.018937868838708873, :im))))),
    (:line, 668, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :polygamma, 13, (:call, :-, 5.2, (:call, :*, 2, :im))), (:call, :-, 0.08087519202975914, (:call, :*, 0.23002640430210383, :im)))),
    (:line, 669, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-11, (:call, :relerr, (:call, :polygamma, 123, (:call, :+, -47.2, (:call, :*, 0, :im))), 5.711164866722542e291))),
    (:line, 670, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :+, 4.1, (:call, :*, 0.3, :im)), (:call, :+, -3.2, (:call, :*, 0.1, :im))), (:call, :+, -281.344741349625, (:call, :*, 286.5560124009367, :im)))),
    (:line, 671, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :+, 4.1, (:call, :*, 0.3, :im)), (:call, :+, 3.2, (:call, :*, 0.1, :im))), (:call, :-, 0.012119752513163322, (:call, :*, 0.006872286925656143, :im)))),
    (:line, 672, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 4.1, (:call, :+, 3.2, (:call, :*, 0.1, :im))), (:call, :-, 0.013763745118798685, (:call, :*, 0.0015219459953162823, :im)))),
    (:line, 673, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-12, (:call, :relerrc, (:call, :zeta, 1.0001, (:call, :+, -450.0, (:call, :*, 3.2, :im))), (:call, :-, 10003.765660925877, (:call, :*, 0.31956240712464745, :im))))),
    (:line, 674, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, 3.1, -4.2), :≅, (:call, :zeta, 3.1, (:call, :+, -4.2, (:call, :*, 0, :im))), :≅, 149.7591329008219)),
    (:line, 675, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-15, (:call, :relerrc, (:call, :zeta, (:call, :+, 3.1, (:call, :*, 0, :im)), -4.2), (:call, :zeta, 3.1, (:call, :+, -4.2, (:call, :*, 0, :im)))))),
    (:line, 676, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 3.1, 4.2), 0.02993834486264595)),
    (:line, 677, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 27, 3.1), 5.413318813037879e-14)),
    (:line, 678, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 27, 2), 7.45071178983543e-9)),
    (:line, 679, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-12, (:call, :relerr, (:call, :zeta, 27, -105.3), 1.311372652549271e14))),
    (:line, 680, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :polygamma, 4, (:call, :+, -3.1, (:call, :*, :Inf, :im))), :(==), (:call, :polygamma, 4, (:call, :+, 3.1, (:call, :*, :Inf, :im))), :(==), 0)),
    (:line, 681, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :polygamma, 4, -0.0), :(==), :Inf, :(==), (:call, :-, (:call, :polygamma, 4, 0.0)))),
    (:line, 682, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, 4, 0.0), :(==), (:call, :zeta, 4, -0.0), :≅, (:call, :/, (:call, :^, :pi, 4), 90))),
    (:line, 683, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, 5, 0.0), :(==), (:call, :zeta, 5, -0.0), :≅, 1.03692775514337)),
    (:line, 684, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :zeta, :Inf, 1.0), 1)),
    (:line, 685, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :zeta, :Inf, 2.0), 0)),
    (:line, 686, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :zeta, :NaN, 1.0))),
    (:line, 687, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:comprehension, (:generator, (:call, :digamma, :x), (:(=), :x, (:vect, 1.0)))), (:curly, :Vector, :Float64))),
    (:line, 688, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:comprehension, (:generator, (:call, :trigamma, :x), (:(=), :x, (:vect, 1.0)))), (:curly, :Vector, :Float64))),
    (:line, 689, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:comprehension, (:generator, (:call, :polygamma, 3, :x), (:(=), :x, (:vect, 1.0)))), (:curly, :Vector, :Float64))),
    (:line, 690, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, (:call, :+, 2, (:call, :*, 1, :im)), -1.1), :≅, (:call, :zeta, (:call, :+, 2, (:call, :*, 1, :im)), (:call, :+, -1.1, (:call, :*, 0, :im))), :≅, (:call, :+, -64.58013770769217, (:call, :*, 73.99268814880902, :im)))),
    (:line, 691, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :polygamma, 3, 5), (:call, :polygamma, 3, 5.0))),
    (:line, 693, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.0, 7.0), (:call, :/, -52919, 120))),
    (:line, 694, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.0, -7.0), (:call, :/, 94081, 120))),
    (:line, 695, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, 7.2), -587.4577365964037)),
    (:line, 696, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, -7.2), 1042.1674598638622)),
    (:line, 697, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, 7.0), -518.4317857234469)),
    (:line, 698, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, -7.0), 935.1284612957581)),
    (:line, 699, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :-, -3.1, (:call, :*, 0.1, :im)), 7.2), (:call, :-, -579.297522876503, (:call, :*, 96.55190775221155, :im)))),
    (:line, 700, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :-, -3.1, (:call, :*, 0.1, :im)), -7.2), (:call, :+, 1025.1760793118424, (:call, :*, 185.7324547786634, :im)))),
    (:line, 701, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :-, -3.1, (:call, :*, 0.1, :im)), (:call, :+, 7.2, (:call, :*, 0.1, :im))), (:call, :-, -571.6613352645556, (:call, :*, 131.8674483635781, :im)))),
    (:line, 702, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :-, -3.1, (:call, :*, 0.1, :im)), (:call, :+, -7.2, (:call, :*, 0.1, :im))), (:call, :+, 1035.3576040942103, (:call, :*, 130.9058707742713, :im)))),
    (:line, 703, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, (:call, :-, -3.1, (:call, :*, 0.1, :im)), (:call, :+, -7.0, (:call, :*, 0.1, :im))), (:call, :+, 929.5465302921014, (:call, :*, 113.64668780753385, :im)))),
    (:line, 704, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, (:call, :+, 7.2, (:call, :*, 0.1, :im))), (:call, :-, -586.6180100550764, (:call, :*, 36.14883129270604, :im)))),
    (:line, 705, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -3.1, (:call, :+, -7.2, (:call, :*, 0.1, :im))), (:call, :-, 1041.0424162877068, (:call, :*, 55.71548586341451, :im)))),
    (:line, 706, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, -13.4, 4.1), -3.8600408421561853e6)),
    (:line, 707, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 3.2, -4), 2.3171648960264277)),
    (:line, 708, :none),
    (:macrocall, Symbol("@test"), (:call, :≅, (:call, :zeta, 3.2, 0), 1.166773370984467)),
    (:line, 709, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, (:call, :+, -3.2, (:call, :*, 0.1, :im)), 0.0), :≅, (:call, :zeta, (:call, :+, -3.2, (:call, :*, 0.1, :im)), (:call, :+, 0.0, (:call, :*, 0, :im))), :≅, (:call, :+, 0.00705479461389777, (:call, :*, 0.0007689182179243058, :im)))),
    (:line, 710, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :zeta, -3.2, 0.0), :≅, (:call, :zeta, -3.2, (:call, :+, 0.0, (:call, :*, 0, :im))), :≅, 0.007011972077091051)),
    (:line, 712, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:macrocall, Symbol("@evalpoly"), 2, 3, 4, 5, 6), :(==), (:call, :+, 3, (:call, :*, 2, (:call, :+, 4, (:call, :*, 2, (:call, :+, 5, (:call, :*, 2, 6)))))), :(==), (:macrocall, Symbol("@evalpoly"), (:call, :+, 2, (:call, :*, 0, :im)), 3, 4, 5, 6))),
    (:line, 713, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:let, (:block,
            (:line, 714, :none),
            (:macrocall, Symbol("@evalpoly"), (:block,
                (:line, 715, :none),
                (:+=, :evalcounts, 1),
                (:line, 716, :none),
                4
              ), 1, 2, 3, 4, 5),
            (:line, 718, :none),
            :evalcounts
          ), (:(=), :evalcounts, 0)), 1)),
    (:line, 720, :none),
    (:(=), :a0, 1),
    (:line, 721, :none),
    (:(=), :a1, 2),
    (:line, 722, :none),
    (:(=), :c, 3),
    (:line, 723, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@evalpoly"), :c, :a0, :a1), 7)),
    (:line, 725, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-14, (:call, :relerr, (:call, :eta, (:call, :+, 1, 1.0e-9)), 0.6931471807198142))),
    (:line, 726, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-14, (:call, :relerr, (:call, :eta, (:call, :+, 1, 0.005)), 0.6939457081178425))),
    (:line, 727, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerr, (:call, :eta, (:call, :+, 1, 0.0071)), 0.6942806026237823))),
    (:line, 728, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerr, (:call, :eta, (:call, :+, 1, 0.0081)), 0.6944399749694075))),
    (:line, 729, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerr, (:call, :eta, (:call, :+, (:call, :-, 1, 0.0021), (:call, :*, 0.002, :im))), (:call, :+, 0.6928114424856601, (:call, :*, 0.0003200124013320569, :im))))),
    (:line, 730, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerr, (:call, :eta, (:call, :+, 1, 0.005, (:call, :*, 0.005, :im))), (:call, :+, 0.6939465246845374, (:call, :*, 0.0007977105961486595, :im))))),
    (:line, 731, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-12, (:call, :relerrc, (:call, :zeta, (:call, :+, 0.001, (:call, :*, 0.001, :im))), (:call, :-, -0.5009189365276308, (:call, :*, 0.0009209468912269623, :im))))),
    (:line, 732, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerrc, (:call, :zeta, (:call, :+, 0.0001, (:call, :*, 0.0002, :im))), (:call, :-, -0.5000918637469642, (:call, :*, 0.00018382783176608224, :im))))),
    (:line, 735, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-9, (:call, :relerrc, (:call, :zeta, (:call, :+, 0, (:call, :*, 99.69, :im))), (:call, :+, 4.671927661289494, (:call, :*, 3.8944806298526604, :im))))),
    (:line, 736, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-12, (:call, :relerrc, (:call, :zeta, (:call, :+, 3, (:call, :*, 99.69, :im))), (:call, :-, 1.0999695814856656, (:call, :*, 0.00948220959478852, :im))))),
    (:line, 737, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-9, (:call, :relerrc, (:call, :zeta, (:call, :+, -3, (:call, :*, 99.69, :im))), (:call, :+, 10332.626757871185, (:call, :*, 13212.86417403514, :im))))),
    (:line, 738, :none),
    (:macrocall, Symbol("@test"), (:call, :>, 1.0e-13, (:call, :relerrc, (:call, :zeta, (:call, :+, 2, (:call, :*, 99.69, :im)), 1.3), (:call, :-, 0.41617652544777994, (:call, :*, 0.7419961082153632, :im))))),
    (:line, 740, :none),
    (:for, (:(=), :z, (:tuple, 1.234, (:call, :+, 1.234, (:call, :*, 5.678, :im)), (:vect, 1.234, 5.678))), (:block,
        (:line, 741, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, :z), (:call, :exp, (:call, :*, :im, :z))))
      )),
    (:line, 745, :none),
    (:for, (:(=), :elty, (:tuple, :Float16, :Float32, :Float64)), (:block,
        (:line, 746, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :modf, (:call, :convert, :elty, 1.2)), 1), (:call, :convert, :elty, 0.2))),
        (:line, 747, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :modf, (:call, :convert, :elty, 1.2)), 2), (:call, :convert, :elty, 1.0))),
        (:line, 748, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :modf, (:call, :convert, :elty, 1.0)), 1), (:call, :convert, :elty, 0.0))),
        (:line, 749, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :modf, (:call, :convert, :elty, 1.0)), 2), (:call, :convert, :elty, 1.0)))
      )),
    (:line, 753, :none),
    (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
        (:line, 754, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :convert, :elty, 0.5)), (:tuple, (:call, :convert, :elty, 0.5), 0))),
        (:line, 755, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :convert, :elty, 4.0)), (:tuple, (:call, :convert, :elty, 0.5), 3))),
        (:line, 756, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:call, :frexp, (:call, :convert, :elty, 10.5)), 1), (:call, :convert, :elty, 0.65625))),
        (:line, 757, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:call, :frexp, (:call, :convert, :elty, 10.5)), 2), 4)),
        (:line, 758, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:ref, (:call, :frexp, (:hcat, (:call, :convert, :elty, 4.0), (:call, :convert, :elty, 10.5))), 1), 1), (:call, :convert, :elty, 0.5))),
        (:line, 759, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:ref, (:call, :frexp, (:hcat, (:call, :convert, :elty, 4.0), (:call, :convert, :elty, 10.5))), 1), 2), (:call, :convert, :elty, 0.65625))),
        (:line, 760, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:call, :frexp, (:hcat, (:call, :convert, :elty, 4.0), (:call, :convert, :elty, 10.5))), 2), (:hcat, 3, 4)))
      )),
    (:line, 765, :none),
    (:(=), :X, (:call, :rand, 100)),
    (:line, 766, :none),
    (:for, (:(=), :x, :X), (:block,
        (:line, 767, :none),
        (:for, (:(=), :n, (:(:), -5, 5)), (:block,
            (:line, 768, :none),
            (:(=), :xn, (:call, :ldexp, :x, :n)),
            (:line, 770, :none),
            (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
                (:line, 771, :none),
                (:(=), :xt, (:call, :T, :x)),
                (:line, 773, :none),
                (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                            :Math
                          )), (:quote, #QuoteNode
                          :JuliaLibm
                        )), (:quote, #QuoteNode
                        :log
                      )), :xt)),
                (:line, 774, :none),
                (:(=), :yb, (:call, :log, (:call, :big, :xt))),
                (:line, 775, :none),
                (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb))))),
                (:line, 777, :none),
                (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                            :Math
                          )), (:quote, #QuoteNode
                          :JuliaLibm
                        )), (:quote, #QuoteNode
                        :log1p
                      )), :xt)),
                (:line, 778, :none),
                (:(=), :yb, (:call, :log1p, (:call, :big, :xt))),
                (:line, 779, :none),
                (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb))))),
                (:line, 781, :none),
                (:if, (:call, :(<=), :n, 0), (:block,
                    (:line, 782, :none),
                    (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                                :Math
                              )), (:quote, #QuoteNode
                              :JuliaLibm
                            )), (:quote, #QuoteNode
                            :log1p
                          )), (:call, :-, :xt))),
                    (:line, 783, :none),
                    (:(=), :yb, (:call, :log1p, (:call, :big, (:call, :-, :xt)))),
                    (:line, 784, :none),
                    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb)))))
                  ))
              ))
          ))
      )),
    (:line, 790, :none),
    (:for, (:(=), :n, (:(:), 0, 28)), (:block,
        (:line, 791, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, 2, :n)), :n))
      )),
    (:line, 793, :none),
    (:call, :setprecision, (:->, (:tuple,), (:block,
          (:line, 794, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 100)), 100)),
          (:line, 795, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 200)), 200)),
          (:line, 796, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 300)), 300)),
          (:line, 797, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 400)), 400))
        )), 10000),
    (:line, 800, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
        (:line, 801, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, (:call, :zero, :T)), (:call, :-, :Inf))),
        (:line, 802, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log, :NaN))),
        (:line, 803, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log, (:call, :-, (:call, :one, :T)))),
        (:line, 804, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log1p, (:call, :-, (:call, :one, :T))), (:call, :-, :Inf))),
        (:line, 805, :none),
        (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log1p, :NaN))),
        (:line, 806, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log1p, (:call, :*, -2, (:call, :one, :T))))
      )),
    (:line, 809, :none),
    (:(=), :binary_math_functions, (:vect, :copysign, :flipsign, :log, :atan2, :hypot, :max, :min, :airy, :airyx, :besselh, :hankelh1, :hankelh2, :hankelh1x, :hankelh2x, :besseli, :besselix, :besselj, :besseljx, :besselk, :besselkx, :bessely, :besselyx, :polygamma, :zeta, :beta, :lbeta)),
    (:line, 815, :none),
    (:for, (:(=), :f, :binary_math_functions), (:block,
        (:line, 816, :none),
        (:(=), :x, (:(=), :y, 2)),
        (:line, 817, :none),
        (:(=), :v, (:vect, (:call, :f, :x, :y))),
        (:line, 818, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:vect, :x), :y), :v)),
        (:line, 819, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, :x, (:vect, :y)), :v)),
        (:line, 820, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:vect, :x), (:vect, :y)), :v))
      )),
    (:line, 824, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, 2, -2)),
    (:line, 825, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, -2, 2.2)),
    (:line, 826, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, -2.0, 2.2)),
    (:line, 829, :none),
    (:let, (:block,
        (:line, 829, :none),
        (:(=), :B, (:vcat, (:row, 5, 6), (:row, 7, 8))),
        (:line, 829, :none),
        (:(=), :C, (:vcat, (:row, 9, 10), (:row, 11, 12))),
        (:line, 830, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :muladd, :A, :B, :C), (:call, :+, (:call, :*, :A, :B), :C)))
      ), (:(=), :A, (:vcat, (:row, 1, 2), (:row, 3, 4)))),
    (:line, 833, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Math
              )), (:quote, #QuoteNode
              :f32
            )), (:call, :complex, 1.0, 1.0)), (:call, :complex, (:call, :Float32, 1.0), (:call, :Float32, 1.0)))),
    (:line, 834, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Math
              )), (:quote, #QuoteNode
              :f16
            )), (:call, :complex, 1.0, 1.0)), (:call, :complex, (:call, :Float16, 1.0), (:call, :Float16, 1.0))))
  ))