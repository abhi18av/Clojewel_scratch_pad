(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, :Tuple, (:tuple, 1, 2)), (:tuple, 1, 2))),
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, (:tuple,)), 0)),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, (:tuple, 1)), 1)),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, (:tuple, 1, 2)), 2)),
    (:line, 9, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
            :front
          )), (:tuple,))),
    (:line, 10, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :first, (:tuple,))),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple,)), 0)),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple, 1)), 1)),
    (:line, 14, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple, 1, 2)), 2)),
    (:line, 16, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple,), 1), 0)),
    (:line, 17, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple, 1), 1), 1)),
    (:line, 18, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple, 1, 2), 1), 2)),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1), 1), 1)),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1, 2), 2), 2)),
    (:line, 26, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple,), 1)),
    (:line, 27, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), 0)),
    (:line, 28, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), -1)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1), 1.0), 1)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1, 2), 2.0), 2)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple,), 1.0)),
    (:line, 33, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), 0.0)),
    (:line, 34, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), -1.0)),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, 1, 2, 3)), (:tuple, 5, 6, 7))),
    (:line, 37, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), (:vect, 3, 4))),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, true, false, false, true)), (:tuple, 5, 8))),
    (:line, 40, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, true, false, false, true, true))),
    (:line, 42, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect,)), (:tuple,))),
    (:line, 45, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, (:., :Base, (:quote, #QuoteNode
                :fill_to_length
              )), (:tuple, 1, 2, 3), -1, (:curly, :Val, 5))), (:tuple, 1, 2, 3, -1, -1))),
    (:line, 46, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
            :fill_to_length
          )), (:tuple, 1, 2, 3), -1, (:curly, :Val, 2))),
    (:line, 49, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :start, (:tuple, 1, 2, 3)), 1)),
    (:line, 51, :none),
    (:macrocall, Symbol("@test"), (:call, :done, (:tuple,), 1)),
    (:line, 52, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :done, (:tuple, 1, 2, 3), 3))),
    (:line, 53, :none),
    (:macrocall, Symbol("@test"), (:call, :done, (:tuple, 1, 2, 3), 4)),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :next, (:tuple, 5, 6, 7), 1), (:tuple, 5, 2))),
    (:line, 56, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :next, (:tuple, 5, 6, 7), 3), (:tuple, 7, 4))),
    (:line, 57, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :next, (:tuple, 5, 6, 7), 0)),
    (:line, 58, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :next, (:tuple,), 1)),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachindex, (:tuple, 2, 5, "foo"))), (:call, :collect, (:(:), 1, 3)))),
    (:line, 61, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachindex, (:tuple, 2, 5, "foo"), (:tuple, 1, 2, 5, 7))), (:call, :collect, (:(:), 1, 4)))),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, 1, 2, 3)), :Int)),
    (:line, 66, :none),
    (:macrocall, Symbol("@test"), (:<:, (:call, :eltype, (:tuple, 1.0, 2.0, 3.0)), :AbstractFloat)),
    (:line, 67, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, true, false)), :Bool)),
    (:line, 68, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, 1, 2.0, false)), :Any)),
    (:line, 69, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple,)), (:curly, :Union))),
    (:line, 71, :none),
    (:block,
      (:line, 72, :none),
      (:local, :foo),
      (:line, 74, :none),
      (:(=), (:call, :foo), (:block,
          (:line, 74, :none),
          2
        )),
      (:line, 75, :none),
      (:(=), (:call, :foo, :x), (:block,
          (:line, 75, :none),
          (:call, :*, 2, :x)
        )),
      (:line, 76, :none),
      (:(=), (:call, :foo, :x, :y), (:block,
          (:line, 76, :none),
          (:call, :+, :x, :y)
        )),
      (:line, 77, :none),
      (:(=), (:call, :foo, :x, :y, :z), (:block,
          (:line, 77, :none),
          (:call, :+, :x, :y, :z)
        )),
      (:line, 78, :none),
      (:(=), :longtuple, (:call, :ntuple, :identity, 20)),
      (:line, 81, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,)), (:tuple,))),
      (:line, 82, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1)), (:tuple, 2))),
      (:line, 83, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2)), (:tuple, 2, 4))),
      (:line, 84, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4)), (:tuple, 2, 4, 6, 8))),
      (:line, 85, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 85, :none),
                (:call, :*, 2, :i)
              )), 20))),
      (:line, 88, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,), (:tuple,)), (:tuple,))),
      (:line, 89, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1), (:tuple, 1)), (:tuple, 2))),
      (:line, 90, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2), (:tuple, 1, 2)), (:tuple, 2, 4))),
      (:line, 91, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4)), (:tuple, 2, 4, 6, 8))),
      (:line, 92, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 92, :none),
                (:call, :*, 2, :i)
              )), 20))),
      (:line, 95, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,), (:tuple,), (:tuple,)), (:tuple,))),
      (:line, 96, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,), (:tuple, 1, 2, 3), (:tuple, 1, 2, 3)), (:tuple,))),
      (:line, 97, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1), (:tuple, 1), (:tuple, 1)), (:tuple, 3))),
      (:line, 98, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2), (:tuple, 1, 2), (:tuple, 1, 2)), (:tuple, 3, 6))),
      (:line, 99, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4)), (:tuple, 3, 6, 9, 12))),
      (:line, 100, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple, :longtuple, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 100, :none),
                (:call, :*, 3, :i)
              )), 20)))
    ),
    (:line, 104, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:tuple,), (:tuple,))),
    (:line, 105, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2, 3))),
    (:line, 106, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2, 4)))),
    (:line, 107, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2)))),
    (:line, 109, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:tuple,), (:tuple,))),
    (:line, 110, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:tuple, 1, 2, 3), (:tuple, 1, 2, 3))),
    (:line, 111, :none),
    (:macrocall, Symbol("@test"), (:call, :(!==), (:tuple, 1, 2, 3), (:tuple, 1, 2, 4))),
    (:line, 112, :none),
    (:macrocall, Symbol("@test"), (:call, :(!==), (:tuple, 1, 2, 3), (:tuple, 1, 2))),
    (:line, 114, :none),
    (:macrocall, Symbol("@test"), (:call, :isless, (:tuple, 1, 2), (:tuple, 1, 3))),
    (:line, 115, :none),
    (:macrocall, Symbol("@test"), (:call, :isless, (:tuple, 1), (:tuple, 1, 2))),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isless, (:tuple, 1, 2), (:tuple, 1, 2)))),
    (:line, 117, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isless, (:tuple, 2, 1), (:tuple, 1, 2)))),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:tuple,))),
    (:line, 122, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isempty, (:tuple, 1)))),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reverse, (:tuple,)), (:tuple,))),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reverse, (:tuple, 1, 2, 3)), (:tuple, 3, 2, 1))),
    (:line, 129, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:tuple, 1, 2, 3)), 6)),
    (:line, 131, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:tuple,)), 1)),
    (:line, 132, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:tuple, 1, 2, 3)), 6)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple,)), true)),
    (:line, 135, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, false)), false)),
    (:line, 136, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true)), true)),
    (:line, 137, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true, true)), true)),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true, false)), false)),
    (:line, 139, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, false, false)), false)),
    (:line, 141, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple,)), false)),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true)), true)),
    (:line, 143, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false)), false)),
    (:line, 144, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true)), true)),
    (:line, 145, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false)), true)),
    (:line, 146, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false)), false)),
    (:line, 147, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false, false)), false)),
    (:line, 148, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false, false)), true)),
    (:line, 149, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, true, false)), true)),
    (:line, 150, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false, true)), true)),
    (:line, 151, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, false)), true)),
    (:line, 152, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false, true)), true)),
    (:line, 153, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, false)), true)),
    (:line, 154, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, true)), true)),
    (:line, 156, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 0))), (:tuple,))),
    (:line, 157, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 2))), (:tuple, 1, 4))),
    (:line, 158, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 3))), (:tuple, 1, 4, 9))),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 4))), (:tuple, 1, 4, 9, 16))),
    (:line, 160, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 5))), (:tuple, 1, 4, 9, 16, 25))),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 6))), (:tuple, 1, 4, 9, 16, 25, 36))),
    (:line, 164, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :ntuple, :identity, (:curly, :Val, (:(:), 1, 2)))),
    (:line, 166, :none),
    (:for, (:(=), :n, (:(:), 0, 20)), (:block,
        (:line, 167, :none),
        (:(=), :t, (:call, :ntuple, :identity, :n)),
        (:line, 168, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :t), :n)),
        (:line, 169, :none),
        (:for, (:(=), :i, (:(:), 1, :n)), (:block,
            (:line, 170, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :t, :i), :i))
          ))
      ))
  ))