(:quote, (:block,
    (:line, 3, :none),
    (:(=), :types, (:vect, :Bool, :Float16, :Float32, :Float64, :Int128, :Int16, :Int32, :Int64, :Int8, :UInt16, :UInt32, :UInt64, :UInt8)),
    (:line, 20, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 21, :none),
        (:(=), :x, (:call, (:curly, :Nullable, :T))),
        (:line, 22, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), true)),
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:curly, :Nullable, :T)), :T)),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :x), :T))
      )),
    (:line, 29, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 30, :none),
        (:(=), :x, (:call, (:curly, :Nullable, :T), (:call, :zero, :T))),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), false)),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 33, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :value
              )), (:call, :zero, :T))),
        (:line, 34, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :x), :T)),
        (:line, 36, :none),
        (:(=), :x, (:call, (:curly, :Nullable, :T), (:call, :one, :T))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), false)),
        (:line, 38, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :value
              )), (:call, :one, :T))),
        (:line, 40, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :x), :T))
      )),
    (:line, 44, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 45, :none),
        (:(=), :x, (:call, (:curly, :Nullable, :T), (:call, :zero, :T), false)),
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), false)),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 48, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :value
              )), (:call, :zero, :T))),
        (:line, 49, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :x), :T)),
        (:line, 51, :none),
        (:(=), :x, (:call, (:curly, :Nullable, :T), (:call, :zero, :T), true)),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), true)),
        (:line, 53, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 54, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:curly, :Nullable, :T)), :T)),
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :x), :T))
      )),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :NullException), :NullException)),
    (:line, 61, :none),
    (:macrocall, Symbol("@test_throws"), :NullException, (:call, :throw, (:call, :NullException))),
    (:line, 64, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 65, :none),
        (:(=), :v, (:call, :zero, :T)),
        (:line, 66, :none),
        (:(=), :x, (:call, :Nullable, :v)),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), false)),
        (:line, 68, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :value
              )), :v)),
        (:line, 71, :none),
        (:(=), :v, (:call, :one, :T)),
        (:line, 72, :none),
        (:(=), :x, (:call, :Nullable, :v)),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :isnull
              )), false)),
        (:line, 74, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :x, (:quote, #QuoteNode
                :value
              )), :T)),
        (:line, 75, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., :x, (:quote, #QuoteNode
                :value
              )), :v))
      )),
    (:line, 79, :none),
    (:(=), :io1, (:call, :IOBuffer)),
    (:line, 80, :none),
    (:(=), :io2, (:call, :IOBuffer)),
    (:line, 81, :none),
    (:for, (:(=), (:tuple, :i, :T), (:call, :enumerate, :types)), (:block,
        (:line, 82, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 83, :none),
        (:(=), :x2, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 84, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :one, :T))),
        (:line, 85, :none),
        (:call, :show, :io1, :x1),
        (:line, 86, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}()", :T))),
        (:line, 87, :none),
        (:call, :show, :io1, :x2),
        (:line, 88, :none),
        (:call, :showcompact, :io2, (:call, :get, :x2)),
        (:line, 89, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}(%s)", :T, (:call, :takebuf_string, :io2)))),
        (:line, 90, :none),
        (:call, :show, :io1, :x3),
        (:line, 91, :none),
        (:call, :showcompact, :io2, (:call, :get, :x3)),
        (:line, 92, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}(%s)", :T, (:call, :takebuf_string, :io2)))),
        (:line, 94, :none),
        (:(=), :a1, (:vect, :x2)),
        (:line, 95, :none),
        (:call, :show, (:call, :IOContext, :io1, (:kw, :compact, false)), :a1),
        (:line, 96, :none),
        (:call, :show, (:call, :IOContext, :io2, (:kw, :compact, false)), :x2),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}[%s]", (:call, :string, :T), (:call, :takebuf_string, :io2)))),
        (:line, 100, :none),
        (:call, :show, :io1, :a1),
        (:line, 101, :none),
        (:call, :show, (:call, :IOContext, :io2, (:kw, :compact, true)), :x2),
        (:line, 102, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}[%s]", (:call, :string, :T), (:call, :takebuf_string, :io2))))
      )),
    (:line, 106, :none),
    (:module, true, :NullableTestEnum, (:block,
        (:line, 106, :none),
        (:line, 107, :none),
        (:(=), :io, (:call, :IOBuffer)),
        (:line, 108, :none),
        (:macrocall, Symbol("@enum"), :TestEnum, :a, :b),
        (:line, 109, :none),
        (:call, :show, :io, (:call, :Nullable, :a)),
        (:line, 110, :none),
        (:macrocall, (:., (:., :Base, (:quote, #QuoteNode
                :Test
              )), (:quote, #QuoteNode
              Symbol("@test")
            )), (:call, :(==), (:call, :takebuf_string, :io), "Nullable{NullableTestEnum.TestEnum}(a)"))
      )),
    (:line, 114, :none),
    (:(=), :io1, (:call, :IOBuffer)),
    (:line, 115, :none),
    (:(=), :io2, (:call, :IOBuffer)),
    (:line, 116, :none),
    (:for, (:(=), (:tuple, :i, :T), (:call, :enumerate, :types)), (:block,
        (:line, 117, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 118, :none),
        (:(=), :x2, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 119, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :one, :T))),
        (:line, 120, :none),
        (:call, :showcompact, :io1, :x1),
        (:line, 121, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), "#NULL")),
        (:line, 122, :none),
        (:call, :showcompact, :io1, :x2),
        (:line, 123, :none),
        (:call, :showcompact, :io2, (:call, :get, :x2)),
        (:line, 124, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:call, :takebuf_string, :io2))),
        (:line, 125, :none),
        (:call, :showcompact, :io1, :x3),
        (:line, 126, :none),
        (:call, :showcompact, :io2, (:call, :get, :x3)),
        (:line, 127, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:call, :takebuf_string, :io2))),
        (:line, 129, :none),
        (:(=), :a1, (:vect, :x2)),
        (:line, 130, :none),
        (:call, :showcompact, :io1, :a1),
        (:line, 131, :none),
        (:call, :showcompact, :io2, :x2),
        (:line, 132, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io1), (:macrocall, Symbol("@sprintf"), "Nullable{%s}[%s]", (:call, :string, :T), (:call, :takebuf_string, :io2))))
      )),
    (:line, 137, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 138, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 139, :none),
        (:(=), :x2, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 140, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :one, :T))),
        (:line, 142, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :get, :x1)),
        (:line, 143, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x2), (:call, :zero, :T))),
        (:line, 144, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x3), (:call, :one, :T)))
      )),
    (:line, 147, :none),
    (:macrocall, Symbol("@test_throws"), :NullException, (:call, :get, (:call, :Nullable))),
    (:line, 150, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 151, :none),
        (:(=), :x0, (:call, :Nullable)),
        (:line, 152, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 153, :none),
        (:(=), :x2, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 154, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :one, :T))),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x0, (:call, :zero, :T)), (:call, :zero, :T))),
        (:line, 157, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x0, (:call, :one, :T)), (:call, :one, :T))),
        (:line, 158, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x1, (:call, :zero, :T)), (:call, :zero, :T))),
        (:line, 159, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x1, (:call, :one, :T)), (:call, :one, :T))),
        (:line, 160, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x2, (:call, :one, :T)), (:call, :zero, :T))),
        (:line, 161, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, :x3, (:call, :zero, :T)), (:call, :one, :T)))
      )),
    (:line, 165, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 166, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 167, :none),
        (:(=), :x2, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 168, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :one, :T))),
        (:line, 170, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isnull, :x1), true)),
        (:line, 171, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isnull, :x2), false)),
        (:line, 172, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isnull, :x3), false))
      )),
    (:line, 175, :none),
    (:macrocall, Symbol("@test"), (:call, :isnull, (:call, :Nullable))),
    (:line, 178, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 179, :none),
        (:(=), :x0, (:call, :Nullable)),
        (:line, 180, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 181, :none),
        (:(=), :x2, (:call, (:curly, :Nullable, :T))),
        (:line, 182, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 183, :none),
        (:(=), :x4, (:call, :Nullable, (:call, :one, :T))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x0, :x1), true)),
        (:line, 186, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x0, :x2), true)),
        (:line, 187, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x0, :x3), false)),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x0, :x4), false)),
        (:line, 190, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x1, :x1), true)),
        (:line, 191, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x1, :x2), true)),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x1, :x3), false)),
        (:line, 193, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x1, :x4), false)),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x2, :x1), true)),
        (:line, 196, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x2, :x2), true)),
        (:line, 197, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x2, :x3), false)),
        (:line, 198, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x2, :x4), false)),
        (:line, 200, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x3, :x1), false)),
        (:line, 201, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x3, :x2), false)),
        (:line, 202, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x3, :x3), true)),
        (:line, 203, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x3, :x4), false)),
        (:line, 205, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x4, :x1), false)),
        (:line, 206, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x4, :x2), false)),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x4, :x3), false)),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :isequal, :x4, :x4), true))
      )),
    (:line, 212, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 213, :none),
        (:(=), :x0, (:call, :Nullable)),
        (:line, 214, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 215, :none),
        (:(=), :x2, (:call, (:curly, :Nullable, :T))),
        (:line, 216, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 217, :none),
        (:(=), :x4, (:call, :Nullable, (:call, :one, :T))),
        (:line, 219, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x0, :x1)),
        (:line, 220, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x0, :x2)),
        (:line, 221, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x0, :x3)),
        (:line, 222, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x0, :x4)),
        (:line, 224, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x1, :x1)),
        (:line, 225, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x1, :x2)),
        (:line, 226, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x1, :x3)),
        (:line, 227, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x1, :x4)),
        (:line, 229, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x2, :x1)),
        (:line, 230, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x2, :x2)),
        (:line, 231, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x2, :x3)),
        (:line, 232, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x2, :x4)),
        (:line, 234, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x3, :x1)),
        (:line, 235, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x3, :x2)),
        (:line, 236, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x3, :x3)),
        (:line, 237, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x3, :x4)),
        (:line, 239, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x4, :x1)),
        (:line, 240, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x4, :x2)),
        (:line, 241, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x4, :x3)),
        (:line, 242, :none),
        (:macrocall, Symbol("@test_throws"), :NullException, (:call, :(==), :x4, :x4))
      )),
    (:line, 246, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 247, :none),
        (:(=), :x0, (:call, :Nullable)),
        (:line, 248, :none),
        (:(=), :x1, (:call, (:curly, :Nullable, :T))),
        (:line, 249, :none),
        (:(=), :x2, (:call, (:curly, :Nullable, :T))),
        (:line, 250, :none),
        (:(=), :x3, (:call, :Nullable, (:call, :zero, :T))),
        (:line, 251, :none),
        (:(=), :x4, (:call, :Nullable, (:call, :one, :T))),
        (:line, 253, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :hash, :x0), :UInt)),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :hash, :x1), :UInt)),
        (:line, 255, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :hash, :x2), :UInt)),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :hash, :x3), :UInt)),
        (:line, 257, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :hash, :x4), :UInt)),
        (:line, 259, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :hash, :x0), (:call, :hash, :x2))),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x0), (:call, :hash, :x3))),
        (:line, 261, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x0), (:call, :hash, :x4))),
        (:line, 262, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :hash, :x1), (:call, :hash, :x2))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x1), (:call, :hash, :x3))),
        (:line, 264, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x1), (:call, :hash, :x4))),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x2), (:call, :hash, :x3))),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x2), (:call, :hash, :x4))),
        (:line, 267, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, :x3), (:call, :hash, :x4)))
      )),
    (:line, 270, :none),
    (:type, true, (:curly, :TestNType, :T), (:block,
        (:line, 271, :none),
        (:(::), :v, (:curly, :Nullable, :T))
      )),
    (:line, 274, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 275, :none),
        (:(=), :x1, (:call, (:curly, :TestNType, :T), (:call, (:curly, :Nullable, :T)))),
        (:line, 276, :none),
        (:macrocall, Symbol("@test"), (:call, :isnull, (:., :x1, (:quote, #QuoteNode
                :v
              )))),
        (:line, 277, :none),
        (:(=), (:., :x1, (:quote, #QuoteNode
              :v
            )), (:call, :one, :T)),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isnull, (:., :x1, (:quote, #QuoteNode
                  :v
                ))))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :get, (:., :x1, (:quote, #QuoteNode
                  :v
                )), (:call, :one, :T)), (:call, :one, :T)))
      )),
    (:line, 283, :none),
    (:for, (:(=), :T, :types), (:block,
        (:line, 284, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :Number), (:call, :Nullable, (:call, :one, :T))), (:curly, :Nullable, :Number))),
        (:line, 285, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :Number), (:call, :one, :T)), (:curly, :Nullable, :Number))),
        (:line, 286, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :T), (:call, :one, :T)), (:curly, :Nullable, :T))),
        (:line, 287, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :Any), (:call, :Nullable, (:call, :one, :T))), (:curly, :Nullable, :Any))),
        (:line, 288, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :Any), (:call, :one, :T)), (:curly, :Nullable, :Any))),
        (:line, 292, :none),
        (:for, (:(=), :S, :types), (:block,
            (:line, 293, :none),
            (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :T), (:call, :one, :S)), (:curly, :Nullable, :T)))
          ))
      )),
    (:line, 297, :none),
    (:macrocall, Symbol("@test"), (:call, :isnull, (:call, :convert, :Nullable, :nothing))),
    (:line, 298, :none),
    (:macrocall, Symbol("@test"), (:call, :isnull, (:call, :convert, (:curly, :Nullable, :Int), :nothing))),
    (:line, 299, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :convert, (:curly, :Nullable, :Int), :nothing), (:curly, :Nullable, :Int))),
    (:line, 301, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :Nullable, 1), (:call, :Nullable, 1))),
    (:line, 302, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :Nullable, (:call, :Nullable, 1)), (:call, :Nullable, 1))),
    (:line, 303, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :convert, :Nullable, "a"), (:call, :Nullable, "a"))),
    (:line, 304, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :convert, :Nullable, (:call, :Nullable, "a")), (:call, :Nullable, "a"))),
    (:line, 306, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote_type, (:curly, :Nullable, :Int), :Int), (:curly, :Nullable, :Int))),
    (:line, 307, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote_type, (:curly, :Nullable, (:curly, :Union)), :Int), (:curly, :Nullable, :Int))),
    (:line, 308, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote_type, (:curly, :Nullable, :Float64), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Float64))),
    (:line, 309, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote_type, (:curly, :Nullable, (:curly, :Union)), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Int))),
    (:line, 310, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote_type, (:curly, :Nullable, :Date), (:curly, :Nullable, :DateTime)), (:curly, :Nullable, :DateTime))),
    (:line, 312, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :+, (:curly, :Nullable, :Int), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Int))),
    (:line, 313, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :-, (:curly, :Nullable, :Int), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Int))),
    (:line, 314, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :+, (:curly, :Nullable, :Float64), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Float64))),
    (:line, 315, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :-, (:curly, :Nullable, :Float64), (:curly, :Nullable, :Int)), (:curly, :Nullable, :Float64))),
    (:line, 316, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :-, (:curly, :Nullable, :DateTime), (:curly, :Nullable, :DateTime)), (:curly, :Nullable, (:., (:., :Base, (:quote, #QuoteNode
                :Dates
              )), (:quote, #QuoteNode
              :Millisecond
            ))))),
    (:line, 319, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:call, :Nullable)), "Nullable{Union{}}()"))
  ))