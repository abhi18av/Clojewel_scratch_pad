(:quote, (:block,
    (:line, 3, :none),
    (:||, (:call, :isdefined, (:quote, #QuoteNode
          :TestHelpers
        )), (:call, :include, (:call, :joinpath, (:call, :dirname, (:macrocall, Symbol("@__FILE__"))), "TestHelpers.jl"))),
    (:line, 4, :none),
    (:using, :TestHelpers, :OAs),
    (:line, 6, :none),
    (:let, (:block,
        (:line, 8, :none),
        (:(=), :v0, (:call, :rand, 4)),
        (:line, 9, :none),
        (:(=), :v, (:call, :OffsetArray, :v0, (:tuple, -3))),
        (:line, 10, :none),
        (:(=), :h, (:call, :OffsetArray, (:vect, -1, 1, -2, 2, 0), (:tuple, -3))),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :indices, :v), (:tuple, (:(:), -2, 1)))),
        (:line, 12, :none),
        (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :size, :v)),
        (:line, 13, :none),
        (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :size, :v, 1)),
        (:line, 15, :none),
        (:(=), :A0, (:vcat, (:row, 1, 3), (:row, 2, 4))),
        (:line, 16, :none),
        (:(=), :A, (:call, :OffsetArray, :A0, (:tuple, -1, 2))),
        (:line, 17, :none),
        (:(=), :S, (:call, :OffsetArray, (:call, :view, :A0, (:(:), 1, 2), (:(:), 1, 2)), (:tuple, -1, 2))),
        (:line, 18, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :indices, :A), :(==), (:call, :indices, :S), :(==), (:tuple, (:(:), 0, 1), (:(:), 3, 4)))),
        (:line, 19, :none),
        (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :size, :A)),
        (:line, 20, :none),
        (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :size, :A, 1)),
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 0, 3), :(==), (:ref, :A, 1), :(==), (:ref, :S, 0, 3), :(==), (:ref, :S, 1), :(==), 1)),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 1, 3), :(==), (:ref, :A, 2), :(==), (:ref, :S, 1, 3), :(==), (:ref, :S, 2), :(==), 2)),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 0, 4), :(==), (:ref, :A, 3), :(==), (:ref, :S, 0, 4), :(==), (:ref, :S, 3), :(==), 3)),
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 1, 4), :(==), (:ref, :A, 4), :(==), (:ref, :S, 1, 4), :(==), (:ref, :S, 4), :(==), 4)),
        (:line, 27, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :A, 1, 1)),
        (:line, 28, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 1, 1)),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, :(:), 3), :(==), (:ref, :S, :(:), 3), :(==), (:call, :OffsetArray, (:vect, 1, 2), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 1))))),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, :(:), 4), :(==), (:ref, :S, :(:), 4), :(==), (:call, :OffsetArray, (:vect, 3, 4), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 1))))),
        (:line, 33, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :A, :(:), 1)),
        (:line, 34, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, :(:), 1)),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 0, :(:)), :(==), (:ref, :S, 0, :(:)), :(==), (:call, :OffsetArray, (:vect, 1, 3), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 36, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 1, :(:)), :(==), (:ref, :S, 1, :(:)), :(==), (:call, :OffsetArray, (:vect, 2, 4), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :A, 2, :(:))),
        (:line, 38, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 2, :(:))),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, (:(:), 0, 1), 3), :(==), (:ref, :S, (:(:), 0, 1), 3), :(==), (:vect, 1, 2))),
        (:line, 40, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, (:vect, 1, 0), 3), :(==), (:ref, :S, (:vect, 1, 0), 3), :(==), (:vect, 2, 1))),
        (:line, 41, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 0, (:(:), 3, 4)), :(==), (:ref, :S, 0, (:(:), 3, 4)), :(==), (:vect, 1, 3))),
        (:line, 42, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, 1, (:vect, 4, 3)), :(==), (:ref, :S, 1, (:vect, 4, 3)), :(==), (:vect, 4, 2))),
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, :(:), :(:)), :(==), (:ref, :S, :(:), :(:)), :(==), :A)),
        (:line, 45, :none),
        (:(=), :A_3_3, (:call, :OffsetArray, (:call, (:curly, :Array, :Int), 3, 3), (:tuple, -2, -1))),
        (:line, 46, :none),
        (:(=), (:ref, :A_3_3, :(:), :(:)), (:call, :reshape, (:(:), 1, 9), 3, 3)),
        (:line, 47, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 47, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 48, :none),
        (:(=), (:ref, :A_3_3, (:(:), -1, 1), (:(:), 0, 2)), (:call, :reshape, (:(:), 1, 9), 3, 3)),
        (:line, 49, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 49, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 50, :none),
        (:(=), (:ref, :A_3_3, :(:), :(:)), (:(:), 1, 9)),
        (:line, 51, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 51, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 52, :none),
        (:(=), (:ref, :A_3_3, (:(:), -1, 1), (:(:), 0, 2)), (:(:), 1, 9)),
        (:line, 53, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 53, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 54, :none),
        (:(=), (:ref, :A_3_3, :(:)), (:(:), 1, 9)),
        (:line, 55, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 55, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 56, :none),
        (:(=), (:ref, :A_3_3, (:(:), 1, 9)), (:(:), 1, 9)),
        (:line, 57, :none),
        (:for, (:(=), :i, (:(:), 1, 9)), (:block,
            (:line, 57, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A_3_3, :i), :i))
          )),
        (:line, 60, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :A, (:call, :CartesianIndex, (:tuple, 0, 3))), :(==), (:ref, :S, (:call, :CartesianIndex, (:tuple, 0, 3))), :(==), 1)),
        (:line, 61, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :A, (:call, :CartesianIndex, 1, 1))),
        (:line, 62, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, (:call, :CartesianIndex, 1, 1))),
        (:line, 63, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eachindex, :A), (:(:), 1, 4))),
        (:line, 64, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eachindex, :S), (:call, :CartesianRange, (:tuple, (:(:), 0, 1), (:(:), 3, 4))))),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, (:call, :.>, :A, 2)), (:vect, 3, 4))),
        (:line, 68, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :h, (:call, :trues, 2))),
        (:line, 69, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :h, (:call, :trues, 5))),
        (:line, 70, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :h, (:call, :OffsetArray, (:call, :trues, 5), (:tuple, -3))), (:call, :parent, :h))),
        (:line, 71, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :h, (:call, :OffsetArray, (:vect, true, false, false, true, true), (:tuple, -3))), (:ref, (:call, :parent, :h), (:vect, 1, 4, 5)))),
        (:line, 72, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, (:call, :OffsetArray, (:vcat, (:row, true, false), (:row, false, true)), (:., :A, (:quote, #QuoteNode
                    :offsets
                  )))), (:vect, 1, 4))),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, (:call, :OffsetArray, (:vcat, (:row, true, true), (:row, false, true)), (:., :A, (:quote, #QuoteNode
                    :offsets
                  )))), (:vect, 1, 3, 4))),
        (:line, 74, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :A, (:vcat, (:row, true, true), (:row, false, true)))),
        (:line, 77, :none),
        (:(=), :S, (:call, :view, :A, :(:), 3)),
        (:line, 78, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :S, (:call, :OffsetArray, (:vect, 1, 2), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 1))))),
        (:line, 79, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 0), 1)),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 1), 2)),
        (:line, 81, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 2)),
        (:line, 82, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :S), (:tuple, (:(:), 0, 1)))),
        (:line, 83, :none),
        (:(=), :S, (:call, :view, :A, 0, :(:))),
        (:line, 84, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :S, (:call, :OffsetArray, (:vect, 1, 3), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 3), 1)),
        (:line, 86, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 4), 3)),
        (:line, 87, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 1)),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :S), (:tuple, (:(:), 3, 4)))),
        (:line, 89, :none),
        (:(=), :S, (:call, :view, :A, (:(:), 0, 0), 4)),
        (:line, 90, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :S, (:vect, 3))),
        (:line, 91, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 1), 3)),
        (:line, 92, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 0)),
        (:line, 93, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :S), (:tuple, (:call, (:., :Base, (:quote, #QuoteNode
                    :OneTo
                  )), 1)))),
        (:line, 94, :none),
        (:(=), :S, (:call, :view, :A, 1, (:(:), 3, 4))),
        (:line, 95, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :S, (:vect, 2, 4))),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 1), 2)),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :S, 2), 4)),
        (:line, 98, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 3)),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :S), (:tuple, (:call, (:., :Base, (:quote, #QuoteNode
                    :OneTo
                  )), 2)))),
        (:line, 100, :none),
        (:(=), :S, (:call, :view, :A, :(:), :(:))),
        (:line, 101, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :S, :A)),
        (:line, 102, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :S, 0, 3), :(==), (:ref, :S, 1), :(==), 1)),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :S, 1, 3), :(==), (:ref, :S, 2), :(==), 2)),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :S, 0, 4), :(==), (:ref, :S, 3), :(==), 3)),
        (:line, 105, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :S, 1, 4), :(==), (:ref, :S, 4), :(==), 4)),
        (:line, 106, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :S, 1, 1)),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :S), (:tuple, (:(:), 0, 1), (:(:), 3, 4)))),
        (:line, 110, :none),
        (:for, (:(=), (:tuple, :a, :d), (:call, :zip, :A, :A0)), (:block,
            (:line, 111, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :a, :d))
          )),
        (:line, 116, :none),
        (:(=), :io, (:call, :IOBuffer)),
        (:line, 117, :none),
        (:call, :show, :io, :v),
        (:line, 118, :none),
        (:(=), :str, (:call, :takebuf_string, :io)),
        (:line, 119, :none),
        (:call, :show, :io, :v0),
        (:line, 120, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :str, (:call, :takebuf_string, :io))),
        (:line, 121, :none),
        (:call, :show, :io, :A),
        (:line, 122, :none),
        (:(=), :str, (:call, :takebuf_string, :io)),
        (:line, 123, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :str, "[1 3; 2 4]")),
        (:line, 124, :none),
        (:call, :show, :io, :S),
        (:line, 125, :none),
        (:(=), :str, (:call, :takebuf_string, :io)),
        (:line, 126, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :str, "[1 3; 2 4]")),
        (:line, 127, :none),
        (:call, :show, :io, (:call, :MIME, "text/plain"), :A),
        (:line, 128, :none),
        (:(=), :strs, (:call, :split, (:call, :strip, (:call, :takebuf_string, :io)), '\n')),
        (:line, 129, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :strs, 2), " 1  3")),
        (:line, 130, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :strs, 3), " 2  4")),
        (:line, 131, :none),
        (:(=), :v, (:call, :OffsetArray, (:call, :rand, 3), (:tuple, -2))),
        (:line, 132, :none),
        (:call, :show, :io, :v),
        (:line, 133, :none),
        (:(=), :str, (:call, :takebuf_string, :io)),
        (:line, 134, :none),
        (:call, :show, :io, (:call, :parent, :v)),
        (:line, 135, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :str, (:call, :takebuf_string, :io))),
        (:line, 136, :none),
        (:(=), :smry, (:call, :summary, :v)),
        (:line, 137, :none),
        (:macrocall, Symbol("@test"), (:call, :contains, :smry, "OffsetArray{Float64,1")),
        (:line, 138, :none),
        (:macrocall, Symbol("@test"), (:call, :contains, :smry, "with indices -1:1")),
        (:line, 139, :none),
        (:function, (:call, :cmp_showf, :printfunc, :io, :A), (:block,
            (:line, 140, :none),
            (:(=), :ioc, (:call, :IOContext, :io, (:kw, :limit, true), (:kw, :compact, true))),
            (:line, 141, :none),
            (:call, :printfunc, :ioc, :A),
            (:line, 142, :none),
            (:(=), :str1, (:call, :takebuf_string, :io)),
            (:line, 143, :none),
            (:call, :printfunc, :ioc, (:call, :parent, :A)),
            (:line, 144, :none),
            (:(=), :str2, (:call, :takebuf_string, :io)),
            (:line, 145, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :str1, :str2))
          )),
        (:line, 147, :none),
        (:call, :cmp_showf, (:., :Base, (:quote, #QuoteNode
              :print_matrix
            )), :io, (:call, :OffsetArray, (:call, :rand, 5, 5), (:tuple, 10, -9))),
        (:line, 148, :none),
        (:call, :cmp_showf, (:., :Base, (:quote, #QuoteNode
              :print_matrix
            )), :io, (:call, :OffsetArray, (:call, :rand, (:call, :^, 10, 3), 5), (:tuple, 10, -9))),
        (:line, 149, :none),
        (:call, :cmp_showf, (:., :Base, (:quote, #QuoteNode
              :print_matrix
            )), :io, (:call, :OffsetArray, (:call, :rand, 5, (:call, :^, 10, 3)), (:tuple, 10, -9))),
        (:line, 150, :none),
        (:call, :cmp_showf, (:., :Base, (:quote, #QuoteNode
              :print_matrix
            )), :io, (:call, :OffsetArray, (:call, :rand, (:call, :^, 10, 3), (:call, :^, 10, 3)), (:tuple, 10, -9))),
        (:line, 151, :none),
        (:(=), :targets1, (:vect, "0-dimensional TestHelpers.OAs.OffsetArray{Float64,0,Array{Float64,0}}:\n1.0", "TestHelpers.OAs.OffsetArray{Float64,1,Array{Float64,1}} with indices 2:2:\n 1.0", "TestHelpers.OAs.OffsetArray{Float64,2,Array{Float64,2}} with indices 2:2×3:3:\n 1.0", "TestHelpers.OAs.OffsetArray{Float64,3,Array{Float64,3}} with indices 2:2×3:3×4:4:\n[:, :, 4] =\n 1.0", "TestHelpers.OAs.OffsetArray{Float64,4,Array{Float64,4}} with indices 2:2×3:3×4:4×5:5:\n[:, :, 4, 5] =\n 1.0")),
        (:line, 156, :none),
        (:(=), :targets2, (:vect, "(1.0,1.0)", "([1.0],[1.0])", "(\n[1.0],\n\n[1.0])", "(\n[1.0],\n\n[1.0])", "(\n[1.0],\n\n[1.0])")),
        (:line, 161, :none),
        (:for, (:(=), :n, (:(:), 0, 4)), (:block,
            (:line, 162, :none),
            (:(=), :a, (:call, :OffsetArray, (:call, :ones, :Float64, (:call, :ntuple, (:->, :d, (:block,
                        (:line, 162, :none),
                        1
                      )), :n)), (:call, :ntuple, :identity, :n))),
            (:line, 163, :none),
            (:call, :show, (:call, :IOContext, :io, (:kw, :limit, true)), (:call, :MIME, "text/plain"), :a),
            (:line, 164, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io), (:ref, :targets1, (:call, :+, :n, 1)))),
            (:line, 165, :none),
            (:call, :show, (:call, :IOContext, :io, (:kw, :limit, true)), (:call, :MIME, "text/plain"), (:tuple, :a, :a)),
            (:line, 166, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_string, :io), (:ref, :targets2, (:call, :+, :n, 1))))
          )),
        (:line, 168, :none),
        (:(=), :P, (:call, :OffsetArray, (:call, :rand, 8, 8), (:tuple, 1, 1))),
        (:line, 169, :none),
        (:(=), :PV, (:call, :view, :P, (:(:), 2, 3), :(:))),
        (:line, 170, :none),
        (:macrocall, Symbol("@test"), (:call, :endswith, (:call, :summary, :PV), "with indices Base.OneTo(2)×2:9")),
        (:line, 173, :none),
        (:(=), :B, (:call, :similar, :A, :Float32)),
        (:line, 174, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :B, (:curly, :OffsetArray, :Float32, 2))),
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :B), (:call, :indices, :A))),
        (:line, 176, :none),
        (:(=), :B, (:call, :similar, :A, (:tuple, 3, 4))),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :B, (:curly, :Array, :Int, 2))),
        (:line, 178, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :B), (:tuple, 3, 4))),
        (:line, 179, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :B), (:tuple, (:call, (:., :Base, (:quote, #QuoteNode
                    :OneTo
                  )), 3), (:call, (:., :Base, (:quote, #QuoteNode
                    :OneTo
                  )), 4)))),
        (:line, 180, :none),
        (:(=), :B, (:call, :similar, :A, (:tuple, (:(:), -3, 3), (:(:), 1, 4)))),
        (:line, 181, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :B, (:curly, :OffsetArray, :Int, 2))),
        (:line, 182, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :B), (:tuple, (:(:), -3, 3), (:(:), 1, 4)))),
        (:line, 183, :none),
        (:(=), :B, (:call, :similar, (:call, :parent, :A), (:tuple, (:(:), -3, 3), (:(:), 1, 4)))),
        (:line, 184, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :B, (:curly, :OffsetArray, :Int, 2))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :B), (:tuple, (:(:), -3, 3), (:(:), 1, 4)))),
        (:line, 188, :none),
        (:(=), :i1, (:call, :OffsetArray, (:vect, 2, 1), (:tuple, -5))),
        (:line, 189, :none),
        (:(=), :i1, (:call, :OffsetArray, (:vect, 2, 1), -5)),
        (:line, 190, :none),
        (:(=), :b, (:ref, :A0, :i1, 1)),
        (:line, 191, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :b), (:tuple, (:(:), -4, -3)))),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :b, -4), 2)),
        (:line, 193, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :b, -3), 1)),
        (:line, 194, :none),
        (:(=), :b, (:ref, :A0, 1, :i1)),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :b), (:tuple, (:(:), -4, -3)))),
        (:line, 196, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :b, -4), 3)),
        (:line, 197, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :b, -3), 1)),
        (:line, 198, :none),
        (:(=), :v, (:call, :view, :A0, :i1, 1)),
        (:line, 199, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :v), (:tuple, (:(:), -4, -3)))),
        (:line, 200, :none),
        (:(=), :v, (:call, :view, :A0, (:(:), 1, 1), :i1)),
        (:line, 201, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, :v), (:tuple, (:call, (:., :Base, (:quote, #QuoteNode
                    :OneTo
                  )), 1), (:(:), -4, -3)))),
        (:line, 204, :none),
        (:(=), :a, (:call, (:curly, :OffsetArray, :Int), (:tuple, (:(:), -3, -1)))),
        (:line, 205, :none),
        (:call, :fill!, :a, -1),
        (:line, 206, :none),
        (:call, :copy!, :a, (:tuple, 1, 2)),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), 1)),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 2)),
        (:line, 209, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), -1)),
        (:line, 210, :none),
        (:call, :fill!, :a, -1),
        (:line, 211, :none),
        (:call, :copy!, :a, -2, (:tuple, 1, 2)),
        (:line, 212, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), -1)),
        (:line, 213, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 1)),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), 2)),
        (:line, 215, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, 1, (:tuple, 1, 2))),
        (:line, 216, :none),
        (:call, :fill!, :a, -1),
        (:line, 217, :none),
        (:call, :copy!, :a, -2, (:tuple, 1, 2, 3), 2),
        (:line, 218, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), -1)),
        (:line, 219, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 2)),
        (:line, 220, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), 3)),
        (:line, 221, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, -2, (:tuple, 1, 2, 3), 1)),
        (:line, 222, :none),
        (:call, :fill!, :a, -1),
        (:line, 223, :none),
        (:call, :copy!, :a, -2, (:tuple, 1, 2, 3), 1, 2),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), -1)),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 1)),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), 2)),
        (:line, 228, :none),
        (:(=), :b, (:(:), 1, 2)),
        (:line, 229, :none),
        (:(=), :bo, (:call, :OffsetArray, (:(:), 1, 2), (:tuple, -3))),
        (:line, 230, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, :b)),
        (:line, 231, :none),
        (:call, :fill!, :a, -1),
        (:line, 232, :none),
        (:call, :copy!, :a, :bo),
        (:line, 233, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), -1)),
        (:line, 234, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 1)),
        (:line, 235, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), 2)),
        (:line, 236, :none),
        (:call, :fill!, :a, -1),
        (:line, 237, :none),
        (:call, :copy!, :a, -2, :bo),
        (:line, 238, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), -1)),
        (:line, 239, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -2), 1)),
        (:line, 240, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -1), 2)),
        (:line, 241, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, -4, :bo)),
        (:line, 242, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, -1, :bo)),
        (:line, 243, :none),
        (:call, :fill!, :a, -1),
        (:line, 244, :none),
        (:call, :copy!, :a, -3, :b, 2),
        (:line, 245, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, -3), 2)),
        (:line, 246, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:ref, :a, -2), :(==), (:ref, :a, -1), :(==), -1)),
        (:line, 247, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :a, -3, :b, 1, 4)),
        (:line, 248, :none),
        (:(=), :am, (:call, (:curly, :OffsetArray, :Int), (:tuple, (:(:), 1, 1), (:(:), 7, 9)))),
        (:line, 249, :none),
        (:call, :fill!, :am, -1),
        (:line, 250, :none),
        (:call, :copy!, :am, :b),
        (:line, 251, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 1), 1)),
        (:line, 252, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 2), 2)),
        (:line, 253, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 3), -1)),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 1, 7), 1)),
        (:line, 255, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 1, 8), 2)),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :am, 1, 9), -1)),
        (:line, 259, :none),
        (:(=), :dest, (:call, :similar, :am)),
        (:line, 260, :none),
        (:call, :map!, :+, :dest, :am, :am),
        (:line, 261, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :dest, 1, 7), 2)),
        (:line, 262, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :dest, 1, 8), 4)),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :dest, 1, 9), -2)),
        (:line, 265, :none),
        (:(=), :am, (:call, :map, :identity, :a)),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :am, :OffsetArray)),
        (:line, 267, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :am, :a)),
        (:line, 270, :none),
        (:(=), :v, (:call, :OffsetArray, :v0, (:tuple, -3))),
        (:line, 271, :none),
        (:macrocall, Symbol("@test_approx_eq"), :v, :v),
        (:line, 272, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, (:', :v)), (:', :v0))),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :indices, (:', :v)), (:tuple, (:(:), 1, 1), (:(:), -2, 1)))),
        (:line, 274, :none),
        (:(=), :A, (:call, :OffsetArray, (:call, :rand, 4, 4), (:tuple, -3, 5))),
        (:line, 275, :none),
        (:macrocall, Symbol("@test_approx_eq"), :A, :A),
        (:line, 276, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :A), (:call, :maximum, (:call, :parent, :A)))),
        (:line, 277, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :minimum, :A), (:call, :minimum, (:call, :parent, :A)))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, :A), (:call, :extrema, (:call, :parent, :A)))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :A, 1), (:call, :OffsetArray, (:call, :maximum, (:call, :parent, :A), 1), (:tuple, 0, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 280, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :A, 2), (:call, :OffsetArray, (:call, :maximum, (:call, :parent, :A), 2), (:tuple, (:ref, (:., :A, (:quote, #QuoteNode
                      :offsets
                    )), 1), 0)))),
        (:line, 281, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :A, (:(:), 1, 2)), (:call, :maximum, (:call, :parent, :A), (:(:), 1, 2)))),
        (:line, 282, :none),
        (:(=), :C, (:call, :similar, :A)),
        (:line, 283, :none),
        (:call, :cumsum!, :C, :A, 1),
        (:line, 284, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, :C), (:call, :cumsum, (:call, :parent, :A), 1))),
        (:line, 285, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, (:call, :cumsum, :A, 1)), (:call, :cumsum, (:call, :parent, :A), 1))),
        (:line, 286, :none),
        (:call, :cumsum!, :C, :A, 2),
        (:line, 287, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, :C), (:call, :cumsum, (:call, :parent, :A), 2))),
        (:line, 288, :none),
        (:(=), :R, (:call, :similar, :A, (:tuple, (:(:), 1, 1), (:(:), 6, 9)))),
        (:line, 289, :none),
        (:call, :maximum!, :R, :A),
        (:line, 290, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, :R), (:call, :maximum, (:call, :parent, :A), 1))),
        (:line, 291, :none),
        (:(=), :R, (:call, :similar, :A, (:tuple, (:(:), -2, 1), (:(:), 1, 1)))),
        (:line, 292, :none),
        (:call, :maximum!, :R, :A),
        (:line, 293, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, :R), (:call, :maximum, (:call, :parent, :A), 2))),
        (:line, 294, :none),
        (:(=), (:tuple, :amin, :iamin), (:call, :findmin, :A)),
        (:line, 295, :none),
        (:(=), (:tuple, :pmin, :ipmin), (:call, :findmin, (:call, :parent, :A))),
        (:line, 296, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :amin, :pmin)),
        (:line, 297, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, :iamin), :amin)),
        (:line, 298, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :amin, (:ref, (:call, :parent, :A), :ipmin))),
        (:line, 299, :none),
        (:(=), (:tuple, :amax, :iamax), (:call, :findmax, :A)),
        (:line, 300, :none),
        (:(=), (:tuple, :pmax, :ipmax), (:call, :findmax, (:call, :parent, :A))),
        (:line, 301, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :amax, :pmax)),
        (:line, 302, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, :iamax), :amax)),
        (:line, 303, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :amax, (:ref, (:call, :parent, :A), :ipmax))),
        (:line, 304, :none),
        (:(=), :z, (:call, :OffsetArray, (:vcat, (:row, 0, 0), (:row, 2, 0), (:row, 0, 0), (:row, 0, 0)), (:tuple, -3, -1))),
        (:line, 305, :none),
        (:(=), (:tuple, :I, :J), (:call, :findn, :z)),
        (:line, 306, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :I, (:vect, -1))),
        (:line, 307, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :J, (:vect, 0))),
        (:line, 308, :none),
        (:(=), (:tuple, :I, :J, :N), (:call, :findnz, :z)),
        (:line, 309, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :I, (:vect, -1))),
        (:line, 310, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :J, (:vect, 0))),
        (:line, 311, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :N, (:vect, 2))),
        (:line, 312, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :find, :h), (:vcat, (:(:), -2, 1)))),
        (:line, 313, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :find, (:->, :x, (:block,
                  (:line, 313, :none),
                  (:call, :>, :x, 0)
                )), :h), (:vect, -1, 1))),
        (:line, 314, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :find, (:->, :x, (:block,
                  (:line, 314, :none),
                  (:call, :<, :x, 0)
                )), :h), (:vect, -2, 0))),
        (:line, 315, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :find, (:->, :x, (:block,
                  (:line, 315, :none),
                  (:call, :(==), :x, 0)
                )), :h), (:vect, 2))),
        (:line, 316, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :mean, :A_3_3), :(==), (:call, :median, :A_3_3), :(==), 5)),
        (:line, 317, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mean, (:->, :x, (:block,
                  (:line, 317, :none),
                  (:call, :*, 2, :x)
                )), :A_3_3), 10)),
        (:line, 318, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :mean, :A_3_3, 1), :(==), (:call, :median, :A_3_3, 1), :(==), (:call, :OffsetArray, (:hcat, 2, 5, 8), (:tuple, 0, (:ref, (:., :A_3_3, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 319, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :mean, :A_3_3, 2), :(==), (:call, :median, :A_3_3, 2), :(==), (:call, :OffsetArray, (:', (:', (:vect, 4, 5, 6))), (:tuple, (:ref, (:., :A_3_3, (:quote, #QuoteNode
                      :offsets
                    )), 1), 0)))),
        (:line, 320, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :var, :A_3_3), 7.5)),
        (:line, 321, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :std, :A_3_3, 1), (:call, :OffsetArray, (:hcat, 1, 1, 1), (:tuple, 0, (:ref, (:., :A_3_3, (:quote, #QuoteNode
                      :offsets
                    )), 2))))),
        (:line, 322, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :std, :A_3_3, 2), (:call, :OffsetArray, (:', (:', (:vect, 3, 3, 3))), (:tuple, (:ref, (:., :A_3_3, (:quote, #QuoteNode
                      :offsets
                    )), 1), 0)))),
        (:line, 323, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:call, :OffsetArray, (:call, :ones, :Int, 3000), -1000)), 3000)),
        (:line, 325, :none),
        (:macrocall, Symbol("@test_approx_eq"), (:call, :vecnorm, :v), (:call, :vecnorm, (:call, :parent, :v))),
        (:line, 326, :none),
        (:macrocall, Symbol("@test_approx_eq"), (:call, :vecnorm, :A), (:call, :vecnorm, (:call, :parent, :A))),
        (:line, 327, :none),
        (:macrocall, Symbol("@test_approx_eq"), (:call, :vecdot, :v, :v), (:call, :vecdot, :v0, :v0)),
        (:line, 329, :none),
        (:(=), :v, (:call, :*, (:call, :OffsetArray, (:vect, 1, 1.0e100, 1, -1.0e100), (:tuple, -3)), 1000)),
        (:line, 330, :none),
        (:(=), :v2, (:call, :*, (:call, :OffsetArray, (:vect, 1, -1.0e100, 1, 1.0e100), (:tuple, 5)), 1000)),
        (:line, 331, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :v, :OffsetArray)),
        (:line, 332, :none),
        (:(=), :cv, (:call, :*, (:call, :OffsetArray, (:vect, 1, 1.0e100, 1.0e100, 2), (:tuple, -3)), 1000)),
        (:line, 333, :none),
        (:(=), :cv2, (:call, :*, (:call, :OffsetArray, (:vect, 1, -1.0e100, -1.0e100, 2), (:tuple, 5)), 1000)),
        (:line, 334, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cumsum_kbn, :v), :cv)),
        (:line, 335, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cumsum_kbn, :v2), :cv2)),
        (:line, 336, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sum_kbn, :v), (:call, :sum_kbn, (:call, :parent, :v)))),
        (:line, 338, :none),
        (:(=), :io, (:call, :IOBuffer)),
        (:line, 339, :none),
        (:call, :writedlm, :io, :A),
        (:line, 340, :none),
        (:call, :seek, :io, 0),
        (:line, 341, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readdlm, :io, (:call, :eltype, :A)), (:call, :parent, :A))),
        (:line, 343, :none),
        (:(=), (:tuple, :amin, :amax), (:call, :extrema, (:call, :parent, :A))),
        (:line, 344, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, :A, (:call, :/, (:call, :+, :amax, :amin), 2), :amax), (:call, :clamp, (:call, :parent, :A), (:call, :/, (:call, :+, :amax, :amin), 2), :amax))),
        (:line, 346, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :unique, :A, 1), (:call, :parent, :A))),
        (:line, 347, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :unique, :A, 2), (:call, :parent, :A))),
        (:line, 348, :none),
        (:(=), :v, (:call, :OffsetArray, (:call, :rand, 8), (:tuple, -2))),
        (:line, 349, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, :v), (:call, :OffsetArray, (:call, :sort, (:call, :parent, :v)), (:., :v, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 350, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sortrows, :A), (:call, :OffsetArray, (:call, :sortrows, (:call, :parent, :A)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 351, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sortcols, :A), (:call, :OffsetArray, (:call, :sortcols, (:call, :parent, :A)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 352, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, :A, 1), (:call, :OffsetArray, (:call, :sort, (:call, :parent, :A), 1), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 353, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, :A, 2), (:call, :OffsetArray, (:call, :sort, (:call, :parent, :A), 2), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 355, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapslices, (:->, :v, (:block,
                  (:line, 355, :none),
                  (:call, :sort, :v)
                )), :A, 1), (:call, :OffsetArray, (:call, :mapslices, (:->, :v, (:block,
                    (:line, 355, :none),
                    (:call, :sort, :v)
                  )), (:call, :parent, :A), 1), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 356, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapslices, (:->, :v, (:block,
                  (:line, 356, :none),
                  (:call, :sort, :v)
                )), :A, 2), (:call, :OffsetArray, (:call, :mapslices, (:->, :v, (:block,
                    (:line, 356, :none),
                    (:call, :sort, :v)
                  )), (:call, :parent, :A), 2), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 358, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :rotl90, :A), (:call, :OffsetArray, (:call, :rotl90, (:call, :parent, :A)), (:ref, (:., :A, (:quote, #QuoteNode
                    :offsets
                  )), (:vect, 2, 1))))),
        (:line, 359, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :rotr90, :A), (:call, :OffsetArray, (:call, :rotr90, (:call, :parent, :A)), (:ref, (:., :A, (:quote, #QuoteNode
                    :offsets
                  )), (:vect, 2, 1))))),
        (:line, 360, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :flipdim, :A, 1), (:call, :OffsetArray, (:call, :flipdim, (:call, :parent, :A), 1), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 361, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :flipdim, :A, 2), (:call, :OffsetArray, (:call, :flipdim, (:call, :parent, :A), 2), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 363, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :A, 1), (:call, :OffsetArray, (:call, :+, (:call, :parent, :A), 1), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 364, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, 2, :A), (:call, :OffsetArray, (:call, :*, 2, (:call, :parent, :A)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 365, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :A, :A), (:call, :OffsetArray, (:call, :+, (:call, :parent, :A), (:call, :parent, :A)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 366, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.*, :A, :A), (:call, :OffsetArray, (:call, :.*, (:call, :parent, :A), (:call, :parent, :A)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 368, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :circshift, :A, (:tuple, -1, 2)), (:call, :OffsetArray, (:call, :circshift, (:call, :parent, :A), (:tuple, -1, 2)), (:., :A, (:quote, #QuoteNode
                  :offsets
                ))))),
        (:line, 370, :none),
        (:(=), :src, (:call, :reshape, (:call, :collect, (:(:), 1, 16)), (:tuple, 4, 4))),
        (:line, 371, :none),
        (:(=), :dest, (:call, :OffsetArray, (:call, (:curly, :Array, :Int), 4, 4), (:tuple, -1, 1))),
        (:line, 372, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :circcopy!
            )), :dest, :src),
        (:line, 373, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :parent, :dest), (:vcat, (:row, 8, 12, 16, 4), (:row, 5, 9, 13, 1), (:row, 6, 10, 14, 2), (:row, 7, 11, 15, 3)))),
        (:line, 374, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :dest, (:(:), 1, 3), (:(:), 2, 4)), (:ref, :src, (:(:), 1, 3), (:(:), 2, 4)))),
        (:line, 376, :none),
        (:(=), :e, (:call, :eye, 5)),
        (:line, 377, :none),
        (:(=), :a, (:vect, (:ref, :e, :(:), 1), (:ref, :e, :(:), 2), (:ref, :e, :(:), 3), (:ref, :e, :(:), 4), (:ref, :e, :(:), 5))),
        (:line, 378, :none),
        (:(=), :a1, (:call, :zeros, 5)),
        (:line, 379, :none),
        (:(=), :c, (:vect, (:call, :ones, (:curly, :Complex, :Float64), 5), (:call, :exp, (:call, :/, (:call, :*, -2, :pi, :im, (:(:), 0, 4)), 5)), (:call, :exp, (:call, :/, (:call, :*, -4, :pi, :im, (:(:), 0, 4)), 5)), (:call, :exp, (:call, :/, (:call, :*, -6, :pi, :im, (:(:), 0, 4)), 5)), (:call, :exp, (:call, :/, (:call, :*, -8, :pi, :im, (:(:), 0, 4)), 5)))),
        (:line, 384, :none),
        (:for, (:(=), :s, (:(:), -5, 5)), (:block,
            (:line, 385, :none),
            (:for, (:(=), :i, (:(:), 1, 5)), (:block,
                (:line, 386, :none),
                (:(=), :thisa, (:call, :OffsetArray, (:ref, :a, :i), (:tuple, :s))),
                (:line, 387, :none),
                (:(=), :thisc, (:ref, :c, (:call, :mod1, (:call, :+, :i, :s, 5), 5))),
                (:line, 388, :none),
                (:if, (:., :Base, (:quote, #QuoteNode
                      :USE_GPL_LIBS
                    )), (:block,
                    (:line, 389, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :fft, :thisa), :thisc),
                    (:line, 390, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :fft, :thisa, 1), :thisc),
                    (:line, 391, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :ifft, (:call, :fft, :thisa)), (:call, (:., :Base, (:quote, #QuoteNode
                            :circcopy!
                          )), :a1, :thisa)),
                    (:line, 392, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :ifft, (:call, :fft, :thisa, 1), 1), (:call, (:., :Base, (:quote, #QuoteNode
                            :circcopy!
                          )), :a1, :thisa)),
                    (:line, 393, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :rfft, :thisa), (:ref, :thisc, (:(:), 1, 3))),
                    (:line, 394, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :rfft, :thisa, 1), (:ref, :thisc, (:(:), 1, 3))),
                    (:line, 395, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :irfft, (:call, :rfft, :thisa, 1), 5, 1), :a1),
                    (:line, 396, :none),
                    (:macrocall, Symbol("@test_approx_eq"), (:call, :irfft, (:call, :rfft, :thisa, 1), 5, 1), :a1)
                  ))
              ))
          ))
      )),
    (:line, 406, :none),
    (:module, true, :SimilarUR, (:block,
        (:line, 406, :none),
        (:line, 407, :none),
        (:using, :Base, :Test),
        (:line, 408, :none),
        (:type, false, (:<:, :MyURange, (:curly, :AbstractUnitRange, :Int)), (:block,
            (:line, 409, :none),
            (:(::), :start, :Int),
            (:line, 410, :none),
            (:(::), :stop, :Int)
          )),
        (:line, 412, :none),
        (:(=), :ur, (:call, :MyURange, 1, 3)),
        (:line, 413, :none),
        (:(=), :a, (:call, (:curly, :Array, :Int), 2)),
        (:line, 414, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :similar, :a, :ur)),
        (:line, 415, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :similar, :a, :Float64, :ur)),
        (:line, 416, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :similar, :a, :Float64, (:tuple, :ur))),
        (:line, 417, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :similar, :a, (:tuple, 2.0, 3.0)))
      ))
  ))