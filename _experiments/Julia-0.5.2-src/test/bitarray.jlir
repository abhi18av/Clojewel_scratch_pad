(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :BitArrayTests, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:using, :Base, :Test),
        (:line, 6, :none),
        (:toplevel, (:using, :Base, :findprevnot), (:using, :Base, :findnextnot)),
        (:line, 8, :none),
        (:(=), (:call, (:curly, :tc, :N), (:(::), :r1, (:curly, :NTuple, :N)), (:(::), :r2, (:curly, :NTuple, :N))), (:block,
            (:line, 8, :none),
            (:call, :all, (:->, :x, (:block,
                  (:line, 8, :none),
                  (:call, :tc, (:..., :x))
                )), (:vect, (:..., (:call, :zip, :r1, :r2))))
          )),
        (:line, 9, :none),
        (:(=), (:call, (:curly, :tc, :N), (:(::), :r1, (:curly, :BitArray, :N)), (:(::), :r2, (:curly, :Union, (:curly, :BitArray, :N), (:curly, :Array, :Bool, :N)))), (:block,
            (:line, 9, :none),
            true
          )),
        (:line, 10, :none),
        (:(=), (:call, (:curly, :tc, :T), (:(::), :r1, :T), (:(::), :r2, :T)), (:block,
            (:line, 10, :none),
            true
          )),
        (:line, 11, :none),
        (:(=), (:call, :tc, :r1, :r2), (:block,
            (:line, 11, :none),
            false
          )),
        (:line, 13, :none),
        (:(=), (:call, :bitcheck, (:(::), :b, :BitArray)), (:block,
            (:line, 13, :none),
            (:call, (:., :Base, (:quote, #QuoteNode
                  :_check_bitarray_consistency
                )), :b)
          )),
        (:line, 14, :none),
        (:(=), (:call, :bitcheck, :x), (:block,
            (:line, 14, :none),
            true
          )),
        (:line, 16, :none),
        (:function, (:call, :check_bitop, :ret_type, :func, (:..., :args)), (:block,
            (:line, 17, :none),
            (:(=), :r1, (:call, :func, (:..., :args))),
            (:line, 18, :none),
            (:(=), :r2, (:call, :func, (:..., (:call, :map, (:->, :x, (:block,
                        (:line, 18, :none),
                        (:if, (:call, :isa, :x, :BitArray), (:call, :Array, :x), :x)
                      )), :args)))),
            (:line, 19, :none),
            (:&&, (:call, :≢, :ret_type, :nothing), (:&&, (:call, :!, (:call, :isa, :r1, :ret_type)), (:macrocall, Symbol("@show"), (:tuple, :ret_type, :r1)))),
            (:line, 20, :none),
            (:&&, (:call, :≢, :ret_type, :nothing), (:macrocall, Symbol("@test"), (:call, :isa, :r1, :ret_type))),
            (:line, 21, :none),
            (:macrocall, Symbol("@test"), (:call, :tc, :r1, :r2)),
            (:line, 22, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, :r1, (:if, (:call, :≡, :ret_type, :nothing), :r2, (:call, :convert, :ret_type, :r2)))),
            (:line, 23, :none),
            (:macrocall, Symbol("@test"), (:call, :bitcheck, :r1))
          )),
        (:line, 26, :none),
        (:macro, (:call, :check_bit_operation, :ex, :ret_type), (:block,
            (:line, 27, :none),
            (:macrocall, Symbol("@assert"), (:call, (:., :Meta, (:quote, #QuoteNode
                    :isexpr
                  )), :ex, (:quote, #QuoteNode
                  :call
                ))),
            (:line, 28, :none),
            (:call, :Expr, (:quote, #QuoteNode
                :call
              ), (:quote, #QuoteNode
                :check_bitop
              ), (:call, :esc, :ret_type), (:..., (:call, :map, :esc, (:., :ex, (:quote, #QuoteNode
                      :args
                    )))))
          )),
        (:line, 31, :none),
        (:macro, (:call, :check_bit_operation, :ex), (:block,
            (:line, 32, :none),
            (:macrocall, Symbol("@assert"), (:call, (:., :Meta, (:quote, #QuoteNode
                    :isexpr
                  )), :ex, (:quote, #QuoteNode
                  :call
                ))),
            (:line, 33, :none),
            (:call, :Expr, (:quote, #QuoteNode
                :call
              ), (:quote, #QuoteNode
                :check_bitop
              ), :nothing, (:..., (:call, :map, :esc, (:., :ex, (:quote, #QuoteNode
                      :args
                    )))))
          )),
        (:line, 36, :none),
        (:let, (:block,
            (:line, 37, :none),
            (:global, :timesofar),
            (:line, 38, :none),
            (:function, (:call, :timesofar, :str), (:block,
                (:line, 39, :none),
                (:return, nothing),
                (:line, 40, :none),
                (:(=), :t1, (:call, :time)),
                (:line, 41, :none),
                (:call, :println, :str, ": ", (:call, :-, :t1, :t0), " seconds"),
                (:line, 42, :none),
                (:(=), :t0, :t1)
              ))
          ), (:(=), :t0, (:call, :time))),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :BitVector), (:call, :BitVector, 0))),
        (:line, 50, :none),
        (:(=), :v1, 260),
        (:line, 52, :none),
        (:(=), (:tuple, :n1, :n2), (:tuple, 17, 20)),
        (:line, 54, :none),
        (:(=), (:tuple, :s1, :s2, :s3, :s4), (:tuple, 5, 8, 3, 7)),
        (:line, 56, :none),
        (:(=), :allsizes, (:vect, (:tuple, (:tuple,), (:curly, :BitArray, 0)), (:tuple, (:tuple, :v1), :BitVector), (:tuple, (:tuple, :n1, :n2), :BitMatrix), (:tuple, (:tuple, :s1, :s2, :s3, :s4), (:curly, :BitArray, 4)))),
        (:line, 60, :none),
        (:for, (:(=), (:tuple, :sz, :T), :allsizes), (:block,
            (:line, 61, :none),
            (:(=), :a, (:call, :falses, (:..., :sz))),
            (:line, 62, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :a, (:call, :falses, :sz))),
            (:line, 63, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :any, :a))),
            (:line, 64, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :sz, (:call, :size, :a))),
            (:line, 65, :none),
            (:(=), :b, (:call, :trues, (:..., :sz))),
            (:line, 66, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :b, (:call, :trues, :sz))),
            (:line, 67, :none),
            (:macrocall, Symbol("@test"), (:call, :all, :b)),
            (:line, 68, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :sz, (:call, :size, :b))),
            (:line, 69, :none),
            (:(=), :c, (:call, :trues, :a)),
            (:line, 70, :none),
            (:macrocall, Symbol("@test"), (:call, :all, :c)),
            (:line, 71, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :any, :a))),
            (:line, 72, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :sz, (:call, :size, :c))),
            (:line, 73, :none),
            (:(=), :d, (:call, :falses, :b)),
            (:line, 74, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :any, :d))),
            (:line, 75, :none),
            (:macrocall, Symbol("@test"), (:call, :all, :b)),
            (:line, 76, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :sz, (:call, :size, :d)))
          )),
        (:line, 81, :none),
        (:for, (:(=), (:tuple, :sz, :T), :allsizes), (:block,
            (:line, 82, :none),
            (:(=), :b1, (:call, :rand!, (:call, :falses, (:..., :sz)))),
            (:line, 83, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :BitArray, (:call, :Array, :b1)), :b1)),
            (:line, 84, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :convert, (:curly, :Array, :Float64, (:call, :ndims, :b1)), :b1), (:call, :convert, (:curly, :Array, :Float64, (:call, :ndims, :b1)), (:call, :Array, :b1)))),
            (:line, 86, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :convert, (:curly, :AbstractArray, :Float64, (:call, :ndims, :b1)), :b1), (:call, :convert, (:curly, :AbstractArray, :Float64, (:call, :ndims, :b1)), (:call, :Array, :b1)))),
            (:line, 89, :none),
            (:(=), :i1, (:call, :rand!, (:call, :zeros, :Bool, (:..., :sz)), (:(:), false, true))),
            (:line, 90, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :BitArray, :i1)), :i1))
          )),
        (:line, 93, :none),
        (:call, :timesofar, "conversions"),
        (:line, 97, :none),
        (:let, (:block,
            (:line, 98, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :fill!, :b1, true), (:call, :trues, (:call, :size, :b1)))),
            (:line, 99, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :fill!, :b1, false), (:call, :falses, (:call, :size, :b1))))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 102, :none),
        (:for, (:(=), (:tuple, :sz, :T), :allsizes), (:block,
            (:line, 103, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :trues, (:..., :sz))), (:call, :ones, :Bool, (:..., :sz)))),
            (:line, 104, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :falses, (:..., :sz))), (:call, :zeros, :Bool, (:..., :sz)))),
            (:line, 106, :none),
            (:(=), :b1, (:call, :rand!, (:call, :falses, (:..., :sz)))),
            (:line, 107, :none),
            (:macrocall, Symbol("@test"), (:call, :isa, :b1, :T)),
            (:line, 109, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :length, :b1), :Int),
            (:line, 110, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :ndims, :b1), :Int),
            (:line, 111, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :size, :b1), (:curly, :Tuple, (:curly, :Vararg, :Int))),
            (:line, 113, :none),
            (:(=), :b2, (:call, :similar, :b1)),
            (:line, 114, :none),
            (:(=), :u1, (:call, :Array, :b1)),
            (:line, 115, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b2, :b1), :T),
            (:line, 116, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b2, :u1), :T)
          )),
        (:line, 121, :none),
        (:for, (:(=), :n, (:vcat, 1, (:(:), 1023, 1025))), (:block,
            (:line, 122, :none),
            (:(=), :b1, (:call, :falses, :n)),
            (:line, 123, :none),
            (:for, (:(=), :m, (:vcat, 1, 10, (:(:), 1023, 1025))), (:block,
                (:line, 124, :none),
                (:(=), :u1, (:call, :ones, :Bool, :m)),
                (:line, 125, :none),
                (:for, (:(=), :fu!, (:vect, (:->, :u, (:block,
                          (:line, 125, :none),
                          (:call, :fill!, :u, true)
                        )), (:->, :u, (:block,
                          (:line, 125, :none),
                          (:call, :rand!, :u)
                        )))), (:block,
                    (:line, 126, :none),
                    (:call, :fu!, :u1),
                    (:line, 127, :none),
                    (:(=), :c1, (:call, :convert, (:curly, :Vector, :Int), :u1)),
                    (:line, 128, :none),
                    (:for, (:block,
                        (:(=), :i1, (:vcat, 1, 10, (:(:), 53, 65), (:(:), 1013, 1015), (:(:), 1020, 1025))),
                        (:(=), :i2, (:vcat, 1, 3, 10, (:(:), 511, 513))),
                        (:(=), :l, (:vcat, 1, 5, 10, (:(:), 511, 513), (:(:), 1023, 1025)))
                      ), (:block,
                        (:line, 129, :none),
                        (:for, (:(=), :fb!, (:vect, (:->, :b, (:block,
                                  (:line, 129, :none),
                                  (:call, :fill!, :b, false)
                                )), (:->, :b, (:block,
                                  (:line, 129, :none),
                                  (:call, :rand!, :b)
                                )))), (:block,
                            (:line, 130, :none),
                            (:call, :fb!, :b1),
                            (:line, 131, :none),
                            (:if, (:||, (:call, :<, :i1, 1), (:||, (:call, :>, :i1, :n), (:||, (:call, :>, (:call, :-, (:call, :+, :i2, :l), 1), :m), (:call, :>, (:call, :-, (:call, :+, :i1, :l), 1), :n)))), (:block,
                                (:line, 132, :none),
                                (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :copy!, :b1, :i1, :u1, :i2, :l))
                              ), (:block,
                                (:line, 134, :none),
                                (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b1, :i1, :u1, :i2, :l), :BitArray),
                                (:line, 135, :none),
                                (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b1, :i1, :c1, :i2, :l), :BitArray)
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 143, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :size, (:call, :trues, 5), 0)),
        (:line, 147, :none),
        (:let, (:block,
            (:line, 148, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :reshape, :b1, (:tuple, :n2, :n1)), :BitMatrix),
            (:line, 149, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :reshape, :b1, (:tuple, 1, :n1)))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 151, :none),
        (:let, (:block,
            (:line, 152, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :reshape, :b1, (:tuple, :s3, :s1, :s2, :s4)), (:curly, :BitArray, 4)),
            (:line, 153, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :reshape, :b1, (:tuple, 1, :n1)))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4))),
        (:line, 156, :none),
        (:let, (:block,
            (:line, 157, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :resize!, :b1, -1)),
            (:line, 158, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :resize!, :b1, (:call, :÷, :v1, 2)), :BitVector),
            (:line, 159, :none),
            (:(=), (:call, :gr, :b), (:block,
                (:line, 159, :none),
                (:block,
                  (:(=), (:ref, (:call, :resize!, :b, :v1), (:(:), (:call, :÷, :v1, 2), :end)), 1),
                  :b
                )
              )),
            (:line, 160, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :gr, :b1), :BitVector)
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sizeof, (:call, :BitArray, 64)), 8)),
        (:line, 165, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sizeof, (:call, :BitArray, 65)), 16)),
        (:line, 167, :none),
        (:call, :timesofar, "utils"),
        (:line, 173, :none),
        (:let, (:block,
            (:line, 175, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :b1), (:call, :size, :b2)))
          ), (:(=), :b1, (:call, :BitArray, (:call, :Int32, :v1))), (:(=), :b2, (:call, :BitArray, (:call, :Int64, :v1)))),
        (:line, 178, :none),
        (:for, (:(=), :c, (:vect, :trues, :falses)), (:block,
            (:line, 179, :none),
            (:(=), :b1, (:call, :c, (:call, :Int32, :v1))),
            (:line, 180, :none),
            (:(=), :b2, (:call, :c, (:call, :Int64, :v1))),
            (:line, 181, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :b1, :b2))
          )),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :Array, (:call, :one, (:call, :BitMatrix, 2, 2))), (:call, :eye, 2, 2))),
        (:line, 186, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :one, (:call, :BitMatrix, 2, 3))),
        (:line, 188, :none),
        (:call, :timesofar, "constructors"),
        (:line, 193, :none),
        (:for, (:(=), (:tuple, :sz, :T), :allsizes), (:block,
            (:line, 194, :none),
            (:(=), :b1, (:call, :rand!, (:call, :falses, (:..., :sz)))),
            (:line, 195, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1), :Bool),
            (:line, 196, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, true), :T),
            (:line, 197, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, false), :T)
          )),
        (:line, 201, :none),
        (:for, (:(=), (:tuple, :sz, :T), (:ref, :allsizes, (:(:), 2, :end))), (:block,
            (:line, 202, :none),
            (:(=), :l, (:call, :*, (:..., :sz))),
            (:line, 203, :none),
            (:(=), :b1, (:call, :rand!, (:call, :falses, (:..., :sz)))),
            (:line, 204, :none),
            (:for, (:(=), :j, (:(:), 1, :l)), (:block,
                (:line, 205, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :j), :Bool)
              )),
            (:line, 208, :none),
            (:for, (:(=), :j, (:vect, 0, 1, 63, 64, 65, 127, 128, 129, 191, 192, 193, (:call, :-, :l, 1), :l)), (:block,
                (:line, 209, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, (:(:), 1, :j)), :BitVector),
                (:line, 210, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, (:(:), (:call, :+, :j, 1), :l)), :BitVector)
              )),
            (:line, 212, :none),
            (:for, (:(=), :j, (:vect, 1, 63, 64, 65, 127, 128, 129, (:call, :div, :l, 2))), (:block,
                (:line, 213, :none),
                (:(=), :m1, (:(:), :j, (:call, :-, :l, :j))),
                (:line, 214, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :m1), :BitVector)
              )),
            (:line, 217, :none),
            (:(=), :t1, (:call, :find, (:call, :bitrand, :l))),
            (:line, 218, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :t1), :BitVector),
            (:line, 220, :none),
            (:for, (:(=), :j, (:(:), 1, :l)), (:block,
                (:line, 221, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 222, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, :j), :T)
              )),
            (:line, 225, :none),
            (:(=), :y, (:call, :rand, (:(:), 0.0, 1.0))),
            (:line, 226, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :y, 100), :T),
            (:line, 228, :none),
            (:for, (:(=), :j, (:vect, 1, 63, 64, 65, 127, 128, 129, 191, 192, 193, (:call, :-, :l, 1))), (:block,
                (:line, 229, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 230, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, (:(:), 1, :j)), :T),
                (:line, 231, :none),
                (:(=), :b2, (:call, :bitrand, :j)),
                (:line, 232, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, (:(:), 1, :j)), :T),
                (:line, 233, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 234, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, (:(:), (:call, :+, :j, 1), :l)), :T),
                (:line, 235, :none),
                (:(=), :b2, (:call, :bitrand, (:call, :-, :l, :j))),
                (:line, 236, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, (:(:), (:call, :+, :j, 1), :l)), :T)
              )),
            (:line, 238, :none),
            (:for, (:(=), :j, (:vect, 1, 63, 64, 65, 127, 128, 129, (:call, :div, :l, 2))), (:block,
                (:line, 239, :none),
                (:(=), :m1, (:(:), :j, (:call, :-, :l, :j))),
                (:line, 240, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 241, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, :m1), :T),
                (:line, 242, :none),
                (:(=), :b2, (:call, :bitrand, (:call, :length, :m1))),
                (:line, 243, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :m1), :T)
              )),
            (:line, 245, :none),
            (:(=), :x, (:call, :rand, :Bool)),
            (:line, 246, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, (:(:), 1, 100)), :T),
            (:line, 247, :none),
            (:(=), :b2, (:call, :bitrand, 100)),
            (:line, 248, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, (:(:), 1, 100)), :T),
            (:line, 250, :none),
            (:(=), :y, (:call, :rand, (:(:), 0.0, 1.0))),
            (:line, 251, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :y, (:(:), 1, 100)), :T),
            (:line, 253, :none),
            (:(=), :t1, (:call, :find, (:call, :bitrand, :l))),
            (:line, 254, :none),
            (:(=), :x, (:call, :rand, :Bool)),
            (:line, 255, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, :t1), :T),
            (:line, 256, :none),
            (:(=), :b2, (:call, :bitrand, (:call, :length, :t1))),
            (:line, 257, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :t1), :T),
            (:line, 259, :none),
            (:(=), :y, (:call, :rand, (:(:), 0.0, 1.0))),
            (:line, 260, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :y, :t1), :T)
          )),
        (:line, 265, :none),
        (:(=), (:call, :rand_m1m2), (:block,
            (:line, 265, :none),
            (:tuple, (:call, :rand, (:(:), 1, :n1)), (:call, :rand, (:(:), 1, :n2)))
          )),
        (:line, 267, :none),
        (:let, (:block,
            (:line, 269, :none),
            (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
            (:line, 270, :none),
            (:(=), :b2, (:call, :bitrand, :m1, :m2)),
            (:line, 271, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b1, :b2), :BitMatrix),
            (:line, 273, :none),
            (:function, (:call, :gen_getindex_data), (:block,
                (:line, 274, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 275, :none),
                (:call, :produce, (:tuple, :m1, :m2, :Bool)),
                (:line, 276, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 277, :none),
                (:call, :produce, (:tuple, :m1, (:(:), 1, :m2), :BitVector)),
                (:line, 278, :none),
                (:call, :produce, (:tuple, :m1, :(:), :BitVector)),
                (:line, 279, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 280, :none),
                (:call, :produce, (:tuple, :m1, (:call, :randperm, :m2), :BitVector)),
                (:line, 281, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 282, :none),
                (:call, :produce, (:tuple, (:(:), 1, :m1), :m2, :BitVector)),
                (:line, 283, :none),
                (:call, :produce, (:tuple, :(:), :m2, :BitVector)),
                (:line, 284, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 285, :none),
                (:call, :produce, (:tuple, (:(:), 1, :m1), (:(:), 1, :m2), :BitMatrix)),
                (:line, 286, :none),
                (:call, :produce, (:tuple, :(:), :(:), :BitMatrix)),
                (:line, 287, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 288, :none),
                (:call, :produce, (:tuple, (:(:), 1, :m1), (:call, :randperm, :m2), :BitMatrix)),
                (:line, 289, :none),
                (:call, :produce, (:tuple, :(:), (:call, :randperm, :m2), :BitMatrix)),
                (:line, 290, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 291, :none),
                (:call, :produce, (:tuple, (:call, :randperm, :m1), :m2, :BitVector)),
                (:line, 292, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 293, :none),
                (:call, :produce, (:tuple, (:call, :randperm, :m1), (:(:), 1, :m2), :BitMatrix)),
                (:line, 294, :none),
                (:call, :produce, (:tuple, (:call, :randperm, :m1), :(:), :BitMatrix)),
                (:line, 295, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 296, :none),
                (:call, :produce, (:tuple, (:call, :randperm, :m1), (:call, :randperm, :m2), :BitMatrix))
              )),
            (:line, 299, :none),
            (:for, (:(=), (:tuple, :k1, :k2, :T), (:call, :Task, :gen_getindex_data)), (:block,
                (:line, 301, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :k1, :k2), :T)
              )),
            (:line, 304, :none),
            (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
            (:line, 305, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, (:(:), 1, :m1), :m2, 1), :BitVector),
            (:line, 306, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :(:), (:call, :randperm, :m2), 1), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 309, :none),
        (:let, (:block,
            (:line, 310, :none),
            (:function, (:call, :gen_getindex_data4), (:block,
                (:line, 311, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), :(:), :(:))),
                (:line, 312, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 4))),
                (:line, 314, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), :(:), :(:))),
                (:line, 315, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 3))),
                (:line, 316, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), 2, :(:))),
                (:line, 317, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 3))),
                (:line, 318, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), :(:), 2)),
                (:line, 319, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 3))),
                (:line, 321, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), :(:), 2)),
                (:line, 322, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 323, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), 2, :(:), 2)),
                (:line, 324, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 325, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), 2, :(:))),
                (:line, 326, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 327, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, 2, :(:), :(:))),
                (:line, 328, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 330, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), 2, 2, 2)),
                (:line, 331, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 1))),
                (:line, 332, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, 2, :(:), 2)),
                (:line, 333, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 1))),
                (:line, 335, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 4, (:(:), 3, 7), (:(:), 2, 2), 2)),
                (:line, 336, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 337, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, (:(:), 1, 2), 5, 1, (:(:), 2, 7))),
                (:line, 338, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 2))),
                (:line, 340, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, (:(:), 2, 3), (:(:), 2, 7), (:(:), 1, 2), (:(:), 4, 6))),
                (:line, 341, :none),
                (:call, :produce, (:tuple, :m1, :m2, :m3, :m4, (:curly, :BitArray, 4)))
              )),
            (:line, 344, :none),
            (:for, (:(=), (:tuple, :k1, :k2, :k3, :k4, :T), (:call, :Task, :gen_getindex_data4)), (:block,
                (:line, 346, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :getindex, :b1, :k1, :k2, :k3, :k4), :T)
              ))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4))),
        (:line, 350, :none),
        (:let, (:block,
            (:line, 351, :none),
            (:function, (:call, :gen_setindex_data), (:block,
                (:line, 352, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 353, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2)),
                (:line, 354, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 355, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, (:(:), 1, :m2))),
                (:line, 356, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :(:))),
                (:line, 357, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m2), :m1, (:(:), 1, :m2))),
                (:line, 358, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 359, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, (:call, :randperm, :m2))),
                (:line, 360, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m2), :m1, (:call, :randperm, :m2))),
                (:line, 361, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 362, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:(:), 1, :m1), :m2)),
                (:line, 363, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :(:), :m2)),
                (:line, 364, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1), (:(:), 1, :m1), :m2)),
                (:line, 365, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 366, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:(:), 1, :m1), (:(:), 1, :m2))),
                (:line, 367, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :(:), :(:))),
                (:line, 368, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1, :m2), (:(:), 1, :m1), (:(:), 1, :m2))),
                (:line, 369, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 370, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:(:), 1, :m1), (:call, :randperm, :m2))),
                (:line, 371, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :(:), (:call, :randperm, :m2))),
                (:line, 372, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1, :m2), (:(:), 1, :m1), (:call, :randperm, :m2))),
                (:line, 373, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 374, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:call, :randperm, :m1), :m2)),
                (:line, 375, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1), (:call, :randperm, :m1), :m2)),
                (:line, 376, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 377, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:call, :randperm, :m1), (:(:), 1, :m2))),
                (:line, 378, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:call, :randperm, :m1), :(:))),
                (:line, 379, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1, :m2), (:call, :randperm, :m1), (:(:), 1, :m2))),
                (:line, 380, :none),
                (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
                (:line, 381, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), (:call, :randperm, :m1), (:call, :randperm, :m2))),
                (:line, 382, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :m1, :m2), (:call, :randperm, :m1), (:call, :randperm, :m2)))
              )),
            (:line, 385, :none),
            (:for, (:(=), (:tuple, :b2, :k1, :k2), (:call, :Task, :gen_setindex_data)), (:block,
                (:line, 387, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :k1, :k2), :BitMatrix)
              )),
            (:line, 390, :none),
            (:(=), (:tuple, :m1, :m2), (:call, :rand_m1m2)),
            (:line, 391, :none),
            (:(=), :b2, (:call, :bitrand, 1, 1, :m2)),
            (:line, 392, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :m1, (:(:), 1, :m2)), :BitMatrix),
            (:line, 393, :none),
            (:(=), :x, (:call, :rand, :Bool)),
            (:line, 394, :none),
            (:(=), :b2, (:call, :bitrand, 1, :m2, 1)),
            (:line, 395, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :x, :m1, (:(:), 1, :m2), 1), :BitMatrix),
            (:line, 396, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :m1, (:(:), 1, :m2), 1), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 399, :none),
        (:let, (:block,
            (:line, 400, :none),
            (:function, (:call, :gen_setindex_data4), (:block,
                (:line, 401, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), :(:), :(:))),
                (:line, 402, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 403, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1, :s2, :s3, :s4), :m1, :m2, :m3, :m4)),
                (:line, 405, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), :(:), :(:))),
                (:line, 406, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 407, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s2, :s3, :s4), :m1, :m2, :m3, :m4)),
                (:line, 408, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), 2, :(:))),
                (:line, 409, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1, :s2, :s4), :m1, :m2, :m3, :m4)),
                (:line, 410, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), :(:), :(:), 2)),
                (:line, 411, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 412, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1, :s2, :s3), :m1, :m2, :m3, :m4)),
                (:line, 414, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), :(:), 2)),
                (:line, 415, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 416, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s2, :s3), :m1, :m2, :m3, :m4)),
                (:line, 417, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), 2, :(:), 2)),
                (:line, 418, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 419, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1, :s3), :m1, :m2, :m3, :m4)),
                (:line, 420, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, :(:), 2, :(:))),
                (:line, 421, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s2, :s4), :m1, :m2, :m3, :m4)),
                (:line, 422, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), 2, 2, :(:))),
                (:line, 423, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1, :s4), :m1, :m2, :m3, :m4)),
                (:line, 425, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, :(:), 2, 2, 2)),
                (:line, 426, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s1), :m1, :m2, :m3, :m4)),
                (:line, 427, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 2, 2, :(:), 2)),
                (:line, 428, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, :s3), :m1, :m2, :m3, :m4)),
                (:line, 430, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, 4, (:(:), 3, 7), (:(:), 2, 2), 2)),
                (:line, 431, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, 5, 1), :m1, :m2, :m3, :m4)),
                (:line, 432, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, (:(:), 1, 2), 5, 1, (:(:), 2, 7))),
                (:line, 433, :none),
                (:call, :produce, (:tuple, (:call, :rand, :Bool), :m1, :m2, :m3, :m4)),
                (:line, 434, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, 2, 6), :m1, :m2, :m3, :m4)),
                (:line, 436, :none),
                (:(=), (:tuple, :m1, :m2, :m3, :m4), (:tuple, (:(:), 2, 3), (:(:), 2, 7), (:(:), 1, 2), (:(:), 4, 6))),
                (:line, 437, :none),
                (:call, :produce, (:tuple, (:call, :bitrand, 2, 6, 2, 3), :m1, :m2, :m3, :m4))
              )),
            (:line, 440, :none),
            (:for, (:(=), (:tuple, :b2, :k1, :k2, :k3, :k4), (:call, :Task, :gen_setindex_data4)), (:block,
                (:line, 442, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :k1, :k2, :k3, :k4), (:curly, :BitArray, 4))
              ))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4))),
        (:line, 446, :none),
        (:for, (:(=), :p1, (:hcat, (:call, :rand, (:(:), 1, :v1)), 1, 63, 64, 65, 191, 192, 193)), (:block,
            (:line, 447, :none),
            (:for, (:(=), :p2, (:hcat, (:call, :rand, (:(:), 1, :v1)), 1, 63, 64, 65, 191, 192, 193)), (:block,
                (:line, 448, :none),
                (:for, (:(=), :n, (:(:), 0, (:call, :min, (:call, :+, (:call, :-, :v1, :p1), 1), (:call, :+, (:call, :-, :v1, :p2), 1)))), (:block,
                    (:line, 449, :none),
                    (:(=), :b1, (:call, :bitrand, :v1)),
                    (:line, 450, :none),
                    (:(=), :b2, (:call, :bitrand, :v1)),
                    (:line, 451, :none),
                    (:macrocall, Symbol("@check_bit_operation"), (:call, :copy!, :b1, :p1, :b2, :p2, :n), :BitVector)
                  ))
              ))
          )),
        (:line, 457, :none),
        (:let, (:block,
            (:line, 459, :none),
            (:(=), :t1, (:call, :bitrand, :n1, :n2)),
            (:line, 460, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:ref, :b1, :t1)), (:ref, (:call, :Array, :b1), :t1))),
            (:line, 461, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:ref, :b1, :t1)), (:ref, (:call, :Array, :b1), (:call, :Array, :t1)))),
            (:line, 463, :none),
            (:(=), :t1, (:call, :bitrand, :n1)),
            (:line, 464, :none),
            (:(=), :t2, (:call, :bitrand, :n2)),
            (:line, 465, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:ref, :b1, :t1, :t2)), (:ref, (:call, :Array, :b1), :t1, :t2))),
            (:line, 466, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:ref, :b1, :t1, :t2)), (:ref, (:call, :Array, :b1), (:call, :Array, :t1), (:call, :Array, :t2))))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 469, :none),
        (:let, (:block,
            (:line, 470, :none),
            (:(=), :t1, (:call, :bitrand, :n1, :n2)),
            (:line, 471, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, true, :t1), :BitMatrix),
            (:line, 473, :none),
            (:(=), :t1, (:call, :bitrand, :n1, :n2)),
            (:line, 474, :none),
            (:(=), :b2, (:call, :bitrand, (:call, :countnz, :t1))),
            (:line, 475, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :t1), :BitMatrix),
            (:line, 477, :none),
            (:let, (:block,
                (:line, 478, :none),
                (:(=), :t1, (:call, :bitrand, :n1)),
                (:line, 479, :none),
                (:(=), :b2, (:call, :bitrand, (:call, :countnz, :t1), :m2)),
                (:line, 480, :none),
                (:(=), :k2, (:call, :randperm, :m2)),
                (:line, 481, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :t1, (:(:), 1, :m2)), :BitMatrix),
                (:line, 482, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :t1, (:(:), (:call, :+, (:call, :-, :n2, :m2), 1), :n2)), :BitMatrix),
                (:line, 483, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :t1, :k2), :BitMatrix),
                (:line, 485, :none),
                (:(=), :t2, (:call, :bitrand, :n2)),
                (:line, 486, :none),
                (:(=), :b2, (:call, :bitrand, :m1, (:call, :countnz, :t2))),
                (:line, 487, :none),
                (:(=), :k1, (:call, :randperm, :m1)),
                (:line, 488, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, (:(:), 1, :m1), :t2), :BitMatrix),
                (:line, 489, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, (:(:), (:call, :+, (:call, :-, :n1, :m1), 1), :n1), :t2), :BitMatrix),
                (:line, 490, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :setindex!, :b1, :b2, :k1, :t2), :BitMatrix)
              ), (:(=), :m1, (:call, :rand, (:(:), 1, :n1))), (:(=), :m2, (:call, :rand, (:(:), 1, :n2))))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 494, :none),
        (:call, :timesofar, "indexing"),
        (:line, 498, :none),
        (:let, (:block,
            (:line, 499, :none),
            (:(=), :i1, (:ref, :Bool)),
            (:line, 500, :none),
            (:for, (:(=), :m, (:(:), 1, :v1)), (:block,
                (:line, 501, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 502, :none),
                (:call, :push!, :b1, :x),
                (:line, 503, :none),
                (:call, :push!, :i1, :x),
                (:line, 504, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 505, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              ))
          ), (:(=), :b1, (:call, :BitArray, 0))),
        (:line, 509, :none),
        (:for, (:block,
            (:(=), :m1, (:(:), 0, :v1)),
            (:(=), :m2, (:vect, 0, 1, 63, 64, 65, 127, 128, 129))
          ), (:block,
            (:line, 510, :none),
            (:(=), :b1, (:call, :bitrand, :m1)),
            (:line, 511, :none),
            (:(=), :b2, (:call, :bitrand, :m2)),
            (:line, 512, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 513, :none),
            (:(=), :i2, (:call, :Array, :b2)),
            (:line, 514, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :append!, :b1, :b2)), (:call, :append!, :i1, :i2))),
            (:line, 515, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :append!, :b1, :i2)), (:call, :append!, :i1, :b2))),
            (:line, 516, :none),
            (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
          )),
        (:line, 519, :none),
        (:for, (:block,
            (:(=), :m1, (:(:), 0, :v1)),
            (:(=), :m2, (:vect, 0, 1, 63, 64, 65, 127, 128, 129))
          ), (:block,
            (:line, 520, :none),
            (:(=), :b1, (:call, :bitrand, :m1)),
            (:line, 521, :none),
            (:(=), :b2, (:call, :bitrand, :m2)),
            (:line, 522, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 523, :none),
            (:(=), :i2, (:call, :Array, :b2)),
            (:line, 524, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :prepend!, :b1, :b2)), (:call, :prepend!, :i1, :i2))),
            (:line, 525, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, (:call, :prepend!, :b1, :i2)), (:call, :prepend!, :i1, :b2))),
            (:line, 526, :none),
            (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
          )),
        (:line, 529, :none),
        (:let, (:block,
            (:line, 530, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 531, :none),
            (:for, (:(=), :m, (:(:), 1, :v1)), (:block,
                (:line, 532, :none),
                (:(=), :jb, (:call, :pop!, :b1)),
                (:line, 533, :none),
                (:(=), :ji, (:call, :pop!, :i1)),
                (:line, 534, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :jb, :ji)),
                (:line, 535, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 536, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              )),
            (:line, 538, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :b1), 0))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 541, :none),
        (:let, (:block,
            (:line, 542, :none),
            (:(=), :i1, (:ref, :Bool)),
            (:line, 543, :none),
            (:for, (:(=), :m, (:(:), 1, :v1)), (:block,
                (:line, 544, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 545, :none),
                (:call, :unshift!, :b1, :x),
                (:line, 546, :none),
                (:call, :unshift!, :i1, :x),
                (:line, 547, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 548, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              ))
          ), (:(=), :b1, (:call, :BitArray, 0))),
        (:line, 552, :none),
        (:let, (:block,
            (:line, 553, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 554, :none),
            (:for, (:(=), :m, (:(:), 1, :v1)), (:block,
                (:line, 555, :none),
                (:(=), :jb, (:call, :shift!, :b1)),
                (:line, 556, :none),
                (:(=), :ji, (:call, :shift!, :i1)),
                (:line, 557, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :jb, :ji)),
                (:line, 558, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 559, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              )),
            (:line, 561, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :b1), 0))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 564, :none),
        (:let, (:block,
            (:line, 565, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :insert!, :b1, 2, false)),
            (:line, 566, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :insert!, :b1, 0, false)),
            (:line, 567, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 568, :none),
            (:for, (:(=), :m, (:(:), 1, :v1)), (:block,
                (:line, 569, :none),
                (:(=), :j, (:call, :rand, (:(:), 1, :m))),
                (:line, 570, :none),
                (:(=), :x, (:call, :rand, :Bool)),
                (:line, 571, :none),
                (:macrocall, Symbol("@test"), (:call, :(===), (:call, :insert!, :b1, :j, :x), :b1)),
                (:line, 572, :none),
                (:call, :insert!, :i1, :j, :x),
                (:line, 573, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 574, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              ))
          ), (:(=), :b1, (:call, :BitArray, 0))),
        (:line, 578, :none),
        (:let, (:block,
            (:line, 579, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 580, :none),
            (:for, (:(=), :j, (:vect, 63, 64, 65, 127, 128, 129, 191, 192, 193)), (:block,
                (:line, 581, :none),
                (:(=), :x, (:call, :rand, (:(:), 0, 1))),
                (:line, 582, :none),
                (:macrocall, Symbol("@test"), (:call, :(===), (:call, :insert!, :b1, :j, :x), :b1)),
                (:line, 583, :none),
                (:call, :insert!, :i1, :j, :x),
                (:line, 584, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 585, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 589, :none),
        (:let, (:block,
            (:line, 590, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 591, :none),
            (:for, (:(=), :m, (:(:), :v1, -1, 1)), (:block,
                (:line, 592, :none),
                (:(=), :j, (:call, :rand, (:(:), 1, :m))),
                (:line, 593, :none),
                (:(=), :b, (:call, :splice!, :b1, :j)),
                (:line, 594, :none),
                (:(=), :i, (:call, :splice!, :i1, :j)),
                (:line, 595, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 596, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1)),
                (:line, 597, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 598, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b))
              )),
            (:line, 600, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :b1), 0))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 603, :none),
        (:let, (:block,
            (:line, 604, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 605, :none),
            (:for, (:(=), :m, (:(:), :v1, -1, 1)), (:block,
                (:line, 606, :none),
                (:(=), :j, (:call, :rand, (:(:), 1, :m))),
                (:line, 607, :none),
                (:call, :deleteat!, :b1, :j),
                (:line, 608, :none),
                (:call, :deleteat!, :i1, :j),
                (:line, 609, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 610, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              )),
            (:line, 612, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :b1), 0)),
            (:line, 613, :none),
            (:(=), :b1, (:call, :bitrand, :v1)),
            (:line, 614, :none),
            (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :deleteat!, :b1, (:vect, 1, 1, 2))),
            (:line, 615, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :deleteat!, :b1, (:vect, 1, (:call, :+, (:call, :length, :b1), 1))))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 618, :none),
        (:let, (:block,
            (:line, 619, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 620, :none),
            (:for, (:(=), :j, (:vect, 63, 64, 65, 127, 128, 129, 191, 192, 193)), (:block,
                (:line, 621, :none),
                (:(=), :b, (:call, :splice!, :b1, :j)),
                (:line, 622, :none),
                (:(=), :i, (:call, :splice!, :i1, :j)),
                (:line, 623, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 624, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1)),
                (:line, 625, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 626, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 630, :none),
        (:let, (:block,
            (:line, 631, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 632, :none),
            (:for, (:(=), :j, (:vect, 63, 64, 65, 127, 128, 129, 191, 192, 193)), (:block,
                (:line, 633, :none),
                (:call, :deleteat!, :b1, :j),
                (:line, 634, :none),
                (:call, :deleteat!, :i1, :j),
                (:line, 635, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
                (:line, 636, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 640, :none),
        (:let, (:block,
            (:line, 641, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 642, :none),
            (:for, (:block,
                (:(=), :m1, (:(:), 1, :v1)),
                (:(=), :m2, (:(:), :m1, :v1))
              ), (:block,
                (:line, 643, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 644, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 645, :none),
                (:(=), :b, (:call, :splice!, :b2, (:(:), :m1, :m2))),
                (:line, 646, :none),
                (:(=), :i, (:call, :splice!, :i2, (:(:), :m1, :m2))),
                (:line, 647, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 648, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 649, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 650, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 654, :none),
        (:let, (:block,
            (:line, 655, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 656, :none),
            (:for, (:block,
                (:(=), :m1, (:(:), 1, :v1)),
                (:(=), :m2, (:(:), :m1, :v1))
              ), (:block,
                (:line, 657, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 658, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 659, :none),
                (:call, :deleteat!, :b2, (:(:), :m1, :m2)),
                (:line, 660, :none),
                (:call, :deleteat!, :i2, (:(:), :m1, :m2)),
                (:line, 661, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 662, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 666, :none),
        (:let, (:block,
            (:line, 667, :none),
            (:for, (:block,
                (:(=), :m1, (:vcat, (:(:), 1, 7, :v1), (:call, :+, :v1, 1))),
                (:(=), :m2, (:vcat, (:(:), (:call, :-, :m1, 1), 5, (:call, :-, :v1, 1)), :v1)),
                (:(=), :v2, (:vect, 0, 1, 63, 64, 65, 127, 128, 129, 191, 192, 193, (:call, :rand, (:(:), 1, :v1))))
              ), (:block,
                (:line, 668, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 669, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 670, :none),
                (:(=), :b3, (:call, :bitrand, :v2)),
                (:line, 671, :none),
                (:(=), :i3, (:call, :Array, :b3)),
                (:line, 672, :none),
                (:(=), :b, (:call, :splice!, :b2, (:(:), :m1, :m2), :b3)),
                (:line, 673, :none),
                (:(=), :i, (:call, :splice!, :i2, (:(:), :m1, :m2), :i3)),
                (:line, 674, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 675, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 676, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 677, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b)),
                (:line, 679, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 680, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 681, :none),
                (:(=), :i3, (:call, :map, :Int, (:call, :bitrand, :v2))),
                (:line, 682, :none),
                (:(=), :b, (:call, :splice!, :b2, (:(:), :m1, :m2), :i3)),
                (:line, 683, :none),
                (:(=), :i, (:call, :splice!, :i2, (:(:), :m1, :m2), :i3)),
                (:line, 684, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 685, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 686, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 687, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b)),
                (:line, 688, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 689, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 690, :none),
                (:(=), :i3, (:call, :Dict, (:generator, (:(=>), :j, (:call, :rand, (:(:), 0, 1))), (:(=), :j, (:(:), 1, :v2))))),
                (:line, 691, :none),
                (:(=), :b, (:call, :splice!, :b2, (:(:), :m1, :m2), (:call, :values, :i3))),
                (:line, 692, :none),
                (:(=), :i, (:call, :splice!, :i2, (:(:), :m1, :m2), (:call, :values, :i3))),
                (:line, 693, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 694, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 695, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 696, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1)), (:(=), :i1, (:call, :Array, :b1))),
        (:line, 700, :none),
        (:let, (:block,
            (:line, 701, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 702, :none),
            (:for, (:block,
                (:(=), :m1, (:(:), 1, :v1)),
                (:(=), :v2, (:vect, 0, 1, 63, 64, 65, 127, 128, 129, 191, 192, 193, (:call, :rand, (:(:), 1, :v1))))
              ), (:block,
                (:line, 703, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 704, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 705, :none),
                (:(=), :b3, (:call, :bitrand, :v2)),
                (:line, 706, :none),
                (:(=), :i3, (:call, :Array, :b3)),
                (:line, 707, :none),
                (:(=), :b, (:call, :splice!, :b2, :m1, :b3)),
                (:line, 708, :none),
                (:(=), :i, (:call, :splice!, :i2, :m1, :i3)),
                (:line, 709, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 710, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 711, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b, :i)),
                (:line, 712, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 716, :none),
        (:let, (:block,
            (:line, 717, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 718, :none),
            (:for, (:block,
                (:(=), :m1, (:(:), 1, (:call, :-, :v1, 1))),
                (:(=), :m2, (:(:), (:call, :+, :m1, 1), :v1))
              ), (:block,
                (:line, 719, :none),
                (:(=), :locs, (:call, :bitrand, (:call, :+, (:call, :-, :m2, :m1), 1))),
                (:line, 720, :none),
                (:(=), :m, (:ref, (:vect, (:..., (:(:), :m1, :m2))), :locs)),
                (:line, 721, :none),
                (:(=), :b2, (:call, :copy, :b1)),
                (:line, 722, :none),
                (:(=), :i2, (:call, :copy, :i1)),
                (:line, 723, :none),
                (:call, :deleteat!, :b2, :m),
                (:line, 724, :none),
                (:call, :deleteat!, :i2, :m),
                (:line, 725, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b2), :i2)),
                (:line, 726, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 730, :none),
        (:let, (:block,
            (:line, 731, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 732, :none),
            (:call, :empty!, :b1),
            (:line, 733, :none),
            (:call, :empty!, :i1),
            (:line, 734, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :Array, :b1), :i1)),
            (:line, 735, :none),
            (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 738, :none),
        (:call, :timesofar, "dequeue"),
        (:line, 742, :none),
        (:let, (:block,
            (:line, 743, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :~, :b1), :BitMatrix),
            (:line, 744, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :!, :b1), :BitMatrix),
            (:line, 745, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :-, :b1), (:curly, :Matrix, :Int)),
            (:line, 746, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :sign, :b1), :BitMatrix),
            (:line, 747, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :real, :b1), :BitMatrix),
            (:line, 748, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :imag, :b1), :BitMatrix),
            (:line, 749, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :conj, :b1), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 752, :none),
        (:let, (:block,
            (:line, 753, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :~, :b0), :BitVector),
            (:line, 754, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :!, :b0), :BitVector),
            (:line, 755, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :-, :b0), (:curly, :Vector, :Int)),
            (:line, 756, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :sign, :b0), :BitVector)
          ), (:(=), :b0, (:call, :falses, 0))),
        (:line, 761, :none),
        (:let, (:block,
            (:line, 762, :none),
            (:(=), :i1, (:call, :Array, :b1)),
            (:line, 763, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :flipbits!, :b1), (:call, :~, :i1))),
            (:line, 764, :none),
            (:macrocall, Symbol("@test"), (:call, :bitcheck, :b1))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 767, :none),
        (:call, :timesofar, "unary arithmetic"),
        (:line, 773, :none),
        (:let, (:block,
            (:line, 774, :none),
            (:(=), :b2, (:call, :bitrand, :n1, :n2)),
            (:line, 775, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, :b2), :BitMatrix),
            (:line, 776, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, :b2), :BitMatrix),
            (:line, 777, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, :b2), :BitMatrix),
            (:line, 778, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :+, :b1, :b2), (:curly, :Matrix, :Int)),
            (:line, 779, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :-, :b1, :b2), (:curly, :Matrix, :Int)),
            (:line, 780, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :b2), :BitMatrix),
            (:line, 781, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 782, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, :b2), :BitMatrix),
            (:line, 783, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :/, :b1, 1), (:curly, :Matrix, :Float64)),
            (:line, 785, :none),
            (:(=), :b2, (:call, :trues, :n1, :n2)),
            (:line, 786, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :b2), :BitMatrix),
            (:line, 787, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :b2), :BitMatrix),
            (:line, 788, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, (:call, :Array, :b2)), :BitMatrix),
            (:line, 789, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, (:call, :Array, :b2)), :BitMatrix),
            (:line, 790, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, (:call, :Array, :b1), :b2), :BitMatrix),
            (:line, 791, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, (:call, :Array, :b1), :b2), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 794, :none),
        (:let, (:block,
            (:line, 795, :none),
            (:while, (:call, :≤, (:call, :abs, (:call, :det, (:call, (:curly, :Array, :Float64), :b1))), 1.0e-6), (:block,
                (:line, 796, :none),
                (:(=), :b1, (:call, :bitrand, :n1, :n1))
              )),
            (:line, 798, :none),
            (:(=), :b2, (:call, :bitrand, :n1, :n1)),
            (:line, 800, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :*, :b1, :b2), (:curly, :Matrix, :Int)),
            (:line, 801, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :/, :b1, :b1), (:curly, :Matrix, :Float64)),
            (:line, 802, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :\, :b1, :b1), (:curly, :Matrix, :Float64))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n1))),
        (:line, 805, :none),
        (:let, (:block,
            (:line, 806, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b0, :b0), :BitVector),
            (:line, 807, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b0, :b0), :BitVector),
            (:line, 808, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b0, :b0), :BitVector),
            (:line, 809, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b0, :b0), :BitVector),
            (:line, 810, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :*, :b0, (:', :b0)), (:curly, :Matrix, :Int))
          ), (:(=), :b0, (:call, :falses, 0))),
        (:line, 815, :none),
        (:let, (:block,
            (:line, 816, :none),
            (:(=), :i2, (:call, :rand, (:(:), 1, 10), :n1, :n2)),
            (:line, 817, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 818, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 819, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 820, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :+, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 821, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :-, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 822, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 823, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :i2), (:curly, :Matrix, :Float64)),
            (:line, 824, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, :i2), :BitMatrix),
            (:line, 825, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 826, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :i2), (:curly, :Matrix, :Int))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 831, :none),
        (:let, (:block,
            (:line, 832, :none),
            (:(=), :f2, (:call, :.+, 1.0, (:call, :rand, :n1, :n2))),
            (:line, 833, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 834, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 835, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 836, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 837, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :f2), (:curly, :Matrix, :Float64))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 842, :none),
        (:let, (:block,
            (:line, 843, :none),
            (:(=), :i1, (:call, :rand, (:(:), 1, 10))),
            (:line, 844, :none),
            (:(=), :u1, (:call, :UInt8, :i1)),
            (:line, 845, :none),
            (:(=), :f1, (:call, :Float64, :i1)),
            (:line, 846, :none),
            (:(=), :ci1, (:call, :complex, :i1)),
            (:line, 847, :none),
            (:(=), :cu1, (:call, :complex, :u1)),
            (:line, 848, :none),
            (:(=), :cf1, (:call, :complex, :f1)),
            (:line, 850, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 851, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 852, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 853, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 854, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 855, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 857, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 858, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 859, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 860, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 861, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 862, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 864, :none),
            (:for, (:(=), (:tuple, :x1, :t1), (:vect, (:tuple, :f1, :Float64), (:tuple, :ci1, (:curly, :Complex, :Int)), (:tuple, :cu1, (:curly, :Complex, :UInt8)), (:tuple, :cf1, :Complex128))), (:block,
                (:line, 868, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :x1, :b2), (:curly, :Matrix, :t1)),
                (:line, 869, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :x1, :b2), (:curly, :Matrix, :t1)),
                (:line, 870, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :x1, :b2), (:curly, :Matrix, :t1))
              )),
            (:line, 873, :none),
            (:(=), :b2, (:call, :trues, :n1, :n2)),
            (:line, 874, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, true, :b2), (:curly, :Matrix, :Float64)),
            (:line, 875, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, true, :b2), :BitMatrix),
            (:line, 876, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, true, :b2), :BitMatrix),
            (:line, 877, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, false, :b2), (:curly, :Matrix, :Float64)),
            (:line, 878, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, false, :b2), :BitMatrix),
            (:line, 879, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, false, :b2), :BitMatrix),
            (:line, 881, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :i1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 882, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 883, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :i1, :b2), (:curly, :Matrix, :Int)),
            (:line, 885, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :u1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 886, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 887, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :u1, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 889, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :f1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 890, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :f1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 891, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :f1, :b2), (:curly, :Matrix, :Float64)),
            (:line, 893, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :ci1, :b2), (:curly, :Matrix, :Complex128)),
            (:line, 894, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :cu1, :b2), (:curly, :Matrix, :Complex128)),
            (:line, 895, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :cf1, :b2), (:curly, :Matrix, :Complex128)),
            (:line, 897, :none),
            (:(=), :b2, (:call, :bitrand, :n1, :n2)),
            (:line, 898, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, false, :b2), :BitMatrix),
            (:line, 899, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, true, :b2), :BitMatrix),
            (:line, 900, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 0x00, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 901, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 0x01, :b2), (:curly, :Matrix, :UInt8)),
            (:line, 902, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, -1, :b2), (:curly, :Matrix, :Int)),
            (:line, 903, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 0, :b2), (:curly, :Matrix, :Int)),
            (:line, 904, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 1, :b2), (:curly, :Matrix, :Int)),
            (:line, 905, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 0.0, :b2), (:curly, :Matrix, :Float64)),
            (:line, 906, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, 1.0, :b2), (:curly, :Matrix, :Float64)),
            (:line, 907, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 0.0, :im), :b2), (:curly, :Matrix, :Complex128)),
            (:line, 908, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 1.0, :im), :b2), (:curly, :Matrix, :Complex128)),
            (:line, 909, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 0, :im), :b2), (:curly, :Matrix, (:curly, :Complex, :Int))),
            (:line, 910, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 1, :im), :b2), (:curly, :Matrix, (:curly, :Complex, :Int))),
            (:line, 911, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 0x00, :im), :b2), (:curly, :Matrix, (:curly, :Complex, :UInt8))),
            (:line, 912, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, (:call, :*, 0x01, :im), :b2), (:curly, :Matrix, (:curly, :Complex, :UInt8)))
          ), (:(=), :b2, (:call, :bitrand, :n1, :n2))),
        (:line, 917, :none),
        (:let, (:block,
            (:line, 918, :none),
            (:(=), :i2, (:call, :rand, (:(:), 1, 10))),
            (:line, 919, :none),
            (:(=), :u2, (:call, :UInt8, :i2)),
            (:line, 920, :none),
            (:(=), :f2, (:call, :Float64, :i2)),
            (:line, 921, :none),
            (:(=), :ci2, (:call, :complex, :i2)),
            (:line, 922, :none),
            (:(=), :cu2, (:call, :complex, :u2)),
            (:line, 923, :none),
            (:(=), :cf2, (:call, :complex, :f2)),
            (:line, 924, :none),
            (:(=), :b2, (:call, :Array, (:call, :bitrand, :n1, :n2))),
            (:line, 926, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, true), :BitMatrix),
            (:line, 927, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, false), :BitMatrix),
            (:line, 928, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, true, :b1), :BitMatrix),
            (:line, 929, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, false, :b1), :BitMatrix),
            (:line, 930, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, true), :BitMatrix),
            (:line, 931, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, false), :BitMatrix),
            (:line, 932, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, true, :b1), :BitMatrix),
            (:line, 933, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, false, :b1), :BitMatrix),
            (:line, 934, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, true), :BitMatrix),
            (:line, 935, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, false), :BitMatrix),
            (:line, 936, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, true, :b1), :BitMatrix),
            (:line, 937, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, false, :b1), :BitMatrix),
            (:line, 938, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, true), (:curly, :Matrix, :Int)),
            (:line, 939, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, false), (:curly, :Matrix, :Int)),
            (:line, 940, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, true), (:curly, :Matrix, :Int)),
            (:line, 941, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, false), (:curly, :Matrix, :Int)),
            (:line, 942, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, true), :BitMatrix),
            (:line, 943, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, false), :BitMatrix),
            (:line, 944, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, true, :b1), :BitMatrix),
            (:line, 945, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, false, :b1), :BitMatrix),
            (:line, 946, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, true), (:curly, :Matrix, :Float64)),
            (:line, 947, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, false), (:curly, :Matrix, :Float64)),
            (:line, 948, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, true), :BitMatrix),
            (:line, 949, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, true), :BitMatrix),
            (:line, 951, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, :b2), :BitMatrix),
            (:line, 952, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, :b2), :BitMatrix),
            (:line, 953, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, :b2), :BitMatrix),
            (:line, 954, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b2, :b1), :BitMatrix),
            (:line, 955, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b2, :b1), :BitMatrix),
            (:line, 956, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b2, :b1), :BitMatrix),
            (:line, 957, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 958, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 959, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 960, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 961, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 962, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 963, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :i2), (:curly, :Matrix, :Float64)),
            (:line, 964, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 965, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :i2), (:curly, :Matrix, :Int)),
            (:line, 967, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :&, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 968, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :|, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 969, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :$, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 970, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 971, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 972, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 973, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :u2), (:curly, :Matrix, :Float64)),
            (:line, 974, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 975, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :u2), (:curly, :Matrix, :UInt8)),
            (:line, 977, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 978, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 979, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 980, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 981, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :div, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 982, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :mod, :b1, :f2), (:curly, :Matrix, :Float64)),
            (:line, 984, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :ci2), (:curly, :Matrix, (:curly, :Complex, :Int))),
            (:line, 985, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :ci2), (:curly, :Matrix, (:curly, :Complex, :Int))),
            (:line, 986, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :ci2), (:curly, :Matrix, (:curly, :Complex, :Int))),
            (:line, 987, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :ci2), (:curly, :Matrix, :Complex128)),
            (:line, 989, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :cu2), (:curly, :Matrix, (:curly, :Complex, :UInt8))),
            (:line, 990, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :cu2), (:curly, :Matrix, (:curly, :Complex, :UInt8))),
            (:line, 991, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :cu2), (:curly, :Matrix, (:curly, :Complex, :UInt8))),
            (:line, 992, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :cu2), (:curly, :Matrix, :Complex128)),
            (:line, 994, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.+, :b1, :cf2), (:curly, :Matrix, :Complex128)),
            (:line, 995, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.-, :b1, :cf2), (:curly, :Matrix, :Complex128)),
            (:line, 996, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.*, :b1, :cf2), (:curly, :Matrix, :Complex128)),
            (:line, 997, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :./, :b1, :cf2), (:curly, :Matrix, :Complex128)),
            (:line, 999, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, false), :BitMatrix),
            (:line, 1000, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, true), :BitMatrix),
            (:line, 1001, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 0x00), :BitMatrix),
            (:line, 1002, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 0x01), :BitMatrix),
            (:line, 1003, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 0), :BitMatrix),
            (:line, 1004, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 1), :BitMatrix),
            (:line, 1005, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, -1.0), (:curly, :Matrix, :Float64)),
            (:line, 1006, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 0.0), (:curly, :Matrix, :Float64)),
            (:line, 1007, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, 1.0), (:curly, :Matrix, :Float64)),
            (:line, 1008, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 0.0, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1009, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 0x00, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1010, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 0, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1011, :none),
            (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :.^, :b1, -1)),
            (:line, 1013, :none),
            (:(=), :b1, (:call, :trues, :n1, :n2)),
            (:line, 1014, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, -1.0, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1015, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 1.0, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1016, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, -1, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1017, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 1, :im)), (:curly, :Matrix, :Complex128)),
            (:line, 1018, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.^, :b1, (:call, :*, 0x01, :im)), (:curly, :Matrix, :Complex128))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1021, :none),
        (:call, :timesofar, "binary arithmetic"),
        (:line, 1025, :none),
        (:let, (:block,
            (:line, 1026, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.==, :b1, :b2), :BitMatrix),
            (:line, 1027, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.!=, :b1, :b2), :BitMatrix),
            (:line, 1028, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.<, :b1, :b2), :BitMatrix),
            (:line, 1029, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :.<=, :b1, :b2), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2)), (:(=), :b2, (:call, :bitrand, :n1, :n2))),
        (:line, 1032, :none),
        (:call, :timesofar, "binary comparison"),
        (:line, 1036, :none),
        (:let, (:block,
            (:line, 1037, :none),
            (:for, (:(=), :d, (:(:), 1, 4)), (:block,
                (:line, 1038, :none),
                (:(=), :j, (:call, :rand, (:(:), 1, (:call, :size, :b1, :d)))),
                (:line, 1040, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :slicedim, :b1, :d, :j), (:curly, :BitArray, 3)),
                (:line, 1042, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :flipdim, :b1, :d), (:curly, :BitArray, 4))
              )),
            (:line, 1044, :none),
            (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :flipdim, :b1, 5))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4))),
        (:line, 1047, :none),
        (:let, (:block,
            (:line, 1048, :none),
            (:for, (:(=), :k, (:(:), 1, 4)), (:block,
                (:line, 1049, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :rotl90, :b1, :k), :BitMatrix)
              )),
            (:line, 1052, :none),
            (:for, (:(=), :m, (:(:), 0, :v1)), (:block,
                (:line, 1053, :none),
                (:(=), :b1, (:call, :bitrand, :m)),
                (:line, 1054, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :reverse, :b1), :BitVector)
              ))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1058, :none),
        (:let, (:block,
            (:line, 1059, :none),
            (:for, (:(=), :m, (:vect, (:call, :-, (:call, :rand, (:(:), 1, :v1)), 1), 0, 1, 63, 64, 65, 191, 192, 193, (:call, :-, :v1, 1))), (:block,
                (:line, 1060, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :<<, :b1, :m), (:vcat, (:ref, :b1, (:(:), (:call, :+, :m, 1), :end)), (:call, :falses, :m)))),
                (:line, 1061, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :>>>, :b1, :m), (:vcat, (:call, :falses, :m), (:ref, :b1, (:(:), 1, (:call, :-, :end, :m)))))),
                (:line, 1062, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :rol, :b1, :m), (:vcat, (:ref, :b1, (:(:), (:call, :+, :m, 1), :end)), (:ref, :b1, (:(:), 1, :m))))),
                (:line, 1063, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :ror, :b1, :m), (:vcat, (:ref, :b1, (:(:), (:call, :+, (:call, :-, :end, :m), 1), :end)), (:ref, :b1, (:(:), 1, (:call, :-, :end, :m)))))),
                (:line, 1064, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :ror, :b1, :m), (:call, :rol, :b1, (:call, :-, :m)))),
                (:line, 1065, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :rol, :b1, :m), (:call, :ror, :b1, (:call, :-, :m))))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 1069, :none),
        (:let, (:block,
            (:line, 1070, :none),
            (:(=), :i, (:call, :bitrand, :v1)),
            (:line, 1071, :none),
            (:for, (:(=), :m, (:vect, (:call, :rand, (:(:), 1, :v1)), 63, 64, 65, 191, 192, 193, (:call, :-, :v1, 1))), (:block,
                (:line, 1072, :none),
                (:(=), :j, (:call, :rand, (:(:), 1, :m))),
                (:line, 1073, :none),
                (:(=), :b1, (:call, :ror!, :i, :b, :j)),
                (:line, 1074, :none),
                (:(=), :i1, (:call, :ror!, :b, :j)),
                (:line, 1075, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b1, :i1)),
                (:line, 1076, :none),
                (:(=), :b2, (:call, :rol!, :i1, :b1, :j)),
                (:line, 1077, :none),
                (:(=), :i2, (:call, :rol!, :b1, :j)),
                (:line, 1078, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b2, :i2))
              ))
          ), (:(=), :b, (:call, :bitrand, :v1))),
        (:line, 1082, :none),
        (:call, :timesofar, "datamove"),
        (:line, 1086, :none),
        (:for, (:block,
            (:(=), :m, (:(:), 0, :v1)),
            (:(=), :b1, (:ref, :Any, (:call, :bitrand, :m), (:call, :trues, :m), (:call, :falses, :m)))
          ), (:block,
            (:line, 1087, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :countnz, :b1), :Int),
            (:line, 1089, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, :b1), :Int),
            (:line, 1091, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, :b1, true), :Int),
            (:line, 1092, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, :b1, false), :Int),
            (:line, 1093, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, :b1, 3), :Int),
            (:line, 1095, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, (:->, :x, (:block,
                    (:line, 1095, :none),
                    :x
                  )), :b1), :Int),
            (:line, 1096, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, (:->, :x, (:block,
                    (:line, 1096, :none),
                    (:call, :!, :x)
                  )), :b1), :Int),
            (:line, 1097, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, (:->, :x, (:block,
                    (:line, 1097, :none),
                    true
                  )), :b1), :Int),
            (:line, 1098, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findfirst, (:->, :x, (:block,
                    (:line, 1098, :none),
                    false
                  )), :b1), :Int),
            (:line, 1100, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :find, :b1), (:curly, :Vector, :Int))
          )),
        (:line, 1103, :none),
        (:let, (:block,
            (:line, 1104, :none),
            (:for, (:(=), :i, (:(:), 0, (:call, :-, :v1, 1))), (:block,
                (:line, 1105, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findfirst, (:call, :>>, :b1, :i)), (:call, :+, :i, 1))),
                (:line, 1106, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
                          :findfirstnot
                        )), (:call, :~, (:call, :>>, :b1, :i))), (:call, :+, :i, 1)))
              )),
            (:line, 1109, :none),
            (:for, (:block,
                (:(=), :i, (:(:), 3, (:call, :-, :v1, 1))),
                (:(=), :j, (:(:), 2, :i))
              ), (:block,
                (:line, 1110, :none),
                (:(=), :submask, (:call, :<<, :b1, (:call, :+, (:call, :-, :v1, :j), 1))),
                (:line, 1111, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:call, :|, (:call, :>>, :b1, :i), :submask), :j), (:call, :+, :i, 1))),
                (:line, 1112, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnextnot, (:call, :$, (:call, :~, (:call, :>>, :b1, :i)), :submask), :j), (:call, :+, :i, 1)))
              ))
          ), (:(=), :b1, (:call, :trues, :v1))),
        (:line, 1116, :none),
        (:let, (:block,
            (:line, 1117, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findnz, :b1), (:curly, :Tuple, (:curly, :Vector, :Int), (:curly, :Vector, :Int), :BitArray))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1120, :none),
        (:call, :timesofar, "nnz&find"),
        (:line, 1124, :none),
        (:let, (:block,
            (:line, 1125, :none),
            (:for, (:(=), :i, (:(:), 1, :v1)), (:block,
                (:line, 1126, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, :i), :(==), (:call, :findprev, :b1, true, :i), :(==), (:call, :findprev, :identity, :b1, :i))),
                (:line, 1127, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprevnot, :b2, :i), :(==), (:call, :findprev, :!, :b2, :i), :(==), :i))
              ))
          ), (:(=), :b1, (:call, :trues, :v1)), (:(=), :b2, (:call, :falses, :v1))),
        (:line, 1131, :none),
        (:let, (:block,
            (:line, 1132, :none),
            (:(=), :evens, (:call, :bitbroadcast, :iseven, (:(:), 1, 2000))),
            (:line, 1133, :none),
            (:for, (:(=), :i, (:(:), 1, 2, 2000)), (:block,
                (:line, 1134, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :odds, :i), :(==), (:call, :findprevnot, :evens, :i), :(==), :i)),
                (:line, 1135, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :odds, :i), :(==), (:call, :findnextnot, :evens, :i), :(==), :i)),
                (:line, 1136, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :evens, :i), :(==), (:call, :findprevnot, :odds, :i), :(==), (:call, :-, :i, 1))),
                (:line, 1137, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :evens, :i), :(==), (:call, :findnextnot, :odds, :i), :(==), (:if, (:call, :<, :i, 2000), (:call, :+, :i, 1), 0)))
              )),
            (:line, 1139, :none),
            (:for, (:(=), :i, (:(:), 2, 2, 2000)), (:block,
                (:line, 1140, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :odds, :i), :(==), (:call, :findprevnot, :evens, :i), :(==), (:call, :-, :i, 1))),
                (:line, 1141, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :evens, :i), :(==), (:call, :findprevnot, :odds, :i), :(==), :i)),
                (:line, 1142, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :evens, :i), :(==), (:call, :findnextnot, :odds, :i), :(==), :i)),
                (:line, 1143, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :odds, :i), :(==), (:call, :findnextnot, :evens, :i), :(==), (:if, (:call, :<, :i, 2000), (:call, :+, :i, 1), 0)))
              ))
          ), (:(=), :odds, (:call, :bitbroadcast, :isodd, (:(:), 1, 2000)))),
        (:line, 1147, :none),
        (:let, (:block,
            (:line, 1148, :none),
            (:(=), :n, (:call, :maximum, :elts)),
            (:line, 1149, :none),
            (:for, (:(=), :c, (:vect, :falses, :trues)), (:block,
                (:line, 1150, :none),
                (:(=), :b1, (:call, :c, :n)),
                (:line, 1151, :none),
                (:(=), (:ref, :b1, :elts), (:call, :!, (:ref, :b1, :elts))),
                (:line, 1152, :none),
                (:(=), :b2, (:call, :~, :b1)),
                (:line, 1153, :none),
                (:(=), :i1, (:call, :Array, :b1)),
                (:line, 1154, :none),
                (:for, (:(=), :i, (:(:), 1, :n)), (:block,
                    (:line, 1155, :none),
                    (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, :i), :(==), (:call, :findprev, :i1, :i), :(==), (:call, :findprevnot, :b2, :i), :(==), (:call, :findprev, :!, :b2, :i))),
                    (:line, 1156, :none),
                    (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, :i), :(==), (:call, :findnext, :i1, :i), :(==), (:call, :findnextnot, :b2, :i), :(==), (:call, :findnext, :!, :b2, :i)))
                  ))
              ))
          ), (:(=), :elts, (:call, :.+, (:(:), 1, 64, (:call, :+, (:call, :*, 64, 64), 1)), (:(:), 0, 64)))),
        (:line, 1161, :none),
        (:let, (:block,
            (:line, 1162, :none),
            (:(=), (:ref, :b1, 77), true),
            (:line, 1163, :none),
            (:(=), (:ref, :b1, 777), true),
            (:line, 1164, :none),
            (:(=), :b2, (:call, :~, :b1)),
            (:line, 1165, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, :b1, 1001)),
            (:line, 1166, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprevnot, :b2, 1001)),
            (:line, 1167, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, :!, :b2, 1001)),
            (:line, 1168, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, :identity, :b1, 1001)),
            (:line, 1169, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, (:->, :x, (:block,
                    (:line, 1169, :none),
                    false
                  )), :b1, 1001)),
            (:line, 1170, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, (:->, :x, (:block,
                    (:line, 1170, :none),
                    true
                  )), :b1, 1001)),
            (:line, 1171, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, 1000), :(==), (:call, :findprevnot, :b2, 1000), :(==), (:call, :findprev, :!, :b2, 1000), :(==), 777)),
            (:line, 1172, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, 777), :(==), (:call, :findprevnot, :b2, 777), :(==), (:call, :findprev, :!, :b2, 777), :(==), 777)),
            (:line, 1173, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, 776), :(==), (:call, :findprevnot, :b2, 776), :(==), (:call, :findprev, :!, :b2, 776), :(==), 77)),
            (:line, 1174, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, 77), :(==), (:call, :findprevnot, :b2, 77), :(==), (:call, :findprev, :!, :b2, 77), :(==), 77)),
            (:line, 1175, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, 76), :(==), (:call, :findprevnot, :b2, 76), :(==), (:call, :findprev, :!, :b2, 76), :(==), 0)),
            (:line, 1176, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, -1), :(==), (:call, :findprevnot, :b2, -1), :(==), (:call, :findprev, :!, :b2, -1), :(==), 0)),
            (:line, 1177, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :identity, :b1, -1), :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1177, :none),
                      false
                    )), :b1, -1), :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1177, :none),
                      true
                    )), :b1, -1), :(==), 0)),
            (:line, 1178, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, :b1, -1)),
            (:line, 1179, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnextnot, :b2, -1)),
            (:line, 1180, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, :!, :b2, -1)),
            (:line, 1181, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, :identity, :b1, -1)),
            (:line, 1182, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, (:->, :x, (:block,
                    (:line, 1182, :none),
                    false
                  )), :b1, -1)),
            (:line, 1183, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, (:->, :x, (:block,
                    (:line, 1183, :none),
                    true
                  )), :b1, -1)),
            (:line, 1184, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 1), :(==), (:call, :findnextnot, :b2, 1), :(==), (:call, :findnext, :!, :b2, 1), :(==), 77)),
            (:line, 1185, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 77), :(==), (:call, :findnextnot, :b2, 77), :(==), (:call, :findnext, :!, :b2, 77), :(==), 77)),
            (:line, 1186, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 78), :(==), (:call, :findnextnot, :b2, 78), :(==), (:call, :findnext, :!, :b2, 78), :(==), 777)),
            (:line, 1187, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 777), :(==), (:call, :findnextnot, :b2, 777), :(==), (:call, :findnext, :!, :b2, 777), :(==), 777)),
            (:line, 1188, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 778), :(==), (:call, :findnextnot, :b2, 778), :(==), (:call, :findnext, :!, :b2, 778), :(==), 0)),
            (:line, 1189, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :b1, 1001), :(==), (:call, :findnextnot, :b2, 1001), :(==), (:call, :findnext, :!, :b2, 1001), :(==), 0)),
            (:line, 1190, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findnext, :identity, :b1, 1001), :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1190, :none),
                      false
                    )), :b1, 1001), :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1190, :none),
                      true
                    )), :b1, 1001), :(==), 0)),
            (:line, 1192, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findlast, :b1), :(==), (:call, (:., :Base, (:quote, #QuoteNode
                      :findlastnot
                    )), :b2), :(==), 777)),
            (:line, 1193, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findfirst, :b1), :(==), (:call, (:., :Base, (:quote, #QuoteNode
                      :findfirstnot
                    )), :b2), :(==), 77))
          ), (:(=), :b1, (:call, :falses, 1000))),
        (:line, 1196, :none),
        (:let, (:block,
            (:line, 1197, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1197, :none),
                      true
                    )), :b0, -1), 0)),
            (:line, 1198, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, (:->, :x, (:block,
                    (:line, 1198, :none),
                    true
                  )), :b0, 1)),
            (:line, 1199, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, (:->, :x, (:block,
                    (:line, 1199, :none),
                    true
                  )), :b0, -1)),
            (:line, 1200, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1200, :none),
                      true
                    )), :b0, 1), 0))
          ), (:(=), :b0, (:call, :BitVector, 0))),
        (:line, 1203, :none),
        (:let, (:block,
            (:line, 1204, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1204, :none),
                      true
                    )), :b1, 5), 5)),
            (:line, 1205, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1205, :none),
                      true
                    )), :b1, 5), 5)),
            (:line, 1206, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1206, :none),
                      true
                    )), :b1, -1), 0)),
            (:line, 1207, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1207, :none),
                      true
                    )), :b1, 11), 0)),
            (:line, 1208, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1208, :none),
                      false
                    )), :b1, 5), 0)),
            (:line, 1209, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1209, :none),
                      false
                    )), :b1, 5), 0)),
            (:line, 1210, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findprev, (:->, :x, (:block,
                      (:line, 1210, :none),
                      false
                    )), :b1, -1), 0)),
            (:line, 1211, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findnext, (:->, :x, (:block,
                      (:line, 1211, :none),
                      false
                    )), :b1, 11), 0)),
            (:line, 1212, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findprev, (:->, :x, (:block,
                    (:line, 1212, :none),
                    true
                  )), :b1, 11)),
            (:line, 1213, :none),
            (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :findnext, (:->, :x, (:block,
                    (:line, 1213, :none),
                    true
                  )), :b1, -1))
          ), (:(=), :b1, (:call, :falses, 10))),
        (:line, 1216, :none),
        (:for, (:(=), :l, (:vect, 1, 63, 64, 65, 127, 128, 129)), (:block,
            (:line, 1217, :none),
            (:(=), :f, (:call, :falses, :l)),
            (:line, 1218, :none),
            (:(=), :t, (:call, :trues, :l)),
            (:line, 1219, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :f, :l), :(==), (:call, :findprevnot, :t, :l), :(==), 0)),
            (:line, 1220, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :t, :l), :(==), (:call, :findprevnot, :f, :l), :(==), :l)),
            (:line, 1221, :none),
            (:(=), :b1, (:call, :falses, :l)),
            (:line, 1222, :none),
            (:(=), (:ref, :b1, :end), true),
            (:line, 1223, :none),
            (:(=), :b2, (:call, :~, :b1)),
            (:line, 1224, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, :l), :(==), (:call, :findprevnot, :b2, :l), :(==), :l)),
            (:line, 1225, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :findprevnot, :b1, :l), :(==), (:call, :findprev, :b2, :l), :(==), (:call, :-, :l, 1))),
            (:line, 1226, :none),
            (:if, (:call, :>, :l, 1), (:block,
                (:line, 1227, :none),
                (:(=), :b1, (:call, :falses, :l)),
                (:line, 1228, :none),
                (:(=), (:ref, :b1, (:call, :-, :end, 1)), true),
                (:line, 1229, :none),
                (:(=), :b2, (:call, :~, :b1)),
                (:line, 1230, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprev, :b1, :l), :(==), (:call, :findprevnot, :b2, :l), :(==), (:call, :-, :l, 1))),
                (:line, 1231, :none),
                (:macrocall, Symbol("@test"), (:comparison, (:call, :findprevnot, :b1, :l), :(==), (:call, :findprev, :b2, :l), :(==), :l))
              ))
          )),
        (:line, 1237, :none),
        (:let, (:block,
            (:line, 1238, :none),
            (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4)),
            (:line, 1239, :none),
            (:(=), :m1, 1),
            (:line, 1240, :none),
            (:(=), :m2, 3),
            (:line, 1241, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :maximum, :b1, (:tuple, :m1, :m2)), (:curly, :BitArray, 4)),
            (:line, 1242, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :minimum, :b1, (:tuple, :m1, :m2)), (:curly, :BitArray, 4)),
            (:line, 1243, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :sum, :b1, (:tuple, :m1, :m2)), (:curly, :Array, :Int, 4)),
            (:line, 1245, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :maximum, :b1), :Bool),
            (:line, 1246, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :minimum, :b1), :Bool),
            (:line, 1247, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :any, :b1), :Bool),
            (:line, 1248, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :all, :b1), :Bool),
            (:line, 1249, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :sum, :b1), :Int),
            (:line, 1251, :none),
            (:(=), :b0, (:call, :falses, 0)),
            (:line, 1252, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :any, :b0), :Bool),
            (:line, 1253, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :all, :b0), :Bool),
            (:line, 1254, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :sum, :b0), :Int)
          )),
        (:line, 1257, :none),
        (:call, :timesofar, "reductions"),
        (:line, 1261, :none),
        (:for, (:(=), :l, (:vect, 0, 1, 63, 64, 65, 127, 128, 129, 255, 256, 257, 6399, 6400, 6401)), (:block,
            (:line, 1262, :none),
            (:(=), :b1, (:call, :bitrand, :l)),
            (:line, 1263, :none),
            (:(=), :b2, (:call, :bitrand, :l)),
            (:line, 1264, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :~, :b1), :(==), (:call, :map, (:->, :x, (:block,
                      (:line, 1264, :none),
                      (:call, :~, :x)
                    )), :b1), :(==), (:call, :~, :b1))),
            (:line, 1265, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :identity, :b1), :(==), (:call, :map, (:->, :x, (:block,
                      (:line, 1265, :none),
                      :x
                    )), :b1), :(==), :b1)),
            (:line, 1267, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :&, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1267, :none),
                      (:call, :&, :x, :y)
                    )), :b1, :b2), :(==), (:call, :&, :b1, :b2))),
            (:line, 1268, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :|, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1268, :none),
                      (:call, :|, :x, :y)
                    )), :b1, :b2), :(==), (:call, :|, :b1, :b2))),
            (:line, 1269, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :$, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1269, :none),
                      (:call, :$, :x, :y)
                    )), :b1, :b2), :(==), (:call, :$, :b1, :b2))),
            (:line, 1271, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :^, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1271, :none),
                      (:call, :^, :x, :y)
                    )), :b1, :b2), :(==), (:call, :.^, :b1, :b2))),
            (:line, 1272, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :*, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1272, :none),
                      (:call, :*, :x, :y)
                    )), :b1, :b2), :(==), (:call, :.*, :b1, :b2))),
            (:line, 1274, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :min, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1274, :none),
                      (:call, :min, :x, :y)
                    )), :b1, :b2), :(==), (:call, :min, :b1, :b2))),
            (:line, 1275, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :max, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1275, :none),
                      (:call, :max, :x, :y)
                    )), :b1, :b2), :(==), (:call, :max, :b1, :b2))),
            (:line, 1277, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :<, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1277, :none),
                      (:call, :<, :x, :y)
                    )), :b1, :b2), :(==), (:call, :.<, :b1, :b2))),
            (:line, 1278, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :(<=), :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1278, :none),
                      (:call, :(<=), :x, :y)
                    )), :b1, :b2), :(==), (:call, :.<=, :b1, :b2))),
            (:line, 1279, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :(==), :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1279, :none),
                      (:call, :(==), :x, :y)
                    )), :b1, :b2), :(==), (:call, :.==, :b1, :b2))),
            (:line, 1280, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :(>=), :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1280, :none),
                      (:call, :(>=), :x, :y)
                    )), :b1, :b2), :(==), (:call, :.>=, :b1, :b2))),
            (:line, 1281, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :>, :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1281, :none),
                      (:call, :>, :x, :y)
                    )), :b1, :b2), :(==), (:call, :.>, :b1, :b2))),
            (:line, 1282, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map, :(!=), :b1, :b2), :(==), (:call, :map, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1282, :none),
                      (:call, :(!=), :x, :y)
                    )), :b1, :b2), :(==), (:call, :.!=, :b1, :b2))),
            (:line, 1285, :none),
            (:(=), :b, (:call, :BitArray, :l)),
            (:line, 1286, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :~, :b, :b1), :(==), (:call, :map!, (:->, :x, (:block,
                      (:line, 1286, :none),
                      (:call, :~, :x)
                    )), :b, :b1), :(==), (:call, :~, :b1), :(==), :b)),
            (:line, 1287, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :!, :b, :b1), :(==), (:call, :map!, (:->, :x, (:block,
                      (:line, 1287, :none),
                      (:call, :!, :x)
                    )), :b, :b1), :(==), (:call, :~, :b1), :(==), :b)),
            (:line, 1288, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :identity, :b, :b1), :(==), (:call, :map!, (:->, :x, (:block,
                      (:line, 1288, :none),
                      :x
                    )), :b, :b1), :(==), :b1, :(==), :b)),
            (:line, 1289, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :zero, :b, :b1), :(==), (:call, :map!, (:->, :x, (:block,
                      (:line, 1289, :none),
                      false
                    )), :b, :b1), :(==), (:call, :falses, :l), :(==), :b)),
            (:line, 1290, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :one, :b, :b1), :(==), (:call, :map!, (:->, :x, (:block,
                      (:line, 1290, :none),
                      true
                    )), :b, :b1), :(==), (:call, :trues, :l), :(==), :b)),
            (:line, 1292, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :&, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1292, :none),
                      (:call, :&, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :&, :b1, :b2), :(==), :b)),
            (:line, 1293, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :|, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1293, :none),
                      (:call, :|, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :|, :b1, :b2), :(==), :b)),
            (:line, 1294, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :$, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1294, :none),
                      (:call, :$, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :$, :b1, :b2), :(==), :b)),
            (:line, 1296, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :^, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1296, :none),
                      (:call, :^, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.^, :b1, :b2), :(==), :b)),
            (:line, 1297, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :*, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1297, :none),
                      (:call, :*, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.*, :b1, :b2), :(==), :b)),
            (:line, 1299, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :min, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1299, :none),
                      (:call, :min, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :min, :b1, :b2), :(==), :b)),
            (:line, 1300, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :max, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1300, :none),
                      (:call, :max, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :max, :b1, :b2), :(==), :b)),
            (:line, 1302, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :<, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1302, :none),
                      (:call, :<, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.<, :b1, :b2), :(==), :b)),
            (:line, 1303, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :(<=), :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1303, :none),
                      (:call, :(<=), :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.<=, :b1, :b2), :(==), :b)),
            (:line, 1304, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :(==), :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1304, :none),
                      (:call, :(==), :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.==, :b1, :b2), :(==), :b)),
            (:line, 1305, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :(>=), :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1305, :none),
                      (:call, :(>=), :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.>=, :b1, :b2), :(==), :b)),
            (:line, 1306, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :>, :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1306, :none),
                      (:call, :>, :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.>, :b1, :b2), :(==), :b)),
            (:line, 1307, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :map!, :(!=), :b, :b1, :b2), :(==), (:call, :map!, (:->, (:tuple, :x, :y), (:block,
                      (:line, 1307, :none),
                      (:call, :(!=), :x, :y)
                    )), :b, :b1, :b2), :(==), (:call, :.!=, :b1, :b2), :(==), :b))
          )),
        (:line, 1311, :none),
        (:let, (:block,
            (:line, 1312, :none),
            (:(=), :B17970, (:call, :map, (:->, :x, (:block,
                    (:line, 1312, :none),
                    (:if, :x, 1, 2)
                  )), :A17970)),
            (:line, 1313, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:(::), :B17970, (:curly, :Array, :Int, 1)), (:vect, 2, 1, 2))),
            (:line, 1314, :none),
            (:(=), :C17970, (:call, :map, (:->, :x, (:block,
                    (:line, 1314, :none),
                    (:if, :x, false, true)
                  )), :A17970)),
            (:line, 1315, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:(::), :C17970, (:curly, :BitArray, 1)), (:call, :map, :~, :A17970)))
          ), (:(=), :A17970, (:call, :.==, (:vect, 1, 2, 3), (:vect, 3, 2, 1)))),
        (:line, 1324, :none),
        (:(=), :b1, (:call, :bitrand, :v1)),
        (:line, 1325, :none),
        (:macrocall, Symbol("@check_bit_operation"), (:call, :transpose, :b1), :BitMatrix),
        (:line, 1327, :none),
        (:for, (:block,
            (:(=), :m1, (:(:), 0, :n1)),
            (:(=), :m2, (:(:), 0, :n2))
          ), (:block,
            (:line, 1328, :none),
            (:(=), :b1, (:call, :bitrand, :m1, :m2)),
            (:line, 1329, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :transpose, :b1), :BitMatrix)
          )),
        (:line, 1332, :none),
        (:call, :timesofar, "transpose"),
        (:line, 1336, :none),
        (:let, (:block,
            (:line, 1337, :none),
            (:(=), :p, (:call, :randperm, 4)),
            (:line, 1338, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :permutedims, :b1, :p), (:curly, :BitArray, 4)),
            (:line, 1339, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :permutedims, :b1, (:call, :tuple, (:..., :p))), (:curly, :BitArray, 4))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4))),
        (:line, 1342, :none),
        (:call, :timesofar, "permutedims"),
        (:line, 1346, :none),
        (:let, (:block,
            (:line, 1347, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :hcat, :b1, :b2), :BitMatrix),
            (:line, 1348, :none),
            (:for, (:(=), :m, (:(:), 1, (:call, :-, :v1, 1))), (:block,
                (:line, 1349, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :vcat, (:ref, :b1, (:(:), 1, :m)), (:ref, :b1, (:(:), (:call, :+, :m, 1), :end))), :BitVector)
              )),
            (:line, 1351, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :hcat, :b1, (:call, :trues, (:call, :+, :n1, 1)))),
            (:line, 1352, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :hcat, (:call, :hcat, :b1, :b2), (:call, :trues, (:call, :+, :n1, 1))))
          ), (:(=), :b1, (:call, :bitrand, :v1)), (:(=), :b2, (:call, :bitrand, :v1))),
        (:line, 1355, :none),
        (:let, (:block,
            (:line, 1356, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :hcat, :b1, :b2, :b3), :BitMatrix),
            (:line, 1357, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :vcat, :b1, :b4, :b3), :BitMatrix),
            (:line, 1358, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :vcat, :b1, :b4, (:call, :trues, :n1, (:call, :+, :n2, 1))))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2)), (:(=), :b2, (:call, :bitrand, :n1)), (:(=), :b3, (:call, :bitrand, :n1, :n2)), (:(=), :b4, (:call, :bitrand, 1, :n2))),
        (:line, 1361, :none),
        (:let, (:block,
            (:line, 1362, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 2, :b1, :b2), (:curly, :BitArray, 4)),
            (:line, 1363, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 4, :b1, :b3), (:curly, :BitArray, 4)),
            (:line, 1364, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 6, :b1, :b1), (:curly, :BitArray, 6))
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2, :s3, :s4)), (:(=), :b2, (:call, :bitrand, :s1, :s3, :s3, :s4)), (:(=), :b3, (:call, :bitrand, :s1, :s2, :s3, :s1))),
        (:line, 1367, :none),
        (:let, (:block,
            (:line, 1368, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 2, 0, :b1, 1, 1, :b1), (:curly, :Array, :Int, 3)),
            (:line, 1369, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 2, 3, :b1, 4, 5, :b1), (:curly, :Array, :Int, 3)),
            (:line, 1370, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :cat, 2, false, :b1, true, true, :b1), (:curly, :BitArray, 3))
          ), (:(=), :b1, (:call, :bitrand, 1, :v1, 1))),
        (:line, 1373, :none),
        (:let, (:block,
            (:line, 1374, :none),
            (:for, (:block,
                (:(=), :m1, (:(:), 1, (:call, :-, :n1, 1))),
                (:(=), :m2, (:(:), 1, (:call, :-, :n2, 1)))
              ), (:block,
                (:line, 1375, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:vcat, (:row, (:ref, :b1, (:(:), 1, :m1), (:(:), 1, :m2)), (:ref, :b1, (:(:), 1, :m1), (:(:), (:call, :+, :m2, 1), :end))), (:row, (:ref, :b1, (:(:), (:call, :+, :m1, 1), :end), (:(:), 1, :m2)), (:ref, :b1, (:(:), (:call, :+, :m1, 1), :end), (:(:), (:call, :+, :m2, 1), :end)))), :b1))
              ))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1379, :none),
        (:call, :timesofar, "cat"),
        (:line, 1383, :none),
        (:let, (:block,
            (:line, 1384, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :dot, :b1, :b2), :Int)
          ), (:(=), :b1, (:call, :bitrand, :v1)), (:(=), :b2, (:call, :bitrand, :v1))),
        (:line, 1387, :none),
        (:let, (:block,
            (:line, 1388, :none),
            (:for, (:(=), :k, (:(:), (:call, :-, :n1), :n2)), (:block,
                (:line, 1389, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :tril, :b1, :k), :BitMatrix),
                (:line, 1390, :none),
                (:macrocall, Symbol("@check_bit_operation"), (:call, :triu, :b1, :k), :BitMatrix)
              ))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1394, :none),
        (:for, (:block,
            (:(=), :sz, (:vect, (:tuple, :n1, :n1), (:tuple, :n1, :n2), (:tuple, :n2, :n1))),
            (:(=), (:tuple, :f, :isf), (:vect, (:tuple, :tril, :istril), (:tuple, :triu, :istriu)))
          ), (:block,
            (:line, 1395, :none),
            (:(=), :b1, (:call, :bitrand, (:..., :sz))),
            (:line, 1396, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :isf, :b1), :Bool),
            (:line, 1397, :none),
            (:(=), :b1, (:call, :f, (:call, :bitrand, (:..., :sz)))),
            (:line, 1398, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :isf, :b1), :Bool)
          )),
        (:line, 1401, :none),
        (:let, (:block,
            (:line, 1402, :none),
            (:|=, :b1, (:.', :b1)),
            (:line, 1403, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :issymmetric, :b1), :Bool),
            (:line, 1404, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :ishermitian, :b1), :Bool)
          ), (:(=), :b1, (:call, :bitrand, :n1, :n1))),
        (:line, 1407, :none),
        (:let, (:block,
            (:line, 1408, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :kron, :b1, :b2), :BitVector)
          ), (:(=), :b1, (:call, :bitrand, :n1)), (:(=), :b2, (:call, :bitrand, :n2))),
        (:line, 1411, :none),
        (:let, (:block,
            (:line, 1412, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :kron, :b1, :b2), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :s1, :s2)), (:(=), :b2, (:call, :bitrand, :s3, :s4))),
        (:line, 1415, :none),
        (:let, (:block,
            (:line, 1416, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :diff, :b1), (:curly, :Vector, :Int))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 1418, :none),
        (:let, (:block,
            (:line, 1419, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :diff, :b1), (:curly, :Matrix, :Int))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1422, :none),
        (:let, (:block,
            (:line, 1423, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :svd, :b1)),
            (:line, 1424, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :qr, :b1))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n1))),
        (:line, 1427, :none),
        (:let, (:block,
            (:line, 1428, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :gradient, :b1)),
            (:line, 1429, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :gradient, :b1, 1.0))
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 1432, :none),
        (:let, (:block,
            (:line, 1433, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :diagm, :b1), :BitMatrix)
          ), (:(=), :b1, (:call, :bitrand, :v1))),
        (:line, 1435, :none),
        (:let, (:block,
            (:line, 1436, :none),
            (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :diagm, :b1))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n2))),
        (:line, 1439, :none),
        (:let, (:block,
            (:line, 1440, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :diag, :b1))
          ), (:(=), :b1, (:call, :bitrand, :n1, :n1))),
        (:line, 1445, :none),
        (:let, (:block,
            (:line, 1446, :none),
            (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :findmax, :b1)),
            (:line, 1447, :none),
            (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :findmin, :b1))
          ), (:(=), :b1, (:call, :trues, 0))),
        (:line, 1450, :none),
        (:for, (:(=), :b1, (:vect, (:call, :falses, :v1), (:call, :trues, :v1), (:call, :BitArray, (:vect, 1, 0, 1, 1, 0)), (:call, :BitArray, (:vect, 0, 0, 1, 1, 0)), (:call, :bitrand, :v1))), (:block,
            (:line, 1454, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findmin, :b1)),
            (:line, 1455, :none),
            (:macrocall, Symbol("@check_bit_operation"), (:call, :findmax, :b1))
          )),
        (:line, 1458, :none),
        (:call, :timesofar, "linalg"),
        (:line, 1462, :none),
        (:let, (:block,
            (:line, 1463, :none),
            (:(=), (:ref, :b1, (:call, :+, (:call, :÷, :v1, 2), 1)), true),
            (:line, 1464, :none),
            (:(=), (:ref, :b1, :end), true),
            (:line, 1465, :none),
            (:try, (:block,
                (:line, 1466, :none),
                (:(=), :fname, (:call, :tempname)),
                (:line, 1467, :none),
                (:call, :open, (:->, (:tuple, :f), (:block,
                      (:line, 1468, :none),
                      (:call, :write, :f, :b1)
                    )), :fname, "w"),
                (:line, 1470, :none),
                (:(=), :b2, (:call, :falses, :v1)),
                (:line, 1471, :none),
                (:call, :read!, :fname, :b2),
                (:line, 1472, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1473, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b1, :b2)),
                (:line, 1474, :none),
                (:(=), :b2, (:call, :falses, (:call, :÷, :v1, 10), 10)),
                (:line, 1475, :none),
                (:call, :read!, :fname, :b2),
                (:line, 1476, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1477, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reshape, :b1, (:call, :÷, :v1, 10), 10), :b2)),
                (:line, 1478, :none),
                (:(=), :b2, (:call, :falses, (:call, :+, :v1, 65))),
                (:line, 1479, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1480, :none),
                (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :fname, :b2)),
                (:line, 1481, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1482, :none),
                (:(=), :b2, (:call, :falses, (:call, :÷, :v1, 2))),
                (:line, 1483, :none),
                (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :read!, :fname, :b2)),
                (:line, 1484, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1485, :none),
                (:(=), :b2, (:call, :falses, (:call, :-, :v1, 1))),
                (:line, 1486, :none),
                (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :read!, :fname, :b2)),
                (:line, 1487, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1489, :none),
                (:(=), :b1, (:call, :BitArray, 0)),
                (:line, 1490, :none),
                (:call, :open, (:->, (:tuple, :f), (:block,
                      (:line, 1491, :none),
                      (:call, :write, :f, :b1)
                    )), :fname, "w"),
                (:line, 1493, :none),
                (:(=), :b2, (:call, :BitArray, 0)),
                (:line, 1494, :none),
                (:call, :read!, :fname, :b2),
                (:line, 1495, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :b1, :b2)),
                (:line, 1496, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2)),
                (:line, 1497, :none),
                (:(=), :b2, (:call, :trues, 1)),
                (:line, 1498, :none),
                (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :fname, :b2)),
                (:line, 1499, :none),
                (:macrocall, Symbol("@test"), (:call, :bitcheck, :b2))
              ), false, false, (:block,
                (:line, 1501, :none),
                (:&&, (:call, :isfile, :fname), (:call, :rm, :fname))
              ))
          ), (:(=), :b1, (:call, :bitrand, :v1)), (:(=), :fname, "")),
        (:line, 1505, :none),
        (:call, :timesofar, "I/O")
      ))
  ))