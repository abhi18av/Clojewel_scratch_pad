(:quote, (:block,
    (:line, 32, :none),
    (:(=), :testCases, (:vcat, (:row, -1.5707963267948966, 4.71238898038469), (:row, 1.5707963267948966, 1.5707963267948966), (:row, -3.141592653589793, 3.1415926535897936), (:row, 3.141592653589793, 3.141592653589793), (:row, 6.283185307179586, 6.283185307179586), (:row, -6.283185307179586, 2.4492935982947064e-16), (:row, 45.553093477052, 1.5707963267948966), (:row, 3.14159265359, 3.14159265359), (:row, -3.14159265359, 3.1415926535895866), (:row, -3.9269808169872418, 2.356204490192345), (:row, -3.73063127613788, 2.5525540310417068), (:row, -3.5342817352885176, 2.748903571891069), (:row, -3.337932194439156, 2.945253112740431), (:row, -3.1415826535897935, 3.141602653589793), (:row, -2.9452331127404316, 3.337952194439155), (:row, -2.7488835718910694, 3.5343017352885173), (:row, -2.5525340310417075, 3.730651276137879), (:row, -2.356184490192345, 3.9270008169872415), (:row, -2.1598349493429834, 4.123350357836603), (:row, -1.9634854084936209, 4.319699898685966), (:row, -1.7671358676442588, 4.516049439535328), (:row, -1.5707863267948967, 4.71239898038469), (:row, -1.3744367859455346, 4.908748521234052), (:row, -1.1780872450961726, 5.105098062083414), (:row, -0.9817377042468104, 5.301447602932776), (:row, -0.7853881633974483, 5.4977971437821385), (:row, -0.5890386225480863, 5.6941466846315), (:row, -0.3926890816987242, 5.890496225480862), (:row, -0.1963395408493621, 6.0868457663302244), (:row, 1.0e-5, 1.0e-5), (:row, 0.19635954084936205, 0.19635954084936205), (:row, 0.3927090816987241, 0.3927090816987241), (:row, 0.5890586225480862, 0.5890586225480862), (:row, 0.7854081633974482, 0.7854081633974482), (:row, 0.9817577042468103, 0.9817577042468103), (:row, 1.1781072450961723, 1.1781072450961723), (:row, 1.3744567859455343, 1.3744567859455343), (:row, 1.5708063267948964, 1.5708063267948964), (:row, 1.7671558676442585, 1.7671558676442585), (:row, 1.9635054084936205, 1.9635054084936205), (:row, 2.159854949342982, 2.159854949342982), (:row, 2.3562044901923445, 2.3562044901923445), (:row, 2.5525540310417063, 2.5525540310417063), (:row, 2.7489035718910686, 2.7489035718910686), (:row, 2.9452531127404304, 2.9452531127404304), (:row, 3.1416026535897927, 3.1416026535897927), (:row, 3.3379521944391546, 3.3379521944391546), (:row, 3.534301735288517, 3.534301735288517), (:row, 3.7306512761378787, 3.7306512761378787), (:row, 3.927000816987241, 3.927000816987241), (:row, -3.9270008169872415, 2.356184490192345), (:row, -3.7306512761378796, 2.552534031041707), (:row, -3.5343017352885173, 2.7488835718910694), (:row, -3.3379521944391555, 2.945233112740431), (:row, -3.141602653589793, 3.1415826535897935), (:row, -2.9452531127404313, 3.3379321944391553), (:row, -2.748903571891069, 3.5342817352885176), (:row, -2.552554031041707, 3.7306312761378795), (:row, -2.356204490192345, 3.9269808169872418), (:row, -2.159854949342983, 4.123330357836603), (:row, -1.9635054084936208, 4.3196798986859655), (:row, -1.7671558676442587, 4.516029439535328), (:row, -1.5708063267948966, 4.71237898038469), (:row, -1.3744567859455346, 4.908728521234052), (:row, -1.1781072450961725, 5.105078062083414), (:row, -0.9817577042468104, 5.301427602932776), (:row, -0.7854081633974483, 5.497777143782138), (:row, -0.5890586225480863, 5.694126684631501), (:row, -0.39270908169872415, 5.890476225480862), (:row, -0.19635954084936208, 6.086825766330224), (:row, -1.0e-5, 6.283175307179587), (:row, 0.19633954084936206, 0.19633954084936206), (:row, 0.39268908169872413, 0.39268908169872413), (:row, 0.5890386225480861, 0.5890386225480861), (:row, 0.7853881633974482, 0.7853881633974482), (:row, 0.9817377042468103, 0.9817377042468103), (:row, 1.1780872450961724, 1.1780872450961724), (:row, 1.3744367859455344, 1.3744367859455344), (:row, 1.5707863267948965, 1.5707863267948965), (:row, 1.7671358676442586, 1.7671358676442586), (:row, 1.9634854084936206, 1.9634854084936206), (:row, 2.1598349493429825, 2.1598349493429825), (:row, 2.3561844901923448, 2.3561844901923448), (:row, 2.5525340310417066, 2.5525340310417066), (:row, 2.748883571891069, 2.748883571891069), (:row, 2.9452331127404308, 2.9452331127404308), (:row, 3.141582653589793, 3.141582653589793), (:row, 3.337932194439155, 3.337932194439155), (:row, 3.534281735288517, 3.534281735288517), (:row, 3.730631276137879, 3.730631276137879), (:row, 3.9269808169872413, 3.9269808169872413), (:row, 22.0, 3.1504440784612404), (:row, 333.0, 6.2743640266615035), (:row, 355.0, 3.1416227979431572), (:row, 103993.0, 6.283166177843807), (:row, 104348.0, 3.141603668607378), (:row, 208341.0, 3.141584539271598), (:row, 312689.0, 2.9006993893361787e-6), (:row, 833719.0, 3.1415903406703767), (:row, 1.146408e6, 3.1415932413697663), (:row, 4.272943e6, 6.283184757600089), (:row, 5.419351e6, 3.1415926917902683), (:row, 8.0143857e7, 6.283185292406739), (:row, 1.65707065e8, 3.1415926622445745), (:row, 2.45850922e8, 3.141592647471728), (:row, 4.11557987e8, 2.5367160519636766e-9), (:row, 1.068966896e9, 3.14159265254516), (:row, 2.549491779e9, 4.474494938161497e-10), (:row, 6.167950454e9, 3.141592653440059), (:row, 1.4885392687e10, 1.4798091093322177e-10), (:row, 2.1053343141e10, 3.14159265358804), (:row, 1.783366216531e12, 6.969482408757582e-13), (:row, 3.587785776203e12, 3.141592653589434), (:row, 5.371151992734e12, 3.1415926535901306), (:row, 8.958937768937e12, 6.283185307179564), (:row, 1.39755218526789e14, 3.1415926535898), (:row, 4.28224593349304e14, 3.1415926535897927), (:row, 5.706674932067741e15, 4.237546464512562e-16), (:row, 6.134899525417045e15, 3.141592653589793))),
    (:line, 154, :none),
    (:function, (:call, :testModPi), (:block,
        (:line, 155, :none),
        (:(=), :numTestCases, (:call, :size, :testCases, 1)),
        (:line, 156, :none),
        (:(=), :modFns, (:vect, :mod2pi)),
        (:line, 157, :none),
        (:(=), :xDivisors, (:vect, (:call, :*, 2, :pi))),
        (:line, 158, :none),
        (:(=), (:tuple, :errsNew, :errsOld), (:tuple, (:call, (:curly, :Array, :Float64), 0), (:call, (:curly, :Array, :Float64), 0))),
        (:line, 159, :none),
        (:for, (:(=), :rowIdx, (:(:), 1, :numTestCases)), (:block,
            (:line, 160, :none),
            (:(=), :xExact, (:ref, :testCases, :rowIdx, 1)),
            (:line, 161, :none),
            (:for, (:(=), :colIdx, (:(:), 1, 1)), (:block,
                (:line, 162, :none),
                (:(=), :xSoln, (:ref, :testCases, :rowIdx, (:call, :+, :colIdx, 1))),
                (:line, 163, :none),
                (:(=), :xDivisor, (:ref, :xDivisors, :colIdx)),
                (:line, 164, :none),
                (:(=), :modFn, (:ref, :modFns, :colIdx)),
                (:line, 167, :none),
                (:(=), :xNew, (:call, :modFn, :xExact)),
                (:line, 168, :none),
                (:(=), :xOld, (:call, :mod, :xExact, :xDivisor)),
                (:line, 170, :none),
                (:(=), :newDiff, (:call, :abs, (:call, :-, :xNew, :xSoln))),
                (:line, 171, :none),
                (:(=), :oldDiff, (:call, :abs, (:call, :-, :xOld, :xSoln))),
                (:line, 172, :none),
                (:(=), :oldDiff, (:call, :min, :oldDiff, (:call, :abs, (:call, :-, :xDivisor, :oldDiff)))),
                (:line, 176, :none),
                (:call, :push!, :errsNew, (:call, :abs, :newDiff)),
                (:line, 177, :none),
                (:call, :push!, :errsOld, (:call, :abs, :oldDiff))
              ))
          )),
        (:line, 180, :none),
        (:call, :sort!, :errsNew),
        (:line, 181, :none),
        (:call, :sort!, :errsOld),
        (:line, 182, :none),
        (:(=), :totalErrNew, (:call, :sum, :errsNew)),
        (:line, 183, :none),
        (:(=), :totalErrOld, (:call, :sum, :errsOld)),
        (:line, 184, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :totalErrNew, 0.0))
      )),
    (:line, 186, :none),
    (:call, :testModPi),
    (:line, 189, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, 10), (:call, :mod, 10, (:call, :*, 2, :pi)))),
    (:line, 190, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, -10), (:call, :mod, -10, (:call, :*, 2, :pi)))),
    (:line, 191, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, 355), 3.1416227979431572)),
    (:line, 192, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, (:call, :Int32, 355)), 3.1416227979431572)),
    (:line, 193, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, 355.0), 3.1416227979431572)),
    (:line, 194, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :mod2pi, 355.0f0), 3.1416228f0)),
    (:line, 195, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mod2pi, (:call, :^, (:call, :Int64, 2), 60)), (:call, :mod2pi, (:call, :^, 2.0, 60)))),
    (:line, 196, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mod2pi, (:call, :-, (:call, :^, (:call, :Int64, 2), 60), 1)))
  ))