(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "127.0.0.1"), (:call, :IPv4, 127, 0, 0, 1))),
    (:line, 4, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "192.0"), (:call, :IPv4, 192, 0, 0, 0))),
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "192.0xFFF"), (:call, :IPv4, 192, 0, 15, 255))),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "192.0xFFFF"), (:call, :IPv4, 192, 0, 255, 255))),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "192.0xFFFFF"), (:call, :IPv4, 192, 15, 255, 255))),
    (:line, 8, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "192.0xFFFFFF"), (:call, :IPv4, 192, 255, 255, 255))),
    (:line, 9, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "022.0.0.1"), (:call, :IPv4, 18, 0, 0, 1))),
    (:line, 11, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :UInt, (:call, :IPv4, 0x01020304)), 0x01020304)),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :Int, (:call, :IPv4, "1.2.3.4")), :(==), (:call, :Int, 0x01020304), :(==), (:call, :Int32, 0x01020304))),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :Int128, (:call, :IPv6, "2001:1::2")), (:macrocall, Symbol("@int128_str"), "42540488241204005274814694018844196866"))),
    (:line, 14, :none),
    (:macrocall, Symbol("@test_throws"), :InexactError, (:call, :Int16, (:call, :IPv4, "1.2.3.4"))),
    (:line, 15, :none),
    (:macrocall, Symbol("@test_throws"), :InexactError, (:call, :Int64, (:call, :IPv6, "2001:1::2"))),
    (:line, 17, :none),
    (:let, (:block,
        (:line, 18, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :ipv, :IPv4)),
        (:line, 19, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :ipv, (:macrocall, Symbol("@ip_str"), "127.0.0.1")))
      ), (:(=), :ipv, (:call, :parse, :IPAddr, "127.0.0.1"))),
    (:line, 22, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :parse, :IPv4, "192.0xFFFFFFF")),
    (:line, 23, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :IPv4, 192, 255, 255, -1)),
    (:line, 24, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :IPv4, 192, 255, 255, 256)),
    (:line, 26, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :parse, :IPv4, "192.0xFFFFFFFFF")),
    (:line, 27, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :parse, :IPv4, "192.")),
    (:line, 29, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "::1"), (:call, :IPv6, 1))),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "2605:2700:0:3::4713:93e3"), (:call, :IPv6, (:call, :parse, :UInt128, "260527000000000300000000471393e3", 16)))),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:macrocall, Symbol("@ip_str"), "2001:db8:0:0:0:0:2:1"), :(==), (:macrocall, Symbol("@ip_str"), "2001:db8::2:1"), :(==), (:macrocall, Symbol("@ip_str"), "2001:db8::0:2:1"))),
    (:line, 34, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@ip_str"), "0:0:0:0:0:ffff:127.0.0.1"), (:call, :IPv6, 0x0000ffff7f000001))),
    (:line, 36, :none),
    (:let, (:block,
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :ipv, :IPv6)),
        (:line, 38, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :ipv, (:macrocall, Symbol("@ip_str"), "0:0:0:0:0:ffff:127.0.0.1")))
      ), (:(=), :ipv, (:call, :parse, :IPAddr, "0:0:0:0:0:ffff:127.0.0.1"))),
    (:line, 41, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :IPv6, 1, 1, 1, 1, 1, 1, 1, -1)),
    (:line, 42, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :IPv6, 1, 1, 1, 1, 1, 1, 1, (:call, :+, (:call, :typemax, :UInt16), 1))),
    (:line, 45, :none),
    (:let, (:block,
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :inet, (:quote, #QuoteNode
                :host
              )), (:macrocall, Symbol("@ip_str"), "127.0.0.1"))),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :inet, (:quote, #QuoteNode
                :port
              )), 1024))
      ), (:(=), :inet, (:call, (:., :Base, (:quote, #QuoteNode
              :InetAddr
            )), (:call, :IPv4, 127, 0, 0, 1), 1024))),
    (:line, 50, :none),
    (:macrocall, Symbol("@test_throws"), :InexactError, (:call, (:., :Base, (:quote, #QuoteNode
            :InetAddr
          )), (:call, :IPv4, 127, 0, 0, 1), -1)),
    (:line, 51, :none),
    (:macrocall, Symbol("@test_throws"), :InexactError, (:call, (:., :Base, (:quote, #QuoteNode
            :InetAddr
          )), (:call, :IPv4, 127, 0, 0, 1), (:call, :+, (:call, :typemax, :UInt16), 1))),
    (:line, 54, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:macrocall, Symbol("@ip_str"), "1.2.3.4"), :<, (:macrocall, Symbol("@ip_str"), "1.2.3.7"), :<, (:macrocall, Symbol("@ip_str"), "2.3.4.5"))),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:macrocall, Symbol("@ip_str"), "1.2.3.4"), :(>=), (:macrocall, Symbol("@ip_str"), "1.2.3.4"), :(>=), (:macrocall, Symbol("@ip_str"), "1.2.3.1"))),
    (:line, 56, :none),
    (:macrocall, Symbol("@test"), (:call, :isless, (:macrocall, Symbol("@ip_str"), "1.2.3.4"), (:macrocall, Symbol("@ip_str"), "1.2.3.5"))),
    (:line, 57, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:ref, :sort, (:macrocall, Symbol("@ip_str"), "2.3.4.5"), (:macrocall, Symbol("@ip_str"), "1.2.3.4"), (:macrocall, Symbol("@ip_str"), "2001:1:2::1"))),
    (:line, 61, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:macrocall, Symbol("@ip_str"), "2001:db8:0:0:0:0:2:1")), "ip\"2001:db8::2:1\"")),
    (:line, 62, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:macrocall, Symbol("@ip_str"), "2001:0db8::0001")), "ip\"2001:db8::1\"")),
    (:line, 63, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:macrocall, Symbol("@ip_str"), "2001:db8::1:1:1:1:1")), "ip\"2001:db8:0:1:1:1:1:1\"")),
    (:line, 64, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:macrocall, Symbol("@ip_str"), "2001:db8:0:0:1:0:0:1")), "ip\"2001:db8::1:0:0:1\"")),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:macrocall, Symbol("@ip_str"), "2001:0:0:1:0:0:0:1")), "ip\"2001:0:0:1::1\"")),
    (:line, 68, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:call, :UDPSocket)), "UDPSocket(init)")),
    (:line, 70, :none),
    (:(=), :port, (:call, :Channel, 1)),
    (:line, 71, :none),
    (:(=), :defaultport, (:call, :rand, (:(:), 2000, 4000))),
    (:line, 72, :none),
    (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
          (:line, 73, :none),
          (:(=), (:tuple, :p, :s), (:call, :listenany, :defaultport)),
          (:line, 74, :none),
          (:call, :put!, :port, :p),
          (:line, 75, :none),
          (:(=), :sock, (:call, :accept, :s)),
          (:line, 77, :none),
          (:call, :write, :sock, "Hello World\n"),
          (:line, 80, :none),
          (:macrocall, Symbol("@sync"), (:block,
              (:line, 81, :none),
              (:for, (:(=), :i, (:(:), 1, 100)), (:block,
                  (:line, 82, :none),
                  (:macrocall, Symbol("@async"), (:call, :println, :sock, "a", 1))
                ))
            )),
          (:line, 85, :none),
          (:call, :close, :s),
          (:line, 86, :none),
          (:call, :close, :sock)
        ))),
    (:line, 88, :none),
    (:call, :wait, :port),
    (:line, 89, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:call, :connect, (:call, :fetch, :port))), (:call, :*, "Hello World\n", (:call, :^, "a1\n", 100)))),
    (:line, 90, :none),
    (:call, :wait, :tsk),
    (:line, 92, :none),
    (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
          (:line, 93, :none),
          (:(=), :socketname, (:if, (:call, :is_windows), (:call, :*, "\\\\.\\pipe\\uv-test-", (:call, :randstring, 6)), (:call, :joinpath, :tmpdir, "socket"))),
          (:line, 94, :none),
          (:(=), :c, (:call, (:., :Base, (:quote, #QuoteNode
                  :Condition
                )))),
          (:line, 95, :none),
          (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
                (:line, 96, :none),
                (:(=), :s, (:call, :listen, :socketname)),
                (:line, 97, :none),
                (:call, (:., :Base, (:quote, #QuoteNode
                      :notify
                    )), :c),
                (:line, 98, :none),
                (:(=), :sock, (:call, :accept, :s)),
                (:line, 99, :none),
                (:call, :write, :sock, "Hello World\n"),
                (:line, 100, :none),
                (:call, :close, :s),
                (:line, 101, :none),
                (:call, :close, :sock)
              ))),
          (:line, 103, :none),
          (:call, :wait, :c),
          (:line, 104, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:call, :connect, :socketname)), "Hello World\n")),
          (:line, 105, :none),
          (:call, :wait, :tsk)
        ))),
    (:line, 108, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :DNSError
        )), (:call, :getaddrinfo, ".invalid")),
    (:line, 109, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :getaddrinfo, "localhost\0")),
    (:line, 110, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :connect, "localhost", 21452)),
    (:line, 113, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :connect, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), -1)),
    (:line, 114, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :connect, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), (:call, :+, (:call, :typemax, :UInt16), 1))),
    (:line, 115, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :connect, (:macrocall, Symbol("@ip_str"), "0:0:0:0:0:ffff:127.0.0.1"), -1)),
    (:line, 116, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :connect, (:macrocall, Symbol("@ip_str"), "0:0:0:0:0:ffff:127.0.0.1"), (:call, :+, (:call, :typemax, :UInt16), 1))),
    (:line, 118, :none),
    (:(=), (:tuple, :p, :server), (:call, :listenany, :defaultport)),
    (:line, 119, :none),
    (:(=), :r, (:call, :Channel, 1)),
    (:line, 120, :none),
    (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
          (:line, 121, :none),
          (:call, :put!, :r, (:quote, #QuoteNode
              :start
            )),
          (:line, 122, :none),
          (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                :UVError
              )), (:call, :accept, :server))
        ))),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :fetch, :r), (:quote, #QuoteNode
          :start
        ))),
    (:line, 125, :none),
    (:call, :close, :server),
    (:line, 126, :none),
    (:call, :wait, :tsk),
    (:line, 128, :none),
    (:(=), (:tuple, :port, :server), (:call, :listenany, :defaultport)),
    (:line, 129, :none),
    (:macrocall, Symbol("@async"), (:call, :connect, "localhost", :port)),
    (:line, 130, :none),
    (:(=), :s1, (:call, :accept, :server)),
    (:line, 131, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :accept, :server, :s1)),
    (:line, 132, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :listen, :port)),
    (:line, 133, :none),
    (:(=), (:tuple, :port2, :server2), (:call, :listenany, :port)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(!=), :port, :port2)),
    (:line, 135, :none),
    (:call, :close, :server),
    (:line, 136, :none),
    (:call, :close, :server2),
    (:line, 138, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :DNSError
        )), (:call, :connect, ".invalid", 80)),
    (:line, 140, :none),
    (:block,
      (:line, 141, :none),
      (:(=), :a, (:call, :UDPSocket)),
      (:line, 142, :none),
      (:(=), :b, (:call, :UDPSocket)),
      (:line, 143, :none),
      (:call, :bind, :a, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), :port),
      (:line, 144, :none),
      (:call, :bind, :b, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), (:call, :+, :port, 1)),
      (:line, 146, :none),
      (:(=), :c, (:call, :Condition)),
      (:line, 147, :none),
      (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
            (:line, 148, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :recv, :a)), "Hello World")),
            (:line, 150, :none),
            (:(=), :tsk2, (:macrocall, Symbol("@async"), (:block,
                  (:line, 151, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :recv, :a)), "Hello World")),
                  (:line, 152, :none),
                  (:call, :notify, :c)
                ))),
            (:line, 154, :none),
            (:call, :send, :b, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), :port, "Hello World"),
            (:line, 155, :none),
            (:call, :wait, :tsk2)
          ))),
      (:line, 157, :none),
      (:call, :send, :b, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), :port, "Hello World"),
      (:line, 158, :none),
      (:call, :wait, :c),
      (:line, 159, :none),
      (:call, :wait, :tsk),
      (:line, 161, :none),
      (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
            (:line, 162, :none),
            (:macrocall, Symbol("@test"), (:block,
                (:line, 163, :none),
                (:(=), (:tuple, :addr, :data), (:call, :recvfrom, :a)),
                (:line, 164, :none),
                (:&&, (:call, :(==), :addr, (:macrocall, Symbol("@ip_str"), "127.0.0.1")), (:call, :(==), (:call, :String, :data), "Hello World"))
              ))
          ))),
      (:line, 167, :none),
      (:call, :send, :b, (:macrocall, Symbol("@ip_str"), "127.0.0.1"), :port, "Hello World"),
      (:line, 168, :none),
      (:call, :wait, :tsk),
      (:line, 170, :none),
      (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :bind, (:call, :UDPSocket), :port)),
      (:line, 172, :none),
      (:call, :close, :a),
      (:line, 173, :none),
      (:call, :close, :b)
    ),
    (:line, 175, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 176, :none),
        (:(=), :a, (:call, :UDPSocket)),
        (:line, 177, :none),
        (:(=), :b, (:call, :UDPSocket)),
        (:line, 178, :none),
        (:call, :bind, :a, (:macrocall, Symbol("@ip_str"), "::1"), (:call, :UInt16, :port)),
        (:line, 179, :none),
        (:call, :bind, :b, (:macrocall, Symbol("@ip_str"), "::1"), (:call, :UInt16, (:call, :+, :port, 1))),
        (:line, 181, :none),
        (:(=), :tsk, (:macrocall, Symbol("@async"), (:block,
              (:line, 182, :none),
              (:macrocall, Symbol("@test"), (:block,
                  (:line, 183, :none),
                  (:(=), (:tuple, :addr, :data), (:call, :recvfrom, :a)),
                  (:line, 184, :none),
                  (:&&, (:call, :(==), :addr, (:macrocall, Symbol("@ip_str"), "::1")), (:call, :(==), (:call, :String, :data), "Hello World"))
                ))
            ))),
        (:line, 187, :none),
        (:call, :send, :b, (:macrocall, Symbol("@ip_str"), "::1"), :port, "Hello World"),
        (:line, 188, :none),
        (:call, :wait, :tsk)
      )),
    (:line, 191, :none),
    (:block,
      (:line, 192, :none),
      (:(=), :default_port, (:call, :UInt16, 11011)),
      (:line, 193, :none),
      (:(=), :default_addr, (:call, :IPv4, "127.0.0.1")),
      (:line, 195, :none),
      (:(=), :sock, (:call, (:., :Base, (:quote, #QuoteNode
              :TCPServer
            )))),
      (:line, 196, :none),
      (:call, :bind, :sock, (:call, (:., :Base, (:quote, #QuoteNode
              :InetAddr
            )), :default_addr, :default_port)),
      (:line, 197, :none),
      (:call, :listen, :sock),
      (:line, 199, :none),
      (:(=), (:tuple, :new_addr, :new_port), (:call, :getsockname, :sock)),
      (:line, 201, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :default_addr, :new_addr)),
      (:line, 202, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :default_port, :new_port)),
      (:line, 203, :none),
      (:call, :close, :sock)
    ),
    (:line, 206, :none),
    (:block,
      (:line, 207, :none),
      (:(=), :default_port, (:call, :UInt16, 21011)),
      (:line, 208, :none),
      (:(=), :default_addr, (:call, :IPv6, "::1")),
      (:line, 210, :none),
      (:(=), :sock, (:call, (:., :Base, (:quote, #QuoteNode
              :TCPServer
            )))),
      (:line, 211, :none),
      (:(=), :addr, (:call, (:., :Base, (:quote, #QuoteNode
              :InetAddr
            )), :default_addr, :default_port)),
      (:line, 212, :none),
      (:call, :bind, :sock, :addr),
      (:line, 213, :none),
      (:call, :listen, :sock),
      (:line, 215, :none),
      (:(=), (:tuple, :new_addr, :new_port), (:call, :getsockname, :sock)),
      (:line, 217, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :default_addr, :new_addr)),
      (:line, 218, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :default_port, :new_port)),
      (:line, 219, :none),
      (:call, :close, :sock)
    ),
    (:line, 222, :none),
    (:block,
      (:line, 223, :none),
      (:(=), :default_port, (:call, :UInt16, 11011)),
      (:line, 224, :none),
      (:(=), :default_addr, (:call, :getipaddr)),
      (:line, 226, :none),
      (:(=), :sock, (:call, (:., :Base, (:quote, #QuoteNode
              :TCPServer
            )))),
      (:line, 227, :none),
      (:call, :bind, :sock, (:call, (:., :Base, (:quote, #QuoteNode
              :InetAddr
            )), :default_addr, :default_port)),
      (:line, 228, :none),
      (:call, :listen, :sock),
      (:line, 230, :none),
      (:macrocall, Symbol("@async"), (:block,
          (:line, 231, :none),
          (:call, :sleep, 1),
          (:line, 232, :none),
          (:(=), :ssock, (:call, :connect, :default_addr, :default_port))
        )),
      (:line, 235, :none),
      (:(=), :csock, (:call, :accept, :sock)),
      (:line, 236, :none),
      (:(=), (:tuple, :new_addr, :new_port), (:call, :getsockname, :csock)),
      (:line, 238, :none),
      (:macrocall, Symbol("@test"), (:call, :(==), :default_addr, :new_addr)),
      (:line, 239, :none),
      (:macrocall, Symbol("@test"), (:call, :>, :new_port, 0)),
      (:line, 240, :none),
      (:call, :close, :csock),
      (:line, 241, :none),
      (:call, :close, :sock)
    ),
    (:line, 245, :none),
    (:let, (:block,
        (:line, 247, :none),
        (:(=), :bcastdst, (:if, (:call, :is_apple), (:macrocall, Symbol("@ip_str"), "255.255.255.255"), (:macrocall, Symbol("@ip_str"), "127.255.255.255"))),
        (:line, 249, :none),
        (:function, (:call, :create_socket), (:block,
            (:line, 250, :none),
            (:(=), :s, (:call, :UDPSocket)),
            (:line, 251, :none),
            (:call, :bind, :s, (:macrocall, Symbol("@ip_str"), "0.0.0.0"), 2000, (:kw, :reuseaddr, true), (:kw, :enable_broadcast, true)),
            (:line, 252, :none),
            :s
          )),
        (:line, 254, :none),
        (:(=), (:tuple, :a, :b, :c), (:comprehension, (:generator, (:call, :create_socket), (:(=), :i, (:(:), 1, 3))))),
        (:line, 255, :none),
        (:try, (:block,
            (:line, 256, :none),
            (:macrocall, Symbol("@sync"), (:block,
                (:line, 257, :none),
                (:call, :send, :c, :bcastdst, 2000, "hello"),
                (:line, 258, :none),
                (:(=), :recvs, (:comprehension, (:generator, (:macrocall, Symbol("@async"), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :recv, :s)), "hello"))), (:(=), :s, (:tuple, :a, :b))))),
                (:line, 259, :none),
                (:call, :map, :wait, :recvs)
              ))
          ), :e, (:block,
            (:line, 262, :none),
            (:if, (:&&, (:call, :isa, :e, (:., :Base, (:quote, #QuoteNode
                      :UVError
                    ))), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
                        :uverrorname
                      )), :e), "EPERM")), (:block,
                (:line, 263, :none),
                (:call, :warn, "UDP broadcast test skipped (permission denied upon send, restrictive firewall?)")
              ), (:block,
                (:line, 265, :none),
                (:call, :rethrow)
              ))
          )),
        (:line, 268, :none),
        (:comprehension, (:generator, (:call, :close, :s), (:(=), :s, (:vect, :a, :b, :c))))
      )),
    (:line, 271, :none),
    (:let, (:block,
        (:line, 272, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :link_pipe
            )), :P),
        (:line, 273, :none),
        (:call, :write, :P, "hello"),
        (:line, 274, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :nb_available, :P), 0)),
        (:line, 275, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :P))),
        (:line, 276, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :read, :P, :Char), 'h')),
        (:line, 277, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :P))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :read, :P, :Char), 'e')),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :isopen, :P)),
        (:line, 280, :none),
        (:(=), :t, (:macrocall, Symbol("@async"), (:block,
              (:line, 282, :none),
              (:call, :write, :P, "w"),
              (:line, 283, :none),
              (:while, (:call, :(!=), (:., (:., :P, (:quote, #QuoteNode
                        :out
                      )), (:quote, #QuoteNode
                      :status
                    )), (:., :Base, (:quote, #QuoteNode
                      :StatusOpen
                    ))), (:block,
                  (:line, 284, :none),
                  (:call, :yield)
                )),
              (:line, 286, :none),
              (:call, :close, (:., :P, (:quote, #QuoteNode
                    :in
                  )))
            ))),
        (:line, 293, :none),
        (:||, (:call, :is_windows), (:call, :wait, :t)),
        (:line, 294, :none),
        (:macrocall, Symbol("@test"), (:call, :isopen, :P)),
        (:line, 295, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :P))),
        (:line, 296, :none),
        (:macrocall, Symbol("@test"), (:call, :isopen, :P)),
        (:line, 297, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, :P, 'w'), "llow")),
        (:line, 298, :none),
        (:&&, (:call, :is_windows), (:call, :wait, :t)),
        (:line, 299, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :P)),
        (:line, 300, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isopen, :P))),
        (:line, 301, :none),
        (:call, :close, :P),
        (:line, 302, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isopen, :P))),
        (:line, 303, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :P))
      ), (:(=), :P, (:call, :Pipe))),
    (:line, 307, :none),
    (:let, (:block,
        (:line, 308, :none),
        (:(=), :addr, (:call, (:., :Base, (:quote, #QuoteNode
                :InetAddr
              )), (:macrocall, Symbol("@ip_str"), "127.0.0.1"), 4444)),
        (:line, 310, :none),
        (:function, (:call, :test_connect, (:(::), :addr, (:., :Base, (:quote, #QuoteNode
                  :InetAddr
                )))), (:block,
            (:line, 311, :none),
            (:(=), :srv, (:call, :listen, :addr)),
            (:line, 313, :none),
            (:macrocall, Symbol("@async"), (:try, (:block,
                  (:line, 313, :none),
                  (:(=), :c, (:call, :accept, :srv)),
                  (:line, 313, :none),
                  (:call, :close, :c)
                ), false, (:block,))),
            (:line, 314, :none),
            (:call, :yield),
            (:line, 316, :none),
            (:(=), :t0, (:call, :TCPSocket)),
            (:line, 317, :none),
            (:(=), :t, :t0),
            (:line, 318, :none),
            (:macrocall, Symbol("@assert"), (:call, :is, :t, :t0)),
            (:line, 320, :none),
            (:try, (:block,
                (:line, 321, :none),
                (:(=), :t, (:call, :connect, :addr))
              ), false, false, (:block,
                (:line, 323, :none),
                (:call, :close, :srv)
              )),
            (:line, 326, :none),
            (:(=), :test, (:call, :!, (:call, :is, :t, :t0))),
            (:line, 327, :none),
            (:call, :close, :t),
            (:line, 329, :none),
            (:return, :test)
          )),
        (:line, 332, :none),
        (:macrocall, Symbol("@test"), (:call, :test_connect, :addr))
      ))
  ))