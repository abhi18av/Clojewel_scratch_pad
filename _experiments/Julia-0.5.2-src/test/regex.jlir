(:quote, (:block,
    (:line, 3, :none),
    (:function, (:call, :collect_eachmatch, :re, :str, (:kw, :overlap, false)), (:block,
        (:line, 4, :none),
        (:comprehension, (:generator, (:., :m, (:quote, #QuoteNode
                :match
              )), (:(=), :m, (:call, :collect, (:call, :eachmatch, :re, :str, :overlap)))))
      )),
    (:line, 7, :none),
    (:for, (:(=), :f, (:vect, :matchall, :collect_eachmatch)), (:block,
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :f, (:macrocall, Symbol("@r_str"), "a?b?"), "asbd"), :(==), (:vect, "a", "", "b", "", ""), :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "a?b?"), "asbd"))),
        (:line, 9, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "a?b?"), "asbd", true), (:vect, "a", "", "b", "", ""))),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "\\w+"), "hello", true), (:vect, "hello", "ello", "llo", "lo", "o"))),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), ".\\s"), "x ∀ x ∃ y"), (:vect, "x ", "∀ ", "x ", "∃ "))),
        (:line, 12, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "(\\w+)(\\s*)"), "The dark side of the moon"), (:vect, "The ", "dark ", "side ", "of ", "the ", "moon"))),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), ""), ""), (:vect, ""))),
        (:line, 15, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), ""), "", true), (:vect, ""))),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "aa"), "aaaa"), (:vect, "aa", "aa"))),
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "aa"), "aaaa", true), (:vect, "aa", "aa", "aa"))),
        (:line, 18, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), ""), "aaa"), (:vect, "", "", "", ""))),
        (:line, 19, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), ""), "aaa", true), (:vect, "", "", "", ""))),
        (:line, 20, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "GCG"), "GCGCG"), (:vect, "GCG"))),
        (:line, 21, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:macrocall, Symbol("@r_str"), "GCG"), "GCGCG", true), (:vect, "GCG", "GCG")))
      )),
    (:line, 25, :none),
    (:(=), :target, "71.163.72.113 - - [30/Jul/2014:16:40:55 -0700] \"GET emptymind.org/thevacantwall/wp-content/uploads/2013/02/DSC_006421.jpg HTTP/1.1\" 200 492513 \"http://images.search.yahoo.com/images/view;_ylt=AwrB8py9gdlTGEwADcSjzbkF;_ylu=X3oDMTI2cGZrZTA5BHNlYwNmcC1leHAEc2xrA2V4cARvaWQDNTA3NTRiMzYzY2E5OTEwNjBiMjc2YWJhMjkxMTEzY2MEZ3BvcwM0BGl0A2Jpbmc-?back=http%3A%2F%2Fus.yhs4.search.yahoo.com%2Fyhs%2Fsearch%3Fei%3DUTF-8%26p%3Dapartheid%2Bwall%2Bin%2Bpalestine%26type%3Dgrvydef%26param1%3D1%26param2%3Dsid%253Db01676f9c26355f014f8a9db87545d61%2526b%253DChrome%2526ip%253D71.163.72.113%2526p%253Dgroovorio%2526x%253DAC811262A746D3CD%2526dt%253DS940%2526f%253D7%2526a%253Dgrv_tuto1_14_30%26hsimp%3Dyhs-fullyhosted_003%26hspart%3Dironsource&w=588&h=387&imgurl=occupiedpalestine.files.wordpress.com%2F2012%2F08%2F5-peeking-through-the-wall.jpg%3Fw%3D588%26h%3D387&rurl=http%3A%2F%2Fwww.stopdebezetting.com%2Fwereldpers%2Fcompare-the-berlin-wall-vs-israel-s-apartheid-wall-in-palestine.html&size=49.0KB&name=...+%3Cb%3EApartheid+wall+in+Palestine%3C%2Fb%3E...+%7C+Or+you+go+peeking+through+the+%3Cb%3Ewall%3C%2Fb%3E&p=apartheid+wall+in+palestine&oid=50754b363ca991060b276aba291113cc&fr2=&fr=&tt=...+%3Cb%3EApartheid+wall+in+Palestine%3C%2Fb%3E...+%7C+Or+you+go+peeking+through+the+%3Cb%3Ewall%3C%2Fb%3E&b=0&ni=21&no=4&ts=&tab=organic&sigr=13evdtqdq&sigb=19k7nsjvb&sigi=12o2la1db&sigt=12lia2m0j&sign=12lia2m0j&.crumb=.yUtKgFI6DE&hsimp=yhs-fullyhosted_003&hspart=ironsource\" \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"),
    (:line, 26, :none),
    (:(=), :pat, (:macrocall, Symbol("@r_str"), "([\\d\\.]+) ([\\w.-]+) ([\\w.-]+) (\\[.+\\]) \"([^\"\\r\\n]*|[^\"\\r\\n\\[]*\\[.+\\][^\"]+|[^\"\\r\\n]+.[^\"]+)\" (\\d{3}) (\\d+|-) (\"(?:[^\"]|\")+)\"? (\"(?:[^\"]|\")+)\"?")),
    (:line, 27, :none),
    (:call, :match, :pat, :target),
    (:line, 30, :none),
    (:(=), :buf, (:call, :PipeBuffer)),
    (:line, 31, :none),
    (:call, :show, :buf, (:macrocall, Symbol("@r_str"), "")),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :buf), "r\"\"")),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :ismatch, (:call, :Regex, "^a\0b\$"), "a\0b")),
    (:line, 38, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :match, (:macrocall, Symbol("@r_str"), "test"), (:call, :GenericString, "this is a test"))),
    (:line, 39, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :search, (:call, :GenericString, "this is a test"), (:macrocall, Symbol("@r_str"), "test"))),
    (:line, 42, :none),
    (:let, (:block,
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:tuple, (:ref, :m, (:quote, #QuoteNode
                  :a
                )), (:ref, :m, 2), (:ref, :m, "b")), (:tuple, "x", "y", "z"))),
        (:line, 44, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, :m), "RegexMatch(\"xyz\", a=\"x\", 2=\"y\", b=\"z\")"))
      ), (:(=), :m, (:call, :match, (:macrocall, Symbol("@r_str"), "(?<a>.)(.)(?<b>.)"), "xyz"))),
    (:line, 48, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :replace, "abcde", (:macrocall, Symbol("@r_str"), "(..)(?P<byname>d)"), (:macrocall, Symbol("@s_str"), "\\g<byname>xy\\\\\\1")), "adxy\\bce")),
    (:line, 49, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :replace, "a", (:macrocall, Symbol("@r_str"), "(?P<x>)"), (:macrocall, Symbol("@s_str"), "\\g<y>")))
  ))