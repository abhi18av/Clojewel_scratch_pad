(:quote, (:block,
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%d", (:call, :typemax, :Int64)), "9223372036854775807")),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%a", (:call, :typemax, :Int64)), "0x7.fffffffffffffffp+60")),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%A", (:call, :typemax, :Int64)), "0X7.FFFFFFFFFFFFFFFP+60")),
    (:line, 10, :none),
    (:for, (:block,
        (:(=), (:tuple, :fmt, :val), (:tuple, (:tuple, "%i", "42"), (:tuple, "%u", "42"), (:tuple, "Test: %i", "Test: 42"), (:tuple, "%#x", "0x2a"), (:tuple, "%#o", "052"), (:tuple, "%x", "2a"), (:tuple, "%X", "2A"), (:tuple, "% i", " 42"), (:tuple, "%+i", "+42"), (:tuple, "%4i", "  42"), (:tuple, "%-4i", "42  "), (:tuple, "%a", "0x2.ap+4"), (:tuple, "%A", "0X2.AP+4"), (:tuple, "%20a", "            0x2.ap+4"), (:tuple, "%-20a", "0x2.ap+4            "), (:tuple, "%f", "42.000000"), (:tuple, "%g", "42"))),
        (:(=), :num, (:tuple, (:call, :UInt16, 42), (:call, :UInt32, 42), (:call, :UInt64, 42), (:call, :UInt128, 42), (:call, :Int16, 42), (:call, :Int32, 42), (:call, :Int64, 42), (:call, :Int128, 42)))
      ), (:block,
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:macrocall, Symbol("@eval"), (:call, :(==), (:macrocall, Symbol("@sprintf"), (:$, :fmt), (:$, :num)), (:$, :val))))
      )),
    (:line, 34, :none),
    (:if, (:call, :(==), (:., :Sys, (:quote, #QuoteNode
            :WORD_SIZE
          )), 64), (:block,
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%20p", 0), "  0x0000000000000000")),
        (:line, 36, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%-20p", 0), "0x0000000000000000  "))
      ), (:block,
        (:line, 37, :none),
        (:if, (:call, :(==), (:., :Sys, (:quote, #QuoteNode
                :WORD_SIZE
              )), 32), (:block,
            (:line, 38, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%20p", 0), "          0x00000000")),
            (:line, 39, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%-20p", 0), "0x00000000          "))
          ), (:block,
            (:line, 41, :none),
            (:macrocall, Symbol("@test"), false)
          ))
      )),
    (:line, 45, :none),
    (:for, (:block,
        (:(=), (:tuple, :fmt, :val), (:tuple, (:tuple, "%7.2f", "   1.23"), (:tuple, "%-7.2f", "1.23   "), (:tuple, "%07.2f", "0001.23"), (:tuple, "%.0f", "1"), (:tuple, "%#.0f", "1."), (:tuple, "%.4e", "1.2345e+00"), (:tuple, "%.4E", "1.2345E+00"), (:tuple, "%.2a", "0x1.3cp+0"), (:tuple, "%.2A", "0X1.3CP+0"))),
        (:(=), :num, (:tuple, 1.2345, (:macrocall, Symbol("@big_str"), "1.2345")))
      ), (:block,
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:macrocall, Symbol("@eval"), (:call, :(==), (:macrocall, Symbol("@sprintf"), (:$, :fmt), (:$, :num)), (:$, :val))))
      )),
    (:line, 59, :none),
    (:function, (:call, :_test_flags, :val, (:(::), :vflag, :AbstractString), (:(::), :fmt, :AbstractString), (:(::), :res, :AbstractString), (:(::), :prefix, :AbstractString)), (:block,
        (:line, 60, :none),
        (:(=), :vflag, (:call, :string, "%", :vflag)),
        (:line, 61, :none),
        (:(=), :space_fmt, (:call, :string, (:call, :+, (:call, :length, :res), (:call, :length, :prefix), 3), :fmt)),
        (:line, 62, :none),
        (:(=), :fsign, (:call, :string, (:if, (:call, :<, :val, 0), "-", "+"), :prefix)),
        (:line, 63, :none),
        (:(=), :nsign, (:call, :string, (:if, (:call, :<, :val, 0), "-", " "), :prefix)),
        (:line, 64, :none),
        (:(=), :osign, (:if, (:call, :<, :val, 0), (:call, :string, "-", :prefix), (:call, :string, :prefix, "0"))),
        (:line, 65, :none),
        (:(=), :esign, (:call, :string, (:if, (:call, :<, :val, 0), "-", ""), :prefix)),
        (:line, 66, :none),
        (:(=), :esignend, (:if, (:call, :<, :val, 0), "", " ")),
        (:line, 68, :none),
        (:for, (:(=), (:tuple, (:(::), :flag, :AbstractString), (:(::), :ans, :AbstractString)), (:tuple, (:tuple, "", (:call, :string, "  ", :nsign, :res)), (:tuple, "+", (:call, :string, "  ", :fsign, :res)), (:tuple, " ", (:call, :string, "  ", :nsign, :res)), (:tuple, "0", (:call, :string, :osign, "00", :res)), (:tuple, "-", (:call, :string, :esign, :res, "  ", :esignend)), (:tuple, "0+", (:call, :string, :fsign, "00", :res)), (:tuple, "0 ", (:call, :string, :nsign, "00", :res)), (:tuple, "-+", (:call, :string, :fsign, :res, "  ")), (:tuple, "- ", (:call, :string, :nsign, :res, "  ")))), (:block,
            (:line, 79, :none),
            (:(=), :fmt_string, (:call, :string, :vflag, :flag, :space_fmt)),
            (:line, 80, :none),
            (:macrocall, Symbol("@test"), (:macrocall, Symbol("@eval"), (:call, :(==), (:macrocall, Symbol("@sprintf"), (:$, :fmt_string), (:$, :val)), (:$, :ans))))
          ))
      )),
    (:line, 84, :none),
    (:for, (:(=), :i, (:tuple, (:tuple, 42, "", "i", "42", ""), (:tuple, 42, "", "d", "42", ""), (:tuple, 42, "", "u", "42", ""), (:tuple, 42, "", "x", "2a", ""), (:tuple, 42, "", "X", "2A", ""), (:tuple, 42, "", "o", "52", ""), (:tuple, 42, "#", "x", "2a", "0x"), (:tuple, 42, "#", "X", "2A", "0X"), (:tuple, 42, "#", "o", "052", ""), (:tuple, 1.2345, "", ".2f", "1.23", ""), (:tuple, 1.2345, "", ".2e", "1.23e+00", ""), (:tuple, 1.2345, "", ".2E", "1.23E+00", ""), (:tuple, 1.2345, "#", ".0f", "1.", ""), (:tuple, 1.2345, "#", ".0e", "1.e+00", ""), (:tuple, 1.2345, "#", ".0E", "1.E+00", ""), (:tuple, 1.2345, "", ".2a", "1.3cp+0", "0x"), (:tuple, 1.2345, "", ".2A", "1.3CP+0", "0X"))), (:block,
        (:line, 108, :none),
        (:call, :_test_flags, (:..., :i)),
        (:line, 109, :none),
        (:call, :_test_flags, (:call, :-, (:ref, :i, 1)), (:..., (:ref, :i, (:(:), 2, 5))))
      )),
    (:line, 113, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%f", :Inf), "Inf")),
    (:line, 114, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%f", :NaN), "NaN")),
    (:line, 115, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%f", (:macrocall, Symbol("@big_str"), "Inf")), "Inf")),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%f", (:macrocall, Symbol("@big_str"), "NaN")), "NaN")),
    (:line, 119, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.0e", 3.0e142), "3e+142")),
    (:line, 120, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.0e", 3.0e142), "3.e+142")),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.0e", (:macrocall, Symbol("@big_str"), "3e142")), "3e+142")),
    (:line, 122, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.0e", (:macrocall, Symbol("@big_str"), "3e142")), "3.e+142")),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.0e", (:macrocall, Symbol("@big_str"), "3e1042")), "3e+1042")),
    (:line, 126, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%e", 3.0e42), "3.000000e+42")),
    (:line, 127, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%E", 3.0e42), "3.000000E+42")),
    (:line, 128, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%e", 3.0e-42), "3.000000e-42")),
    (:line, 129, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%E", 3.0e-42), "3.000000E-42")),
    (:line, 130, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%a", 30000.0), "0x1.d4cp+14")),
    (:line, 131, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%A", 30000.0), "0X1.D4CP+14")),
    (:line, 132, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.4a", 0.0003), "0x1.3a93p-12")),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.4A", 0.0003), "0X1.3A93P-12")),
    (:line, 136, :none),
    (:for, (:(=), (:tuple, :val, :res), (:tuple, (:tuple, 1.2345678e7, "1.23457e+07"), (:tuple, 1.2345678e6, "1.23457e+06"), (:tuple, 123456.78, "123457"), (:tuple, 12345.678, "12345.7"), (:tuple, 1.234e7, "1.234e+07"))), (:block,
        (:line, 141, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.6g", :val), :res))
      )),
    (:line, 143, :none),
    (:for, (:(=), (:tuple, :val, :res), (:tuple, (:tuple, (:macrocall, Symbol("@big_str"), "12345678."), "1.23457e+07"), (:tuple, (:macrocall, Symbol("@big_str"), "1234567.8"), "1.23457e+06"), (:tuple, (:macrocall, Symbol("@big_str"), "123456.78"), "123457"), (:tuple, (:macrocall, Symbol("@big_str"), "12345.678"), "12345.7"))), (:block,
        (:line, 147, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.6g", :val), :res))
      )),
    (:line, 149, :none),
    (:for, (:block,
        (:(=), (:tuple, :fmt, :val), (:tuple, (:tuple, "%10.5g", "     123.4"), (:tuple, "%+10.5g", "    +123.4"), (:tuple, "% 10.5g", "     123.4"), (:tuple, "%#10.5g", "    123.40"), (:tuple, "%-10.5g", "123.4     "), (:tuple, "%-+10.5g", "+123.4    "), (:tuple, "%010.5g", "00000123.4"))),
        (:(=), :num, (:tuple, 123.4, (:macrocall, Symbol("@big_str"), "123.4")))
      ), (:block,
        (:line, 157, :none),
        (:macrocall, Symbol("@test"), (:macrocall, Symbol("@eval"), (:call, :(==), (:macrocall, Symbol("@sprintf"), (:$, :fmt), (:$, :num)), (:$, :val))))
      )),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%10.5g", -123.4), "    -123.4")),
    (:line, 160, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%010.5g", -123.4), "-0000123.4")),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.6g", 1.234e7), "1.234e+07")),
    (:line, 162, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.6g", 1.234e7), "1.23400e+07")),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%10.5g", (:macrocall, Symbol("@big_str"), "-123.4")), "    -123.4")),
    (:line, 164, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%010.5g", (:macrocall, Symbol("@big_str"), "-123.4")), "-0000123.4")),
    (:line, 165, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.6g", (:macrocall, Symbol("@big_str"), "12340000.0")), "1.234e+07")),
    (:line, 166, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.6g", (:macrocall, Symbol("@big_str"), "12340000.0")), "1.23400e+07")),
    (:line, 169, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%.5g", 42), "42")),
    (:line, 170, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.2g", 42), "42.")),
    (:line, 171, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.5g", 42), "42.000")),
    (:line, 174, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%a", 1.5), "0x1.8p+0")),
    (:line, 175, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%a", 1.5f0), "0x1.8p+0")),
    (:line, 176, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%a", (:macrocall, Symbol("@big_str"), "1.5")), "0x1.8p+0")),
    (:line, 177, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#.0a", 1.5), "0x2.p+0")),
    (:line, 178, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%+30a", (:call, :/, 1, 3)), "         +0x1.5555555555555p-2")),
    (:line, 181, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%c", 65), "A")),
    (:line, 182, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%c", 'A'), "A")),
    (:line, 183, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%3c", 'A'), "  A")),
    (:line, 184, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%-3c", 'A'), "A  ")),
    (:line, 185, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%c", 248), "ø")),
    (:line, 186, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%c", 'ø'), "ø")),
    (:line, 189, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%%"), "%")),
    (:line, 190, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%%s"), "%s")),
    (:line, 191, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@sprintf"), "%")))),
    (:line, 194, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@sprintf"), "%s")))),
    (:line, 195, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@sprintf"), "%s", "1", "2")))),
    (:line, 198, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@sprintf"), (:string, :n))))),
    (:line, 201, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%llf", 1.2), "1.200000")),
    (:line, 202, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%Lf", 1.2), "1.200000")),
    (:line, 203, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%hhu", 1), "1")),
    (:line, 204, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%hu", 1), "1")),
    (:line, 205, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%lu", 1), "1")),
    (:line, 206, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%llu", 1), "1")),
    (:line, 207, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%Lu", 1), "1")),
    (:line, 208, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%zu", 1), "1")),
    (:line, 209, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%ju", 1), "1")),
    (:line, 210, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%tu", 1), "1")),
    (:line, 213, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s", "test"), "test")),
    (:line, 214, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s", "tést"), "tést")),
    (:line, 216, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%8s", "test"), "    test")),
    (:line, 217, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%-8s", "test"), "test    ")),
    (:line, 219, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s", "tést"), "tést")),
    (:line, 221, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s", (:quote, #QuoteNode
            :test
          )), "test")),
    (:line, 222, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#s", (:quote, #QuoteNode
            :test
          )), ":test")),
    (:line, 223, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#8s", (:quote, #QuoteNode
            :test
          )), "   :test")),
    (:line, 224, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%#-8s", (:quote, #QuoteNode
            :test
          )), ":test   ")),
    (:line, 227, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "Test: %s%c%C%c%#-.0f.", "t", 65, 66, 67, -42), "Test: tABC-42..")),
    (:line, 230, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%d%d", (:..., (:hcat, 1, 2))), "12")),
    (:line, 233, :none),
    (:for, (:(=), :c, "bBhHIjJkKlLmMNPqQrRtTvVwWyYzZ"), (:block,
        (:line, 234, :none),
        (:(=), :fmt_str, (:call, :string, "%", :c)),
        (:line, 235, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@sprintf"), (:$, :fmt_str), 1))))
      )),
    (:line, 239, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%f %d %d %f", 1.0, (:..., (:hcat, 3, 4)), 5), "1.000000 3 4 5.000000")),
    (:line, 242, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s %f %9.5f %d %d %d %d%d%d%d", (:..., (:vcat, (:(:), 1, 6))), (:..., (:vect, 7, 8, 9, 10))), "1 2.000000   3.00000 4 5 6 78910")),
    (:line, 245, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@sprintf"), "%s %s %s %d %d %d %f %f %f", (:..., (:typed_comprehension, :Any, (:generator, (:call, :+, (:call, :^, 10, :x), :y), (:(=), :x, (:(:), 1, 3)), (:(=), :y, (:(:), 1, 3)))))), "11 101 1001 12 102 1002 13.000000 103.000000 1003.000000")),
    (:line, 248, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :eval, (:quote, (:macrocall, Symbol("@printf"), 1))))
  ))