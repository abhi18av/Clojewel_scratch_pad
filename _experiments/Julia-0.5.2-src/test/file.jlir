(:quote, (:block,
    (:line, 6, :none),
    (:(=), :starttime, (:call, :time)),
    (:line, 7, :none),
    (:(=), :pwd_, (:call, :pwd)),
    (:line, 8, :none),
    (:(=), :dir, (:call, :mktempdir)),
    (:line, 9, :none),
    (:(=), :file, (:call, :joinpath, :dir, "afile.txt")),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :close, (:call, :open, :file, "w")), :nothing)),
    (:line, 14, :none),
    (:(=), :subdir, (:call, :joinpath, :dir, "adir")),
    (:line, 15, :none),
    (:call, :mkdir, :subdir),
    (:line, 16, :none),
    (:(=), :subdir2, (:call, :joinpath, :dir, "adir2")),
    (:line, 17, :none),
    (:call, :mkdir, :subdir2),
    (:line, 18, :none),
    (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :mkdir, :file)),
    (:line, 19, :none),
    (:let, (:block,
        (:line, 20, :none),
        (:try, (:block,
            (:line, 21, :none),
            (:call, :mkdir, :file)
          ), :err, (:block,
            (:line, 23, :none),
            (:(=), :io, (:call, :IOBuffer)),
            (:line, 24, :none),
            (:call, :showerror, :io, :err),
            (:line, 25, :none),
            (:macrocall, Symbol("@test"), (:call, :startswith, (:call, :takebuf_string, :io), (:string, "SystemError (with ", :file, "): mkdir:")))
          ))
      ), (:(=), :err, :nothing)),
    (:line, 29, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 30, :none),
        (:(=), :dirlink, (:call, :joinpath, :dir, "dirlink")),
        (:line, 31, :none),
        (:call, :symlink, :subdir, :dirlink),
        (:line, 33, :none),
        (:call, :cd, :subdir),
        (:line, 34, :none),
        (:(=), :relsubdirlink, (:call, :joinpath, :subdir, "rel_subdirlink")),
        (:line, 35, :none),
        (:(=), :reldir, (:call, :joinpath, "..", "adir2")),
        (:line, 36, :none),
        (:call, :symlink, :reldir, :relsubdirlink),
        (:line, 37, :none),
        (:call, :cd, :pwd_)
      )),
    (:line, 40, :none),
    (:if, (:call, :!, (:call, :is_windows)), (:block,
        (:line, 41, :none),
        (:(=), :link, (:call, :joinpath, :dir, "afilelink.txt")),
        (:line, 42, :none),
        (:call, :symlink, :file, :link),
        (:line, 44, :none),
        (:call, :cd, :subdir),
        (:line, 45, :none),
        (:(=), :rellink, (:call, :joinpath, :subdir, "rel_afilelink.txt")),
        (:line, 46, :none),
        (:(=), :relfile, (:call, :joinpath, "..", "afile.txt")),
        (:line, 47, :none),
        (:call, :symlink, :relfile, :rellink),
        (:line, 48, :none),
        (:call, :cd, :pwd_)
      )),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:call, :isdir, :dir)),
    (:line, 56, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isfile, :dir))),
    (:line, 57, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :islink, :dir))),
    (:line, 58, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isdir, :file))),
    (:line, 59, :none),
    (:macrocall, Symbol("@test"), (:call, :isfile, :file)),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :islink, :file))),
    (:line, 62, :none),
    (:macrocall, Symbol("@test"), (:call, :>, (:call, :&, (:call, :filemode, :file), 0x0124), 0)),
    (:line, 63, :none),
    (:macrocall, Symbol("@test"), (:call, :>, (:call, :&, (:call, :filemode, :file), 0x92), 0)),
    (:line, 64, :none),
    (:call, :chmod, :file, (:call, :&, (:call, :filemode, :file), 0x0f6d)),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :file), 0x92), 0)),
    (:line, 66, :none),
    (:call, :chmod, :file, (:call, :|, (:call, :filemode, :file), 0x92)),
    (:line, 67, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :file), 0x49), 0)),
    (:line, 68, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :filesize, :file), 0)),
    (:line, 70, :none),
    (:if, (:call, :is_windows), (:block,
        (:line, 71, :none),
        (:(=), :permissions, 0x0124),
        (:line, 72, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :dir), 0x01ff), :permissions)),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :subdir), 0x01ff), :permissions)),
        (:line, 74, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :file), 0x01ff), :permissions)),
        (:line, 75, :none),
        (:call, :chmod, :dir, :permissions, (:kw, :recursive, true)),
        (:line, 76, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :dir), 0x01ff), :permissions)),
        (:line, 77, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :subdir), 0x01ff), :permissions)),
        (:line, 78, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :file), 0x01ff), :permissions)),
        (:line, 79, :none),
        (:call, :chmod, :dir, 0x01b6, (:kw, :recursive, true))
      ), (:block,
        (:line, 81, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 82, :none),
              (:(=), :tmpfile, (:call, :joinpath, :tmpdir, "tempfile.txt")),
              (:line, 83, :none),
              (:call, :touch, :tmpfile),
              (:line, 84, :none),
              (:call, :chmod, :tmpfile, 0x01c7),
              (:line, 85, :none),
              (:(=), :linkfile, (:call, :joinpath, :dir, "tempfile.txt")),
              (:line, 86, :none),
              (:call, :symlink, :tmpfile, :linkfile),
              (:line, 87, :none),
              (:(=), :permissions, 0x01fe),
              (:line, 88, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :dir), 0x01ff), :permissions)),
              (:line, 89, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :subdir), 0x01ff), :permissions)),
              (:line, 90, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :file), 0x01ff), :permissions)),
              (:line, 91, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :linkfile), 0x01ff), :permissions)),
              (:line, 92, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :tmpfile), 0x01ff), :permissions)),
              (:line, 93, :none),
              (:call, :chmod, :dir, :permissions, (:kw, :recursive, true)),
              (:line, 94, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :dir), 0x01ff), :permissions)),
              (:line, 95, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :subdir), 0x01ff), :permissions)),
              (:line, 96, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :&, (:call, :filemode, :file), 0x01ff), :permissions)),
              (:line, 97, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:., (:call, :lstat, :link), (:quote, #QuoteNode
                        :mode
                      )), 0x01ff), :permissions)),
              (:line, 98, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :linkfile), 0x01ff), :permissions)),
              (:line, 99, :none),
              (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :&, (:call, :filemode, :tmpfile), 0x01ff), :permissions)),
              (:line, 100, :none),
              (:call, :rm, :linkfile)
            )))
      )),
    (:line, 106, :none),
    (:if, (:call, :is_windows), (:block,
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :filesize, :dir), 0))
      ), (:block,
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :filesize, :dir), 0))
      )),
    (:line, 111, :none),
    (:(=), :now, (:call, :time)),
    (:line, 113, :none),
    (:let, (:block,
        (:line, 114, :none),
        (:(=), :mfile, (:call, :mtime, :file)),
        (:line, 115, :none),
        (:(=), :mdir, (:call, :mtime, :dir)),
        (:line, 116, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :(<=), (:call, :abs, (:call, :-, :now, :mfile)), :skew), (:&&, (:call, :(<=), (:call, :abs, (:call, :-, :now, :mdir)), :skew), (:call, :(<=), (:call, :abs, (:call, :-, :mfile, :mdir)), :skew))))
      ), (:(=), :skew, (:call, :+, 10, (:call, :-, :now, :starttime)))),
    (:line, 121, :none),
    (:if, (:call, :is_unix), (:block,
        (:line, 122, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :link), true)),
        (:line, 123, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :link), :file))
      )),
    (:line, 126, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 127, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :dirlink), true)),
        (:line, 128, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isdir, :dirlink), true)),
        (:line, 129, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :dirlink), (:call, :*, :subdir, (:if, (:call, :is_windows), "\\", ""))))
      )),
    (:line, 133, :none),
    (:(=), :newfile, (:call, :joinpath, :dir, "bfile.txt")),
    (:line, 134, :none),
    (:call, :mv, :file, :newfile),
    (:line, 135, :none),
    (:(=), :file, :newfile),
    (:line, 136, :none),
    (:(=), :c_tmpdir, (:call, :mktempdir)),
    (:line, 137, :none),
    (:(=), :c_subdir, (:call, :joinpath, :c_tmpdir, "c_subdir")),
    (:line, 138, :none),
    (:call, :mkdir, :c_subdir),
    (:line, 139, :none),
    (:(=), :c_file, (:call, :joinpath, :c_tmpdir, "cfile.txt")),
    (:line, 140, :none),
    (:call, :cp, :newfile, :c_file),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :isdir, :c_subdir)),
    (:line, 143, :none),
    (:macrocall, Symbol("@test"), (:call, :isfile, :c_file)),
    (:line, 144, :none),
    (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :rm, :c_tmpdir)),
    (:line, 145, :none),
    (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :rm, :c_tmpdir, (:kw, :force, true))),
    (:line, 148, :none),
    (:(=), :d_tmpdir, (:call, :mktempdir, :c_tmpdir)),
    (:line, 149, :none),
    (:macrocall, Symbol("@test"), (:call, :isdir, :d_tmpdir)),
    (:line, 150, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :samefile
          )), (:call, :dirname, :d_tmpdir), :c_tmpdir)),
    (:line, 153, :none),
    (:(=), (:tuple, :d_tmpfile, :f), (:call, :mktemp, :c_tmpdir)),
    (:line, 154, :none),
    (:call, :close, :f),
    (:line, 155, :none),
    (:macrocall, Symbol("@test"), (:call, :isfile, :d_tmpfile)),
    (:line, 156, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :samefile
          )), (:call, :dirname, :d_tmpfile), :c_tmpdir)),
    (:line, 158, :none),
    (:call, :rm, :c_tmpdir, (:kw, :recursive, true)),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isdir, :c_tmpdir))),
    (:line, 160, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :rm, :c_tmpdir)),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :rm, :c_tmpdir, (:kw, :force, true)), :nothing)),
    (:line, 162, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :rm, :c_tmpdir, (:kw, :recursive, true))),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :rm, :c_tmpdir, (:kw, :force, true), (:kw, :recursive, true)), :nothing)),
    (:line, 165, :none),
    (:if, (:call, :!, (:call, :is_windows)), (:block,
        (:line, 167, :none),
        (:if, (:||, (:call, :(==), (:call, :get, :ENV, "USER", ""), "root"), (:call, :(==), (:call, :get, :ENV, "HOME", ""), "/root")), (:block,
            (:line, 168, :none),
            (:call, :chown, :file, -2, -1),
            (:line, 169, :none),
            (:macrocall, Symbol("@test"), (:call, :(!=), (:., (:call, :stat, :file), (:quote, #QuoteNode
                    :uid
                  )), 0)),
            (:line, 170, :none),
            (:call, :chown, :file, 0, -2),
            (:line, 171, :none),
            (:macrocall, Symbol("@test"), (:call, :(!=), (:., (:call, :stat, :file), (:quote, #QuoteNode
                    :gid
                  )), 0)),
            (:line, 172, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:., (:call, :stat, :file), (:quote, #QuoteNode
                    :uid
                  )), 0)),
            (:line, 173, :none),
            (:call, :chown, :file, -1, 0),
            (:line, 174, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:., (:call, :stat, :file), (:quote, #QuoteNode
                    :gid
                  )), 0)),
            (:line, 175, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:., (:call, :stat, :file), (:quote, #QuoteNode
                    :uid
                  )), 0))
          ), (:block,
            (:line, 177, :none),
            (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                  :UVError
                )), (:call, :chown, :file, -2, -1)),
            (:line, 178, :none),
            (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                  :UVError
                )), (:call, :chown, :file, -1, -2))
          ))
      ), (:block,
        (:line, 182, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :chown, :file, -2, -2), :nothing))
      )),
    (:line, 188, :none),
    (:function, (:call, :test_file_poll, :channel, :interval, :timeout_s), (:block,
        (:line, 189, :none),
        (:(=), :rc, (:call, :poll_file, :file, :interval, :timeout_s)),
        (:line, 190, :none),
        (:call, :put!, :channel, :rc)
      )),
    (:line, 193, :none),
    (:function, (:call, :test_timeout, :tval), (:block,
        (:line, 194, :none),
        (:call, :tic),
        (:line, 195, :none),
        (:(=), :channel, (:call, :Channel, 1)),
        (:line, 196, :none),
        (:macrocall, Symbol("@async"), (:call, :test_file_poll, :channel, 10, :tval)),
        (:line, 197, :none),
        (:(=), :tr, (:call, :take!, :channel)),
        (:line, 198, :none),
        (:(=), :t_elapsed, (:call, :toq)),
        (:line, 199, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :!, (:call, :ispath, (:ref, :tr, 1))), (:call, :!, (:call, :ispath, (:ref, :tr, 2))))),
        (:line, 200, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), :tval, :t_elapsed))
      )),
    (:line, 203, :none),
    (:function, (:call, :test_touch, :slval), (:block,
        (:line, 204, :none),
        (:(=), :tval, (:call, :*, :slval, 1.1)),
        (:line, 205, :none),
        (:(=), :channel, (:call, :Channel, 1)),
        (:line, 206, :none),
        (:macrocall, Symbol("@async"), (:call, :test_file_poll, :channel, (:call, :/, :tval, 3), :tval)),
        (:line, 207, :none),
        (:call, :sleep, (:call, :/, :tval, 3)),
        (:line, 208, :none),
        (:(=), :f, (:call, :open, :file, "a")),
        (:line, 209, :none),
        (:call, :write, :f, "Hello World\n"),
        (:line, 210, :none),
        (:call, :close, :f),
        (:line, 211, :none),
        (:(=), :tr, (:call, :take!, :channel)),
        (:line, 212, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :ispath, (:ref, :tr, 1)), (:call, :ispath, (:ref, :tr, 2))))
      )),
    (:line, 215, :none),
    (:function, (:call, :test_watch_file_timeout, :tval), (:block,
        (:line, 216, :none),
        (:(=), :watch, (:macrocall, Symbol("@async"), (:call, :watch_file, :file, :tval))),
        (:line, 217, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :wait, :watch), (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :FileEvent
                )), false, false, true)))
      )),
    (:line, 220, :none),
    (:function, (:call, :test_watch_file_change, :tval), (:block,
        (:line, 221, :none),
        (:(=), :watch, (:macrocall, Symbol("@async"), (:call, :watch_file, :file, :tval))),
        (:line, 222, :none),
        (:call, :sleep, (:call, :/, :tval, 3)),
        (:line, 223, :none),
        (:call, :open, (:->, (:tuple, :f), (:block,
              (:line, 224, :none),
              (:call, :write, :f, "small change\n")
            )), :file, "a"),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :wait, :watch), (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :FileEvent
                )), false, true, false)))
      )),
    (:line, 229, :none),
    (:function, (:call, :test_monitor_wait, :tval), (:block,
        (:line, 230, :none),
        (:(=), :fm, (:call, :FileMonitor, :file)),
        (:line, 231, :none),
        (:macrocall, Symbol("@async"), (:block,
            (:line, 232, :none),
            (:call, :sleep, :tval),
            (:line, 233, :none),
            (:(=), :f, (:call, :open, :file, "a")),
            (:line, 234, :none),
            (:call, :write, :f, "Hello World\n"),
            (:line, 235, :none),
            (:call, :close, :f)
          )),
        (:line, 237, :none),
        (:(=), (:tuple, :fname, :events), (:call, :wait, :fm)),
        (:line, 238, :none),
        (:call, :close, :fm),
        (:line, 239, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :fname, (:call, :basename, :file))),
        (:line, 240, :none),
        (:macrocall, Symbol("@test"), (:., :events, (:quote, #QuoteNode
              :changed
            )))
      )),
    (:line, 243, :none),
    (:function, (:call, :test_monitor_wait_poll), (:block,
        (:line, 244, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, :file, 5.007)),
        (:line, 245, :none),
        (:macrocall, Symbol("@async"), (:block,
            (:line, 246, :none),
            (:call, :sleep, 2.5),
            (:line, 247, :none),
            (:(=), :f, (:call, :open, :file, "a")),
            (:line, 248, :none),
            (:call, :write, :f, "Hello World\n"),
            (:line, 249, :none),
            (:call, :close, :f)
          )),
        (:line, 251, :none),
        (:(=), (:tuple, :old, :new), (:call, :wait, :pfw)),
        (:line, 252, :none),
        (:call, :close, :pfw),
        (:line, 253, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :-, (:., :new, (:quote, #QuoteNode
                  :mtime
                )), (:., :old, (:quote, #QuoteNode
                  :mtime
                ))), (:call, :-, 2.5, 1.5)))
      )),
    (:line, 256, :none),
    (:call, :test_timeout, 0.1),
    (:line, 257, :none),
    (:call, :test_timeout, 1),
    (:line, 258, :none),
    (:call, :test_touch, 6),
    (:line, 259, :none),
    (:call, :test_monitor_wait, 0.1),
    (:line, 260, :none),
    (:call, :test_monitor_wait, 0.1),
    (:line, 261, :none),
    (:call, :test_monitor_wait_poll),
    (:line, 262, :none),
    (:call, :test_monitor_wait_poll),
    (:line, 263, :none),
    (:call, :test_watch_file_timeout, 0.1),
    (:line, 264, :none),
    (:call, :test_watch_file_change, 6),
    (:line, 266, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :watch_file, "____nonexistent_file", 10)),
    (:line, 267, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, :poll_file, "____nonexistent_file", 2, 10)),
    (:line, 273, :none),
    (:(=), :s, (:call, :open, :file, "w")),
    (:line, 274, :none),
    (:call, :write, :s, "Marked!\n"),
    (:line, 275, :none),
    (:call, :write, :s, "Hello world!\n"),
    (:line, 276, :none),
    (:call, :write, :s, "Goodbye world!\n"),
    (:line, 277, :none),
    (:call, :close, :s),
    (:line, 278, :none),
    (:(=), :s, (:call, :open, :file)),
    (:line, 279, :none),
    (:call, :mark, :s),
    (:line, 280, :none),
    (:(=), :str, (:call, :readline, :s)),
    (:line, 281, :none),
    (:macrocall, Symbol("@test"), (:call, :startswith, :str, "Marked!")),
    (:line, 282, :none),
    (:macrocall, Symbol("@test"), (:call, :ismarked, :s)),
    (:line, 283, :none),
    (:call, :reset, :s),
    (:line, 284, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :ismarked, :s))),
    (:line, 285, :none),
    (:(=), :str, (:call, :readline, :s)),
    (:line, 286, :none),
    (:macrocall, Symbol("@test"), (:call, :startswith, :str, "Marked!")),
    (:line, 287, :none),
    (:call, :mark, :s),
    (:line, 288, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :s), "Hello world!\n")),
    (:line, 289, :none),
    (:macrocall, Symbol("@test"), (:call, :ismarked, :s)),
    (:line, 290, :none),
    (:call, :unmark, :s),
    (:line, 291, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :ismarked, :s))),
    (:line, 292, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :reset, :s)),
    (:line, 293, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :unmark, :s))),
    (:line, 294, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :ismarked, :s))),
    (:line, 295, :none),
    (:call, :close, :s),
    (:line, 301, :none),
    (:(=), :my_tempdir, (:call, :tempdir)),
    (:line, 302, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isdir, :my_tempdir), true)),
    (:line, 304, :none),
    (:(=), :path, (:call, :tempname)),
    (:line, 306, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ispath, :path), (:call, :is_windows))),
    (:line, 307, :none),
    (:&&, (:call, :ispath, :path), (:call, :rm, :path)),
    (:line, 309, :none),
    (:(=), (:tuple, :p, :f), (:call, :mktemp)),
    (:line, 310, :none),
    (:call, :print, :f, "Here is some text"),
    (:line, 311, :none),
    (:call, :close, :f),
    (:line, 312, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isfile, :p), true)),
    (:line, 313, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :p), "Here is some text")),
    (:line, 314, :none),
    (:call, :rm, :p),
    (:line, 316, :none),
    (:let, (:block,
        (:line, 317, :none),
        (:(=), :tmp_path, (:call, :mktemp, (:->, (:tuple, :p, :io), (:block,
                (:line, 318, :none),
                (:macrocall, Symbol("@test"), (:call, :isfile, :p)),
                (:line, 319, :none),
                (:call, :print, :io, "鴨かも？"),
                (:line, 320, :none),
                :p
              )))),
        (:line, 322, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :tmp_path, "")),
        (:line, 323, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isfile, :tmp_path)))
      )),
    (:line, 326, :none),
    (:let, (:block,
        (:line, 327, :none),
        (:(=), :tmpdir, (:call, :mktempdir, (:->, (:tuple, :d), (:block,
                (:line, 328, :none),
                (:macrocall, Symbol("@test"), (:call, :isdir, :d)),
                (:line, 329, :none),
                :d
              )))),
        (:line, 331, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :tmpdir, "")),
        (:line, 332, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isdir, :tmpdir)))
      )),
    (:line, 335, :none),
    (:(=), :emptyfile, (:call, :joinpath, :dir, "empty")),
    (:line, 336, :none),
    (:call, :touch, :emptyfile),
    (:line, 337, :none),
    (:(=), :emptyf, (:call, :open, :emptyfile)),
    (:line, 338, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :readlines, :emptyf))),
    (:line, 339, :none),
    (:call, :close, :emptyf),
    (:line, 340, :none),
    (:call, :rm, :emptyfile),
    (:line, 346, :none),
    (:function, (:call, :check_dir, (:(::), :orig_path, :AbstractString), (:(::), :copied_path, :AbstractString), (:(::), :follow_symlinks, :Bool)), (:block,
        (:line, 347, :none),
        (:||, (:call, :isdir, :orig_path), (:call, :throw, (:call, :ArgumentError, (:string, "'", :orig_path, "' is not a directory.")))),
        (:line, 349, :none),
        (:macrocall, Symbol("@test"), (:call, :isdir, :copied_path)),
        (:line, 350, :none),
        (:(=), :readir_orig, (:call, :readdir, :orig_path)),
        (:line, 351, :none),
        (:(=), :readir_copied, (:call, :readdir, :copied_path)),
        (:line, 352, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :readir_orig, :readir_copied)),
        (:line, 354, :none),
        (:for, (:(=), :name, :readir_orig), (:block,
            (:line, 355, :none),
            (:macrocall, Symbol("@test"), (:call, :in, :name, :readir_copied)),
            (:line, 356, :none),
            (:call, :check_cp, (:call, :joinpath, :orig_path, :name), (:call, :joinpath, :copied_path, :name), :follow_symlinks)
          ))
      )),
    (:line, 360, :none),
    (:function, (:call, :check_cp, (:(::), :orig_path, :AbstractString), (:(::), :copied_path, :AbstractString), (:(::), :follow_symlinks, :Bool)), (:block,
        (:line, 361, :none),
        (:if, (:call, :islink, :orig_path), (:block,
            (:line, 362, :none),
            (:if, (:call, :!, :follow_symlinks), (:block,
                (:line, 364, :none),
                (:macrocall, Symbol("@test"), (:call, :islink, :copied_path)),
                (:line, 365, :none),
                (:(=), :readlink_orig, (:call, :readlink, :orig_path)),
                (:line, 368, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :readlink_orig, (:call, :readlink, :copied_path))),
                (:line, 369, :none),
                (:if, (:call, :isabspath, :readlink_orig), (:block,
                    (:line, 370, :none),
                    (:macrocall, Symbol("@test"), (:call, :isabspath, (:call, :readlink, :copied_path)))
                  ))
              ), (:block,
                (:line, 374, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :orig_path), (:call, :!, (:call, :islink, :copied_path)))),
                (:line, 375, :none),
                (:if, (:call, :isdir, :orig_path), (:block,
                    (:line, 376, :none),
                    (:call, :check_dir, :orig_path, :copied_path, :follow_symlinks)
                  ), (:block,
                    (:line, 379, :none),
                    (:macrocall, Symbol("@test"), (:call, :isfile, :copied_path)),
                    (:line, 381, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :orig_path), (:call, :readstring, :copied_path)))
                  ))
              ))
          ), (:block,
            (:line, 384, :none),
            (:if, (:call, :isdir, :orig_path), (:block,
                (:line, 385, :none),
                (:call, :check_cp_main, :orig_path, :copied_path, :follow_symlinks)
              ), (:block,
                (:line, 388, :none),
                (:macrocall, Symbol("@test"), (:call, :isfile, :copied_path)),
                (:line, 390, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :orig_path), (:call, :readstring, :copied_path)))
              ))
          ))
      )),
    (:line, 394, :none),
    (:function, (:call, :check_cp_main, (:(::), :orig, :AbstractString), (:(::), :copied, :AbstractString), (:(::), :follow_symlinks, :Bool)), (:block,
        (:line, 395, :none),
        (:if, (:call, :isdir, :orig), (:block,
            (:line, 396, :none),
            (:call, :check_dir, :orig, :copied, :follow_symlinks)
          ), (:block,
            (:line, 398, :none),
            (:call, :check_cp, :orig, :copied, :follow_symlinks)
          ))
      )),
    (:line, 402, :none),
    (:function, (:call, :cp_and_test, (:(::), :src, :AbstractString), (:(::), :dst, :AbstractString), (:(::), :follow_symlinks, :Bool)), (:block,
        (:line, 403, :none),
        (:call, :cp, (:parameters, (:kw, :follow_symlinks, :follow_symlinks)), :src, :dst),
        (:line, 404, :none),
        (:call, :check_cp_main, :src, :dst, :follow_symlinks)
      )),
    (:line, 410, :none),
    (:(=), :afile, (:call, :joinpath, :dir, "a.txt")),
    (:line, 411, :none),
    (:call, :touch, :afile),
    (:line, 412, :none),
    (:(=), :af, (:call, :open, :afile, "r+")),
    (:line, 413, :none),
    (:call, :write, :af, "This is indeed a test"),
    (:line, 415, :none),
    (:(=), :bfile, (:call, :joinpath, :dir, "b.txt")),
    (:line, 416, :none),
    (:call, :cp, :afile, :bfile),
    (:line, 418, :none),
    (:(=), :cfile, (:call, :joinpath, :dir, "c.txt")),
    (:line, 419, :none),
    (:call, :write, :cfile, "This is longer than the contents of afile"),
    (:line, 420, :none),
    (:call, :cp, (:parameters, (:kw, :remove_destination, true)), :afile, :cfile),
    (:line, 422, :none),
    (:(=), :a_stat, (:call, :stat, :afile)),
    (:line, 423, :none),
    (:(=), :b_stat, (:call, :stat, :bfile)),
    (:line, 424, :none),
    (:(=), :c_stat, (:call, :stat, :cfile)),
    (:line, 425, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :a_stat, (:quote, #QuoteNode
            :mode
          )), (:., :b_stat, (:quote, #QuoteNode
            :mode
          )))),
    (:line, 426, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :a_stat, (:quote, #QuoteNode
            :size
          )), (:., :b_stat, (:quote, #QuoteNode
            :size
          )))),
    (:line, 427, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :a_stat, (:quote, #QuoteNode
            :size
          )), (:., :c_stat, (:quote, #QuoteNode
            :size
          )))),
    (:line, 429, :none),
    (:call, :close, :af),
    (:line, 430, :none),
    (:call, :rm, :afile),
    (:line, 431, :none),
    (:call, :rm, :bfile),
    (:line, 432, :none),
    (:call, :rm, :cfile),
    (:line, 435, :none),
    (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
          (:line, 437, :none),
          (:(=), :file, (:call, :joinpath, :tmpdir, "afile.txt")),
          (:line, 438, :none),
          (:(=), :files_stat, (:call, :stat, :file)),
          (:line, 439, :none),
          (:call, :close, (:call, :open, :file, "w")),
          (:line, 441, :none),
          (:(=), :newfile, (:call, :joinpath, :tmpdir, "bfile.txt")),
          (:line, 442, :none),
          (:call, :mv, :file, :newfile),
          (:line, 443, :none),
          (:(=), :newfile_stat, (:call, :stat, :file)),
          (:line, 445, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :file))),
          (:line, 446, :none),
          (:macrocall, Symbol("@test"), (:call, :isfile, :newfile)),
          (:line, 447, :none),
          (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
                  :samefile
                )), :files_stat, :newfile_stat)),
          (:line, 449, :none),
          (:(=), :file, :newfile),
          (:line, 452, :none),
          (:(=), :a_tmpdir, (:call, :mktempdir)),
          (:line, 453, :none),
          (:(=), :b_tmpdir, (:call, :joinpath, :tmpdir, "b_tmpdir")),
          (:line, 456, :none),
          (:(=), :a_stat, (:call, :stat, :a_tmpdir)),
          (:line, 459, :none),
          (:call, :mv, :a_tmpdir, :b_tmpdir),
          (:line, 460, :none),
          (:macrocall, Symbol("@test"), (:call, :isdir, :b_tmpdir)),
          (:line, 461, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :a_tmpdir))),
          (:line, 464, :none),
          (:(=), :b_stat, (:call, :stat, :b_tmpdir)),
          (:line, 465, :none),
          (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
                  :samefile
                )), :a_stat, :b_stat)),
          (:line, 467, :none),
          (:call, :rm, :b_tmpdir)
        ))),
    (:line, 472, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 473, :none),
        (:function, (:call, :setup_dirs, :tmpdir), (:block,
            (:line, 474, :none),
            (:(=), :srcdir, (:call, :joinpath, :tmpdir, "src")),
            (:line, 475, :none),
            (:(=), :hidden_srcdir, (:call, :joinpath, :tmpdir, ".hidden_srcdir")),
            (:line, 476, :none),
            (:(=), :hidden_srcsubdir, (:call, :joinpath, :hidden_srcdir, ".hidden_srcsubdir")),
            (:line, 477, :none),
            (:(=), :srcdir_cp, (:call, :joinpath, :tmpdir, "srcdir_cp")),
            (:line, 478, :none),
            (:call, :mkdir, :srcdir),
            (:line, 479, :none),
            (:call, :mkdir, :hidden_srcdir),
            (:line, 480, :none),
            (:call, :mkdir, :hidden_srcsubdir),
            (:line, 481, :none),
            (:(=), :abs_dirlink, (:call, :joinpath, :tmpdir, "abs_dirlink")),
            (:line, 482, :none),
            (:call, :symlink, (:call, :abspath, :srcdir), :abs_dirlink),
            (:line, 483, :none),
            (:call, :cd, :tmpdir),
            (:line, 484, :none),
            (:(=), :rel_dirlink, "rel_dirlink"),
            (:line, 485, :none),
            (:call, :symlink, "src", :rel_dirlink),
            (:line, 486, :none),
            (:call, :cd, :pwd_),
            (:line, 488, :none),
            (:(=), :cfile, (:call, :joinpath, :srcdir, "c.txt")),
            (:line, 489, :none),
            (:(=), :file_txt, "This is some text with unicode - 这是一个文件"),
            (:line, 490, :none),
            (:call, :write, :cfile, :file_txt),
            (:line, 491, :none),
            (:(=), :hidden_cfile, (:call, :joinpath, :hidden_srcsubdir, "c.txt")),
            (:line, 492, :none),
            (:call, :write, :hidden_cfile, :file_txt),
            (:line, 494, :none),
            (:(=), :abs_dirlink_cp, (:call, :joinpath, :tmpdir, "abs_dirlink_cp")),
            (:line, 495, :none),
            (:(=), :hidden_srcsubdir_cp, (:call, :joinpath, :tmpdir, ".hidden_srcsubdir_cp")),
            (:line, 496, :none),
            (:(=), :path_rel_dirlink, (:call, :joinpath, :tmpdir, :rel_dirlink)),
            (:line, 497, :none),
            (:(=), :path_rel_dirlink_cp, (:call, :joinpath, :tmpdir, "rel_dirlink_cp")),
            (:line, 499, :none),
            (:(=), :test_src_paths, (:vect, :srcdir, :hidden_srcsubdir, :abs_dirlink, :path_rel_dirlink)),
            (:line, 500, :none),
            (:(=), :test_cp_paths, (:vect, :srcdir_cp, :hidden_srcsubdir_cp, :abs_dirlink_cp, :path_rel_dirlink_cp)),
            (:line, 501, :none),
            (:return, (:tuple, :test_src_paths, :test_cp_paths))
          )),
        (:line, 504, :none),
        (:function, (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, false)), :s, :d), (:block,
            (:line, 505, :none),
            (:call, :cp, (:parameters, (:kw, :remove_destination, :remove_destination), (:kw, :follow_symlinks, false)), :s, :d),
            (:line, 506, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isdir, :s), (:call, :isdir, :d))),
            (:line, 507, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :s), (:call, :islink, :d))),
            (:line, 508, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :s), (:call, :readlink, :d)))),
            (:line, 509, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, (:call, :readlink, :s)), (:call, :isabspath, (:call, :readlink, :d))))),
            (:line, 511, :none),
            (:macrocall, Symbol("@test"), (:call, :in, "c.txt", (:call, :readdir, :d))),
            (:line, 512, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :readdir, :d)), 1))
          )),
        (:line, 515, :none),
        (:function, (:call, :mv_check, (:parameters, (:kw, :remove_destination, true)), :s, :d, :d_mv), (:block,
            (:line, 517, :none),
            (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :s, :d),
            (:line, 518, :none),
            (:(=), :stat_d, (:call, :stat, :d)),
            (:line, 520, :none),
            (:call, :mv, (:parameters, (:kw, :remove_destination, :remove_destination)), :d, :d_mv),
            (:line, 521, :none),
            (:(=), :stat_d_mv, (:call, :stat, :d_mv)),
            (:line, 523, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :d))),
            (:line, 525, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isdir, :s), (:call, :isdir, :d_mv))),
            (:line, 526, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :s), (:call, :islink, :d_mv))),
            (:line, 527, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :s), (:call, :readlink, :d_mv)))),
            (:line, 528, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, (:call, :readlink, :s)), (:call, :isabspath, (:call, :readlink, :d_mv))))),
            (:line, 530, :none),
            (:macrocall, Symbol("@test"), (:call, :in, "c.txt", (:call, :readdir, :d_mv))),
            (:line, 531, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :readdir, :d_mv)), 1)),
            (:line, 533, :none),
            (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
                    :samefile
                  )), :stat_d, :stat_d_mv))
          )),
        (:line, 539, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 541, :none),
              (:(=), :maindir1, (:call, :joinpath, :tmpdir, "maindir1")),
              (:line, 542, :none),
              (:(=), :maindir2, (:call, :joinpath, :tmpdir, "maindir2")),
              (:line, 543, :none),
              (:call, :mkdir, :maindir1),
              (:line, 544, :none),
              (:call, :mkdir, :maindir2),
              (:line, 545, :none),
              (:(=), (:tuple, :test_src_paths1, :test_new_paths1), (:call, :setup_dirs, :maindir1)),
              (:line, 546, :none),
              (:(=), (:tuple, :test_src_paths2, :test_new_paths2), (:call, :setup_dirs, :maindir2)),
              (:line, 547, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths1, :test_new_paths1)), (:block,
                  (:line, 548, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d)
                )),
              (:line, 550, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths2)), (:block,
                  (:line, 551, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d)
                )),
              (:line, 554, :none),
              (:for, (:(=), :s, :test_src_paths1), (:block,
                  (:line, 555, :none),
                  (:for, (:(=), :d, :test_new_paths2), (:block,
                      (:line, 556, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, false)), :s, :d)),
                      (:line, 557, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, false), (:kw, :follow_symlinks, true)), :s, :d))
                    ))
                )),
              (:line, 563, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths1)), (:block,
                  (:line, 564, :none),
                  (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, true)), :s, :d)
                )),
              (:line, 567, :none),
              (:(=), :emptydir, (:call, :joinpath, :maindir1, "emptydir")),
              (:line, 568, :none),
              (:call, :mkdir, :emptydir),
              (:line, 569, :none),
              (:for, (:(=), :d, :test_new_paths1), (:block,
                  (:line, 570, :none),
                  (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :emptydir, :d),
                  (:line, 572, :none),
                  (:macrocall, Symbol("@test"), (:&&, (:call, :isdir, :d), (:call, :!, (:call, :islink, :d)))),
                  (:line, 574, :none),
                  (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :readdir, :d)))
                ))
            ))),
        (:line, 578, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 580, :none),
              (:(=), :maindir1, (:call, :joinpath, :tmpdir, "maindir1")),
              (:line, 581, :none),
              (:(=), :maindir2, (:call, :joinpath, :tmpdir, "maindir2")),
              (:line, 582, :none),
              (:call, :mkdir, :maindir1),
              (:line, 583, :none),
              (:call, :mkdir, :maindir2),
              (:line, 584, :none),
              (:(=), (:tuple, :test_src_paths1, :test_new_paths1), (:call, :setup_dirs, :maindir1)),
              (:line, 585, :none),
              (:(=), (:tuple, :test_src_paths2, :test_new_paths2), (:call, :setup_dirs, :maindir2)),
              (:line, 586, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths1, :test_new_paths1)), (:block,
                  (:line, 587, :none),
                  (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, true)), :s, :d)
                )),
              (:line, 589, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths2)), (:block,
                  (:line, 590, :none),
                  (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, true)), :s, :d)
                )),
              (:line, 594, :none),
              (:for, (:(=), :s, :test_src_paths1), (:block,
                  (:line, 595, :none),
                  (:for, (:(=), :d, :test_new_paths2), (:block,
                      (:line, 596, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mv, (:parameters, (:kw, :remove_destination, false)), :s, :d))
                    ))
                )),
              (:line, 602, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths1)), (:block,
                  (:line, 603, :none),
                  (:(=), :d_mv, (:call, :joinpath, (:call, :dirname, :d), (:string, (:call, :basename, :d), "_mv"))),
                  (:line, 604, :none),
                  (:call, :mv_check, (:parameters, (:kw, :remove_destination, true)), :s, :d, :d_mv)
                ))
            ))),
        (:line, 610, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 611, :none),
              (:(=), :maindir, (:call, :joinpath, :tmpdir, "mytestdir")),
              (:line, 612, :none),
              (:call, :mkdir, :maindir),
              (:line, 613, :none),
              (:(=), :targetdir, (:call, :abspath, (:call, :joinpath, :maindir, "targetdir"))),
              (:line, 614, :none),
              (:call, :mkdir, :targetdir),
              (:line, 615, :none),
              (:(=), :subdir1, (:call, :joinpath, :maindir, "subdir1")),
              (:line, 616, :none),
              (:call, :mkdir, :subdir1),
              (:line, 618, :none),
              (:(=), :cfile, (:call, :abspath, (:call, :joinpath, :maindir, "c.txt"))),
              (:line, 619, :none),
              (:call, :write, :cfile, "This is c.txt - 这是一个文件"),
              (:line, 620, :none),
              (:call, :write, (:call, :abspath, (:call, :joinpath, :targetdir, "file1.txt")), "This is file1.txt - 这是一个文件"),
              (:line, 623, :none),
              (:(=), :abs_dl, (:call, :joinpath, :maindir, "abs_linkto_targetdir")),
              (:line, 624, :none),
              (:call, :symlink, :targetdir, :abs_dl),
              (:line, 626, :none),
              (:call, :cd, :subdir1),
              (:line, 627, :none),
              (:(=), :rel_dl, "rel_linkto_targetdir"),
              (:line, 628, :none),
              (:(=), :rel_dir, (:call, :joinpath, "..", "targetdir")),
              (:line, 629, :none),
              (:call, :symlink, :rel_dir, :rel_dl),
              (:line, 630, :none),
              (:call, :cd, :pwd_),
              (:line, 632, :none),
              (:(=), :maindir_new, (:call, :joinpath, (:call, :dirname, :maindir), "maindir_new")),
              (:line, 633, :none),
              (:(=), :maindir_new_keepsym, (:call, :joinpath, (:call, :dirname, :maindir), "maindir_new_keepsym")),
              (:line, 634, :none),
              (:call, :cp_and_test, :maindir, :maindir_new, true),
              (:line, 635, :none),
              (:call, :cp_and_test, :maindir, :maindir_new_keepsym, false),
              (:line, 639, :none),
              (:for, (:(=), :d, (:vect, :maindir_new, :maindir_new_keepsym, :maindir)), (:block,
                  (:line, 640, :none),
                  (:(=), :d_mv, (:call, :joinpath, (:call, :dirname, :d), (:string, (:call, :basename, :d), "_mv"))),
                  (:line, 641, :none),
                  (:call, :mv, (:parameters, (:kw, :remove_destination, true)), :d, :d_mv)
                ))
            ))),
        (:line, 648, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 649, :none),
              (:(=), (:tuple, :test_src_paths1, :test_new_paths1), (:call, :setup_dirs, :tmpdir)),
              (:line, 650, :none),
              (:(=), :dirs, (:vect, (:call, :joinpath, :tmpdir, "src"), (:call, :joinpath, :tmpdir, "abs_dirlink"), (:call, :joinpath, :tmpdir, "rel_dirlink"))),
              (:line, 651, :none),
              (:for, (:(=), :src, :dirs), (:block,
                  (:line, 652, :none),
                  (:for, (:(=), :dst, :dirs), (:block,
                      (:line, 654, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                              :cptree
                            )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :src, :dst)),
                      (:line, 655, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                              :cptree
                            )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :src, :dst)),
                      (:line, 657, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :src, :dst)),
                      (:line, 658, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :src, :dst)),
                      (:line, 660, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mv, (:parameters, (:kw, :remove_destination, true)), :src, :dst))
                    ))
                ))
            ))),
        (:line, 665, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 666, :none),
              (:(=), :none_existing_src, (:call, :joinpath, :tmpdir, "none_existing_src")),
              (:line, 667, :none),
              (:(=), :dst, (:call, :joinpath, :tmpdir, "dst")),
              (:line, 668, :none),
              (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :none_existing_src))),
              (:line, 670, :none),
              (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                      :cptree
                    )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :none_existing_src, :dst)),
              (:line, 671, :none),
              (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                      :cptree
                    )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :none_existing_src, :dst)),
              (:line, 673, :none),
              (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                    :UVError
                  )), (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :none_existing_src, :dst)),
              (:line, 674, :none),
              (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                    :UVError
                  )), (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :none_existing_src, :dst)),
              (:line, 676, :none),
              (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                    :UVError
                  )), (:call, :mv, (:parameters, (:kw, :remove_destination, true)), :none_existing_src, :dst))
            )))
      )),
    (:line, 682, :none),
    (:if, (:call, :!, (:call, :is_windows)), (:block,
        (:line, 683, :none),
        (:function, (:call, :setup_files, :tmpdir), (:block,
            (:line, 684, :none),
            (:(=), :srcfile, (:call, :joinpath, :tmpdir, "srcfile.txt")),
            (:line, 685, :none),
            (:(=), :hidden_srcfile, (:call, :joinpath, :tmpdir, ".hidden_srcfile.txt")),
            (:line, 686, :none),
            (:(=), :srcfile_new, (:call, :joinpath, :tmpdir, "srcfile_new.txt")),
            (:line, 687, :none),
            (:(=), :hidden_srcfile_new, (:call, :joinpath, :tmpdir, ".hidden_srcfile_new.txt")),
            (:line, 688, :none),
            (:(=), :file_txt, "This is some text with unicode - 这是一个文件"),
            (:line, 689, :none),
            (:call, :write, :srcfile, :file_txt),
            (:line, 690, :none),
            (:call, :write, :hidden_srcfile, :file_txt),
            (:line, 691, :none),
            (:(=), :abs_filelink, (:call, :joinpath, :tmpdir, "abs_filelink")),
            (:line, 692, :none),
            (:call, :symlink, (:call, :abspath, :srcfile), :abs_filelink),
            (:line, 693, :none),
            (:call, :cd, :tmpdir),
            (:line, 694, :none),
            (:(=), :rel_filelink, "rel_filelink"),
            (:line, 695, :none),
            (:call, :symlink, "srcfile.txt", :rel_filelink),
            (:line, 696, :none),
            (:call, :cd, :pwd_),
            (:line, 698, :none),
            (:(=), :abs_filelink_new, (:call, :joinpath, :tmpdir, "abs_filelink_new")),
            (:line, 699, :none),
            (:(=), :path_rel_filelink, (:call, :joinpath, :tmpdir, :rel_filelink)),
            (:line, 700, :none),
            (:(=), :path_rel_filelink_new, (:call, :joinpath, :tmpdir, "rel_filelink_new")),
            (:line, 702, :none),
            (:(=), :test_src_paths, (:vect, :srcfile, :hidden_srcfile, :abs_filelink, :path_rel_filelink)),
            (:line, 703, :none),
            (:(=), :test_new_paths, (:vect, :srcfile_new, :hidden_srcfile_new, :abs_filelink_new, :path_rel_filelink_new)),
            (:line, 704, :none),
            (:return, (:tuple, :test_src_paths, :test_new_paths, :file_txt))
          )),
        (:line, 707, :none),
        (:function, (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, false)), :s, :d, :file_txt), (:block,
            (:line, 708, :none),
            (:call, :cp, (:parameters, (:kw, :remove_destination, :remove_destination), (:kw, :follow_symlinks, false)), :s, :d),
            (:line, 709, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isfile, :s), (:call, :isfile, :d))),
            (:line, 710, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :s), (:call, :islink, :d))),
            (:line, 711, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :s), (:call, :readlink, :d)))),
            (:line, 712, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, (:call, :readlink, :s)), (:call, :isabspath, (:call, :readlink, :d))))),
            (:line, 714, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :readstring, :s), :(==), (:call, :readstring, :d), :(==), :file_txt))
          )),
        (:line, 717, :none),
        (:function, (:call, :mv_check, (:parameters, (:kw, :remove_destination, true)), :s, :d, :d_mv, :file_txt), (:block,
            (:line, 719, :none),
            (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :s, :d),
            (:line, 720, :none),
            (:(=), :stat_d, (:call, :stat, :d)),
            (:line, 722, :none),
            (:call, :mv, (:parameters, (:kw, :remove_destination, :remove_destination)), :d, :d_mv),
            (:line, 723, :none),
            (:(=), :stat_d_mv, (:call, :stat, :d_mv)),
            (:line, 725, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :d))),
            (:line, 727, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isfile, :s), (:call, :isfile, :d_mv))),
            (:line, 728, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :islink, :s), (:call, :islink, :d_mv))),
            (:line, 729, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlink, :s), (:call, :readlink, :d_mv)))),
            (:line, 730, :none),
            (:&&, (:call, :islink, :s), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, (:call, :readlink, :s)), (:call, :isabspath, (:call, :readlink, :d_mv))))),
            (:line, 732, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :readstring, :s), :(==), (:call, :readstring, :d_mv), :(==), :file_txt)),
            (:line, 734, :none),
            (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
                    :samefile
                  )), :stat_d, :stat_d_mv))
          )),
        (:line, 740, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 742, :none),
              (:(=), :maindir1, (:call, :joinpath, :tmpdir, "maindir1")),
              (:line, 743, :none),
              (:(=), :maindir2, (:call, :joinpath, :tmpdir, "maindir2")),
              (:line, 744, :none),
              (:call, :mkdir, :maindir1),
              (:line, 745, :none),
              (:call, :mkdir, :maindir2),
              (:line, 746, :none),
              (:(=), (:tuple, :test_src_paths1, :test_new_paths1, :file_txt1), (:call, :setup_files, :maindir1)),
              (:line, 747, :none),
              (:(=), (:tuple, :test_src_paths2, :test_new_paths2, :file_txt2), (:call, :setup_files, :maindir2)),
              (:line, 748, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths1, :test_new_paths1)), (:block,
                  (:line, 749, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d, :file_txt1)
                )),
              (:line, 751, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths2)), (:block,
                  (:line, 752, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d, :file_txt2)
                )),
              (:line, 755, :none),
              (:for, (:(=), :s, :test_src_paths1), (:block,
                  (:line, 756, :none),
                  (:for, (:(=), :d, :test_new_paths2), (:block,
                      (:line, 757, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, false)), :s, :d)),
                      (:line, 758, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, false), (:kw, :follow_symlinks, true)), :s, :d))
                    ))
                )),
              (:line, 764, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths1)), (:block,
                  (:line, 765, :none),
                  (:call, :cp_follow_symlinks_false_check, (:parameters, (:kw, :remove_destination, true)), :s, :d, :file_txt2)
                )),
              (:line, 768, :none),
              (:(=), :otherfile, (:call, :joinpath, :tmpdir, "otherfile.txt")),
              (:line, 769, :none),
              (:(=), :otherfile_content, "This is otherfile.txt with unicode - 这是一个文件"),
              (:line, 770, :none),
              (:call, :write, :otherfile, :otherfile_content),
              (:line, 771, :none),
              (:for, (:(=), :d, :test_new_paths1), (:block,
                  (:line, 772, :none),
                  (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :otherfile, :d),
                  (:line, 774, :none),
                  (:macrocall, Symbol("@test"), (:&&, (:call, :isfile, :d), (:call, :!, (:call, :islink, :d)))),
                  (:line, 776, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :d), :otherfile_content))
                ))
            ))),
        (:line, 780, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 782, :none),
              (:(=), :maindir1, (:call, :joinpath, :tmpdir, "maindir1")),
              (:line, 783, :none),
              (:(=), :maindir2, (:call, :joinpath, :tmpdir, "maindir2")),
              (:line, 784, :none),
              (:call, :mkdir, :maindir1),
              (:line, 785, :none),
              (:call, :mkdir, :maindir2),
              (:line, 786, :none),
              (:(=), (:tuple, :test_src_paths1, :test_new_paths1, :file_txt1), (:call, :setup_files, :maindir1)),
              (:line, 787, :none),
              (:(=), (:tuple, :test_src_paths2, :test_new_paths2, :file_txt2), (:call, :setup_files, :maindir2)),
              (:line, 788, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths1, :test_new_paths1)), (:block,
                  (:line, 789, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d, :file_txt1)
                )),
              (:line, 791, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths2)), (:block,
                  (:line, 792, :none),
                  (:call, :cp_follow_symlinks_false_check, :s, :d, :file_txt2)
                )),
              (:line, 795, :none),
              (:for, (:(=), :s, :test_src_paths1), (:block,
                  (:line, 796, :none),
                  (:for, (:(=), :d, :test_new_paths2), (:block,
                      (:line, 797, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mv, (:parameters, (:kw, :remove_destination, false)), :s, :d))
                    ))
                )),
              (:line, 803, :none),
              (:for, (:(=), (:tuple, :s, :d), (:call, :zip, :test_src_paths2, :test_new_paths1)), (:block,
                  (:line, 804, :none),
                  (:(=), :d_mv, (:call, :joinpath, (:call, :dirname, :d), (:string, (:call, :basename, :d), "_mv"))),
                  (:line, 805, :none),
                  (:call, :mv_check, (:parameters, (:kw, :remove_destination, true)), :s, :d, :d_mv, :file_txt2)
                ))
            ))),
        (:line, 811, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 812, :none),
              (:(=), :maindir, (:call, :joinpath, :tmpdir, "mytestdir")),
              (:line, 813, :none),
              (:call, :mkdir, :maindir),
              (:line, 814, :none),
              (:(=), :targetdir, (:call, :abspath, (:call, :joinpath, :maindir, "targetdir"))),
              (:line, 815, :none),
              (:call, :mkdir, :targetdir),
              (:line, 816, :none),
              (:(=), :subdir1, (:call, :joinpath, :maindir, "subdir1")),
              (:line, 817, :none),
              (:call, :mkdir, :subdir1),
              (:line, 819, :none),
              (:(=), :cfile, (:call, :abspath, (:call, :joinpath, :maindir, "c.txt"))),
              (:line, 820, :none),
              (:call, :write, :cfile, "This is c.txt - 这是一个文件"),
              (:line, 821, :none),
              (:call, :write, (:call, :abspath, (:call, :joinpath, :targetdir, "file1.txt")), "This is file1.txt - 这是一个文件"),
              (:line, 824, :none),
              (:(=), :abs_fl, (:call, :joinpath, :maindir, "abs_linkto_c.txt")),
              (:line, 825, :none),
              (:call, :symlink, :cfile, :abs_fl),
              (:line, 826, :none),
              (:(=), :abs_dl, (:call, :joinpath, :maindir, "abs_linkto_targetdir")),
              (:line, 827, :none),
              (:call, :symlink, :targetdir, :abs_dl),
              (:line, 829, :none),
              (:call, :cd, :subdir1),
              (:line, 830, :none),
              (:(=), :rel_fl, "rel_linkto_c.txt"),
              (:line, 831, :none),
              (:(=), :rel_file, (:call, :joinpath, "..", "c.txt")),
              (:line, 832, :none),
              (:call, :symlink, :rel_file, :rel_fl),
              (:line, 833, :none),
              (:(=), :rel_dl, "rel_linkto_targetdir"),
              (:line, 834, :none),
              (:(=), :rel_dir, (:call, :joinpath, "..", "targetdir")),
              (:line, 835, :none),
              (:call, :symlink, :rel_dir, :rel_dl),
              (:line, 836, :none),
              (:(=), :rel_file_read_txt, (:call, :readstring, :rel_file)),
              (:line, 837, :none),
              (:call, :cd, :pwd_),
              (:line, 839, :none),
              (:(=), :copytodir, (:call, :joinpath, :tmpdir, "copytodir")),
              (:line, 840, :none),
              (:call, :mkdir, :copytodir),
              (:line, 841, :none),
              (:call, :cp, :cfile, (:call, :joinpath, :copytodir, (:call, :basename, :cfile))),
              (:line, 842, :none),
              (:(=), :subdir_test, (:call, :joinpath, :copytodir, "subdir_test")),
              (:line, 843, :none),
              (:call, :mkdir, :subdir_test),
              (:line, 844, :none),
              (:call, :cp, (:parameters, (:kw, :follow_symlinks, false)), :targetdir, (:call, :joinpath, :copytodir, (:call, :basename, :targetdir))),
              (:line, 846, :none),
              (:(=), :maindir_new, (:call, :joinpath, (:call, :dirname, :maindir), "maindir_new")),
              (:line, 847, :none),
              (:(=), :maindir_new_keepsym, (:call, :joinpath, (:call, :dirname, :maindir), "maindir_new_keepsym")),
              (:line, 848, :none),
              (:call, :cp_and_test, :maindir, :maindir_new, true),
              (:line, 849, :none),
              (:call, :cp_and_test, :maindir, :maindir_new_keepsym, false),
              (:line, 852, :none),
              (:(=), :rel_flpath, (:call, :joinpath, :subdir1, :rel_fl)),
              (:line, 854, :none),
              (:call, :cp_and_test, :cfile, (:call, :joinpath, :copytodir, "cfile_new.txt"), true),
              (:line, 855, :none),
              (:call, :cp_and_test, :cfile, (:call, :joinpath, :copytodir, "cfile_new_keepsym.txt"), false),
              (:line, 857, :none),
              (:call, :cp_and_test, :abs_fl, (:call, :joinpath, :copytodir, "abs_fl_new.txt"), true),
              (:line, 858, :none),
              (:call, :cp_and_test, :abs_fl, (:call, :joinpath, :copytodir, "abs_fl_new_keepsym.txt"), false),
              (:line, 860, :none),
              (:call, :cp_and_test, :rel_flpath, (:call, :joinpath, :subdir_test, "rel_fl_new.txt"), true),
              (:line, 861, :none),
              (:call, :cp_and_test, :rel_flpath, (:call, :joinpath, :subdir_test, "rel_fl_new_keepsym.txt"), false),
              (:line, 866, :none),
              (:for, (:(=), :d, (:vect, :copytodir, :maindir_new, :maindir_new_keepsym, :maindir)), (:block,
                  (:line, 867, :none),
                  (:(=), :d_mv, (:call, :joinpath, (:call, :dirname, :d), (:string, (:call, :basename, :d), "_mv"))),
                  (:line, 868, :none),
                  (:call, :mv, (:parameters, (:kw, :remove_destination, true)), :d, :d_mv)
                ))
            ))),
        (:line, 874, :none),
        (:call, :mktempdir, (:->, (:tuple, :tmpdir), (:block,
              (:line, 875, :none),
              (:(=), (:tuple, :test_src_paths, :test_new_paths, :file_txt), (:call, :setup_files, :tmpdir)),
              (:line, 876, :none),
              (:(=), :files, (:vect, (:call, :joinpath, :tmpdir, "srcfile.txt"), (:call, :joinpath, :tmpdir, "abs_filelink"), (:call, :joinpath, :tmpdir, "rel_filelink"))),
              (:line, 877, :none),
              (:for, (:(=), :src, :files), (:block,
                  (:line, 878, :none),
                  (:for, (:(=), :dst, :files), (:block,
                      (:line, 880, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                              :cptree
                            )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :src, :dst)),
                      (:line, 881, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                              :cptree
                            )), (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :src, :dst)),
                      (:line, 883, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, false)), :src, :dst)),
                      (:line, 884, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, (:parameters, (:kw, :remove_destination, true), (:kw, :follow_symlinks, true)), :src, :dst)),
                      (:line, 886, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mv, (:parameters, (:kw, :remove_destination, true)), :src, :dst))
                    ))
                ))
            )))
      )),
    (:line, 898, :none),
    (:function, (:call, :test_LibcFILE, :FILEp), (:block,
        (:line, 899, :none),
        (:(=), :buf, (:call, (:curly, :Array, :UInt8), 8)),
        (:line, 900, :none),
        (:(=), :str, (:ccall, (:quote, #QuoteNode
              :fread
            ), :Csize_t, (:tuple, (:curly, :Ptr, :Void), :Csize_t, :Csize_t, (:curly, :Ptr, :Void)), :buf, 1, 8, :FILEp)),
        (:line, 901, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, :buf), "Hello, w")),
        (:line, 902, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :FILEp), 8)),
        (:line, 903, :none),
        (:call, :seek, :FILEp, 5),
        (:line, 904, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :FILEp), 5)),
        (:line, 905, :none),
        (:call, :close, :FILEp)
      )),
    (:line, 908, :none),
    (:let, (:block,
        (:line, 909, :none),
        (:call, :write, :f, "Hello, world!"),
        (:line, 910, :none),
        (:call, :close, :f),
        (:line, 911, :none),
        (:(=), :f, (:call, :open, :file, "r")),
        (:line, 912, :none),
        (:call, :test_LibcFILE, (:call, :convert, (:., :Libc, (:quote, #QuoteNode
                :FILE
              )), :f)),
        (:line, 913, :none),
        (:call, :close, :f),
        (:line, 914, :none),
        (:if, (:call, :is_windows), (:block,
            (:line, 915, :none),
            (:(=), :f, (:call, :RawFD, (:ccall, (:quote, #QuoteNode
                    :_open
                  ), :Cint, (:tuple, :Cstring, :Cint), :file, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_RDONLY
                    )))))
          ), (:block,
            (:line, 917, :none),
            (:(=), :f, (:call, :RawFD, (:ccall, (:quote, #QuoteNode
                    :open
                  ), :Cint, (:tuple, :Cstring, :Cint), :file, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_RDONLY
                    )))))
          )),
        (:line, 919, :none),
        (:call, :test_LibcFILE, (:call, (:., :Libc, (:quote, #QuoteNode
                :FILE
              )), :f, (:call, (:., :Libc, (:quote, #QuoteNode
                  :modestr
                )), true, false)))
      ), (:(=), :f, (:call, :open, :file, "w"))),
    (:line, 923, :none),
    (:for, (:(=), :f, (:tuple, :mkdir, :cd, (:., (:., :Base, (:quote, #QuoteNode
                :Filesystem
              )), (:quote, #QuoteNode
              :unlink
            )), :readlink, :rm, :touch, :readdir, :mkpath, :stat, :lstat, :ctime, :mtime, :filemode, :filesize, :uperm, :gperm, :operm, :touch, :isblockdev, :ischardev, :isdir, :isfifo, :isfile, :islink, :ispath, :issetgid, :issetuid, :issocket, :issticky, :realpath, :watch_file, :poll_file)), (:block,
        (:line, 924, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :f, "adir\0bad"))
      )),
    (:line, 926, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :chmod, "ba\0d", 0x92)),
    (:line, 927, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :open, "ba\0d", "w")),
    (:line, 928, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :cp, :file, "ba\0d")),
    (:line, 929, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mv, :file, "ba\0d")),
    (:line, 930, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 931, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :symlink, :file, "ba\0d"))
      ), (:block,
        (:line, 933, :none),
        (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :symlink, :file, "ba\0d"))
      )),
    (:line, 935, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :download, "good", "ba\0d")),
    (:line, 936, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :download, "ba\0d", "good")),
    (:line, 942, :none),
    (:(=), :dirwalk, (:call, :mktempdir)),
    (:line, 943, :none),
    (:call, :cd, (:->, (:tuple,), (:block,
          (:line, 944, :none),
          (:for, (:(=), :i, (:(:), 1, 2)), (:block,
              (:line, 945, :none),
              (:call, :mkdir, (:string, "sub_dir", :i)),
              (:line, 946, :none),
              (:call, :open, (:->, (:tuple, :f), (:block,
                    (:line, 946, :none)
                  )), (:string, "file", :i), "w"),
              (:line, 948, :none),
              (:call, :mkdir, (:call, :joinpath, "sub_dir1", (:string, "subsub_dir", :i))),
              (:line, 949, :none),
              (:call, :touch, (:call, :joinpath, "sub_dir1", (:string, "file", :i)))
            )),
          (:line, 951, :none),
          (:call, :touch, (:call, :joinpath, "sub_dir2", "file_dir2")),
          (:line, 952, :none),
          (:(=), :has_symlinks, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                      :windows_version
                    ))), (:., :Sys, (:quote, #QuoteNode
                    :WINDOWS_VISTA_VER
                  ))))),
          (:line, 953, :none),
          (:(=), :follow_symlink_vec, (:if, :has_symlinks, (:vect, true, false), (:vect, false))),
          (:line, 954, :none),
          (:&&, :has_symlinks, (:call, :symlink, (:call, :abspath, "sub_dir2"), (:call, :joinpath, "sub_dir1", "link"))),
          (:line, 955, :none),
          (:for, (:(=), :follow_symlinks, :follow_symlink_vec), (:block,
              (:line, 956, :none),
              (:(=), :task, (:call, :walkdir, ".", (:kw, :follow_symlinks, :follow_symlinks))),
              (:line, 957, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 958, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, ".")),
              (:line, 959, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect, "sub_dir1", "sub_dir2"))),
              (:line, 960, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2"))),
              (:line, 962, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 963, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1"))),
              (:line, 964, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:if, :has_symlinks, (:vect, "link", "subsub_dir1", "subsub_dir2"), (:vect, "subsub_dir1", "subsub_dir2")))),
              (:line, 965, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2"))),
              (:line, 967, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 968, :none),
              (:if, :follow_symlinks, (:block,
                  (:line, 969, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1", "link"))),
                  (:line, 970, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
                  (:line, 971, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file_dir2"))),
                  (:line, 972, :none),
                  (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task))
                )),
              (:line, 974, :none),
              (:for, (:(=), :i, (:(:), 1, 2)), (:block,
                  (:line, 975, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1", (:string, "subsub_dir", :i)))),
                  (:line, 976, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
                  (:line, 977, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect,))),
                  (:line, 978, :none),
                  (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task))
                )),
              (:line, 981, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir2"))),
              (:line, 982, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
              (:line, 983, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file_dir2")))
            )),
          (:line, 986, :none),
          (:for, (:(=), :follow_symlinks, :follow_symlink_vec), (:block,
              (:line, 987, :none),
              (:(=), :task, (:call, :walkdir, ".", (:kw, :follow_symlinks, :follow_symlinks), (:kw, :topdown, false))),
              (:line, 988, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 989, :none),
              (:if, :follow_symlinks, (:block,
                  (:line, 990, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1", "link"))),
                  (:line, 991, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
                  (:line, 992, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file_dir2"))),
                  (:line, 993, :none),
                  (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task))
                )),
              (:line, 995, :none),
              (:for, (:(=), :i, (:(:), 1, 2)), (:block,
                  (:line, 996, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1", (:string, "subsub_dir", :i)))),
                  (:line, 997, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
                  (:line, 998, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect,))),
                  (:line, 999, :none),
                  (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task))
                )),
              (:line, 1001, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir1"))),
              (:line, 1002, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:if, :has_symlinks, (:vect, "link", "subsub_dir1", "subsub_dir2"), (:vect, "subsub_dir1", "subsub_dir2")))),
              (:line, 1003, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2"))),
              (:line, 1005, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 1006, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir2"))),
              (:line, 1007, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
              (:line, 1008, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file_dir2"))),
              (:line, 1010, :none),
              (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task)),
              (:line, 1011, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :root, ".")),
              (:line, 1012, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect, "sub_dir1", "sub_dir2"))),
              (:line, 1013, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2")))
            )),
          (:line, 1016, :none),
          (:(=), :task_error, (:call, :walkdir, ".")),
          (:line, 1017, :none),
          (:(=), :task_noerror, (:call, :walkdir, ".", (:kw, :onerror, (:->, :x, (:block,
                    (:line, 1017, :none),
                    :x
                  ))))),
          (:line, 1018, :none),
          (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task_error)),
          (:line, 1019, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :root, ".")),
          (:line, 1020, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect, "sub_dir1", "sub_dir2"))),
          (:line, 1021, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2"))),
          (:line, 1023, :none),
          (:call, :rm, (:call, :joinpath, "sub_dir1"), (:kw, :recursive, true)),
          (:line, 1024, :none),
          (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :consume, :task_error)),
          (:line, 1026, :none),
          (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task_noerror)),
          (:line, 1027, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :root, ".")),
          (:line, 1028, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect, "sub_dir1", "sub_dir2"))),
          (:line, 1029, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file1", "file2"))),
          (:line, 1031, :none),
          (:(=), (:tuple, :root, :dirs, :files), (:call, :consume, :task_noerror)),
          (:line, 1032, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :root, (:call, :joinpath, ".", "sub_dir2"))),
          (:line, 1033, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :dirs, (:vect,))),
          (:line, 1034, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :files, (:vect, "file_dir2")))
        )), :dirwalk),
    (:line, 1036, :none),
    (:call, :rm, :dirwalk, (:kw, :recursive, true)),
    (:line, 1041, :none),
    (:if, (:call, :!, (:call, :is_windows)), (:block,
        (:line, 1042, :none),
        (:call, :rm, :link),
        (:line, 1043, :none),
        (:call, :rm, :rellink)
      )),
    (:line, 1045, :none),
    (:if, (:||, (:call, :!, (:call, :is_windows)), (:call, :(>=), (:call, (:., :Sys, (:quote, #QuoteNode
                :windows_version
              ))), (:., :Sys, (:quote, #QuoteNode
              :WINDOWS_VISTA_VER
            )))), (:block,
        (:line, 1046, :none),
        (:call, :rm, :dirlink),
        (:line, 1047, :none),
        (:call, :rm, :relsubdirlink)
      )),
    (:line, 1049, :none),
    (:call, :rm, :file),
    (:line, 1050, :none),
    (:call, :rm, :subdir),
    (:line, 1051, :none),
    (:call, :rm, :subdir2),
    (:line, 1052, :none),
    (:call, :rm, :dir),
    (:line, 1054, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :file))),
    (:line, 1055, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :ispath, :dir))),
    (:line, 1058, :none),
    (:let, (:block,
        (:line, 1059, :none),
        (:(=), :w, (:call, :open, :n, "a")),
        (:line, 1060, :none),
        (:(=), :io, (:call, :open, :n)),
        (:line, 1061, :none),
        (:call, :write, :w, "A"),
        (:line, 1061, :none),
        (:call, :flush, :w),
        (:line, 1062, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io), (:ref, :UInt8, 0x41))),
        (:line, 1063, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io), (:ref, :UInt8))),
        (:line, 1064, :none),
        (:call, :write, :w, "A"),
        (:line, 1064, :none),
        (:call, :flush, :w),
        (:line, 1065, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io), (:ref, :UInt8, 0x41))),
        (:line, 1066, :none),
        (:call, :close, :io),
        (:line, 1066, :none),
        (:call, :close, :w),
        (:line, 1067, :none),
        (:call, :rm, :n)
      ), (:(=), :n, (:call, :tempname))),
    (:line, 1071, :none),
    (:function, (:call, :test_12992), (:block,
        (:line, 1072, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1073, :none),
        (:call, :close, :pfw),
        (:line, 1074, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1075, :none),
        (:call, :close, :pfw),
        (:line, 1076, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1077, :none),
        (:call, :close, :pfw),
        (:line, 1078, :none),
        (:call, :gc),
        (:line, 1079, :none),
        (:call, :gc)
      )),
    (:line, 1083, :none),
    (:function, (:call, :test2_12992), (:block,
        (:line, 1084, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1085, :none),
        (:call, :close, :pfw),
        (:line, 1086, :none),
        (:call, :close, :pfw),
        (:line, 1087, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1088, :none),
        (:call, :close, :pfw),
        (:line, 1089, :none),
        (:call, :close, :pfw),
        (:line, 1090, :none),
        (:(=), :pfw, (:call, :PollingFileWatcher, (:macrocall, Symbol("@__FILE__")), 0.01)),
        (:line, 1091, :none),
        (:call, :close, :pfw),
        (:line, 1092, :none),
        (:call, :close, :pfw),
        (:line, 1093, :none),
        (:call, :gc),
        (:line, 1094, :none),
        (:call, :gc)
      )),
    (:line, 1097, :none),
    (:call, :test_12992),
    (:line, 1098, :none),
    (:call, :test_12992),
    (:line, 1099, :none),
    (:call, :test_12992),
    (:line, 1101, :none),
    (:call, :test2_12992),
    (:line, 1102, :none),
    (:call, :test2_12992),
    (:line, 1103, :none),
    (:call, :test2_12992),
    (:line, 1106, :none),
    (:if, (:call, :!, (:call, :is_windows)), (:block,
        (:line, 1107, :none),
        (:function, (:call, :test_13559), (:block,
            (:line, 1108, :none),
            (:(=), :fn, (:call, :tempname)),
            (:line, 1109, :none),
            (:call, :run, (:macrocall, Symbol("@cmd"), "mkfifo \$fn")),
            (:line, 1111, :none),
            (:(=), :writer_cmds, (:string, "x=open(\"", :fn, "\", \"w\"); for i=1:127 write(x,0xaa); flush(x); sleep(0.1) end; close(x); quit()")),
            (:line, 1112, :none),
            (:call, :open, (:call, :pipeline, (:macrocall, Symbol("@cmd"), "\$(Base.julia_cmd()) --startup-file=no -e \$writer_cmds"), (:kw, :stderr, :STDERR))),
            (:line, 1114, :none),
            (:(=), :r, (:call, :open, :fn, "r")),
            (:line, 1116, :none),
            (:for, (:(=), :i, (:(:), 1, 15)), (:block,
                (:line, 1117, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :r, :Int64), -6148914691236517206))
              )),
            (:line, 1120, :none),
            (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :r, :Int64)),
            (:line, 1121, :none),
            (:call, :close, :r),
            (:line, 1122, :none),
            (:call, :rm, :fn)
          )),
        (:line, 1124, :none),
        (:call, :test_13559)
      )),
    (:line, 1126, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mkpath, "fakepath", -1))
  ))