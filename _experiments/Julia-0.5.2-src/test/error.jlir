(:quote, (:block,
    (:line, 3, :none),
    (:let, (:block,
        (:line, 4, :none),
        (:function, (:call, :foo_error, :c, :n), (:block,
            (:line, 5, :none),
            (:+=, (:ref, :c, 1), 1),
            (:line, 6, :none),
            (:if, (:call, :(<=), (:ref, :c, 1), :n), (:block,
                (:line, 7, :none),
                (:call, :error, "foo")
              )),
            (:line, 9, :none),
            (:return, 7)
          )),
        (:line, 13, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:call, :retry, :foo_error), :c, 0), 7)),
        (:line, 15, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 1)),
        (:line, 18, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 19, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:call, :retry, (:parameters, (:kw, :n, 1)), :foo_error), :c, 1), 7)),
        (:line, 20, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 2)),
        (:line, 23, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 24, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 24, :none),
              (:call, (:call, :retry, (:parameters, (:kw, :n, 2)), :foo_error), :c, 3)
            ), :e, (:block,
              (:line, 24, :none),
              :e
            ))),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 3)),
        (:line, 28, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 29, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 29, :none),
              (:call, (:call, :retry, :foo_error, :ErrorException), :c, 2)
            ), :e, (:block,
              (:line, 29, :none),
              :e
            ))),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :ex), :ErrorException)),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 2)),
        (:line, 34, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 35, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 35, :none),
              (:call, (:call, :retry, :foo_error, (:->, :e, (:block,
                      (:line, 35, :none),
                      (:call, :(==), (:., :e, (:quote, #QuoteNode
                            :msg
                          )), "foo")
                    ))), :c, 2)
            ), :e, (:block,
              (:line, 35, :none),
              :e
            ))),
        (:line, 36, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :ex), :ErrorException)),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 38, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 2)),
        (:line, 41, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 42, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 42, :none),
              (:call, (:call, :retry, (:parameters, (:kw, :n, 3)), :foo_error, (:->, :e, (:block,
                      (:line, 42, :none),
                      (:call, :(==), (:., :e, (:quote, #QuoteNode
                            :msg
                          )), "bar")
                    ))), :c, 2)
            ), :e, (:block,
              (:line, 42, :none),
              :e
            ))),
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :ex), :ErrorException)),
        (:line, 44, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 45, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 1)),
        (:line, 47, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 48, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 48, :none),
              (:call, (:call, :retry, :foo_error, (:->, :e, (:block,
                      (:line, 48, :none),
                      (:call, :(==), (:., :e, (:quote, #QuoteNode
                            :http_status_code
                          )), "503")
                    ))), :c, 2)
            ), :e, (:block,
              (:line, 48, :none),
              :e
            ))),
        (:line, 49, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :ex), :ErrorException)),
        (:line, 50, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 51, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 1)),
        (:line, 53, :none),
        (:(=), :c, (:vect, 0)),
        (:line, 54, :none),
        (:(=), :ex, (:try, (:block,
              (:line, 54, :none),
              (:call, (:call, :retry, :foo_error, :SystemError), :c, 2)
            ), :e, (:block,
              (:line, 54, :none),
              :e
            ))),
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :ex), :ErrorException)),
        (:line, 56, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                :msg
              )), "foo")),
        (:line, 57, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :c, 1), 1))
      ))
  ))