(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :TestBroadcastInternals, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:toplevel, (:using, :Base, :Broadcast, :broadcast_shape), (:using, :Base, :Broadcast, :check_broadcast_shape), (:using, :Base, :Broadcast, :newindex), (:using, :Base, :Broadcast, :_bcs), (:using, :Base, :Broadcast, :_bcsm)),
        (:line, 6, :none),
        (:toplevel, (:using, :Base, :Test), (:using, :Base, :OneTo)),
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, 3, 5), (:tuple, 3, 5))), (:tuple, 3, 5))),
        (:line, 9, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, 3, 1), (:tuple, 3, 5))), (:tuple, 3, 5))),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, 3), (:tuple, 3, 5))), (:tuple, 3, 5))),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, 3, 5), (:tuple, 3))), (:tuple, 3, 5))),
        (:line, 12, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :_bcs, (:tuple,), (:tuple, 3, 5), (:tuple, 4, 5))),
        (:line, 13, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :_bcs, (:tuple,), (:tuple, 3, 5), (:tuple, 3, 4))),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1), (:(:), 2, 5)), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))),
        (:line, 15, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1), (:(:), 2, 5)), (:tuple, 1, (:(:), 2, 5)))), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1), 1), (:tuple, 1, (:(:), 2, 5)))), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))),
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1)), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))),
        (:line, 18, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1), (:(:), 2, 6)), (:tuple, (:(:), -1, 1), (:(:), 2, 5)))),
        (:line, 19, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :_bcs, (:tuple,), (:tuple, (:(:), -1, 1), (:(:), 2, 5)), (:tuple, 2, (:(:), 2, 5)))),
        (:line, 21, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :broadcast_shape, (:call, :zeros, 3, 4), (:call, :zeros, 3, 4))), (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 4)))),
        (:line, 22, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :broadcast_shape, (:call, :zeros, 3, 4), (:call, :zeros, 3))), (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 4)))),
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :broadcast_shape, (:call, :zeros, 3), (:call, :zeros, 3, 4))), (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 4)))),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :broadcast_shape, (:call, :zeros, 3), (:call, :zeros, 1, 4), (:call, :zeros, 1))), (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 4)))),
        (:line, 26, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 5)),
        (:line, 27, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 1)),
        (:line, 28, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3)),
        (:line, 29, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 5), (:call, :zeros, 3)),
        (:line, 30, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 5), 1),
        (:line, 31, :none),
        (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), 5, 2),
        (:line, 32, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 2, 5))),
        (:line, 33, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 4))),
        (:line, 34, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 4, 2))),
        (:line, 35, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:call, :OneTo, 3), (:call, :OneTo, 5)), (:call, :zeros, 3, 5), (:call, :zeros, 2))),
        (:line, 37, :none),
        (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), (:tuple, (:(:), -1, 1), (:(:), 6, 9))),
        (:line, 38, :none),
        (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), (:tuple, (:(:), -1, 1), 1)),
        (:line, 39, :none),
        (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), (:tuple, 1, (:(:), 6, 9))),
        (:line, 40, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), (:tuple, -1, (:(:), 6, 9)))),
        (:line, 41, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), (:tuple, (:(:), -1, 1), 6))),
        (:line, 42, :none),
        (:call, :check_broadcast_shape, (:tuple, (:(:), -1, 1), (:(:), 6, 9)), 1),
        (:line, 44, :none),
        (:(=), (:call, :ci, :x), (:block,
            (:line, 44, :none),
            (:call, :CartesianIndex, :x)
          )),
        (:line, 45, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, true, true), (:tuple, -1, -1))), (:call, :ci, (:tuple, 2, 2)))),
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, true, false), (:tuple, -1, -1))), (:call, :ci, (:tuple, 2, -1)))),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, false, true), (:tuple, -1, -1))), (:call, :ci, (:tuple, -1, 2)))),
        (:line, 48, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, false, false), (:tuple, -1, -1))), (:call, :ci, (:tuple, -1, -1)))),
        (:line, 49, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, true), (:tuple, -1, -1))), (:call, :ci, (:tuple, 2)))),
        (:line, 50, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, true), (:tuple, -1))), (:call, :ci, (:tuple, 2)))),
        (:line, 51, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple, false), (:tuple, -1))), (:call, :ci, (:tuple, -1)))),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :newindex, (:call, :ci, (:tuple, 2, 2)), (:tuple,), (:tuple,))), (:call, :ci, (:tuple,))))
      )),
    (:line, 56, :none),
    (:function, (:call, :as_sub, (:(::), :x, :AbstractVector)), (:block,
        (:line, 57, :none),
        (:(=), :y, (:call, :similar, :x, (:call, :eltype, :x), (:call, :tuple, (:..., (:call, :*, (:vect, (:..., (:call, :size, :x))), 2))))),
        (:line, 58, :none),
        (:(=), :y, (:call, :view, :y, (:(:), 2, 2, (:call, :length, :y)))),
        (:line, 59, :none),
        (:(=), (:ref, :y, :(:)), (:ref, :x, :(:))),
        (:line, 60, :none),
        :y
      )),
    (:line, 62, :none),
    (:function, (:call, :as_sub, (:(::), :x, :AbstractMatrix)), (:block,
        (:line, 63, :none),
        (:(=), :y, (:call, :similar, :x, (:call, :eltype, :x), (:call, :tuple, (:..., (:call, :*, (:vect, (:..., (:call, :size, :x))), 2))))),
        (:line, 64, :none),
        (:(=), :y, (:call, :view, :y, (:(:), 2, 2, (:call, :size, :y, 1)), (:(:), 2, 2, (:call, :size, :y, 2)))),
        (:line, 65, :none),
        (:for, (:(=), :j, (:(:), 1, (:call, :size, :x, 2))), (:block,
            (:line, 66, :none),
            (:for, (:(=), :i, (:(:), 1, (:call, :size, :x, 1))), (:block,
                (:line, 67, :none),
                (:(=), (:ref, :y, :i, :j), (:ref, :x, :i, :j))
              ))
          )),
        (:line, 70, :none),
        :y
      )),
    (:line, 72, :none),
    (:function, (:call, (:curly, :as_sub, :T), (:(::), :x, (:curly, :AbstractArray, :T, 3))), (:block,
        (:line, 73, :none),
        (:(=), :y, (:call, :similar, :x, (:call, :eltype, :x), (:call, :tuple, (:..., (:call, :*, (:vect, (:..., (:call, :size, :x))), 2))))),
        (:line, 74, :none),
        (:(=), :y, (:call, :view, :y, (:(:), 2, 2, (:call, :size, :y, 1)), (:(:), 2, 2, (:call, :size, :y, 2)), (:(:), 2, 2, (:call, :size, :y, 3)))),
        (:line, 75, :none),
        (:for, (:(=), :k, (:(:), 1, (:call, :size, :x, 3))), (:block,
            (:line, 76, :none),
            (:for, (:(=), :j, (:(:), 1, (:call, :size, :x, 2))), (:block,
                (:line, 77, :none),
                (:for, (:(=), :i, (:(:), 1, (:call, :size, :x, 1))), (:block,
                    (:line, 78, :none),
                    (:(=), (:ref, :y, :i, :j, :k), (:ref, :x, :i, :j, :k))
                  ))
              ))
          )),
        (:line, 82, :none),
        :y
      )),
    (:line, 85, :none),
    (:(=), (:call, :bittest, (:(::), :f, :Function), (:(::), :ewf, :Function), (:..., :a)), (:block,
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ewf, (:..., :a)), (:call, :BitArray, (:call, :broadcast, :f, (:..., :a)))))
      )),
    (:line, 86, :none),
    (:(=), :n1, 21),
    (:line, 87, :none),
    (:(=), :n2, 32),
    (:line, 88, :none),
    (:(=), :n3, 17),
    (:line, 89, :none),
    (:(=), :rb, (:(:), 1, 5)),
    (:line, 91, :none),
    (:for, (:(=), :arr, (:tuple, :identity, :as_sub)), (:block,
        (:line, 92, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:vect, 1, 4))), (:vcat, (:row, 2, 1), (:row, 4, 5)))),
        (:line, 93, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:hcat, 1, 4))), (:vcat, (:row, 2, 4), (:row, 1, 5)))),
        (:line, 94, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:hcat, 1, 0)), (:call, :arr, (:vect, 1, 4))), (:vcat, (:row, 2, 1), (:row, 5, 4)))),
        (:line, 95, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:vect, 1, 0)), (:call, :arr, (:hcat, 1, 4))), (:vcat, (:row, 2, 5), (:row, 1, 4)))),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:vect, 1, 0)), (:call, :arr, (:vect, 1, 4))), (:vect, 2, 4))),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, :+, (:call, :arr, (:vect, 1, 0)), 2), (:vect, 3, 2))),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :.+, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:vect, 1, 4)))), (:call, :arr, (:vcat, (:row, 2, 1), (:row, 4, 5))))),
        (:line, 100, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.+, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:hcat, 1, 4))), (:call, :arr, (:vcat, (:row, 2, 4), (:row, 1, 5))))),
        (:line, 101, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.+, (:call, :arr, (:hcat, 1, 0)), (:call, :arr, (:vect, 1, 4))), (:call, :arr, (:vcat, (:row, 2, 1), (:row, 5, 4))))),
        (:line, 102, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.+, (:call, :arr, (:vect, 1, 0)), (:call, :arr, (:hcat, 1, 4))), (:call, :arr, (:vcat, (:row, 2, 5), (:row, 1, 4))))),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.+, (:call, :arr, (:vect, 1, 0)), (:call, :arr, (:vect, 1, 4))), (:call, :arr, (:vect, 2, 4)))),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.+, (:call, :arr, (:vect, 1)), (:call, :arr, (:vect,))), (:call, :arr, (:vect,)))),
        (:line, 106, :none),
        (:(=), :A, (:call, :arr, (:call, :eye, 2))),
        (:line, 106, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast!, :+, :A, :A, (:call, :arr, (:vect, 1, 4))), (:call, :arr, (:vcat, (:row, 2, 1), (:row, 4, 5))))),
        (:line, 107, :none),
        (:(=), :A, (:call, :arr, (:call, :eye, 2))),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast!, :+, :A, :A, (:call, :arr, (:hcat, 1, 4))), (:call, :arr, (:vcat, (:row, 2, 4), (:row, 1, 5))))),
        (:line, 108, :none),
        (:(=), :A, (:call, :arr, (:hcat, 1, 0))),
        (:line, 108, :none),
        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :broadcast!, :+, :A, :A, (:call, :arr, (:vect, 1, 4)))),
        (:line, 109, :none),
        (:(=), :A, (:call, :arr, (:hcat, 1, 0))),
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast!, :+, :A, :A, (:call, :arr, (:hcat, 1, 4))), (:call, :arr, (:hcat, 2, 4)))),
        (:line, 110, :none),
        (:(=), :A, (:call, :arr, (:hcat, 1, 0))),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast!, :+, :A, :A, 2), (:call, :arr, (:hcat, 3, 2)))),
        (:line, 112, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.*, (:call, :arr, (:hcat, 1, 2)), (:call, :arr, (:vect, 3, 4))), (:vcat, (:row, 3, 6), (:row, 4, 8)))),
        (:line, 113, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :./, (:call, :arr, (:hcat, 24.0, 12.0)), (:call, :arr, (:vect, 2.0, 3.0))), (:vcat, (:row, 12, 6), (:row, 8, 4)))),
        (:line, 114, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :./, (:call, :arr, (:hcat, 1, 2)), (:call, :arr, (:vect, 3, 4))), (:vcat, (:row, (:call, :/, 1, 3), (:call, :/, 2, 3)), (:row, (:call, :/, 1, 4), (:call, :/, 2, 4))))),
        (:line, 115, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.\, (:call, :arr, (:hcat, 1, 2)), (:call, :arr, (:vect, 3, 4))), (:vcat, (:row, 3, 1.5), (:row, 4, 2)))),
        (:line, 116, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.^, (:call, :arr, (:hcat, 3, 4)), (:call, :arr, (:vect, 1, 2))), (:vcat, (:row, 3, 4), (:row, 9, 16)))),
        (:line, 117, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.*, (:call, :arr, (:call, :BitArray, (:hcat, true, false))), (:call, :arr, (:call, :BitArray, (:vect, true, true)))), (:vcat, (:row, true, false), (:row, true, false)))),
        (:line, 118, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.^, (:call, :arr, (:call, :BitArray, (:hcat, true, false))), (:call, :arr, (:call, :BitArray, (:vect, false, true)))), (:vcat, (:row, true, true), (:row, true, false)))),
        (:line, 119, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.^, (:call, :arr, (:call, :BitArray, (:hcat, true, false))), (:call, :arr, (:vect, 0, 3))), (:vcat, (:row, true, true), (:row, true, false)))),
        (:line, 121, :none),
        (:(=), :M, (:call, :arr, (:vcat, (:row, 11, 12), (:row, 21, 22)))),
        (:line, 122, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast_getindex, :M, (:call, :.+, (:call, :eye, :Int, 2), 1), (:call, :arr, (:vect, 1, 2))), (:vcat, (:row, 21, 11), (:row, 12, 22)))),
        (:line, 123, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :broadcast_getindex, :M, (:call, :.+, (:call, :eye, :Int, 2), 1), (:call, :arr, (:vect, 1, -1)))),
        (:line, 124, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :broadcast_getindex, :M, (:call, :.+, (:call, :eye, :Int, 2), 1), (:call, :arr, (:vect, 1, 2)), (:vect, 2))),
        (:line, 125, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast_getindex, :M, (:call, :.+, (:call, :eye, :Int, 2), 1), (:call, :arr, (:vect, 2, 1)), (:vect, 1)), (:vcat, (:row, 22, 12), (:row, 11, 21)))),
        (:line, 127, :none),
        (:(=), :A, (:call, :arr, (:call, :zeros, 2, 2))),
        (:line, 128, :none),
        (:call, :broadcast_setindex!, :A, (:call, :arr, (:vcat, (:row, 21, 11), (:row, 12, 22))), (:call, :.+, (:call, :eye, :Int, 2), 1), (:call, :arr, (:vect, 1, 2))),
        (:line, 129, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :A, :M)),
        (:line, 130, :none),
        (:call, :broadcast_setindex!, :A, 5, (:vect, 1, 2), (:hcat, 2, 2)),
        (:line, 131, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :A, (:vcat, (:row, 11, 5), (:row, 21, 5)))),
        (:line, 132, :none),
        (:call, :broadcast_setindex!, :A, 7, (:vect, 1, 2), (:hcat, 1, 2)),
        (:line, 133, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :A, (:call, :fill, 7, 2, 2))),
        (:line, 134, :none),
        (:(=), :A, (:call, :arr, (:call, :zeros, 3, 3))),
        (:line, 135, :none),
        (:call, :broadcast_setindex!, :A, (:(:), 10, 12), (:(:), 1, 3), (:(:), 1, 3)),
        (:line, 136, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :A, (:call, :diagm, (:(:), 10, 12)))),
        (:line, 137, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :broadcast_setindex!, :A, 7, (:vect, 1, -1), (:hcat, 1, 2))),
        (:line, 139, :none),
        (:for, (:(=), (:tuple, :f, :ewf), (:tuple, (:tuple, :(==), :.==), (:tuple, :<, :.<), (:tuple, :(!=), :.!=), (:tuple, :(<=), :.<=))), (:block,
            (:line, 143, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:vect, 1, 4))),
            (:line, 144, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :eye, 2)), (:call, :arr, (:hcat, 1, 4))),
            (:line, 145, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:vect, 0, 1)), (:call, :arr, (:hcat, 1, 4))),
            (:line, 146, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:hcat, 0, 1)), (:call, :arr, (:vect, 1, 4))),
            (:line, 147, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:vect, 1, 0)), (:call, :arr, (:vect, 1, 4))),
            (:line, 148, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :rand, :rb, :n1, :n2, :n3)), (:call, :arr, (:call, :rand, :rb, :n1, :n2, :n3))),
            (:line, 149, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :rand, :rb, 1, :n2, :n3)), (:call, :arr, (:call, :rand, :rb, :n1, 1, :n3))),
            (:line, 150, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :rand, :rb, 1, :n2, 1)), (:call, :arr, (:call, :rand, :rb, :n1, 1, :n3))),
            (:line, 151, :none),
            (:call, :bittest, :f, :ewf, (:call, :arr, (:call, :bitrand, :n1, :n2, :n3)), (:call, :arr, (:call, :bitrand, :n1, :n2, :n3)))
          ))
      )),
    (:line, 155, :none),
    (:(=), :r1, (:(:), 1, 1)),
    (:line, 156, :none),
    (:(=), :r2, (:(:), 1, 5)),
    (:line, 157, :none),
    (:(=), :ratio, (:vect, 1, (:call, :/, 1, 2), (:call, :/, 1, 3), (:call, :/, 1, 4), (:call, :/, 1, 5))),
    (:line, 158, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.*, :r1, :r2), (:vcat, (:(:), 1, 5)))),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :./, :r1, :r2), :ratio)),
    (:line, 160, :none),
    (:(=), :m, (:', (:vcat, (:(:), 1, 2)))),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.*, :m, :r2), (:hcat, (:(:), 1, 5), (:(:), 2, 2, 10)))),
    (:line, 162, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :./, :m, :r2), (:hcat, :ratio, (:call, :*, 2, :ratio)))),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :./, :m, (:vcat, :r2)), (:hcat, :ratio, (:call, :*, 2, :ratio)))),
    (:line, 165, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :.+, (:vect, 0, 1.2), (:call, :reshape, (:vect, 0, -2), 1, 1, 2))), (:call, :reshape, (:vcat, (:row, 0, -2), (:row, 1.2, -0.8)), 2, 1, 2))),
    (:line, 166, :none),
    (:(=), :rt, (:call, (:., :Base, (:quote, #QuoteNode
            :return_types
          )), :.+, (:curly, :Tuple, (:curly, :Array, :Float64, 3), (:curly, :Array, :Int, 1)))),
    (:line, 167, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:call, :length, :rt), 1), (:call, :(==), (:ref, :rt, 1), (:curly, :Array, :Float64, 3)))),
    (:line, 168, :none),
    (:(=), :rt, (:call, (:., :Base, (:quote, #QuoteNode
            :return_types
          )), :broadcast, (:curly, :Tuple, (:call, :typeof, :.+), (:curly, :Array, :Float64, 3), (:curly, :Array, :Int, 3)))),
    (:line, 169, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:call, :length, :rt), 1), (:call, :(==), (:ref, :rt, 1), (:curly, :Array, :Float64, 3)))),
    (:line, 170, :none),
    (:(=), :rt, (:call, (:., :Base, (:quote, #QuoteNode
            :return_types
          )), :broadcast!, (:curly, :Tuple, :Function, (:curly, :Array, :Float64, 3), (:curly, :Array, :Float64, 3), (:curly, :Array, :Int, 1)))),
    (:line, 171, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:call, :length, :rt), 1), (:call, :(==), (:ref, :rt, 1), (:curly, :Array, :Float64, 3)))),
    (:line, 174, :none),
    (:let, (:block,
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sin, (:tuple, :x)), (:call, :broadcast, :sin, :x))),
        (:line, 176, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sin, (:tuple, :α)), (:call, :broadcast, :sin, :α))),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :sin, (:tuple, 3.2)), :(==), (:call, :broadcast, :sin, 3.2), :(==), (:call, :sin, 3.2))),
        (:line, 178, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :factorial, (:tuple, 3)), (:call, :broadcast, :factorial, 3))),
        (:line, 179, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :atan2, (:tuple, :x, :y)), (:call, :broadcast, :atan2, :x, :y))),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :atan2, (:tuple, :x, (:', :y))), (:call, :broadcast, :atan2, :x, (:', :y)))),
        (:line, 181, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :atan2, (:tuple, :x, :α)), (:call, :broadcast, :atan2, :x, :α))),
        (:line, 182, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :atan2, (:tuple, :α, (:', :y))), (:call, :broadcast, :atan2, :α, (:', :y))))
      ), (:(=), :x, (:vect, 1, 3.2, 4.7)), (:(=), :y, (:vect, 3.5, :pi, 0.0001)), (:(=), :α, 0.2342)),
    (:line, 186, :none),
    (:let, (:block,
        (:line, 187, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :a), :Number))
      ), (:(=), :a, (:call, :/, (:ref, :Number, 2, 2.0, (:call, ://, 4, 2), (:call, :+, 2, (:call, :*, 0, :im))), 2))),
    (:line, 189, :none),
    (:let, (:block,
        (:line, 190, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :a), :Real))
      ), (:(=), :a, (:call, :/, (:ref, :Real, 2, 2.0, (:call, ://, 4, 2)), 2))),
    (:line, 192, :none),
    (:let, (:block,
        (:line, 193, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :a), :Real))
      ), (:(=), :a, (:call, :/, (:ref, :Real, 2, 2.0, (:call, ://, 4, 2)), 2.0))),
    (:line, 197, :none),
    (:let, (:block,
        (:line, 198, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :a), :Float32))
      ), (:(=), :a, (:call, :broadcast, :Float32, (:vect, 3, 4, 5)))),
    (:line, 202, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:., :sin, (:tuple, 1)), :(===), (:call, :broadcast, :sin, 1), :(===), (:call, :sin, 1))),
    (:line, 203, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:., (:->, (:tuple,), (:block,
              (:line, 203, :none),
              1234
            )), (:tuple,)), :(===), (:call, :broadcast, (:->, (:tuple,), (:block,
              (:line, 203, :none),
              1234
            ))), :(===), 1234)),
    (:line, 206, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :broadcast, :tuple, (:hcat, 1, 2, 3), (:vect, "a", "b", "c")), (:curly, :Matrix, (:curly, :Tuple, :Int, :String)))),
    (:line, 207, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :broadcast, (:->, (:tuple, :x, :y), (:block,
              (:line, 207, :none),
              (:tuple, (:if, (:call, :(==), :x, 1), 1.0, :x), :y)
            )), (:hcat, 1, 2, 3), (:vect, "a", "b", "c")), (:curly, :Matrix, (:curly, :Tuple, :Real, :String)))),
    (:line, 208, :none),
    (:let, (:block,
        (:line, 209, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :a, (:curly, :Vector, :Int))),
        (:line, 210, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :a, (:vect, 3, 3)))
      ), (:(=), :a, (:., :length, (:tuple, (:vect, "foo", "bar"))))),
    (:line, 212, :none),
    (:let, (:block,
        (:line, 213, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :a, (:curly, :Vector, :Float64))),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :a, (:vect, 0.8414709848078965, 0.9092974268256817)))
      ), (:(=), :a, (:., :sin, (:tuple, (:vect, 1, 2))))),
    (:line, 218, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., (:->, :x, (:block,
              (:line, 218, :none),
              (:call, :+, :x, 1)
            )), (:tuple, (:., (:->, :x, (:block,
                  (:line, 218, :none),
                  (:call, :+, :x, 2)
                )), (:tuple, (:., (:->, :x, (:block,
                      (:line, 218, :none),
                      (:call, :+, :x, 3)
                    )), (:tuple, (:(:), 1, 10))))))), (:call, :collect, (:(:), 7, 16)))),
    (:line, 219, :none),
    (:let, (:block,
        (:line, 220, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :atan2, (:tuple, (:., :log, (:tuple, :A)), (:call, :sum, :A, 1))), (:call, :broadcast, :atan2, (:call, :broadcast, :log, :A), (:call, :sum, :A, 1))))
      ), (:(=), :A, (:comprehension, (:generator, (:call, :+, (:call, :sqrt, :i), :j), (:(=), :i, (:(:), 1, 3)), (:(=), :j, (:(:), 1, 4)))))),
    (:line, 222, :none),
    (:let, (:block,
        (:line, 223, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :atan2, (:tuple, (:., (:->, :x, (:block,
                      (:line, 223, :none),
                      (:call, :+, :x, 1)
                    )), (:tuple, :x)), (:., (:->, :x, (:block,
                      (:line, 223, :none),
                      (:call, :+, :x, 2)
                    )), (:tuple, :x)))), :(==), (:call, :atan2, (:call, :+, :x, 1), (:call, :+, :x, 2)), :(==), (:call, :atan2, (:call, :.+, :x, 1), (:call, :.+, :x, 2)))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sin, (:tuple, (:., :atan2, (:tuple, (:..., (:vect, (:call, :+, :x, 1), (:call, :+, :x, 2))))))), (:., :sin, (:tuple, (:., :atan2, (:tuple, (:call, :+, :x, 1), (:call, :+, :x, 2))))))),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sin, (:tuple, (:., :atan2, (:tuple, :x, 3.7)))), (:call, :broadcast, (:->, :x, (:block,
                  (:line, 225, :none),
                  (:call, :sin, (:call, :atan2, :x, 3.7))
                )), :x))),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :atan2, (:tuple, :x, 3.7)), :(==), (:call, :broadcast, (:->, :x, (:block,
                  (:line, 226, :none),
                  (:call, :atan2, :x, 3.7)
                )), :x), :(==), (:call, :broadcast, :atan2, :x, 3.7)))
      ), (:(=), :x, (:., :sin, (:tuple, (:(:), 1, 10))))),
    (:line, 229, :none),
    (:let, (:block,
        (:line, 230, :none),
        (:(=), (:call, :f17300, :x), (:block,
            (:line, 230, :none),
            (:block,
              (:line, 230, :none),
              (:call, :push!, :g, :x),
              (:line, 230, :none),
              (:call, :+, :x, 2)
            )
          )),
        (:line, 231, :none),
        (:., :f17300, (:tuple, (:., :f17300, (:tuple, (:., :f17300, (:tuple, (:(:), 1, 3))))))),
        (:line, 232, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :g, (:vect, 1, 3, 5, 2, 4, 6, 3, 5, 7)))
      ), (:(=), :g, (:ref, :Int))),
    (:line, 235, :none),
    (:let, (:block,
        (:line, 236, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :cos, (:tuple, :x)), (:., :cos, (:tuple, (:..., :a))))),
        (:line, 237, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :atan2, (:tuple, :x, :x)), :(==), (:., :atan2, (:tuple, (:..., :a), (:..., :a))), :(==), (:., :atan2, (:tuple, (:..., (:vect, :x, :x)))))),
        (:line, 238, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :atan2, (:tuple, :x, (:., :cos, (:tuple, :x)))), :(==), (:., :atan2, (:tuple, (:..., :a), (:., :cos, (:tuple, :x)))), :(==), (:call, :atan2, :x, (:., :cos, (:tuple, (:..., :a)))), :(==), (:call, :atan2, (:..., :a), (:., :cos, (:tuple, (:..., :a)))))),
        (:line, 239, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., (:->, (:tuple, (:..., :args)), (:block,
                  (:line, 239, :none),
                  (:call, :cos, (:ref, :args, 1))
                )), (:tuple, :x)), :(==), (:., :cos, (:tuple, :x)), :(==), (:., (:->, (:tuple, :y, (:..., :args)), (:block,
                  (:line, 239, :none),
                  (:call, :cos, :y)
                )), (:tuple, :x))))
      ), (:(=), :x, (:., :sin, (:tuple, (:(:), 1, 10)))), (:(=), :a, (:vect, :x))),
    (:line, 241, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:., :atan2, (:tuple, 3, 4)), :(==), (:call, :atan2, 3, 4), :(==), (:., (:->, (:tuple,), (:block,
              (:line, 241, :none),
              (:call, :atan2, 3, 4)
            )), (:tuple,)))),
    (:line, 243, :none),
    (:let, (:block,
        (:line, 244, :none),
        (:(=), (:call, :f17300kw, (:parameters, (:kw, :y, 0)), :x), (:block,
            (:line, 244, :none),
            (:call, :+, :x, :y)
          )),
        (:line, 245, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :f17300kw, (:tuple, :x)), :x)),
        (:line, 246, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :f17300kw, (:tuple, :x, (:kw, :y, 1))), :(==), (:., :f17300kw, (:tuple, (:parameters, (:kw, :y, 1)), :x)), :(==), (:., :f17300kw, (:tuple, (:parameters, (:..., (:vect, (:tuple, (:quote, #QuoteNode
                          :y
                        ), 1)))), :x)), :(==), (:call, :.+, :x, 1))),
        (:line, 247, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :f17300kw, (:tuple, (:., :sin, (:tuple, :x)), (:kw, :y, 1))), :(==), (:., :f17300kw, (:tuple, (:parameters, (:kw, :y, 1)), (:., :sin, (:tuple, :x)))), :(==), (:call, :.+, (:., :sin, (:tuple, :x)), 1))),
        (:line, 248, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :sin, (:tuple, (:., :f17300kw, (:tuple, :x, (:kw, :y, 1))))), :(==), (:., :sin, (:tuple, (:., :f17300kw, (:tuple, (:parameters, (:kw, :y, 1)), :x)))), :(==), (:., :sin, (:tuple, (:call, :.+, :x, 1)))))
      ), (:(=), :x, (:vcat, (:(:), 1, 4)))),
    (:line, 252, :none),
    (:let, (:block,
        (:line, 253, :none),
        (:.=, :y, (:(:), 2, 5)),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vcat, (:(:), 2, 5)))),
        (:line, 255, :none),
        (:.=, :y, (:., :factorial, (:tuple, :x))),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 2, 6, 24, 120))),
        (:line, 257, :none),
        (:.=, :y, 7),
        (:line, 258, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 7, 7, 7, 7))),
        (:line, 259, :none),
        (:.=, :y, (:., :factorial, (:tuple, 3))),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 6, 6, 6, 6))),
        (:line, 261, :none),
        (:(=), (:call, :f17510), (:block,
            (:line, 261, :none),
            9
          )),
        (:line, 262, :none),
        (:.=, :y, (:., :f17510, (:tuple,))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 9, 9, 9, 9))),
        (:line, 264, :none),
        (:.-=, :y, 1),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 8, 8, 8, 8))),
        (:line, 266, :none),
        (:.-=, :y, (:(:), 1, 4)),
        (:line, 267, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 7, 6, 5, 4))),
        (:line, 268, :none),
        (:.=, (:ref, :x, (:(:), 1, 2)), 1),
        (:line, 269, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 1, 1, 5, 4))),
        (:line, 270, :none),
        (:.+=, (:ref, :x, (:(:), 1, 2)), (:vect, 2, 3)),
        (:line, 271, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 3, 4, 5, 4))),
        (:line, 272, :none),
        (:.=, (:ref, :x, :(:)), 0),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 0, 0, 0, 0))),
        (:line, 274, :none),
        (:.=, (:ref, :x, (:(:), 2, :end)), (:(:), 1, 3)),
        (:line, 275, :none),
        (:macrocall, Symbol("@test"), (:comparison, :y, :(===), :x, :(==), (:vect, 0, 1, 2, 3)))
      ), (:(=), :x, (:vcat, (:(:), 1, 4))), (:(=), :y, :x)),
    (:line, 277, :none),
    (:let, (:block,
        (:line, 278, :none),
        (:.=, (:ref, :a, 1), 3),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :a, (:vect, (:vect, 3, 3), (:vect, 6, 7))))
      ), (:(=), :a, (:vect, (:vect, 4, 5), (:vect, 6, 7)))),
    (:line, 281, :none),
    (:let, (:block,
        (:line, 282, :none),
        (:.+=, (:ref, :d, (:quote, #QuoteNode
              :foo
            )), 2),
        (:line, 283, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :d, (:quote, #QuoteNode
                :foo
              )), (:vect, 3, 5, 9))),
        (:line, 284, :none),
        (:.-=, (:ref, :d, 3, 4), 1),
        (:line, 285, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :d, 3, 4), (:vect, 4, 8)))
      ), (:(=), :d, (:call, :Dict, (:(=>), (:quote, #QuoteNode
              :foo
            ), (:vect, 1, 3, 7)), (:(=>), (:tuple, 3, 4), (:vect, 5, 9))))),
    (:line, 287, :none),
    (:let, (:block,
        (:line, 288, :none),
        (:.=, :x, 1),
        (:line, 289, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :x, (:vect, 1, 1, 1)))
      ), (:(=), :identity, :error), (:(=), :x, (:vect, 1, 2, 3))),
    (:line, 293, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :+, :Bool), :Int)),
    (:line, 294, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :broadcast, :+, (:vect, true)), (:curly, :Array, :Int, 1))),
    (:line, 295, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:., :Base, (:quote, #QuoteNode
              :promote_op
            )), :Float64, :Bool), :Float64)),
    (:line, 298, :none),
    (:let, (:block,
        (:line, 299, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :max, (:tuple, (:..., :foo))), :(==), (:call, :broadcast, :max, (:..., :foo)), :(==), (:vect, 7, 8, 9)))
      ), (:(=), :foo, (:vect, (:vect, 1, 2, 3), (:vect, 4, 5, 6), (:vect, 7, 8, 9)))),
    (:line, 303, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :broadcast, (:->, :x, (:block,
              (:line, 303, :none),
              (:call, :log, (:call, :log, (:call, :log, :x)))
            )), (:vect, 1000)), (:vect, (:call, :log, (:call, :log, (:call, :log, 1000)))))),
    (:line, 304, :none),
    (:let, (:block,
        (:line, 305, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:call, :broadcast, :f17314, (:(:), 1, 3))), :Int)),
        (:line, 306, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:call, :broadcast, :f17314, (:(:), -1, 1))), :Integer)),
        (:line, 307, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:call, :broadcast, :f17314, (:ref, :Int))), :Any))
      ), (:(=), :f17314, (:->, :x, (:block,
            (:line, 304, :none),
            (:if, (:call, :<, :x, 0), false, :x)
          )))),
    (:line, 309, :none),
    (:let, (:block,
        (:line, 310, :none),
        (:call, :broadcast, (:->, :x, (:block,
              (:line, 310, :none),
              (:call, :print, :io, :x)
            )), (:(:), 1, 5)),
        (:line, 311, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :takebuf_array, :io), (:vect, 0x31, 0x32, 0x33, 0x34, 0x35)))
      ), (:(=), :io, (:call, :IOBuffer))),
    (:line, 315, :none),
    (:let, (:block,
        (:line, 316, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:., :f18176, (:tuple, (:(:), 1.0, 2), 3, 4)), :(==), (:., :f18176, (:tuple, 3.0, (:(:), 1.0, 2), 4.0)), :(==), (:call, :broadcast, :f18176, 3, 4, (:(:), 1.0, 2))))
      ), (:(=), (:call, :f18176, :a, :b, :c), (:block,
          (:line, 315, :none),
          (:call, :+, :a, :b, :c)
        ))),
    (:line, 320, :none),
    (:let, (:block,
        (:line, 321, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:., :abs, (:tuple, :A17984)), (:curly, :Array, :Any, 1)))
      ), (:(=), :A17984, (:vect,))),
    (:line, 325, :none),
    (:macrocall, Symbol("@test"), (:let, (:block,
          (:line, 325, :none),
          (:(=), :A, (:call, :broadcast!, (:->, (:tuple,), (:block,
                  (:line, 325, :none),
                  (:+=, :z, 1)
                )), (:call, :zeros, 2))),
          (:line, 325, :none),
          (:call, :(!=), (:ref, :A, 1), (:ref, :A, 2))
        ), (:(=), :z, 1)))
  ))