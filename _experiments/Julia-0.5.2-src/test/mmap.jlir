(:quote, (:block,
    (:line, 3, :none),
    (:(=), :file, (:call, :tempname)),
    (:line, 4, :none),
    (:call, :write, :file, "Hello World\n"),
    (:line, 5, :none),
    (:(=), :t, (:., "Hello World", (:quote, #QuoteNode
          :data
        ))),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 3), (:tuple, 11, 1, 1)), (:call, :reshape, :t, (:tuple, 11, 1, 1)))),
    (:line, 7, :none),
    (:call, :gc),
    (:line, 7, :none),
    (:call, :gc),
    (:line, 8, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 3), (:tuple, 1, 11, 1)), (:call, :reshape, :t, (:tuple, 1, 11, 1)))),
    (:line, 9, :none),
    (:call, :gc),
    (:line, 9, :none),
    (:call, :gc),
    (:line, 10, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 3), (:tuple, 1, 1, 11)), (:call, :reshape, :t, (:tuple, 1, 1, 11)))),
    (:line, 11, :none),
    (:call, :gc),
    (:line, 11, :none),
    (:call, :gc),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 3), (:tuple, 11, 0, 1)), (:call, (:curly, :Array, :UInt8), (:tuple, 0, 0, 0)))),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Vector, :UInt8), (:tuple, 11)), :t)),
    (:line, 14, :none),
    (:call, :gc),
    (:line, 14, :none),
    (:call, :gc),
    (:line, 15, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 2), (:tuple, 1, 11)), (:', :t))),
    (:line, 16, :none),
    (:call, :gc),
    (:line, 16, :none),
    (:call, :gc),
    (:line, 17, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Array, :UInt8, 2), (:tuple, 0, 12)), (:call, (:curly, :Array, :UInt8), (:tuple, 0, 0)))),
    (:line, 18, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Array, :UInt8, 3), (:tuple, 1, 2, 1))),
    (:line, 19, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :m, (:call, :reshape, (:., "He", (:quote, #QuoteNode
              :data
            )), (:tuple, 1, 2, 1)))),
    (:line, 20, :none),
    (:call, :finalize, :m),
    (:line, 20, :none),
    (:(=), :m, :nothing),
    (:line, 20, :none),
    (:call, :gc),
    (:line, 23, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file))), 12)),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file, (:curly, :Vector, :Int8)))), 12)),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file, (:curly, :Matrix, :Int8), (:tuple, 12, 1)))), 12)),
    (:line, 26, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 27, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :grow, false)), :file, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 28, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :shared, false)), :file, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 29, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file, (:curly, :Vector, :Int8), 12))), 12)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :file, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :grow, false)), :file, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :shared, false)), :file, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 33, :none),
    (:(=), :s, (:call, :open, :file)),
    (:line, 34, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s))), 12)),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Vector, :Int8)))), 12)),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Matrix, :Int8), (:tuple, 12, 1)))), 12)),
    (:line, 37, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 38, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :grow, false)), :s, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :shared, false)), :s, (:curly, :Matrix, :Int8), (:tuple, 12, 1), 0))), 12)),
    (:line, 40, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Vector, :Int8), 12))), 12)),
    (:line, 41, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 42, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :grow, false)), :s, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 43, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), (:parameters, (:kw, :shared, false)), :s, (:curly, :Vector, :Int8), 12, 0))), 12)),
    (:line, 44, :none),
    (:call, :close, :s),
    (:line, 45, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :Ref))),
    (:line, 46, :none),
    (:call, :gc),
    (:line, 46, :none),
    (:call, :gc),
    (:line, 48, :none),
    (:(=), :s, (:call, :open, (:->, :f, (:block,
            (:line, 48, :none),
            :f
          )), :file, "w")),
    (:line, 49, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file), (:call, (:curly, :Array, :UInt8), 0))),
    (:line, 50, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :file, (:curly, :Vector, :UInt8), 0), (:call, (:curly, :Array, :UInt8), 0))),
    (:line, 51, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 12)),
    (:line, 52, :none),
    (:(=), (:ref, :m, :(:)), (:., "Hello World\n", (:quote, #QuoteNode
          :data
        ))),
    (:line, 53, :none),
    (:call, (:., :Mmap, (:quote, #QuoteNode
          :sync!
        )), :m),
    (:line, 54, :none),
    (:call, :finalize, :m),
    (:line, 54, :none),
    (:(=), :m, :nothing),
    (:line, 54, :none),
    (:call, :gc),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :open, :readstring, :file), "Hello World\n")),
    (:line, 57, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 58, :none),
    (:call, :close, :s),
    (:line, 59, :none),
    (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
          :UVError
        )), (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s)),
    (:line, 60, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), 12, 0)),
    (:line, 61, :none),
    (:macrocall, Symbol("@test_throws"), :SystemError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), "")),
    (:line, 64, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), -1)),
    (:line, 66, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 1, -1)),
    (:line, 68, :none),
    (:for, (:(=), :i, (:(:), 0x01, 0x0c)), (:block,
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, (:., :Mmap, (:quote, #QuoteNode
                    :mmap
                  )), :file, (:curly, :Vector, :UInt8), :i)), (:call, :Int, :i)))
      )),
    (:line, 71, :none),
    (:call, :gc),
    (:line, 71, :none),
    (:call, :gc),
    (:line, 73, :none),
    (:(=), :sz, (:call, :filesize, :file)),
    (:line, 74, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), (:call, :+, :sz, 1))),
    (:line, 75, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), (:call, :+, :sz, 1))),
    (:line, 76, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, :end), 0x00)),
    (:line, 77, :none),
    (:call, :finalize, :m),
    (:line, 77, :none),
    (:(=), :m, :nothing),
    (:line, 77, :none),
    (:call, :gc),
    (:line, 78, :none),
    (:(=), :sz, (:call, :filesize, :file)),
    (:line, 79, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 1, :sz)),
    (:line, 80, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 1)),
    (:line, 81, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 1), 0x00)),
    (:line, 82, :none),
    (:call, :finalize, :m),
    (:line, 82, :none),
    (:(=), :m, :nothing),
    (:line, 82, :none),
    (:call, :gc),
    (:line, 83, :none),
    (:(=), :sz, (:call, :filesize, :file)),
    (:line, 85, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 1, (:call, :+, :sz, 1))),
    (:line, 86, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 1)),
    (:line, 87, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 1), 0x00)),
    (:line, 88, :none),
    (:call, :finalize, :m),
    (:line, 88, :none),
    (:(=), :m, :nothing),
    (:line, 88, :none),
    (:call, :gc),
    (:line, 90, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 91, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s)),
    (:line, 92, :none),
    (:macrocall, Symbol("@test_throws"), :ReadOnlyMemoryError, (:(=), (:ref, :m, 5), (:call, :UInt8, 'x'))),
    (:line, 93, :none),
    (:call, :finalize, :m),
    (:line, 93, :none),
    (:(=), :m, :nothing),
    (:line, 93, :none),
    (:call, :gc),
    (:line, 95, :none),
    (:call, :write, :file, "Hello World\n"),
    (:line, 97, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 98, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s)),
    (:line, 99, :none),
    (:call, :close, :s),
    (:line, 100, :none),
    (:call, :finalize, :m),
    (:line, 100, :none),
    (:(=), :m, :nothing),
    (:line, 100, :none),
    (:call, :gc),
    (:line, 101, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file)),
    (:line, 102, :none),
    (:(=), :s, (:call, :open, :file, "r+")),
    (:line, 103, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s)),
    (:line, 104, :none),
    (:(=), :d, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s)),
    (:line, 105, :none),
    (:(=), (:ref, :c, 1), (:call, :UInt8, 'J')),
    (:line, 106, :none),
    (:call, (:., :Mmap, (:quote, #QuoteNode
          :sync!
        )), :c),
    (:line, 107, :none),
    (:call, :close, :s),
    (:line, 108, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 1), (:call, :UInt8, 'J'))),
    (:line, 109, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :d, 1), (:call, :UInt8, 'J'))),
    (:line, 110, :none),
    (:call, :finalize, :m),
    (:line, 110, :none),
    (:call, :finalize, :c),
    (:line, 110, :none),
    (:call, :finalize, :d),
    (:line, 111, :none),
    (:(=), :m, :nothing),
    (:line, 111, :none),
    (:(=), :c, :nothing),
    (:line, 111, :none),
    (:(=), :d, :nothing),
    (:line, 111, :none),
    (:call, :gc),
    (:line, 113, :none),
    (:call, :write, :file, "Hello World\n"),
    (:line, 115, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isreadonly, :s), true)),
    (:line, 117, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), (:tuple, 11))),
    (:line, 118, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "Hello World", (:quote, #QuoteNode
            :data
          )))),
    (:line, 119, :none),
    (:call, :finalize, :c),
    (:line, 119, :none),
    (:(=), :c, :nothing),
    (:line, 119, :none),
    (:call, :gc),
    (:line, 120, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), (:tuple, (:call, :UInt16, 11)))),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "Hello World", (:quote, #QuoteNode
            :data
          )))),
    (:line, 122, :none),
    (:call, :finalize, :c),
    (:line, 122, :none),
    (:(=), :c, :nothing),
    (:line, 122, :none),
    (:call, :gc),
    (:line, 123, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), (:tuple, (:call, :Int16, -11)))),
    (:line, 124, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), (:tuple, (:call, :typemax, :UInt)))),
    (:line, 125, :none),
    (:call, :close, :s),
    (:line, 126, :none),
    (:(=), :s, (:call, :open, :file, "r+")),
    (:line, 127, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isreadonly, :s), false)),
    (:line, 128, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), (:tuple, 11))),
    (:line, 129, :none),
    (:(=), (:ref, :c, 5), (:call, :UInt8, 'x')),
    (:line, 130, :none),
    (:call, (:., :Mmap, (:quote, #QuoteNode
          :sync!
        )), :c),
    (:line, 131, :none),
    (:call, :close, :s),
    (:line, 132, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 133, :none),
    (:(=), :str, (:call, :readline, :s)),
    (:line, 134, :none),
    (:call, :close, :s),
    (:line, 135, :none),
    (:macrocall, Symbol("@test"), (:call, :startswith, :str, "Hellx World")),
    (:line, 136, :none),
    (:call, :finalize, :c),
    (:line, 136, :none),
    (:(=), :c, :nothing),
    (:line, 136, :none),
    (:call, :gc),
    (:line, 138, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file)),
    (:line, 139, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "Hellx World\n", (:quote, #QuoteNode
            :data
          )))),
    (:line, 140, :none),
    (:call, :finalize, :c),
    (:line, 140, :none),
    (:(=), :c, :nothing),
    (:line, 140, :none),
    (:call, :gc),
    (:line, 141, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 3)),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "Hel", (:quote, #QuoteNode
            :data
          )))),
    (:line, 143, :none),
    (:call, :finalize, :c),
    (:line, 143, :none),
    (:(=), :c, :nothing),
    (:line, 143, :none),
    (:call, :gc),
    (:line, 144, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 145, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Vector, :UInt8), 6)),
    (:line, 146, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "Hellx ", (:quote, #QuoteNode
            :data
          )))),
    (:line, 147, :none),
    (:call, :close, :s),
    (:line, 148, :none),
    (:call, :finalize, :c),
    (:line, 148, :none),
    (:(=), :c, :nothing),
    (:line, 148, :none),
    (:call, :gc),
    (:line, 149, :none),
    (:(=), :c, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 5, 6)),
    (:line, 150, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :c, (:., "World", (:quote, #QuoteNode
            :data
          )))),
    (:line, 151, :none),
    (:call, :finalize, :c),
    (:line, 151, :none),
    (:(=), :c, :nothing),
    (:line, 151, :none),
    (:call, :gc),
    (:line, 153, :none),
    (:(=), :s, (:call, :open, :file, "w")),
    (:line, 154, :none),
    (:call, :write, :s, "Hello World\n"),
    (:line, 155, :none),
    (:call, :close, :s),
    (:line, 158, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file)),
    (:line, 159, :none),
    (:(=), :t, "Hello World\n"),
    (:line, 160, :none),
    (:for, (:(=), :i, (:(:), 1, 12)), (:block,
        (:line, 161, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, :i), (:ref, (:., :t, (:quote, #QuoteNode
                  :data
                )), :i)))
      )),
    (:line, 163, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :m, 13)),
    (:line, 164, :none),
    (:call, :finalize, :m),
    (:line, 164, :none),
    (:(=), :m, :nothing),
    (:line, 164, :none),
    (:call, :gc),
    (:line, 166, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 6)),
    (:line, 167, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 1), (:ref, (:., "H", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 168, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 2), (:ref, (:., "e", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 169, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 3), (:ref, (:., "l", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 170, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 4), (:ref, (:., "l", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 171, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 5), (:ref, (:., "o", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 172, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 6), (:ref, (:., " ", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 173, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :m, 7)),
    (:line, 174, :none),
    (:call, :finalize, :m),
    (:line, 174, :none),
    (:(=), :m, :nothing),
    (:line, 174, :none),
    (:call, :gc),
    (:line, 176, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, (:curly, :Vector, :UInt8), 2, 6)),
    (:line, 177, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 1), (:ref, (:., "W", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 178, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :m, 2), (:ref, (:., "o", (:quote, #QuoteNode
              :data
            )), 1))),
    (:line, 179, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :m, 3)),
    (:line, 180, :none),
    (:call, :finalize, :m),
    (:line, 180, :none),
    (:(=), :m, :nothing),
    (:line, 180, :none),
    (:call, :gc),
    (:line, 182, :none),
    (:(=), :s, (:call, :open, :file, "w")),
    (:line, 183, :none),
    (:call, :write, :s, (:vect, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0x000000001fffffff)),
    (:line, 187, :none),
    (:call, :close, :s),
    (:line, 188, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 189, :none),
    (:macrocall, Symbol("@test"), (:call, :isreadonly, :s)),
    (:line, 190, :none),
    (:(=), :b, (:macrocall, Symbol("@inferred"), (:call, (:., :Mmap, (:quote, #QuoteNode
              :mmap
            )), :s, :BitArray, (:tuple, 17, 13)))),
    (:line, 191, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :_check_bitarray_consistency
          )), :b)),
    (:line, 192, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :b, (:call, :trues, 17, 13))),
    (:line, 193, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, :BitArray, (:tuple, 7, 3))),
    (:line, 194, :none),
    (:call, :close, :s),
    (:line, 195, :none),
    (:(=), :s, (:call, :open, :file, "r+")),
    (:line, 196, :none),
    (:(=), :b, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, :BitArray, (:tuple, 17, 19))),
    (:line, 197, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :_check_bitarray_consistency
          )), :b)),
    (:line, 198, :none),
    (:call, :rand!, :b),
    (:line, 199, :none),
    (:call, (:., :Mmap, (:quote, #QuoteNode
          :sync!
        )), :b),
    (:line, 200, :none),
    (:(=), :b0, (:call, :copy, :b)),
    (:line, 201, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :_check_bitarray_consistency
          )), :b0)),
    (:line, 202, :none),
    (:call, :close, :s),
    (:line, 203, :none),
    (:(=), :s, (:call, :open, :file, "r")),
    (:line, 204, :none),
    (:macrocall, Symbol("@test"), (:call, :isreadonly, :s)),
    (:line, 205, :none),
    (:(=), :b, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, :BitArray, (:tuple, 17, 19))),
    (:line, 206, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :_check_bitarray_consistency
          )), :b)),
    (:line, 207, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :b, :b0)),
    (:line, 208, :none),
    (:call, :close, :s),
    (:line, 209, :none),
    (:call, :finalize, :b),
    (:line, 209, :none),
    (:call, :finalize, :b0),
    (:line, 210, :none),
    (:(=), :b, :nothing),
    (:line, 210, :none),
    (:(=), :b0, :nothing),
    (:line, 211, :none),
    (:call, :gc),
    (:line, 213, :none),
    (:call, :open, (:->, (:tuple, :f), (:block,
          (:line, 214, :none),
          (:call, :write, :f, (:call, :UInt64, 1)),
          (:line, 215, :none),
          (:call, :write, :f, (:call, :UInt8, 1))
        )), :file, "w"),
    (:line, 217, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :filesize, :file), 9)),
    (:line, 218, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :file, :BitArray, (:tuple, 72))),
    (:line, 219, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :_check_bitarray_consistency
          )), :m)),
    (:line, 220, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 72)),
    (:line, 221, :none),
    (:call, :finalize, :m),
    (:line, 221, :none),
    (:(=), :m, :nothing),
    (:line, 221, :none),
    (:call, :gc),
    (:line, 222, :none),
    (:call, :rm, :file),
    (:line, 225, :none),
    (:(=), :A, (:call, :rand, (:(:), 1, 20), 500, 300)),
    (:line, 226, :none),
    (:(=), :fname, (:call, :tempname)),
    (:line, 227, :none),
    (:(=), :s, (:call, :open, :fname, "w+")),
    (:line, 228, :none),
    (:call, :write, :s, (:call, :size, :A, 1)),
    (:line, 229, :none),
    (:call, :write, :s, (:call, :size, :A, 2)),
    (:line, 230, :none),
    (:call, :write, :s, :A),
    (:line, 231, :none),
    (:call, :close, :s),
    (:line, 232, :none),
    (:(=), :s, (:call, :open, :fname)),
    (:line, 233, :none),
    (:(=), :m, (:call, :read, :s, :Int)),
    (:line, 234, :none),
    (:(=), :n, (:call, :read, :s, :Int)),
    (:line, 235, :none),
    (:(=), :A2, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Matrix, :Int), (:tuple, :m, :n))),
    (:line, 236, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :A, :A2)),
    (:line, 237, :none),
    (:call, :seek, :s, 0),
    (:line, 238, :none),
    (:(=), :A3, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Matrix, :Int), (:tuple, :m, :n), (:call, :convert, :Int64, (:call, :*, 2, (:call, :sizeof, :Int))))),
    (:line, 239, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :A, :A3)),
    (:line, 240, :none),
    (:(=), :A4, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), :s, (:curly, :Matrix, :Int), (:tuple, :m, 150), (:call, :convert, :Int64, (:call, :*, (:call, :+, 2, (:call, :*, 150, :m)), (:call, :sizeof, :Int))))),
    (:line, 241, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :A, :(:), (:(:), 151, :end)), :A4)),
    (:line, 242, :none),
    (:call, :close, :s),
    (:line, 243, :none),
    (:call, :finalize, :A2),
    (:line, 243, :none),
    (:call, :finalize, :A3),
    (:line, 243, :none),
    (:call, :finalize, :A4),
    (:line, 244, :none),
    (:(=), :A2, (:(=), :A3, (:(=), :A4, :nothing))),
    (:line, 245, :none),
    (:call, :gc),
    (:line, 246, :none),
    (:call, :rm, :fname),
    (:line, 249, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :Anonymous
          )))),
    (:line, 250, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :m, (:quote, #QuoteNode
            :name
          )), "")),
    (:line, 251, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:., :m, (:quote, #QuoteNode
            :readonly
          )))),
    (:line, 252, :none),
    (:macrocall, Symbol("@test"), (:., :m, (:quote, #QuoteNode
          :create
        ))),
    (:line, 253, :none),
    (:macrocall, Symbol("@test"), (:call, :isopen, :m)),
    (:line, 254, :none),
    (:macrocall, Symbol("@test"), (:call, :isreadable, :m)),
    (:line, 255, :none),
    (:macrocall, Symbol("@test"), (:call, :iswritable, :m)),
    (:line, 257, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), (:curly, :Vector, :UInt8), 12)),
    (:line, 258, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 12)),
    (:line, 259, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :m, 0x00))),
    (:line, 260, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :m, 1), 0x00)),
    (:line, 261, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :m, :end), 0x00)),
    (:line, 262, :none),
    (:(=), (:ref, :m, 1), 0x0a),
    (:line, 263, :none),
    (:call, (:., :Mmap, (:quote, #QuoteNode
          :sync!
        )), :m),
    (:line, 264, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :m, 1), 0x0a)),
    (:line, 265, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), (:parameters, (:kw, :shared, false)), (:curly, :Vector, :UInt8), 12)),
    (:line, 266, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), (:curly, :Vector, :Int), 12)),
    (:line, 267, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 12)),
    (:line, 268, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :m, 0))),
    (:line, 269, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :m, 1), 0)),
    (:line, 270, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :m, :end), 0)),
    (:line, 271, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), (:curly, :Vector, :Float64), 12)),
    (:line, 272, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :m), 12)),
    (:line, 273, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :m, 0.0))),
    (:line, 274, :none),
    (:(=), :m, (:call, (:., :Mmap, (:quote, #QuoteNode
            :mmap
          )), (:curly, :Matrix, :Int8), (:tuple, 12, 12))),
    (:line, 275, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :m), (:tuple, 12, 12))),
    (:line, 276, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :(==), :m, (:call, :zeros, :Int8, (:tuple, 12, 12))))),
    (:line, 277, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sizeof, :m), (:call, :prod, (:tuple, 12, 12)))),
    (:line, 278, :none),
    (:(=), :n, (:call, :similar, :m)),
    (:line, 279, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :n), (:tuple, 12, 12))),
    (:line, 280, :none),
    (:(=), :n, (:call, :similar, :m, (:tuple, 2, 2))),
    (:line, 281, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :n), (:tuple, 2, 2))),
    (:line, 282, :none),
    (:(=), :n, (:call, :similar, :m, 12)),
    (:line, 283, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :n), 12)),
    (:line, 284, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :n), (:tuple, 12))),
    (:line, 285, :none),
    (:call, :finalize, :m),
    (:line, 285, :none),
    (:(=), :m, :nothing),
    (:line, 285, :none),
    (:call, :gc),
    (:line, 288, :none),
    (:(=), :file, (:call, :tempname)),
    (:line, 289, :none),
    (:call, :touch, :file),
    (:line, 290, :none),
    (:call, :open, (:->, (:tuple, :s), (:block,
          (:line, 291, :none),
          (:(=), :A, (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Vector, :UInt8), (:tuple, 10), 0)),
          (:line, 292, :none),
          (:call, (:., :Mmap, (:quote, #QuoteNode
                :sync!
              )), :A),
          (:line, 293, :none),
          (:call, :finalize, :A),
          (:line, 293, :none),
          (:(=), :A, :nothing),
          (:line, 293, :none),
          (:call, :gc),
          (:line, 294, :none),
          (:(=), :A, (:call, (:., :Mmap, (:quote, #QuoteNode
                  :mmap
                )), :s, (:curly, :Vector, :UInt8), (:tuple, 10), 1)),
          (:line, 295, :none),
          (:call, (:., :Mmap, (:quote, #QuoteNode
                :sync!
              )), :A),
          (:line, 296, :none),
          (:call, :finalize, :A),
          (:line, 296, :none),
          (:(=), :A, :nothing),
          (:line, 296, :none),
          (:call, :gc)
        )), :file, "r+"),
    (:line, 298, :none),
    (:call, :rm, :file)
  ))