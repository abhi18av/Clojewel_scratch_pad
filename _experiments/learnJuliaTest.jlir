(:quote, (:block,
    (:line, 14, :none),
    3,
    (:line, 15, :none),
    3.2,
    (:line, 16, :none),
    (:call, :+, 2, (:call, :*, 1, :im)),
    (:line, 17, :none),
    (:call, ://, 2, 3),
    (:line, 20, :none),
    (:call, :+, 1, 1),
    (:line, 21, :none),
    (:call, :-, 8, 1),
    (:line, 22, :none),
    (:call, :*, 10, 2),
    (:line, 23, :none),
    (:call, :/, 35, 5),
    (:line, 24, :none),
    (:call, :/, 5, 2),
    (:line, 25, :none),
    (:call, :div, 5, 2),
    (:line, 26, :none),
    (:call, :\, 5, 35),
    (:line, 27, :none),
    (:call, :^, 2, 2),
    (:line, 28, :none),
    (:call, :%, 12, 10),
    (:line, 31, :none),
    (:call, :*, (:call, :+, 1, 3), 2),
    (:line, 34, :none),
    (:call, :~, 2),
    (:line, 35, :none),
    (:call, :&, 3, 5),
    (:line, 36, :none),
    (:call, :|, 2, 4),
    (:line, 37, :none),
    (:call, :$, 2, 4),
    (:line, 38, :none),
    (:call, :>>>, 2, 1),
    (:line, 39, :none),
    (:call, :>>, 2, 1),
    (:line, 40, :none),
    (:call, :<<, 2, 1),
    (:line, 43, :none),
    (:call, :bits, 12345),
    (:line, 45, :none),
    (:call, :bits, 12345.0),
    (:line, 49, :none),
    true,
    (:line, 50, :none),
    false,
    (:line, 53, :none),
    (:call, :!, true),
    (:line, 54, :none),
    (:call, :!, false),
    (:line, 55, :none),
    (:call, :(==), 1, 1),
    (:line, 56, :none),
    (:call, :(==), 2, 1),
    (:line, 57, :none),
    (:call, :(!=), 1, 1),
    (:line, 58, :none),
    (:call, :(!=), 2, 1),
    (:line, 59, :none),
    (:call, :<, 1, 10),
    (:line, 60, :none),
    (:call, :>, 1, 10),
    (:line, 61, :none),
    (:call, :(<=), 2, 2),
    (:line, 62, :none),
    (:call, :(>=), 2, 2),
    (:line, 64, :none),
    (:comparison, 1, :<, 2, :<, 3),
    (:line, 65, :none),
    (:comparison, 2, :<, 3, :<, 2),
    (:line, 68, :none),
    "This is a string.",
    (:line, 74, :none),
    'a',
    (:line, 77, :none),
    (:ref, "This is a string", 1),
    (:line, 82, :none),
    (:string, "2 + 2 = ", (:call, :+, 2, 2)),
    (:line, 86, :none),
    (:macrocall, Symbol("@printf"), "%d is less than %f", 4.5, 5.3),
    (:line, 89, :none),
    (:call, :println, "I'm Julia. Nice to meet you!"),
    (:line, 101, :none),
    (:(=), :some_var, 5),
    (:line, 105, :none),
    (:try, (:block,
        (:line, 106, :none),
        :some_other_var
      ), :e, (:block,
        (:line, 108, :none),
        (:call, :println, :e)
      )),
    (:line, 113, :none),
    (:(=), :SomeOtherVar123!, 6),
    (:line, 116, :none),
    (:(=), :â˜ƒ, 8),
    (:line, 135, :none),
    (:(=), :a, (:ref, :Int64)),
    (:line, 138, :none),
    (:(=), :b, (:vect, 4, 5, 6)),
    (:line, 139, :none),
    (:(=), :b, (:vcat, 4, 5, 6)),
    (:line, 140, :none),
    (:ref, :b, 1),
    (:line, 141, :none),
    (:ref, :b, :end),
    (:line, 144, :none),
    (:(=), :matrix, (:vcat, (:row, 1, 2), (:row, 3, 4))),
    (:line, 147, :none),
    (:(=), :b, (:ref, :Int8, 4, 5, 6)),
    (:line, 150, :none),
    (:call, :push!, :a, 1),
    (:line, 151, :none),
    (:call, :push!, :a, 2),
    (:line, 152, :none),
    (:call, :push!, :a, 4),
    (:line, 153, :none),
    (:call, :push!, :a, 3),
    (:line, 154, :none),
    (:call, :append!, :a, :b),
    (:line, 157, :none),
    (:call, :pop!, :b),
    (:line, 160, :none),
    (:call, :push!, :b, 6),
    (:line, 162, :none),
    (:ref, :a, 1),
    (:line, 166, :none),
    (:ref, :a, :end),
    (:line, 169, :none),
    (:call, :shift!, :a),
    (:line, 170, :none),
    (:call, :unshift!, :a, 7),
    (:line, 174, :none),
    (:(=), :arr, (:vect, 5, 4, 6)),
    (:line, 175, :none),
    (:call, :sort, :arr),
    (:line, 176, :none),
    (:call, :sort!, :arr),
    (:line, 179, :none),
    (:try, (:block,
        (:line, 180, :none),
        (:ref, :a, 0),
        (:line, 181, :none),
        (:ref, :a, (:call, :+, :end, 1))
      ), :e, (:block,
        (:line, 183, :none),
        (:call, :println, :e)
      )),
    (:line, 191, :none),
    (:(=), :a, (:vcat, (:(:), 1, 5))),
    (:line, 194, :none),
    (:ref, :a, (:(:), 1, 3)),
    (:line, 195, :none),
    (:ref, :a, (:(:), 2, :end)),
    (:line, 198, :none),
    (:(=), :arr, (:vect, 3, 4, 5)),
    (:line, 199, :none),
    (:call, :splice!, :arr, 2),
    (:line, 202, :none),
    (:(=), :b, (:vect, 1, 2, 3)),
    (:line, 203, :none),
    (:call, :append!, :a, :b),
    (:line, 206, :none),
    (:call, :in, 1, :a),
    (:line, 209, :none),
    (:call, :length, :a),
    (:line, 212, :none),
    (:(=), :tup, (:tuple, 1, 2, 3)),
    (:line, 214, :none),
    (:try, (:block,
        (:line, 214, :none),
        (:(=), (:ref, (:quote, #QuoteNode
              :tup
            ), 1), 3)
      ), :e, (:block,
        (:line, 217, :none),
        (:call, :println, :e)
      )),
    (:line, 221, :none),
    (:call, :length, :tup),
    (:line, 222, :none),
    (:ref, :tup, (:(:), 1, 2)),
    (:line, 223, :none),
    (:call, :in, 2, :tup),
    (:line, 226, :none),
    (:(=), (:tuple, :a, :b, :c), (:tuple, 1, 2, 3)),
    (:line, 229, :none),
    (:(=), (:tuple, :d, :e, :f), (:tuple, 4, 5, 6)),
    (:line, 232, :none),
    (:call, :(==), (:tuple, 1), 1),
    (:line, 233, :none),
    (:call, :(==), 1, 1),
    (:line, 236, :none),
    (:(=), (:tuple, :e, :d), (:tuple, :d, :e)),
    (:line, 240, :none),
    (:(=), :empty_dict, (:call, :Dict)),
    (:line, 243, :none),
    (:(=), :filled_dict, (:call, :Dict, (:(=>), "one", 1), (:(=>), "two", 2), (:(=>), "three", 3))),
    (:line, 247, :none),
    (:ref, :filled_dict, "one"),
    (:line, 250, :none),
    (:call, :keys, :filled_dict),
    (:line, 255, :none),
    (:call, :values, :filled_dict),
    (:line, 260, :none),
    (:call, :in, (:(=>), "one", 1), :filled_dict),
    (:line, 261, :none),
    (:call, :in, (:(=>), "two", 3), :filled_dict),
    (:line, 262, :none),
    (:call, :haskey, :filled_dict, "one"),
    (:line, 263, :none),
    (:call, :haskey, :filled_dict, 1),
    (:line, 266, :none),
    (:try, (:block,
        (:line, 267, :none),
        (:ref, :filled_dict, "four")
      ), :e, (:block,
        (:line, 269, :none),
        (:call, :println, :e)
      )),
    (:line, 274, :none),
    (:call, :get, :filled_dict, "one", 4),
    (:line, 275, :none),
    (:call, :get, :filled_dict, "four", 4),
    (:line, 278, :none),
    (:(=), :empty_set, (:call, :Set)),
    (:line, 280, :none),
    (:(=), :filled_set, (:call, :Set, (:vect, 1, 2, 2, 3, 4))),
    (:line, 283, :none),
    (:call, :push!, :filled_set, 5),
    (:line, 286, :none),
    (:call, :in, 2, :filled_set),
    (:line, 287, :none),
    (:call, :in, 10, :filled_set),
    (:line, 290, :none),
    (:(=), :other_set, (:call, :Set, (:vect, 3, 4, 5, 6))),
    (:line, 291, :none),
    (:call, :intersect, :filled_set, :other_set),
    (:line, 292, :none),
    (:call, :union, :filled_set, :other_set),
    (:line, 293, :none),
    (:call, :setdiff, (:call, :Set, (:vect, 1, 2, 3, 4)), (:call, :Set, (:vect, 2, 3, 5))),
    (:line, 301, :none),
    (:(=), :some_var, 5),
    (:line, 304, :none),
    (:if, (:call, :>, :some_var, 10), (:block,
        (:line, 305, :none),
        (:call, :println, "some_var is totally bigger than 10.")
      ), (:block,
        (:line, 306, :none),
        (:if, (:call, :<, :some_var, 10), (:block,
            (:line, 307, :none),
            (:call, :println, "some_var is smaller than 10.")
          ), (:block,
            (:line, 309, :none),
            (:call, :println, "some_var is indeed 10.")
          ))
      )),
    (:line, 316, :none),
    (:for, (:(=), :animal, (:vect, "dog", "cat", "mouse")), (:block,
        (:line, 317, :none),
        (:call, :println, (:string, :animal, " is a mammal"))
      )),
    (:line, 326, :none),
    (:for, (:(=), :animal, (:vect, "dog", "cat", "mouse")), (:block,
        (:line, 327, :none),
        (:call, :println, (:string, :animal, " is a mammal"))
      )),
    (:line, 334, :none),
    (:for, (:(=), :a, (:call, :Dict, (:(=>), "dog", "mammal"), (:(=>), "cat", "mammal"), (:(=>), "mouse", "mammal"))), (:block,
        (:line, 335, :none),
        (:call, :println, (:string, (:ref, :a, 1), " is a ", (:ref, :a, 2)))
      )),
    (:line, 342, :none),
    (:for, (:(=), (:tuple, :k, :v), (:call, :Dict, (:(=>), "dog", "mammal"), (:(=>), "cat", "mammal"), (:(=>), "mouse", "mammal"))), (:block,
        (:line, 343, :none),
        (:call, :println, (:string, :k, " is a ", :v))
      )),
    (:line, 351, :none),
    (:(=), :x, 0),
    (:line, 352, :none),
    (:while, (:call, :<, :x, 4), (:block,
        (:line, 353, :none),
        (:call, :println, :x),
        (:line, 354, :none),
        (:+=, :x, 1)
      )),
    (:line, 363, :none),
    (:try, (:block,
        (:line, 364, :none),
        (:call, :error, "help")
      ), :e, (:block,
        (:line, 366, :none),
        (:call, :println, (:string, "caught it ", :e))
      )),
    (:line, 379, :none),
    (:function, (:call, :add, :x, :y), (:block,
        (:line, 380, :none),
        (:call, :println, (:string, "x is ", :x, " and y is ", :y)),
        (:line, 383, :none),
        (:call, :+, :x, :y)
      )),
    (:line, 386, :none),
    (:call, :add, 5, 6),
    (:line, 389, :none),
    (:(=), (:call, :f_add, :x, :y), (:block,
        (:line, 389, :none),
        (:call, :+, :x, :y)
      )),
    (:line, 390, :none),
    (:call, :f_add, 3, 4),
    (:line, 393, :none),
    (:(=), (:call, :fxn, :x, :y), (:block,
        (:line, 393, :none),
        (:tuple, (:call, :+, :x, :y), (:call, :-, :x, :y))
      )),
    (:line, 394, :none),
    (:call, :fxn, 3, 4),
    (:line, 398, :none),
    (:function, (:call, :varargs, (:..., :args)), (:block,
        (:line, 399, :none),
        (:return, :args)
      )),
    (:line, 404, :none),
    (:call, :varargs, 1, 2, 3),
    (:line, 410, :none),
    (:call, :add, (:..., (:vect, 5, 6))),
    (:line, 412, :none),
    (:(=), :x, (:tuple, 5, 6)),
    (:line, 413, :none),
    (:call, :add, (:..., :x)),
    (:line, 417, :none),
    (:function, (:call, :defaults, :a, :b, (:kw, :x, 5), (:kw, :y, 6)), (:block,
        (:line, 418, :none),
        (:return, (:string, :a, " ", :b, " and ", :x, " ", :y))
      )),
    (:line, 421, :none),
    (:call, :defaults, 'h', 'g'),
    (:line, 422, :none),
    (:call, :defaults, 'h', 'g', 'j'),
    (:line, 423, :none),
    (:call, :defaults, 'h', 'g', 'j', 'k'),
    (:line, 424, :none),
    (:try, (:block,
        (:line, 425, :none),
        (:call, :defaults, 'h'),
        (:line, 426, :none),
        (:call, :defaults)
      ), :e, (:block,
        (:line, 428, :none),
        (:call, :println, :e)
      )),
    (:line, 432, :none),
    (:function, (:call, :keyword_args, (:parameters, (:kw, :k1, 4), (:kw, :name2, "hello"))), (:block,
        (:line, 433, :none),
        (:return, (:call, :Dict, (:(=>), "k1", :k1), (:(=>), "name2", :name2)))
      )),
    (:line, 436, :none),
    (:call, :keyword_args, (:kw, :name2, "ness")),
    (:line, 437, :none),
    (:call, :keyword_args, (:kw, :k1, "mine")),
    (:line, 438, :none),
    (:call, :keyword_args),
    (:line, 441, :none),
    (:function, (:call, :all_the_args, (:parameters, (:kw, :keyword_arg, "foo")), :normal_arg, (:kw, :optional_positional_arg, 2)), (:block,
        (:line, 442, :none),
        (:call, :println, (:string, "normal arg: ", :normal_arg)),
        (:line, 443, :none),
        (:call, :println, (:string, "optional arg: ", :optional_positional_arg)),
        (:line, 444, :none),
        (:call, :println, (:string, "keyword arg: ", :keyword_arg))
      )),
    (:line, 447, :none),
    (:call, :all_the_args, 1, 3, (:kw, :keyword_arg, 4)),
    (:line, 462, :none),
    (:call, (:->, :x, (:block,
          (:line, 462, :none),
          (:call, :>, :x, 2)
        )), 3),
    (:line, 465, :none),
    (:function, (:call, :create_adder, :x), (:block,
        (:line, 466, :none),
        (:->, :y, (:block,
            (:line, 466, :none),
            (:call, :+, :x, :y)
          ))
      )),
    (:line, 477, :none),
    (:(=), :add_10, (:call, :create_adder, 10)),
    (:line, 478, :none),
    (:call, :add_10, 3),
    (:line, 482, :none),
    (:call, :map, :add_10, (:vect, 1, 2, 3)),
    (:line, 483, :none),
    (:call, :filter, (:->, :x, (:block,
          (:line, 483, :none),
          (:call, :>, :x, 5)
        )), (:vect, 3, 4, 5, 6, 7)),
    (:line, 486, :none),
    (:comprehension, (:generator, (:call, :add_10, :i), (:(=), :i, (:vect, 1, 2, 3)))),
    (:line, 487, :none),
    (:comprehension, (:generator, (:call, :add_10, :i), (:(=), :i, (:vect, 1, 2, 3)))),
    (:line, 496, :none),
    (:call, :typeof, 5),
    (:line, 499, :none),
    (:call, :typeof, :Int64),
    (:line, 500, :none),
    (:call, :typeof, :DataType),
    (:line, 514, :none),
    (:type, true, :Tiger, (:block,
        (:line, 515, :none),
        (:(::), :taillength, :Float64),
        (:line, 516, :none),
        :coatcolor
      )),
    (:line, 521, :none),
    (:(=), :tigger, (:call, :Tiger, 3.5, "orange")),
    (:line, 524, :none),
    (:(=), :sherekhan, (:call, (:call, :typeof, :tigger), 5.6, "fire")),
    (:line, 531, :none),
    (:abstract, :Cat),
    (:line, 535, :none),
    (:call, :subtypes, :Number),
    (:line, 538, :none),
    (:call, :subtypes, :Cat),
    (:line, 541, :none),
    (:call, :subtypes, :AbstractString),
    (:line, 552, :none),
    (:call, :typeof, 5),
    (:line, 553, :none),
    (:call, :supertype, :Int64),
    (:line, 554, :none),
    (:call, :supertype, :Signed),
    (:line, 555, :none),
    (:call, :supertype, :Integer),
    (:line, 556, :none),
    (:call, :supertype, :Real),
    (:line, 557, :none),
    (:call, :supertype, :Number),
    (:line, 558, :none),
    (:call, :supertype, (:call, :supertype, :Signed)),
    (:line, 559, :none),
    (:call, :supertype, :Any),
    (:line, 561, :none),
    (:call, :typeof, "fire"),
    (:line, 562, :none),
    (:call, :supertype, :String),
    (:line, 563, :none),
    (:call, :supertype, :DirectIndexString),
    (:line, 567, :none),
    (:type, true, (:<:, :Lion, :Cat), (:block,
        (:line, 568, :none),
        :mane_color,
        (:line, 569, :none),
        (:(::), :roar, :AbstractString)
      )),
    (:line, 575, :none),
    (:(=), (:call, :Lion, (:(::), :roar, :AbstractString)), (:block,
        (:line, 575, :none),
        (:call, :Lion, "green", :roar)
      )),
    (:line, 578, :none),
    (:type, true, (:<:, :Panther, :Cat), (:block,
        (:line, 579, :none),
        :eye_color,
        (:line, 580, :none),
        (:(=), (:call, :Panther), (:block,
            (:line, 580, :none),
            (:call, :new, "green")
          ))
      )),
    (:line, 598, :none),
    (:function, (:call, :meow, (:(::), :animal, :Lion)), (:block,
        (:line, 599, :none),
        (:., :animal, (:quote, #QuoteNode
            :roar
          ))
      )),
    (:line, 602, :none),
    (:function, (:call, :meow, (:(::), :animal, :Panther)), (:block,
        (:line, 603, :none),
        "grrr"
      )),
    (:line, 606, :none),
    (:function, (:call, :meow, (:(::), :animal, :Tiger)), (:block,
        (:line, 607, :none),
        "rawwwr"
      )),
    (:line, 611, :none),
    (:call, :meow, :tigger),
    (:line, 612, :none),
    (:call, :meow, (:call, :Lion, "brown", "ROAAR")),
    (:line, 613, :none),
    (:call, :meow, (:call, :Panther)),
    (:line, 616, :none),
    (:call, :issubtype, :Tiger, :Cat),
    (:line, 617, :none),
    (:call, :issubtype, :Lion, :Cat),
    (:line, 618, :none),
    (:call, :issubtype, :Panther, :Cat),
    (:line, 621, :none),
    (:function, (:call, :pet_cat, (:(::), :cat, :Cat)), (:block,
        (:line, 622, :none),
        (:call, :println, (:string, "The cat says ", (:call, :meow, :cat)))
      )),
    (:line, 625, :none),
    (:call, :pet_cat, (:call, :Lion, "42")),
    (:line, 626, :none),
    (:try, (:block,
        (:line, 627, :none),
        (:call, :pet_cat, :tigger)
      ), :e, (:block,
        (:line, 629, :none),
        (:call, :println, :e)
      )),
    (:line, 637, :none),
    (:function, (:call, :fight, (:(::), :t, :Tiger), (:(::), :c, :Cat)), (:block,
        (:line, 638, :none),
        (:call, :println, (:string, "The ", (:., :t, (:quote, #QuoteNode
                :coatcolor
              )), " tiger wins!"))
      )),
    (:line, 642, :none),
    (:call, :fight, :tigger, (:call, :Panther)),
    (:line, 643, :none),
    (:call, :fight, :tigger, (:call, :Lion, "ROAR")),
    (:line, 646, :none),
    (:(=), (:call, :fight, (:(::), :t, :Tiger), (:(::), :l, :Lion)), (:block,
        (:line, 646, :none),
        (:call, :println, (:string, "The ", (:., :l, (:quote, #QuoteNode
                :mane_color
              )), "-maned lion wins!"))
      )),
    (:line, 649, :none),
    (:call, :fight, :tigger, (:call, :Panther)),
    (:line, 650, :none),
    (:call, :fight, :tigger, (:call, :Lion, "ROAR")),
    (:line, 653, :none),
    (:(=), (:call, :fight, (:(::), :l, :Lion), (:(::), :c, :Cat)), (:block,
        (:line, 653, :none),
        (:call, :println, (:string, "The victorious cat says ", (:call, :meow, :c)))
      )),
    (:line, 656, :none),
    (:call, :fight, (:call, :Lion, "balooga!"), (:call, :Panther)),
    (:line, 657, :none),
    (:try, (:block,
        (:line, 658, :none),
        (:call, :fight, (:call, :Panther), (:call, :Lion, "RAWR"))
      ), false, (:block,)),
    (:line, 674, :none),
    (:call, :fight, (:call, :Lion, "RAR"), (:call, :Lion, "brown", "rarrr")),
    (:line, 677, :none),
    (:(=), (:call, :fight, (:(::), :l, :Lion), (:(::), :l2, :Lion)), (:block,
        (:line, 677, :none),
        (:call, :println, "The lions come to a tie")
      )),
    (:line, 678, :none),
    (:call, :fight, (:call, :Lion, "RAR"), (:call, :Lion, "brown", "rarrr")),
    (:line, 684, :none),
    (:(=), (:call, :square_area, :l), (:block,
        (:line, 684, :none),
        (:call, :*, :l, :l)
      )),
    (:line, 686, :none),
    (:call, :square_area, 5),
    (:line, 689, :none),
    (:call, :code_native, :square_area, (:tuple, :Int32)),
    (:line, 701, :none),
    (:call, :code_native, :square_area, (:tuple, :Float32)),
    (:line, 712, :none),
    (:call, :code_native, :square_area, (:tuple, :Float64)),
    (:line, 726, :none),
    (:(=), (:call, :circle_area, :r), (:block,
        (:line, 726, :none),
        (:call, :*, :pi, :r, :r)
      )),
    (:line, 727, :none),
    (:call, :circle_area, 5),
    (:line, 729, :none),
    (:call, :code_native, :circle_area, (:tuple, :Int32)),
    (:line, 744, :none),
    (:call, :code_native, :circle_area, (:tuple, :Float64))
  ))