(:quote, (:block,
    (:line, 3, :none),
    (:module, true, :DSP, (:block,
        (:line, 3, :none),
        (:line, 5, :none),
        (:import, :Base, :trailingsize),
        (:line, 7, :none),
        (:export, :filt, :filt!, :deconv, :conv, :conv2, :xcorr),
        (:line, 9, :none),
        (:(=), (:call, :_zerosi, :b, :a, :T), (:block,
            (:line, 9, :none),
            (:call, :zeros, (:call, :promote_type, (:call, :eltype, :b), (:call, :eltype, :a), :T), (:call, :-, (:call, :max, (:call, :length, :a), (:call, :length, :b)), 1))
          )),
        (:line, 11, :none),
        (:function, (:call, (:curly, :filt, :T, :S), (:(::), :b, (:curly, :Union, :AbstractVector, :Number)), (:(::), :a, (:curly, :Union, :AbstractVector, :Number)), (:(::), :x, (:curly, :AbstractArray, :T)), (:kw, (:(::), :si, (:curly, :AbstractArray, :S)), (:call, :_zerosi, :b, :a, :T))), (:block,
            (:line, 13, :none),
            (:call, :filt!, (:call, (:curly, :Array, (:call, :promote_type, (:call, :eltype, :b), (:call, :eltype, :a), :T, :S)), (:call, :size, :x)), :b, :a, :x, :si)
          )),
        (:line, 18, :none),
        (:function, (:call, (:curly, :filt!, :T, :S, :N), (:(::), :out, :AbstractArray), (:(::), :b, (:curly, :Union, :AbstractVector, :Number)), (:(::), :a, (:curly, :Union, :AbstractVector, :Number)), (:(::), :x, (:curly, :AbstractArray, :T)), (:kw, (:(::), :si, (:curly, :AbstractArray, :S, :N)), (:call, :_zerosi, :b, :a, :T))), (:block,
            (:line, 20, :none),
            (:&&, (:call, :isempty, :b), (:call, :throw, (:call, :ArgumentError, "filter vector b must be non-empty"))),
            (:line, 21, :none),
            (:&&, (:call, :isempty, :a), (:call, :throw, (:call, :ArgumentError, "filter vector a must be non-empty"))),
            (:line, 22, :none),
            (:&&, (:call, :(==), (:ref, :a, 1), 0), (:call, :throw, (:call, :ArgumentError, "filter vector a[1] must be nonzero"))),
            (:line, 23, :none),
            (:if, (:call, :(!=), (:call, :size, :x), (:call, :size, :out)), (:block,
                (:line, 24, :none),
                (:call, :throw, (:call, :ArgumentError, (:string, "output size ", (:call, :size, :out), " must match input size ", (:call, :size, :x))))
              )),
            (:line, 27, :none),
            (:(=), :as, (:call, :length, :a)),
            (:line, 28, :none),
            (:(=), :bs, (:call, :length, :b)),
            (:line, 29, :none),
            (:(=), :sz, (:call, :max, :as, :bs)),
            (:line, 30, :none),
            (:(=), :silen, (:call, :-, :sz, 1)),
            (:line, 31, :none),
            (:(=), :ncols, (:call, :trailingsize, :x, 2)),
            (:line, 33, :none),
            (:if, (:call, :(!=), (:call, :size, :si, 1), :silen), (:block,
                (:line, 34, :none),
                (:call, :throw, (:call, :ArgumentError, "initial state vector si must have max(length(a),length(b))-1 rows"))
              )),
            (:line, 36, :none),
            (:if, (:&&, (:call, :>, :N, 1), (:call, :(!=), (:call, :trailingsize, :si, 2), :ncols)), (:block,
                (:line, 37, :none),
                (:call, :throw, (:call, :ArgumentError, "initial state vector si must be a vector or have the same number of columns as x"))
              )),
            (:line, 40, :none),
            (:&&, (:call, :(==), (:call, :size, :x, 1), 0), (:return, :out)),
            (:line, 41, :none),
            (:&&, (:call, :(==), :sz, 1), (:return, (:call, :scale!, :out, :x, (:call, :/, (:ref, :b, 1), (:ref, :a, 1))))),
            (:line, 44, :none),
            (:if, (:call, :(!=), (:ref, :a, 1), 1), (:block,
                (:line, 45, :none),
                (:(=), :norml, (:ref, :a, 1)),
                (:line, 46, :none),
                (:./=, :a, :norml),
                (:line, 47, :none),
                (:./=, :b, :norml)
              )),
            (:line, 50, :none),
            (:&&, (:call, :<, :bs, :sz), (:(=), :b, (:call, :copy!, (:call, :zeros, (:call, :eltype, :b), :sz), :b))),
            (:line, 51, :none),
            (:&&, (:comparison, 1, :<, :as, :<, :sz), (:(=), :a, (:call, :copy!, (:call, :zeros, (:call, :eltype, :a), :sz), :a))),
            (:line, 53, :none),
            (:(=), :initial_si, :si),
            (:line, 54, :none),
            (:for, (:(=), :col, (:(:), 1, :ncols)), (:block,
                (:line, 56, :none),
                (:(=), :si, (:ref, :initial_si, :(:), (:if, (:call, :>, :N, 1), :col, 1))),
                (:line, 57, :none),
                (:if, (:call, :>, :as, 1), (:block,
                    (:line, 58, :none),
                    (:call, :_filt_iir!, :out, :b, :a, :x, :si, :col)
                  ), (:block,
                    (:line, 60, :none),
                    (:call, :_filt_fir!, :out, :b, :x, :si, :col)
                  ))
              )),
            (:line, 63, :none),
            (:return, :out)
          )),
        (:line, 66, :none),
        (:function, (:call, :_filt_iir!, :out, :b, :a, :x, :si, :col), (:block,
            (:line, 67, :none),
            (:(=), :silen, (:call, :length, :si)),
            (:line, 68, :none),
            (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:(:), 1, (:call, :size, :x, 1))), (:block,
                  (:line, 69, :none),
                  (:(=), :xi, (:ref, :x, :i, :col)),
                  (:line, 70, :none),
                  (:(=), :val, (:call, :+, (:ref, :si, 1), (:call, :*, (:ref, :b, 1), :xi))),
                  (:line, 71, :none),
                  (:for, (:(=), :j, (:(:), 1, (:call, :-, :silen, 1))), (:block,
                      (:line, 72, :none),
                      (:(=), (:ref, :si, :j), (:call, :-, (:call, :+, (:ref, :si, (:call, :+, :j, 1)), (:call, :*, (:ref, :b, (:call, :+, :j, 1)), :xi)), (:call, :*, (:ref, :a, (:call, :+, :j, 1)), :val)))
                    )),
                  (:line, 74, :none),
                  (:(=), (:ref, :si, :silen), (:call, :-, (:call, :*, (:ref, :b, (:call, :+, :silen, 1)), :xi), (:call, :*, (:ref, :a, (:call, :+, :silen, 1)), :val))),
                  (:line, 75, :none),
                  (:(=), (:ref, :out, :i, :col), :val)
                )))
          )),
        (:line, 79, :none),
        (:function, (:call, :_filt_fir!, :out, :b, :x, :si, :col), (:block,
            (:line, 80, :none),
            (:(=), :silen, (:call, :length, :si)),
            (:line, 81, :none),
            (:macrocall, Symbol("@inbounds"), (:for, (:(=), :i, (:(:), 1, (:call, :size, :x, 1))), (:block,
                  (:line, 82, :none),
                  (:(=), :xi, (:ref, :x, :i, :col)),
                  (:line, 83, :none),
                  (:(=), :val, (:call, :+, (:ref, :si, 1), (:call, :*, (:ref, :b, 1), :xi))),
                  (:line, 84, :none),
                  (:for, (:(=), :j, (:(:), 1, (:call, :-, :silen, 1))), (:block,
                      (:line, 85, :none),
                      (:(=), (:ref, :si, :j), (:call, :+, (:ref, :si, (:call, :+, :j, 1)), (:call, :*, (:ref, :b, (:call, :+, :j, 1)), :xi)))
                    )),
                  (:line, 87, :none),
                  (:(=), (:ref, :si, :silen), (:call, :*, (:ref, :b, (:call, :+, :silen, 1)), :xi)),
                  (:line, 88, :none),
                  (:(=), (:ref, :out, :i, :col), :val)
                )))
          )),
        (:line, 92, :none),
        (:function, (:call, (:curly, :deconv, :T), (:(::), :b, (:curly, :StridedVector, :T)), (:(::), :a, (:curly, :StridedVector, :T))), (:block,
            (:line, 93, :none),
            (:(=), :lb, (:call, :size, :b, 1)),
            (:line, 94, :none),
            (:(=), :la, (:call, :size, :a, 1)),
            (:line, 95, :none),
            (:if, (:call, :<, :lb, :la), (:block,
                (:line, 96, :none),
                (:return, (:vect, (:call, :zero, :T)))
              )),
            (:line, 98, :none),
            (:(=), :lx, (:call, :+, (:call, :-, :lb, :la), 1)),
            (:line, 99, :none),
            (:(=), :x, (:call, :zeros, :T, :lx)),
            (:line, 100, :none),
            (:(=), (:ref, :x, 1), 1),
            (:line, 101, :none),
            (:call, :filt, :b, :a, :x)
          )),
        (:line, 104, :none),
        (:function, (:call, (:curly, :conv, (:<:, :T, (:., (:., :Base, (:quote, #QuoteNode
                      :LinAlg
                    )), (:quote, #QuoteNode
                    :BlasFloat
                  )))), (:(::), :u, (:curly, :StridedVector, :T)), (:(::), :v, (:curly, :StridedVector, :T))), (:block,
            (:line, 105, :none),
            (:(=), :nu, (:call, :length, :u)),
            (:line, 106, :none),
            (:(=), :nv, (:call, :length, :v)),
            (:line, 107, :none),
            (:(=), :n, (:call, :-, (:call, :+, :nu, :nv), 1)),
            (:line, 108, :none),
            (:(=), :np2, (:if, (:call, :>, :n, 1024), (:call, :nextprod, (:vect, 2, 3, 5), :n), (:call, :nextpow2, :n))),
            (:line, 109, :none),
            (:(=), :upad, (:vcat, :u, (:call, :zeros, :T, (:call, :-, :np2, :nu)))),
            (:line, 110, :none),
            (:(=), :vpad, (:vcat, :v, (:call, :zeros, :T, (:call, :-, :np2, :nv)))),
            (:line, 111, :none),
            (:if, (:<:, :T, :Real), (:block,
                (:line, 112, :none),
                (:(=), :p, (:call, :plan_rfft, :upad)),
                (:line, 113, :none),
                (:(=), :y, (:call, :irfft, (:call, :.*, (:call, :*, :p, :upad), (:call, :*, :p, :vpad)), :np2))
              ), (:block,
                (:line, 115, :none),
                (:(=), :p, (:call, :plan_fft!, :upad)),
                (:line, 116, :none),
                (:(=), :y, (:call, :ifft!, (:call, :.*, (:call, :*, :p, :upad), (:call, :*, :p, :vpad))))
              )),
            (:line, 118, :none),
            (:return, (:ref, :y, (:(:), 1, :n)))
          )),
        (:line, 120, :none),
        (:(=), (:call, (:curly, :conv, (:<:, :T, :Integer)), (:(::), :u, (:curly, :StridedVector, :T)), (:(::), :v, (:curly, :StridedVector, :T))), (:block,
            (:line, 120, :none),
            (:call, :round, :Int, (:call, :conv, (:call, :float, :u), (:call, :float, :v)))
          )),
        (:line, 121, :none),
        (:(=), (:call, (:curly, :conv, (:<:, :T, :Integer), (:<:, :S, (:., (:., :Base, (:quote, #QuoteNode
                      :LinAlg
                    )), (:quote, #QuoteNode
                    :BlasFloat
                  )))), (:(::), :u, (:curly, :StridedVector, :T)), (:(::), :v, (:curly, :StridedVector, :S))), (:block,
            (:line, 121, :none),
            (:call, :conv, (:call, :float, :u), :v)
          )),
        (:line, 122, :none),
        (:(=), (:call, (:curly, :conv, (:<:, :T, :Integer), (:<:, :S, (:., (:., :Base, (:quote, #QuoteNode
                      :LinAlg
                    )), (:quote, #QuoteNode
                    :BlasFloat
                  )))), (:(::), :u, (:curly, :StridedVector, :S)), (:(::), :v, (:curly, :StridedVector, :T))), (:block,
            (:line, 122, :none),
            (:call, :conv, :u, (:call, :float, :v))
          )),
        (:line, 124, :none),
        (:function, (:call, (:curly, :conv2, :T), (:(::), :u, (:curly, :StridedVector, :T)), (:(::), :v, (:curly, :StridedVector, :T)), (:(::), :A, (:curly, :StridedMatrix, :T))), (:block,
            (:line, 125, :none),
            (:(=), :m, (:call, :-, (:call, :+, (:call, :length, :u), (:call, :size, :A, 1)), 1)),
            (:line, 126, :none),
            (:(=), :n, (:call, :-, (:call, :+, (:call, :length, :v), (:call, :size, :A, 2)), 1)),
            (:line, 127, :none),
            (:(=), :B, (:call, :zeros, :T, :m, :n)),
            (:line, 128, :none),
            (:(=), (:ref, :B, (:(:), 1, (:call, :size, :A, 1)), (:(:), 1, (:call, :size, :A, 2))), :A),
            (:line, 129, :none),
            (:(=), :u, (:call, :fft, (:vcat, :u, (:call, :zeros, :T, (:call, :-, :m, (:call, :length, :u)))))),
            (:line, 130, :none),
            (:(=), :v, (:call, :fft, (:vcat, :v, (:call, :zeros, :T, (:call, :-, :n, (:call, :length, :v)))))),
            (:line, 131, :none),
            (:(=), :C, (:call, :ifft, (:call, :.*, (:call, :fft, :B), (:call, :*, :u, (:.', :v))))),
            (:line, 132, :none),
            (:if, (:<:, :T, :Real), (:block,
                (:line, 133, :none),
                (:return, (:call, :real, :C))
              )),
            (:line, 135, :none),
            (:return, :C)
          )),
        (:line, 138, :none),
        (:function, (:call, (:curly, :conv2, :T), (:(::), :A, (:curly, :StridedMatrix, :T)), (:(::), :B, (:curly, :StridedMatrix, :T))), (:block,
            (:line, 139, :none),
            (:(=), (:tuple, :sa, :sb), (:tuple, (:call, :size, :A), (:call, :size, :B))),
            (:line, 140, :none),
            (:(=), :At, (:call, :zeros, :T, (:call, :-, (:call, :+, (:ref, :sa, 1), (:ref, :sb, 1)), 1), (:call, :-, (:call, :+, (:ref, :sa, 2), (:ref, :sb, 2)), 1))),
            (:line, 141, :none),
            (:(=), :Bt, (:call, :zeros, :T, (:call, :-, (:call, :+, (:ref, :sa, 1), (:ref, :sb, 1)), 1), (:call, :-, (:call, :+, (:ref, :sa, 2), (:ref, :sb, 2)), 1))),
            (:line, 142, :none),
            (:(=), (:ref, :At, (:(:), 1, (:ref, :sa, 1)), (:(:), 1, (:ref, :sa, 2))), :A),
            (:line, 143, :none),
            (:(=), (:ref, :Bt, (:(:), 1, (:ref, :sb, 1)), (:(:), 1, (:ref, :sb, 2))), :B),
            (:line, 144, :none),
            (:(=), :p, (:call, :plan_fft, :At)),
            (:line, 145, :none),
            (:(=), :C, (:call, :ifft, (:call, :.*, (:call, :*, :p, :At), (:call, :*, :p, :Bt)))),
            (:line, 146, :none),
            (:if, (:<:, :T, :Real), (:block,
                (:line, 147, :none),
                (:return, (:call, :real, :C))
              )),
            (:line, 149, :none),
            (:return, :C)
          )),
        (:line, 151, :none),
        (:(=), (:call, (:curly, :conv2, (:<:, :T, :Integer)), (:(::), :A, (:curly, :StridedMatrix, :T)), (:(::), :B, (:curly, :StridedMatrix, :T))), (:block,
            (:line, 151, :none),
            (:call, :round, :Int, (:call, :conv2, (:call, :float, :A), (:call, :float, :B)))
          )),
        (:line, 152, :none),
        (:(=), (:call, (:curly, :conv2, (:<:, :T, :Integer)), (:(::), :u, (:curly, :StridedVector, :T)), (:(::), :v, (:curly, :StridedVector, :T)), (:(::), :A, (:curly, :StridedMatrix, :T))), (:block,
            (:line, 152, :none),
            (:call, :round, :Int, (:call, :conv2, (:call, :float, :u), (:call, :float, :v), (:call, :float, :A)))
          )),
        (:line, 154, :none),
        (:function, (:call, :xcorr, :u, :v), (:block,
            (:line, 155, :none),
            (:(=), :su, (:call, :size, :u, 1)),
            (:line, 155, :none),
            (:(=), :sv, (:call, :size, :v, 1)),
            (:line, 156, :none),
            (:if, (:call, :<, :su, :sv), (:block,
                (:line, 157, :none),
                (:(=), :u, (:vcat, :u, (:call, :zeros, (:call, :eltype, :u), (:call, :-, :sv, :su))))
              ), (:block,
                (:line, 158, :none),
                (:if, (:call, :<, :sv, :su), (:block,
                    (:line, 159, :none),
                    (:(=), :v, (:vcat, :v, (:call, :zeros, (:call, :eltype, :v), (:call, :-, :su, :sv))))
                  ))
              )),
            (:line, 161, :none),
            (:call, :flipdim, (:call, :conv, (:call, :flipdim, :u, 1), :v), 1)
          ))
      ))
  ))