(:quote, (:block,
    (:line, 3, :none),
    (:(=), (:call, :convert, (:(::), (:curly, :Type, :Char)), (:(::), :x, :UInt32)), (:block,
        (:line, 3, :none),
        (:call, :reinterpret, :Char, :x)
      )),
    (:line, 4, :none),
    (:(=), (:call, :convert, (:(::), (:curly, :Type, :Char)), (:(::), :x, :Number)), (:block,
        (:line, 4, :none),
        (:call, :Char, (:call, :UInt32, :x))
      )),
    (:line, 5, :none),
    (:(=), (:call, :convert, (:(::), (:curly, :Type, :UInt32)), (:(::), :x, :Char)), (:block,
        (:line, 5, :none),
        (:call, :reinterpret, :UInt32, :x)
      )),
    (:line, 6, :none),
    (:(=), (:where, (:call, :convert, (:(::), (:curly, :Type, :T)), (:(::), :x, :Char)), (:<:, :T, :Number)), (:block,
        (:line, 6, :none),
        (:call, :convert, :T, (:call, :UInt32, :x))
      )),
    (:line, 8, :none),
    (:(=), (:call, (:curly, :rem, (:<:, :T, :Number)), (:(::), :x, :Char), (:(::), (:curly, :Type, :T))), (:block,
        (:line, 8, :none),
        (:call, :rem, (:call, :UInt32, :x), :T)
      )),
    (:line, 10, :none),
    (:(=), (:call, :typemax, (:(::), (:curly, :Type, :Char))), (:block,
        (:line, 10, :none),
        (:call, :reinterpret, :Char, (:call, :typemax, :UInt32))
      )),
    (:line, 11, :none),
    (:(=), (:call, :typemin, (:(::), (:curly, :Type, :Char))), (:block,
        (:line, 11, :none),
        (:call, :reinterpret, :Char, (:call, :typemin, :UInt32))
      )),
    (:line, 13, :none),
    (:(=), (:call, :size, (:(::), :c, :Char)), (:block,
        (:line, 13, :none),
        (:tuple,)
      )),
    (:line, 14, :none),
    (:(=), (:call, :size, (:(::), :c, :Char), :d), (:block,
        (:line, 14, :none),
        (:if, (:call, :<, (:call, :convert, :Int, :d), 1), (:call, :throw, (:call, :BoundsError)), 1)
      )),
    (:line, 15, :none),
    (:(=), (:call, :ndims, (:(::), :c, :Char)), (:block,
        (:line, 15, :none),
        0
      )),
    (:line, 16, :none),
    (:(=), (:call, :ndims, (:(::), (:curly, :Type, :Char))), (:block,
        (:line, 16, :none),
        0
      )),
    (:line, 17, :none),
    (:(=), (:call, :length, (:(::), :c, :Char)), (:block,
        (:line, 17, :none),
        1
      )),
    (:line, 18, :none),
    (:(=), (:call, :endof, (:(::), :c, :Char)), (:block,
        (:line, 18, :none),
        1
      )),
    (:line, 19, :none),
    (:(=), (:call, :getindex, (:(::), :c, :Char)), (:block,
        (:line, 19, :none),
        :c
      )),
    (:line, 20, :none),
    (:(=), (:call, :getindex, (:(::), :c, :Char), (:(::), :i, :Integer)), (:block,
        (:line, 20, :none),
        (:if, (:call, :(==), :i, 1), :c, (:call, :throw, (:call, :BoundsError)))
      )),
    (:line, 21, :none),
    (:(=), (:call, :getindex, (:(::), :c, :Char), (:..., (:(::), :I, :Integer))), (:block,
        (:line, 21, :none),
        (:if, (:call, :all, (:->, :x, (:block,
                (:line, 21, :none),
                (:call, :(==), :x, 1)
              )), :I), :c, (:call, :throw, (:call, :BoundsError)))
      )),
    (:line, 22, :none),
    (:(=), (:call, :first, (:(::), :c, :Char)), (:block,
        (:line, 22, :none),
        :c
      )),
    (:line, 23, :none),
    (:(=), (:call, :last, (:(::), :c, :Char)), (:block,
        (:line, 23, :none),
        :c
      )),
    (:line, 24, :none),
    (:(=), (:call, :eltype, (:(::), (:curly, :Type, :Char))), (:block,
        (:line, 24, :none),
        :Char
      )),
    (:line, 26, :none),
    (:(=), (:call, :start, (:(::), :c, :Char)), (:block,
        (:line, 26, :none),
        false
      )),
    (:line, 27, :none),
    (:(=), (:call, :next, (:(::), :c, :Char), :state), (:block,
        (:line, 27, :none),
        (:tuple, :c, true)
      )),
    (:line, 28, :none),
    (:(=), (:call, :done, (:(::), :c, :Char), :state), (:block,
        (:line, 28, :none),
        :state
      )),
    (:line, 29, :none),
    (:(=), (:call, :isempty, (:(::), :c, :Char)), (:block,
        (:line, 29, :none),
        false
      )),
    (:line, 30, :none),
    (:(=), (:call, :in, (:(::), :x, :Char), (:(::), :y, :Char)), (:block,
        (:line, 30, :none),
        (:call, :(==), :x, :y)
      )),
    (:line, 32, :none),
    (:(=), (:call, :(==), (:(::), :x, :Char), (:(::), :y, :Char)), (:block,
        (:line, 32, :none),
        (:call, :(==), (:call, :UInt32, :x), (:call, :UInt32, :y))
      )),
    (:line, 33, :none),
    (:(=), (:call, :isless, (:(::), :x, :Char), (:(::), :y, :Char)), (:block,
        (:line, 33, :none),
        (:call, :<, (:call, :UInt32, :x), (:call, :UInt32, :y))
      )),
    (:line, 35, :none),
    (:const, (:(=), :hashchar_seed, 0xd4d64234)),
    (:line, 36, :none),
    (:(=), (:call, :hash, (:(::), :x, :Char), (:(::), :h, :UInt)), (:block,
        (:line, 36, :none),
        (:call, :hash_uint64, (:call, :âŠ», (:call, :<<, (:call, :+, (:call, :UInt64, :x), :hashchar_seed), 32), (:call, :UInt64, :h)))
      )),
    (:line, 38, :none),
    (:(=), (:call, :-, (:(::), :x, :Char), (:(::), :y, :Char)), (:block,
        (:line, 38, :none),
        (:call, :-, (:call, :Int, :x), (:call, :Int, :y))
      )),
    (:line, 39, :none),
    (:(=), (:call, :-, (:(::), :x, :Char), (:(::), :y, :Integer)), (:block,
        (:line, 39, :none),
        (:call, :Char, (:call, :-, (:call, :Int32, :x), (:call, :Int32, :y)))
      )),
    (:line, 40, :none),
    (:(=), (:call, :+, (:(::), :x, :Char), (:(::), :y, :Integer)), (:block,
        (:line, 40, :none),
        (:call, :Char, (:call, :+, (:call, :Int32, :x), (:call, :Int32, :y)))
      )),
    (:line, 41, :none),
    (:(=), (:call, :+, (:(::), :x, :Integer), (:(::), :y, :Char)), (:block,
        (:line, 41, :none),
        (:call, :+, :y, :x)
      )),
    (:line, 43, :none),
    (:(=), (:call, :bswap, (:(::), :x, :Char)), (:block,
        (:line, 43, :none),
        (:call, :Char, (:call, :bswap, (:call, :UInt32, :x)))
      )),
    (:line, 45, :none),
    (:(=), (:call, :print, (:(::), :io, :IO), (:(::), :c, :Char)), (:block,
        (:line, 45, :none),
        (:block,
          (:call, :write, :io, :c),
          :nothing
        )
      )),
    (:line, 47, :none),
    (:const, (:(=), :hex_chars, (:typed_vcat, :UInt8, (:(:), '0', '9'), (:(:), 'a', 'z')))),
    (:line, 49, :none),
    (:function, (:call, :show, (:(::), :io, :IO), (:(::), :c, :Char)), (:block,
        (:line, 50, :none),
        (:if, (:call, :(<=), :c, '\\'), (:block,
            (:line, 51, :none),
            (:(=), :b, (:if, (:call, :(==), :c, '\0'), 0x30, (:if, (:call, :(==), :c, '\a'), 0x61, (:if, (:call, :(==), :c, '\b'), 0x62, (:if, (:call, :(==), :c, '\t'), 0x74, (:if, (:call, :(==), :c, '\n'), 0x6e, (:if, (:call, :(==), :c, '\v'), 0x76, (:if, (:call, :(==), :c, '\f'), 0x66, (:if, (:call, :(==), :c, '\r'), 0x72, (:if, (:call, :(==), :c, '\e'), 0x65, (:if, (:call, :(==), :c, '\''), 0x27, (:if, (:call, :(==), :c, '\\'), 0x5c, 0xff)))))))))))),
            (:line, 62, :none),
            (:if, (:call, :(!=), :b, 0xff), (:block,
                (:line, 63, :none),
                (:call, :write, :io, 0x27, 0x5c, :b, 0x27),
                (:line, 64, :none),
                (:return, nothing)
              ))
          )),
        (:line, 67, :none),
        (:if, (:call, :isprint, :c), (:block,
            (:line, 68, :none),
            (:call, :write, :io, 0x27, :c, 0x27)
          ), (:block,
            (:line, 70, :none),
            (:(=), :u, (:call, :UInt32, :c)),
            (:line, 71, :none),
            (:call, :write, :io, 0x27, 0x5c, (:if, (:call, :(<=), :c, '\x7f'), 0x78, (:if, (:call, :(<=), :c, '\uffff'), 0x75, 0x55))),
            (:line, 72, :none),
            (:(=), :d, (:call, :max, 2, (:call, :-, 8, (:call, :>>, (:call, :leading_zeros, :u), 2)))),
            (:line, 73, :none),
            (:while, (:call, :<, 0, :d), (:block,
                (:line, 74, :none),
                (:call, :write, :io, (:ref, :hex_chars, (:call, :+, (:call, :&, (:call, :>>, :u, (:call, :<<, (:-=, :d, 1), 2)), 0x0f), 1)))
              )),
            (:line, 76, :none),
            (:call, :write, :io, 0x27)
          )),
        (:line, 78, :none),
        (:return, nothing)
      )),
    (:line, 81, :none),
    (:function, (:call, :show, (:(::), :io, :IO), (:(::), (:macrocall, Symbol("@MIME_str"), "text/plain")), (:(::), :c, :Char)), (:block,
        (:line, 82, :none),
        (:call, :show, :io, :c),
        (:line, 83, :none),
        (:(=), :u, (:call, :UInt32, :c)),
        (:line, 84, :none),
        (:call, :print, :io, ": ", (:if, (:call, :isascii, :c), "ASCII/", ""), "Unicode U+", (:call, :hex, :u, (:if, (:call, :>, :u, 0xffff), 6, 4))),
        (:line, 85, :none),
        (:call, :print, :io, " (category ", (:call, (:., :UTF8proc, (:quote, #QuoteNode
                :category_abbrev
              )), :c), ": ", (:call, (:., :UTF8proc, (:quote, #QuoteNode
                :category_string
              )), :c), ")")
      ))
  ))