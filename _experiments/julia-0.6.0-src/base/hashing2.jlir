(:quote, (:block,
    (:line, 5, :none),
    (:function, (:call, :hash_integer, (:(::), :n, :Integer), (:(::), :h, :UInt)), (:block,
        (:line, 6, :none),
        (:⊻=, :h, (:call, :hash_uint, (:call, :⊻, (:call, :%, :n, :UInt), :h))),
        (:line, 7, :none),
        (:(=), :n, (:call, :abs, :n)),
        (:line, 8, :none),
        (:>>>=, :n, (:call, :<<, (:call, :sizeof, :UInt), 3)),
        (:line, 9, :none),
        (:while, (:call, :(!=), :n, 0), (:block,
            (:line, 10, :none),
            (:⊻=, :h, (:call, :hash_uint, (:call, :⊻, (:call, :%, :n, :UInt), :h))),
            (:line, 11, :none),
            (:>>>=, :n, (:call, :<<, (:call, :sizeof, :UInt), 3))
          )),
        (:line, 13, :none),
        (:return, :h)
      )),
    (:line, 16, :none),
    (:function, (:call, :hash_integer, (:(::), :n, :BigInt), (:(::), :h, :UInt)), (:block,
        (:line, 17, :none),
        (:(=), :s, (:., :n, (:quote, #QuoteNode
              :size
            ))),
        (:line, 18, :none),
        (:&&, (:call, :(==), :s, 0), (:return, (:call, :hash_integer, 0, :h))),
        (:line, 19, :none),
        (:(=), :p, (:call, :convert, (:curly, :Ptr, :UInt), (:., :n, (:quote, #QuoteNode
                :d
              )))),
        (:line, 20, :none),
        (:(=), :b, (:call, :unsafe_load, :p)),
        (:line, 21, :none),
        (:⊻=, :h, (:call, :hash_uint, (:call, :⊻, (:call, :ifelse, (:call, :<, :s, 0), (:call, :-, :b), :b), :h))),
        (:line, 22, :none),
        (:for, (:(=), :k, (:(:), 2, (:call, :abs, :s))), (:block,
            (:line, 23, :none),
            (:⊻=, :h, (:call, :hash_uint, (:call, :⊻, (:call, :unsafe_load, :p, :k), :h)))
          )),
        (:line, 25, :none),
        (:return, :h)
      )),
    (:line, 30, :none),
    (:function, (:call, :hash, (:(::), :x, :Real), (:(::), :h, :UInt)), (:block,
        (:line, 32, :none),
        (:(=), (:tuple, :num, :pow, :den), (:call, :decompose, :x)),
        (:line, 35, :none),
        (:&&, (:call, :(==), :num, 0), (:&&, (:call, :(==), :den, 0), (:return, (:call, :hash, :NaN, :h)))),
        (:line, 36, :none),
        (:&&, (:call, :(==), :num, 0), (:return, (:call, :hash, (:call, :ifelse, (:call, :>, :den, 0), 0.0, -0.0), :h))),
        (:line, 37, :none),
        (:&&, (:call, :(==), :den, 0), (:return, (:call, :hash, (:call, :ifelse, (:call, :>, :num, 0), :Inf, (:call, :-, :Inf)), :h))),
        (:line, 40, :none),
        (:if, (:call, :<, :den, 0), (:block,
            (:line, 41, :none),
            (:(=), :num, (:call, :-, :num)),
            (:line, 42, :none),
            (:(=), :den, (:call, :-, :den))
          )),
        (:line, 44, :none),
        (:(=), :z, (:call, :trailing_zeros, :num)),
        (:line, 45, :none),
        (:if, (:call, :(!=), :z, 0), (:block,
            (:line, 46, :none),
            (:>>=, :num, :z),
            (:line, 47, :none),
            (:+=, :pow, :z)
          )),
        (:line, 49, :none),
        (:(=), :z, (:call, :trailing_zeros, :den)),
        (:line, 50, :none),
        (:if, (:call, :(!=), :z, 0), (:block,
            (:line, 51, :none),
            (:>>=, :den, :z),
            (:line, 52, :none),
            (:-=, :pow, :z)
          )),
        (:line, 56, :none),
        (:if, (:call, :(==), :den, 1), (:block,
            (:line, 57, :none),
            (:(=), :left, (:call, :+, (:call, :ndigits0z, :num, 2), :pow)),
            (:line, 58, :none),
            (:(=), :right, (:call, :+, (:call, :trailing_zeros, :num), :pow)),
            (:line, 59, :none),
            (:if, (:call, :(<=), -1074, :right), (:block,
                (:line, 60, :none),
                (:if, (:&&, (:call, :(<=), 0, :right), (:call, :(<=), :left, 64)), (:block,
                    (:line, 61, :none),
                    (:&&, (:call, :(<=), :left, 63), (:return, (:call, :hash, (:call, :<<, (:call, :Int64, :num), (:call, :Int, :pow)), :h))),
                    (:line, 62, :none),
                    (:&&, (:call, :(==), (:call, :signbit, :num), (:call, :signbit, :den)), (:return, (:call, :hash, (:call, :<<, (:call, :UInt64, :num), (:call, :Int, :pow)), :h)))
                  )),
                (:line, 64, :none),
                (:&&, (:call, :(<=), :left, 1024), (:&&, (:call, :(<=), (:call, :-, :left, :right), 53), (:return, (:call, :hash, (:call, :ldexp, (:call, :Float64, :num), :pow), :h))))
              ))
          )),
        (:line, 69, :none),
        (:(=), :h, (:call, :hash_integer, :den, :h)),
        (:line, 70, :none),
        (:(=), :h, (:call, :hash_integer, :pow, :h)),
        (:line, 71, :none),
        (:(=), :h, (:call, :hash_integer, :num, :h)),
        (:line, 72, :none),
        (:return, :h)
      )),
    (:line, 96, :none),
    (:(=), (:call, :decompose, (:(::), :x, :Integer)), (:block,
        (:line, 96, :none),
        (:tuple, :x, 0, 1)
      )),
    (:line, 97, :none),
    (:(=), (:call, :decompose, (:(::), :x, :Rational)), (:block,
        (:line, 97, :none),
        (:tuple, (:call, :numerator, :x), 0, (:call, :denominator, :x))
      )),
    (:line, 99, :none),
    (:function, (:(::), (:call, :decompose, (:(::), :x, :Float16)), (:curly, :NTuple, 3, :Int)), (:block,
        (:line, 100, :none),
        (:&&, (:call, :isnan, :x), (:return, (:tuple, 0, 0, 0))),
        (:line, 101, :none),
        (:&&, (:call, :isinf, :x), (:return, (:tuple, (:call, :ifelse, (:call, :<, :x, 0), -1, 1), 0, 0))),
        (:line, 102, :none),
        (:(=), :n, (:call, :reinterpret, :UInt16, :x)),
        (:line, 103, :none),
        (:(=), :s, (:call, :%, (:call, :&, :n, 0x03ff), :Int16)),
        (:line, 104, :none),
        (:(=), :e, (:call, :%, (:call, :>>, (:call, :&, :n, 0x7c00), 10), :Int)),
        (:line, 105, :none),
        (:|=, :s, (:call, :<<, (:call, :Int16, (:call, :(!=), :e, 0)), 10)),
        (:line, 106, :none),
        (:(=), :d, (:call, :ifelse, (:call, :signbit, :x), -1, 1)),
        (:line, 107, :none),
        (:tuple, :s, (:call, :+, (:call, :-, :e, 25), (:call, :(==), :e, 0)), :d)
      )),
    (:line, 110, :none),
    (:function, (:(::), (:call, :decompose, (:(::), :x, :Float32)), (:curly, :NTuple, 3, :Int)), (:block,
        (:line, 111, :none),
        (:&&, (:call, :isnan, :x), (:return, (:tuple, 0, 0, 0))),
        (:line, 112, :none),
        (:&&, (:call, :isinf, :x), (:return, (:tuple, (:call, :ifelse, (:call, :<, :x, 0), -1, 1), 0, 0))),
        (:line, 113, :none),
        (:(=), :n, (:call, :reinterpret, :UInt32, :x)),
        (:line, 114, :none),
        (:(=), :s, (:call, :%, (:call, :&, :n, 0x007fffff), :Int32)),
        (:line, 115, :none),
        (:(=), :e, (:call, :%, (:call, :>>, (:call, :&, :n, 0x7f800000), 23), :Int)),
        (:line, 116, :none),
        (:|=, :s, (:call, :<<, (:call, :Int32, (:call, :(!=), :e, 0)), 23)),
        (:line, 117, :none),
        (:(=), :d, (:call, :ifelse, (:call, :signbit, :x), -1, 1)),
        (:line, 118, :none),
        (:tuple, :s, (:call, :+, (:call, :-, :e, 150), (:call, :(==), :e, 0)), :d)
      )),
    (:line, 121, :none),
    (:function, (:(::), (:call, :decompose, (:(::), :x, :Float64)), (:curly, :Tuple, :Int64, :Int, :Int)), (:block,
        (:line, 122, :none),
        (:&&, (:call, :isnan, :x), (:return, (:tuple, 0, 0, 0))),
        (:line, 123, :none),
        (:&&, (:call, :isinf, :x), (:return, (:tuple, (:call, :ifelse, (:call, :<, :x, 0), -1, 1), 0, 0))),
        (:line, 124, :none),
        (:(=), :n, (:call, :reinterpret, :UInt64, :x)),
        (:line, 125, :none),
        (:(=), :s, (:call, :%, (:call, :&, :n, 0x000fffffffffffff), :Int64)),
        (:line, 126, :none),
        (:(=), :e, (:call, :%, (:call, :>>, (:call, :&, :n, 0x7ff0000000000000), 52), :Int)),
        (:line, 127, :none),
        (:|=, :s, (:call, :<<, (:call, :Int64, (:call, :(!=), :e, 0)), 52)),
        (:line, 128, :none),
        (:(=), :d, (:call, :ifelse, (:call, :signbit, :x), -1, 1)),
        (:line, 129, :none),
        (:tuple, :s, (:call, :+, (:call, :-, :e, 1075), (:call, :(==), :e, 0)), :d)
      )),
    (:line, 132, :none),
    (:function, (:(::), (:call, :decompose, (:(::), :x, :BigFloat)), (:curly, :Tuple, :BigInt, :Int, :Int)), (:block,
        (:line, 133, :none),
        (:&&, (:call, :isnan, :x), (:return, (:tuple, 0, 0, 0))),
        (:line, 134, :none),
        (:&&, (:call, :isinf, :x), (:return, (:tuple, (:., :x, (:quote, #QuoteNode
                  :sign
                )), 0, 0))),
        (:line, 135, :none),
        (:&&, (:call, :(==), :x, 0), (:return, (:tuple, 0, 0, (:., :x, (:quote, #QuoteNode
                  :sign
                ))))),
        (:line, 136, :none),
        (:(=), :s, (:call, :BigInt)),
        (:line, 137, :none),
        (:(=), (:., :s, (:quote, #QuoteNode
              :size
            )), (:call, :cld, (:., :x, (:quote, #QuoteNode
                :prec
              )), (:call, :*, 8, (:call, :sizeof, (:., :GMP, (:quote, #QuoteNode
                    :Limb
                  )))))),
        (:line, 138, :none),
        (:(=), :b, (:call, :*, (:., :s, (:quote, #QuoteNode
                :size
              )), (:call, :sizeof, (:., :GMP, (:quote, #QuoteNode
                  :Limb
                ))))),
        (:line, 139, :none),
        (:call, :ccall, (:tuple, (:quote, #QuoteNode
              :__gmpz_realloc2
            ), (:quote, #QuoteNode
              :libgmp
            )), :Void, (:tuple, (:curly, :Ptr, :BigInt), :Culong), (:&, :s), (:call, :*, 8, :b)),
        (:line, 140, :none),
        (:call, :ccall, (:quote, #QuoteNode
            :memcpy
          ), (:curly, :Ptr, :Void), (:tuple, (:curly, :Ptr, :Void), (:curly, :Ptr, :Void), :Csize_t), (:., :s, (:quote, #QuoteNode
              :d
            )), (:., :x, (:quote, #QuoteNode
              :d
            )), :b),
        (:line, 141, :none),
        (:tuple, :s, (:call, :-, (:., :x, (:quote, #QuoteNode
                :exp
              )), (:call, :*, 8, :b)), (:., :x, (:quote, #QuoteNode
              :sign
            )))
      )),
    (:line, 146, :none),
    (:function, (:call, :hash, (:(::), :x, (:curly, :Rational, (:<:, :BitInteger64))), (:(::), :h, :UInt)), (:block,
        (:line, 147, :none),
        (:(=), (:tuple, :num, :den), (:tuple, (:call, (:., :Base, (:quote, #QuoteNode
                  :numerator
                )), :x), (:call, (:., :Base, (:quote, #QuoteNode
                  :denominator
                )), :x))),
        (:line, 148, :none),
        (:&&, (:call, :(==), :den, 1), (:return, (:call, :hash, :num, :h))),
        (:line, 149, :none),
        (:&&, (:call, :(==), :den, 0), (:return, (:call, :hash, (:call, :ifelse, (:call, :>, :num, 0), :Inf, (:call, :-, :Inf)), :h))),
        (:line, 150, :none),
        (:if, (:call, :isodd, :den), (:block,
            (:line, 151, :none),
            (:(=), :pow, (:call, :trailing_zeros, :num)),
            (:line, 152, :none),
            (:>>=, :num, :pow)
          ), (:block,
            (:line, 154, :none),
            (:(=), :pow, (:call, :trailing_zeros, :den)),
            (:line, 155, :none),
            (:>>=, :den, :pow),
            (:line, 156, :none),
            (:(=), :pow, (:call, :-, :pow)),
            (:line, 157, :none),
            (:if, (:&&, (:call, :(==), :den, 1), (:call, :<, (:call, :abs, :num), 9007199254740992)), (:block,
                (:line, 158, :none),
                (:return, (:call, :hash, (:call, :ldexp, (:call, :Float64, :num), :pow)))
              ))
          )),
        (:line, 161, :none),
        (:(=), :h, (:call, :hash_integer, :den, :h)),
        (:line, 162, :none),
        (:(=), :h, (:call, :hash_integer, :pow, :h)),
        (:line, 163, :none),
        (:(=), :h, (:call, :hash_integer, :num, :h)),
        (:line, 164, :none),
        (:return, :h)
      )),
    (:line, 169, :none),
    (:(=), (:call, :hash, (:(::), :x, :Float16), (:(::), :h, :UInt)), (:block,
        (:line, 169, :none),
        (:call, :hash, (:call, :Float64, :x), :h)
      )),
    (:line, 173, :none),
    (:const, (:(=), :memhash, (:if, (:call, :(===), :UInt, :UInt64), (:quote, #QuoteNode
            :memhash_seed
          ), (:quote, #QuoteNode
            :memhash32_seed
          )))),
    (:line, 174, :none),
    (:const, (:(=), :memhash_seed, (:if, (:call, :(===), :UInt, :UInt64), 0x71e729fd56419c81, 0x56419c81))),
    (:line, 176, :none),
    (:function, (:call, :hash, (:(::), :s, (:curly, :Union, :String, (:curly, :SubString, :String))), (:(::), :h, :UInt)), (:block,
        (:line, 177, :none),
        (:+=, :h, :memhash_seed),
        (:line, 179, :none),
        (:call, :+, (:call, :ccall, :memhash, :UInt, (:tuple, (:curly, :Ptr, :UInt8), :Csize_t, :UInt32), (:call, :pointer, :s), (:call, :sizeof, :s), (:call, :%, :h, :UInt32)), :h)
      )),
    (:line, 181, :none),
    (:(=), (:call, :hash, (:(::), :s, :AbstractString), (:(::), :h, :UInt)), (:block,
        (:line, 181, :none),
        (:call, :hash, (:call, :String, :s), :h)
      ))
  ))