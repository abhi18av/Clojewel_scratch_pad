(:quote, (:block,
    (:line, 3, :none),
    (:toplevel, (:import, :Core, :_apply), (:import, :Core, :svec), (:import, :Core, :apply_type), (:import, :Core, :Builtin), (:import, :Core, :IntrinsicFunction), (:import, :Core, :MethodInstance)),
    (:line, 6, :none),
    (:const, (:(=), :MAX_TYPEUNION_LEN, 3)),
    (:line, 7, :none),
    (:const, (:(=), :MAX_TYPE_DEPTH, 8)),
    (:line, 9, :none),
    (:const, (:(=), :MAX_INLINE_CONST_SIZE, 256)),
    (:line, 11, :none),
    (:type, false, :InferenceParams, (:block,
        (:line, 12, :none),
        (:(::), :world, :UInt),
        (:line, 15, :none),
        (:(::), :inlining, :Bool),
        (:line, 18, :none),
        (:(::), :MAX_TUPLETYPE_LEN, :Int),
        (:line, 19, :none),
        (:(::), :MAX_TUPLE_DEPTH, :Int),
        (:line, 20, :none),
        (:(::), :MAX_TUPLE_SPLAT, :Int),
        (:line, 21, :none),
        (:(::), :MAX_UNION_SPLITTING, :Int),
        (:line, 22, :none),
        (:(::), :MAX_APPLY_UNION_ENUM, :Int),
        (:line, 25, :none),
        (:function, (:call, :InferenceParams, (:parameters, (:kw, (:(::), :inlining, :Bool), (:call, :inlining_enabled)), (:kw, (:(::), :tupletype_len, :Int), 15), (:kw, (:(::), :tuple_depth, :Int), 4), (:kw, (:(::), :tuple_splat, :Int), 16), (:kw, (:(::), :union_splitting, :Int), 4), (:kw, (:(::), :apply_union_enum, :Int), 8)), (:(::), :world, :UInt)), (:block,
            (:line, 32, :none),
            (:return, (:call, :new, :world, :inlining, :tupletype_len, :tuple_depth, :tuple_splat, :union_splitting, :apply_union_enum))
          ))
      )),
    (:line, 37, :none),
    (:const, (:(=), :UNION_SPLIT_MISMATCH_ERROR, false)),
    (:line, 48, :none),
    (:const, (:(=), :Slot_Assigned, 2)),
    (:line, 49, :none),
    (:const, (:(=), :Slot_AssignedOnce, 16)),
    (:line, 50, :none),
    (:const, (:(=), :Slot_UsedUndef, 32)),
    (:line, 54, :none),
    (:type, false, :NotFound, (:block,
        (:line, 54, :none)
      )),
    (:line, 55, :none),
    (:const, (:(=), :NF, (:call, :NotFound))),
    (:line, 56, :none),
    (:const, (:(=), :LineNum, :Int)),
    (:line, 57, :none),
    (:const, (:(=), :VarTable, (:curly, :Array, :Any, 1))),
    (:line, 60, :none),
    (:type, true, :VarState, (:block,
        (:line, 61, :none),
        :typ,
        (:line, 62, :none),
        (:(::), :undef, :Bool),
        (:line, 63, :none),
        (:(=), (:call, :VarState, (:(::), :typ, :ANY), (:(::), :undef, :Bool)), (:block,
            (:line, 63, :none),
            (:call, :new, :typ, :undef)
          ))
      )),
    (:line, 67, :none),
    (:type, false, :Const, (:block,
        (:line, 68, :none),
        :val,
        (:line, 69, :none),
        (:(::), :actual, :Bool),
        (:line, 70, :none),
        (:(=), (:call, :Const, (:(::), :v, :ANY)), (:block,
            (:line, 70, :none),
            (:call, :new, :v, false)
          )),
        (:line, 71, :none),
        (:(=), (:call, :Const, (:(::), :v, :ANY), (:(::), :a, :Bool)), (:block,
            (:line, 71, :none),
            (:call, :new, :v, :a)
          ))
      )),
    (:line, 79, :none),
    (:type, true, :Conditional, (:block,
        (:line, 80, :none),
        (:(::), :var, (:curly, :Union, :Slot, :SSAValue)),
        (:line, 81, :none),
        :vtype,
        (:line, 82, :none),
        :elsetype,
        (:line, 83, :none),
        (:function, (:call, :Conditional, (:(::), :var, :ANY), (:(::), :vtype, :ANY), (:(::), :nottype, :ANY)), (:block,
            (:line, 87, :none),
            (:return, (:call, :new, :var, :vtype, :nottype))
          ))
      )),
    (:line, 91, :none),
    (:type, false, :PartialTypeVar, (:block,
        (:line, 92, :none),
        (:(::), :tv, :TypeVar),
        (:line, 95, :none),
        (:(::), :lb_certain, :Bool),
        (:line, 96, :none),
        (:(::), :ub_certain, :Bool),
        (:line, 97, :none),
        (:(=), (:call, :PartialTypeVar, (:(::), :tv, :TypeVar), (:(::), :lb_certain, :Bool), (:(::), :ub_certain, :Bool)), (:block,
            (:line, 97, :none),
            (:call, :new, :tv, :lb_certain, :ub_certain)
          ))
      )),
    (:line, 100, :none),
    (:function, (:call, :rewrap, (:(::), :t, :ANY), (:(::), :u, :ANY)), (:block,
        (:line, 101, :none),
        (:&&, (:call, :isa, :t, :Const), (:return, :t)),
        (:line, 102, :none),
        (:&&, (:call, :isa, :t, :Conditional), (:return, :t)),
        (:line, 103, :none),
        (:return, (:call, :rewrap_unionall, :t, :u))
      )),
    (:line, 106, :none),
    (:type, true, :InferenceState, (:block,
        (:line, 107, :none),
        (:(::), :sp, :SimpleVector),
        (:line, 108, :none),
        (:(::), :label_counter, :Int),
        (:line, 109, :none),
        (:(::), :mod, :Module),
        (:line, 110, :none),
        (:(::), :currpc, :LineNum),
        (:line, 113, :none),
        (:(::), :params, :InferenceParams),
        (:line, 114, :none),
        (:(::), :linfo, :MethodInstance),
        (:line, 115, :none),
        (:(::), :src, :CodeInfo),
        (:line, 116, :none),
        (:(::), :min_valid, :UInt),
        (:line, 117, :none),
        (:(::), :max_valid, :UInt),
        (:line, 118, :none),
        (:(::), :nargs, :Int),
        (:line, 119, :none),
        (:(::), :stmt_types, (:curly, :Vector, :Any)),
        (:line, 120, :none),
        (:(::), :stmt_edges, (:curly, :Vector, :Any)),
        (:line, 122, :none),
        :bestguess,
        (:line, 124, :none),
        (:(::), :ip, :IntSet),
        (:line, 125, :none),
        (:(::), :pc´´, :Int),
        (:line, 126, :none),
        (:(::), :nstmts, :Int),
        (:line, 128, :none),
        :cur_hand,
        (:line, 129, :none),
        (:(::), :handler_at, (:curly, :Vector, :Any)),
        (:line, 130, :none),
        (:(::), :n_handlers, :Int),
        (:line, 132, :none),
        (:(::), :ssavalue_uses, (:curly, :Vector, :IntSet)),
        (:line, 133, :none),
        (:(::), :ssavalue_init, (:curly, :Vector, :Any)),
        (:line, 137, :none),
        (:(::), :edges, :ObjectIdDict),
        (:line, 138, :none),
        (:(::), :backedges, (:curly, :Vector, (:curly, :Tuple, :InferenceState, (:curly, :Vector, :LineNum)))),
        (:line, 140, :none),
        (:(::), :fixedpoint, :Bool),
        (:line, 141, :none),
        (:(::), :inworkq, :Bool),
        (:line, 142, :none),
        (:(::), :const_api, :Bool),
        (:line, 143, :none),
        (:(::), :const_ret, :Bool),
        (:line, 146, :none),
        (:(::), :optimize, :Bool),
        (:line, 147, :none),
        (:(::), :cached, :Bool),
        (:line, 149, :none),
        (:(::), :inferred, :Bool),
        (:line, 152, :none),
        (:function, (:call, :InferenceState, (:(::), :linfo, :MethodInstance), (:(::), :src, :CodeInfo), (:(::), :optimize, :Bool), (:(::), :cached, :Bool), (:(::), :params, :InferenceParams)), (:block,
            (:line, 154, :none),
            (:(=), :code, (:(::), (:., :src, (:quote, #QuoteNode
                    :code
                  )), (:curly, :Array, :Any, 1))),
            (:line, 155, :none),
            (:(=), :nl, (:call, :+, (:call, :label_counter, :code), 1)),
            (:line, 156, :none),
            (:(=), :toplevel, (:call, :!, (:call, :isdefined, :linfo, (:quote, #QuoteNode
                    :def
                  )))),
            (:line, 158, :none),
            (:if, (:&&, (:call, :!, :toplevel), (:&&, (:call, :isempty, (:., :linfo, (:quote, #QuoteNode
                        :sparam_vals
                      ))), (:call, :!, (:call, :isempty, (:., (:., :linfo, (:quote, #QuoteNode
                            :def
                          )), (:quote, #QuoteNode
                          :sparam_syms
                        )))))), (:block,
                (:line, 160, :none),
                (:(=), :sp, (:ref, :Any)),
                (:line, 161, :none),
                (:(=), :sig, (:., (:., :linfo, (:quote, #QuoteNode
                        :def
                      )), (:quote, #QuoteNode
                      :sig
                    ))),
                (:line, 162, :none),
                (:while, (:call, :isa, :sig, :UnionAll), (:block,
                    (:line, 163, :none),
                    (:call, :push!, :sp, (:., :sig, (:quote, #QuoteNode
                          :var
                        ))),
                    (:line, 164, :none),
                    (:(=), :sig, (:., :sig, (:quote, #QuoteNode
                          :body
                        )))
                  )),
                (:line, 166, :none),
                (:(=), :sp, (:call, :svec, (:..., :sp)))
              ), (:block,
                (:line, 168, :none),
                (:(=), :sp, (:., :linfo, (:quote, #QuoteNode
                      :sparam_vals
                    )))
              )),
            (:line, 171, :none),
            (:(=), (:., :src, (:quote, #QuoteNode
                  :ssavaluetypes
                )), (:typed_comprehension, :Any, (:generator, :NF, (:(=), :i, (:(:), 1, (:(::), (:., :src, (:quote, #QuoteNode
                            :ssavaluetypes
                          )), :Int)))))),
            (:line, 173, :none),
            (:(=), :n, (:call, :length, :code)),
            (:line, 174, :none),
            (:(=), :s_edges, (:typed_comprehension, :Any, (:generator, (:tuple,), (:(=), :i, (:(:), 1, :n))))),
            (:line, 175, :none),
            (:(=), :s_types, (:typed_comprehension, :Any, (:generator, (:tuple,), (:(=), :i, (:(:), 1, :n))))),
            (:line, 178, :none),
            (:(=), :nslots, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :slotnames
                  )))),
            (:line, 179, :none),
            (:(=), (:ref, :s_types, 1), (:typed_comprehension, :Any, (:generator, (:call, :VarState, :Bottom, true), (:(=), :i, (:(:), 1, :nslots))))),
            (:line, 180, :none),
            (:(=), (:., :src, (:quote, #QuoteNode
                  :slottypes
                )), (:typed_comprehension, :Any, (:generator, :Bottom, (:(=), :i, (:(:), 1, :nslots))))),
            (:line, 182, :none),
            (:(=), :atypes, (:call, :unwrap_unionall, (:., :linfo, (:quote, #QuoteNode
                    :specTypes
                  )))),
            (:line, 183, :none),
            (:(=), (:(::), :nargs, :Int), (:if, :toplevel, 0, (:., (:., :linfo, (:quote, #QuoteNode
                      :def
                    )), (:quote, #QuoteNode
                    :nargs
                  )))),
            (:line, 184, :none),
            (:(=), :la, :nargs),
            (:line, 185, :none),
            (:if, (:call, :>, :la, 0), (:block,
                (:line, 186, :none),
                (:if, (:., (:., :linfo, (:quote, #QuoteNode
                        :def
                      )), (:quote, #QuoteNode
                      :isva
                    )), (:block,
                    (:line, 187, :none),
                    (:if, (:call, :(==), :atypes, :Tuple), (:block,
                        (:line, 188, :none),
                        (:if, (:call, :>, :la, 1), (:block,
                            (:line, 189, :none),
                            (:(=), :atypes, (:curly, :Tuple, (:..., (:typed_comprehension, :Any, (:generator, :Any, (:(=), :i, (:(:), 1, (:call, :-, :la, 1)))))), (:ref, (:., :Tuple, (:quote, #QuoteNode
                                      :parameters
                                    )), 1)))
                          )),
                        (:line, 191, :none),
                        (:(=), :vararg_type, :Tuple)
                      ), (:block,
                        (:line, 193, :none),
                        (:(=), :vararg_type, (:call, :limit_tuple_depth, :params, (:call, :tupletype_tail, :atypes, :la))),
                        (:line, 194, :none),
                        (:(=), :vararg_type, (:call, :tuple_tfunc, :vararg_type)),
                        (:line, 195, :none),
                        (:(=), :vararg_type, (:call, :rewrap, :vararg_type, (:., :linfo, (:quote, #QuoteNode
                                :specTypes
                              ))))
                      )),
                    (:line, 197, :none),
                    (:(=), (:ref, (:ref, :s_types, 1), :la), (:call, :VarState, :vararg_type, false)),
                    (:line, 198, :none),
                    (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                            :slottypes
                          )), :la), :vararg_type),
                    (:line, 199, :none),
                    (:-=, :la, 1)
                  ))
              )),
            (:line, 203, :none),
            (:(=), :laty, (:call, :length, (:., :atypes, (:quote, #QuoteNode
                    :parameters
                  )))),
            (:line, 204, :none),
            (:if, (:call, :>, :laty, 0), (:block,
                (:line, 205, :none),
                (:if, (:call, :>, :laty, :la), (:block,
                    (:line, 206, :none),
                    (:(=), :laty, :la)
                  )),
                (:line, 208, :none),
                (:local, :lastatype),
                (:line, 209, :none),
                (:(=), :atail, :laty),
                (:line, 210, :none),
                (:for, (:(=), :i, (:(:), 1, :laty)), (:block,
                    (:line, 211, :none),
                    (:(=), :atyp, (:ref, (:., :atypes, (:quote, #QuoteNode
                            :parameters
                          )), :i)),
                    (:line, 212, :none),
                    (:if, (:&&, (:call, :(==), :i, :laty), (:call, :isvarargtype, :atyp)), (:block,
                        (:line, 213, :none),
                        (:(=), :atyp, (:ref, (:., (:call, :unwrap_unionall, :atyp), (:quote, #QuoteNode
                                :parameters
                              )), 1)),
                        (:line, 214, :none),
                        (:-=, :atail, 1)
                      )),
                    (:line, 216, :none),
                    (:if, (:call, :isa, :atyp, :TypeVar), (:block,
                        (:line, 217, :none),
                        (:(=), :atyp, (:., :atyp, (:quote, #QuoteNode
                              :ub
                            )))
                      )),
                    (:line, 219, :none),
                    (:if, (:&&, (:call, :isa, :atyp, :DataType), (:call, :isdefined, :atyp, (:quote, #QuoteNode
                            :instance
                          ))), (:block,
                        (:line, 221, :none),
                        (:(=), :atyp, (:call, :Const, (:., :atyp, (:quote, #QuoteNode
                                :instance
                              ))))
                      ), (:block,
                        (:line, 222, :none),
                        (:if, (:call, :isconstType, :atyp), (:block,
                            (:line, 223, :none),
                            (:(=), :atype, (:call, :Const, (:ref, (:., :atyp, (:quote, #QuoteNode
                                      :parameters
                                    )), 1)))
                          ), (:block,
                            (:line, 225, :none),
                            (:(=), :atyp, (:call, :rewrap_unionall, :atyp, (:., :linfo, (:quote, #QuoteNode
                                    :specTypes
                                  ))))
                          ))
                      )),
                    (:line, 227, :none),
                    (:&&, (:call, :(==), :i, :laty), (:(=), :lastatype, :atyp)),
                    (:line, 228, :none),
                    (:(=), (:ref, (:ref, :s_types, 1), :i), (:call, :VarState, :atyp, false)),
                    (:line, 229, :none),
                    (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                            :slottypes
                          )), :i), :atyp)
                  )),
                (:line, 231, :none),
                (:for, (:(=), :i, (:(:), (:call, :+, :atail, 1), :la)), (:block,
                    (:line, 232, :none),
                    (:(=), (:ref, (:ref, :s_types, 1), :i), (:call, :VarState, :lastatype, false)),
                    (:line, 233, :none),
                    (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                            :slottypes
                          )), :i), :lastatype)
                  ))
              ), (:block,
                (:line, 236, :none),
                (:macrocall, Symbol("@assert"), (:call, :(==), :la, 0))
              )),
            (:line, 239, :none),
            (:(=), :ssavalue_uses, (:call, :find_ssavalue_uses, :code)),
            (:line, 240, :none),
            (:(=), :ssavalue_init, (:call, :copy, (:(::), (:., :src, (:quote, #QuoteNode
                      :ssavaluetypes
                    )), (:curly, :Vector, :Any)))),
            (:line, 243, :none),
            (:(=), :cur_hand, (:tuple,)),
            (:line, 244, :none),
            (:(=), :handler_at, (:typed_comprehension, :Any, (:generator, (:tuple,), (:(=), :i, (:(:), 1, :n))))),
            (:line, 245, :none),
            (:(=), :n_handlers, 0),
            (:line, 247, :none),
            (:(=), :W, (:call, :IntSet)),
            (:line, 248, :none),
            (:call, :push!, :W, 1),
            (:line, 250, :none),
            (:if, (:call, :!, :toplevel), (:block,
                (:line, 251, :none),
                (:(=), :meth, (:., :linfo, (:quote, #QuoteNode
                      :def
                    ))),
                (:line, 252, :none),
                (:(=), :inmodule, (:., :meth, (:quote, #QuoteNode
                      :module
                    )))
              ), (:block,
                (:line, 254, :none),
                (:(=), :inmodule, (:call, :current_module))
              )),
            (:line, 257, :none),
            (:if, (:&&, :cached, (:call, :!, :toplevel)), (:block,
                (:line, 258, :none),
                (:(=), :min_valid, (:call, :min_world, (:., :linfo, (:quote, #QuoteNode
                        :def
                      )))),
                (:line, 259, :none),
                (:(=), :max_valid, (:call, :max_world, (:., :linfo, (:quote, #QuoteNode
                        :def
                      ))))
              ), (:block,
                (:line, 261, :none),
                (:(=), :min_valid, (:call, :typemax, :UInt)),
                (:line, 262, :none),
                (:(=), :max_valid, (:call, :typemin, :UInt))
              )),
            (:line, 264, :none),
            (:(=), :frame, (:call, :new, :sp, :nl, :inmodule, 0, :params, :linfo, :src, :min_valid, :max_valid, :nargs, :s_types, :s_edges, (:curly, :Union), :W, 1, :n, :cur_hand, :handler_at, :n_handlers, :ssavalue_uses, :ssavalue_init, (:call, :ObjectIdDict), (:call, (:curly, :Vector, (:curly, :Tuple, :InferenceState, (:curly, :Vector, :LineNum)))), false, false, false, false, :optimize, :cached, false)),
            (:line, 274, :none),
            (:call, :push!, :active, :frame),
            (:line, 275, :none),
            (:+=, (:ref, :nactive), 1),
            (:line, 276, :none),
            (:return, :frame)
          ))
      )),
    (:line, 282, :none),
    (:function, (:call, :get_source, (:(::), :li, :MethodInstance)), (:block,
        (:line, 283, :none),
        (:if, (:call, :isa, (:., (:., :li, (:quote, #QuoteNode
                  :def
                )), (:quote, #QuoteNode
                :source
              )), (:curly, :Array, :UInt8, 1)), (:block,
            (:line, 284, :none),
            (:(=), :src, (:call, :ccall, (:quote, #QuoteNode
                  :jl_uncompress_ast
                ), :Any, (:tuple, :Any, :Any), (:., :li, (:quote, #QuoteNode
                    :def
                  )), (:., (:., :li, (:quote, #QuoteNode
                      :def
                    )), (:quote, #QuoteNode
                    :source
                  ))))
          ), (:block,
            (:line, 286, :none),
            (:(=), :src, (:call, :ccall, (:quote, #QuoteNode
                  :jl_copy_code_info
                ), (:curly, :Ref, :CodeInfo), (:tuple, :Any), (:., (:., :li, (:quote, #QuoteNode
                      :def
                    )), (:quote, #QuoteNode
                    :source
                  )))),
            (:line, 287, :none),
            (:(=), (:., :src, (:quote, #QuoteNode
                  :code
                )), (:call, :copy_exprargs, (:., :src, (:quote, #QuoteNode
                    :code
                  )))),
            (:line, 288, :none),
            (:(=), (:., :src, (:quote, #QuoteNode
                  :slotnames
                )), (:call, :copy, (:., :src, (:quote, #QuoteNode
                    :slotnames
                  )))),
            (:line, 289, :none),
            (:(=), (:., :src, (:quote, #QuoteNode
                  :slotflags
                )), (:call, :copy, (:., :src, (:quote, #QuoteNode
                    :slotflags
                  ))))
          )),
        (:line, 291, :none),
        (:return, :src)
      )),
    (:line, 294, :none),
    (:function, (:call, :get_staged, (:(::), :li, :MethodInstance)), (:block,
        (:line, 295, :none),
        (:return, (:(::), (:call, :ccall, (:quote, #QuoteNode
                :jl_code_for_staged
              ), :Any, (:tuple, :Any), :li), :CodeInfo))
      )),
    (:line, 301, :none),
    (:const, (:(=), :active, (:call, (:curly, :Vector, :Any)))),
    (:line, 302, :none),
    (:const, (:(=), :nactive, (:call, (:curly, :Array, :Int, 0)))),
    (:line, 303, :none),
    (:(=), (:ref, :nactive), 0),
    (:line, 304, :none),
    (:const, (:(=), :workq, (:call, (:curly, :Vector, :InferenceState)))),
    (:line, 308, :none),
    (:macrocall, Symbol("@inline"), (:(=), (:call, :slot_id, :s), (:block,
          (:line, 308, :none),
          (:if, (:call, :isa, :s, :SlotNumber), (:., (:(::), :s, :SlotNumber), (:quote, #QuoteNode
                :id
              )), (:., (:(::), :s, :TypedSlot), (:quote, #QuoteNode
                :id
              )))
        ))),
    (:line, 311, :none),
    (:function, (:call, :_any, (:(::), :f, :ANY), :a), (:block,
        (:line, 312, :none),
        (:for, (:(=), :x, :a), (:block,
            (:line, 313, :none),
            (:&&, (:call, :f, :x), (:return, true))
          )),
        (:line, 315, :none),
        (:return, false)
      )),
    (:line, 318, :none),
    (:function, (:call, :contains_is, :itr, (:(::), :x, :ANY)), (:block,
        (:line, 319, :none),
        (:for, (:(=), :y, :itr), (:block,
            (:line, 320, :none),
            (:if, (:call, :(===), :y, :x), (:block,
                (:line, 321, :none),
                (:return, true)
              ))
          )),
        (:line, 324, :none),
        (:return, false)
      )),
    (:line, 327, :none),
    (:(=), (:call, :anymap, (:(::), :f, :Function), (:(::), :a, (:curly, :Array, :Any, 1))), (:block,
        (:line, 327, :none),
        (:typed_comprehension, :Any, (:generator, (:call, :f, (:ref, :a, :i)), (:(=), :i, (:(:), 1, (:call, :length, :a)))))
      )),
    (:line, 329, :none),
    (:(=), (:call, :_topmod, (:(::), :sv, :InferenceState)), (:block,
        (:line, 329, :none),
        (:call, :_topmod, (:., :sv, (:quote, #QuoteNode
              :mod
            )))
      )),
    (:line, 330, :none),
    (:(=), (:call, :_topmod, (:(::), :m, :Module)), (:block,
        (:line, 330, :none),
        (:(::), (:call, :ccall, (:quote, #QuoteNode
              :jl_base_relative_to
            ), :Any, (:tuple, :Any), :m), :Module)
      )),
    (:line, 332, :none),
    (:function, (:call, :istopfunction, :topmod, (:(::), :f, :ANY), :sym), (:block,
        (:line, 333, :none),
        (:if, (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                :Base
              )), (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                    :Base
                  )), :sym), (:&&, (:call, :isconst, (:., :Main, (:quote, #QuoteNode
                      :Base
                    )), :sym), (:call, :(===), :f, (:call, :getfield, (:., :Main, (:quote, #QuoteNode
                        :Base
                      )), :sym))))), (:block,
            (:line, 334, :none),
            (:return, true)
          ), (:block,
            (:line, 335, :none),
            (:if, (:&&, (:call, :isdefined, :topmod, :sym), (:&&, (:call, :isconst, :topmod, :sym), (:call, :(===), :f, (:call, :getfield, :topmod, :sym)))), (:block,
                (:line, 336, :none),
                (:return, true)
              ))
          )),
        (:line, 338, :none),
        (:return, false)
      )),
    (:line, 341, :none),
    (:(=), (:call, :isknownlength, (:(::), :t, :DataType)), (:block,
        (:line, 341, :none),
        (:||, (:call, :!, (:call, :isvatuple, :t)), (:&&, (:call, :>, (:call, :length, (:., :t, (:quote, #QuoteNode
                    :parameters
                  ))), 0), (:call, :isa, (:ref, (:., (:call, :unwrap_unionall, (:ref, (:., :t, (:quote, #QuoteNode
                          :parameters
                        )), :end)), (:quote, #QuoteNode
                    :parameters
                  )), 2), :Int)))
      )),
    (:line, 345, :none),
    (:(=), (:call, :tupletype_tail, (:(::), :t, :ANY), :n), (:block,
        (:line, 345, :none),
        (:curly, :Tuple, (:..., (:ref, (:., :t, (:quote, #QuoteNode
                  :parameters
                )), (:(:), :n, :end))))
      )),
    (:line, 350, :none),
    (:const, (:(=), :_Type_name, (:., (:., :Type, (:quote, #QuoteNode
              :body
            )), (:quote, #QuoteNode
            :name
          )))),
    (:line, 351, :none),
    (:(=), (:call, :isType, (:(::), :t, :ANY)), (:block,
        (:line, 351, :none),
        (:&&, (:call, :isa, :t, :DataType), (:call, :(===), (:., (:(::), :t, :DataType), (:quote, #QuoteNode
                :name
              )), :_Type_name))
      )),
    (:line, 354, :none),
    (:(=), (:call, :isconstType, (:(::), :t, :ANY)), (:block,
        (:line, 354, :none),
        (:&&, (:call, :isType, :t), (:||, (:call, :isleaftype, (:ref, (:., :t, (:quote, #QuoteNode
                    :parameters
                  )), 1)), (:call, :(===), (:ref, (:., :t, (:quote, #QuoteNode
                    :parameters
                  )), 1), (:curly, :Union))))
      )),
    (:line, 356, :none),
    (:const, (:(=), :IInf, (:call, :typemax, :Int))),
    (:line, 357, :none),
    (:const, (:(=), :n_ifunc, (:call, :+, (:call, :reinterpret, :Int32, :arraylen), 1))),
    (:line, 358, :none),
    (:const, (:(=), :t_ifunc, (:call, (:curly, :Array, (:curly, :Tuple, :Int, :Int, :Any), 1), :n_ifunc))),
    (:line, 359, :none),
    (:const, (:(=), :t_ffunc_key, (:call, (:curly, :Array, :Function, 1), 0))),
    (:line, 360, :none),
    (:const, (:(=), :t_ffunc_val, (:call, (:curly, :Array, (:curly, :Tuple, :Int, :Int, :Any), 1), 0))),
    (:line, 361, :none),
    (:function, (:call, :add_tfunc, (:(::), :f, :IntrinsicFunction), (:(::), :minarg, :Int), (:(::), :maxarg, :Int), (:(::), :tfunc, :ANY)), (:block,
        (:line, 362, :none),
        (:(=), (:ref, :t_ifunc, (:call, :+, (:call, :reinterpret, :Int32, :f), 1)), (:tuple, :minarg, :maxarg, :tfunc))
      )),
    (:line, 364, :none),
    (:function, (:call, :add_tfunc, (:(::), :f, :Function), (:(::), :minarg, :Int), (:(::), :maxarg, :Int), (:(::), :tfunc, :ANY)), (:block,
        (:line, 365, :none),
        (:call, :push!, :t_ffunc_key, :f),
        (:line, 366, :none),
        (:call, :push!, :t_ffunc_val, (:tuple, :minarg, :maxarg, :tfunc))
      )),
    (:line, 369, :none),
    (:call, :add_tfunc, :throw, 1, 1, (:->, (:(::), :x, :ANY), (:block,
          (:line, 369, :none),
          :Bottom
        ))),
    (:line, 372, :none),
    (:function, (:call, :instanceof_tfunc, (:(::), :t, :ANY)), (:block,
        (:line, 374, :none),
        (:if, (:call, :(===), :t, :Bottom), (:block,
            (:line, 375, :none),
            (:return, :t)
          ), (:block,
            (:line, 376, :none),
            (:if, (:call, :isa, :t, :Const), (:block,
                (:line, 377, :none),
                (:if, (:call, :isa, (:., :t, (:quote, #QuoteNode
                        :val
                      )), :Type), (:block,
                    (:line, 378, :none),
                    (:return, (:., :t, (:quote, #QuoteNode
                          :val
                        )))
                  ))
              ), (:block,
                (:line, 380, :none),
                (:if, (:call, :isType, :t), (:block,
                    (:line, 381, :none),
                    (:return, (:ref, (:., :t, (:quote, #QuoteNode
                            :parameters
                          )), 1))
                  ), (:block,
                    (:line, 382, :none),
                    (:if, (:call, :isa, :t, :UnionAll), (:block,
                        (:line, 383, :none),
                        (:(=), :t′, (:call, :unwrap_unionall, :t)),
                        (:line, 384, :none),
                        (:return, (:call, :rewrap_unionall, (:call, :instanceof_tfunc, :t′), :t))
                      ), (:block,
                        (:line, 385, :none),
                        (:if, (:call, :isa, :t, :Union), (:block,
                            (:line, 386, :none),
                            (:return, (:curly, :Union, (:call, :instanceof_tfunc, (:., :t, (:quote, #QuoteNode
                                      :a
                                    ))), (:call, :instanceof_tfunc, (:., :t, (:quote, #QuoteNode
                                      :b
                                    )))))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 388, :none),
        (:return, :Any)
      )),
    (:line, 390, :none),
    (:(=), (:call, :bitcast_tfunc, (:(::), :t, :ANY), (:(::), :x, :ANY)), (:block,
        (:line, 390, :none),
        (:call, :instanceof_tfunc, :t)
      )),
    (:line, 391, :none),
    (:(=), (:call, :math_tfunc, (:(::), :x, :ANY)), (:block,
        (:line, 391, :none),
        (:call, :widenconst, :x)
      )),
    (:line, 392, :none),
    (:(=), (:call, :math_tfunc, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 392, :none),
        (:call, :widenconst, :x)
      )),
    (:line, 393, :none),
    (:(=), (:call, :math_tfunc, (:(::), :x, :ANY), (:(::), :y, :ANY), (:(::), :z, :ANY)), (:block,
        (:line, 393, :none),
        (:call, :widenconst, :x)
      )),
    (:line, 394, :none),
    (:(=), (:call, :fptoui_tfunc, (:(::), :t, :ANY), (:(::), :x, :ANY)), (:block,
        (:line, 394, :none),
        (:call, :bitcast_tfunc, :t, :x)
      )),
    (:line, 395, :none),
    (:(=), (:call, :fptosi_tfunc, (:(::), :t, :ANY), (:(::), :x, :ANY)), (:block,
        (:line, 395, :none),
        (:call, :bitcast_tfunc, :t, :x)
      )),
    (:line, 396, :none),
    (:function, (:call, :fptoui_tfunc, (:(::), :x, :ANY)), (:block,
        (:line, 397, :none),
        (:(=), :T, (:call, :widenconst, :x)),
        (:line, 398, :none),
        (:&&, (:call, :(===), :T, :Float64), (:return, :UInt64)),
        (:line, 399, :none),
        (:&&, (:call, :(===), :T, :Float32), (:return, :UInt32)),
        (:line, 400, :none),
        (:&&, (:call, :(===), :T, :Float16), (:return, :UInt16)),
        (:line, 401, :none),
        (:return, :Any)
      )),
    (:line, 403, :none),
    (:function, (:call, :fptosi_tfunc, (:(::), :x, :ANY)), (:block,
        (:line, 404, :none),
        (:(=), :T, (:call, :widenconst, :x)),
        (:line, 405, :none),
        (:&&, (:call, :(===), :T, :Float64), (:return, :Int64)),
        (:line, 406, :none),
        (:&&, (:call, :(===), :T, :Float32), (:return, :Int32)),
        (:line, 407, :none),
        (:&&, (:call, :(===), :T, :Float16), (:return, :Int16)),
        (:line, 408, :none),
        (:return, :Any)
      )),
    (:line, 412, :none),
    (:call, :add_tfunc, :bitcast, 2, 2, :bitcast_tfunc),
    (:line, 413, :none),
    (:call, :add_tfunc, :sext_int, 2, 2, :bitcast_tfunc),
    (:line, 414, :none),
    (:call, :add_tfunc, :zext_int, 2, 2, :bitcast_tfunc),
    (:line, 415, :none),
    (:call, :add_tfunc, :trunc_int, 2, 2, :bitcast_tfunc),
    (:line, 416, :none),
    (:call, :add_tfunc, :fptoui, 1, 2, :fptoui_tfunc),
    (:line, 417, :none),
    (:call, :add_tfunc, :fptosi, 1, 2, :fptosi_tfunc),
    (:line, 418, :none),
    (:call, :add_tfunc, :uitofp, 2, 2, :bitcast_tfunc),
    (:line, 419, :none),
    (:call, :add_tfunc, :sitofp, 2, 2, :bitcast_tfunc),
    (:line, 420, :none),
    (:call, :add_tfunc, :fptrunc, 2, 2, :bitcast_tfunc),
    (:line, 421, :none),
    (:call, :add_tfunc, :fpext, 2, 2, :bitcast_tfunc),
    (:line, 423, :none),
    (:call, :add_tfunc, :checked_trunc_sint, 2, 2, :bitcast_tfunc),
    (:line, 424, :none),
    (:call, :add_tfunc, :checked_trunc_uint, 2, 2, :bitcast_tfunc),
    (:line, 425, :none),
    (:call, :add_tfunc, :check_top_bit, 1, 1, :math_tfunc),
    (:line, 427, :none),
    (:call, :add_tfunc, :neg_int, 1, 1, :math_tfunc),
    (:line, 428, :none),
    (:call, :add_tfunc, :add_int, 2, 2, :math_tfunc),
    (:line, 429, :none),
    (:call, :add_tfunc, :sub_int, 2, 2, :math_tfunc),
    (:line, 430, :none),
    (:call, :add_tfunc, :mul_int, 2, 2, :math_tfunc),
    (:line, 431, :none),
    (:call, :add_tfunc, :sdiv_int, 2, 2, :math_tfunc),
    (:line, 432, :none),
    (:call, :add_tfunc, :udiv_int, 2, 2, :math_tfunc),
    (:line, 433, :none),
    (:call, :add_tfunc, :srem_int, 2, 2, :math_tfunc),
    (:line, 434, :none),
    (:call, :add_tfunc, :urem_int, 2, 2, :math_tfunc),
    (:line, 435, :none),
    (:call, :add_tfunc, :neg_float, 1, 1, :math_tfunc),
    (:line, 436, :none),
    (:call, :add_tfunc, :add_float, 2, 2, :math_tfunc),
    (:line, 437, :none),
    (:call, :add_tfunc, :sub_float, 2, 2, :math_tfunc),
    (:line, 438, :none),
    (:call, :add_tfunc, :mul_float, 2, 2, :math_tfunc),
    (:line, 439, :none),
    (:call, :add_tfunc, :div_float, 2, 2, :math_tfunc),
    (:line, 440, :none),
    (:call, :add_tfunc, :rem_float, 2, 2, :math_tfunc),
    (:line, 441, :none),
    (:call, :add_tfunc, :fma_float, 3, 3, :math_tfunc),
    (:line, 442, :none),
    (:call, :add_tfunc, :muladd_float, 3, 3, :math_tfunc),
    (:line, 444, :none),
    (:call, :add_tfunc, :neg_float_fast, 1, 1, :math_tfunc),
    (:line, 445, :none),
    (:call, :add_tfunc, :add_float_fast, 2, 2, :math_tfunc),
    (:line, 446, :none),
    (:call, :add_tfunc, :sub_float_fast, 2, 2, :math_tfunc),
    (:line, 447, :none),
    (:call, :add_tfunc, :mul_float_fast, 2, 2, :math_tfunc),
    (:line, 448, :none),
    (:call, :add_tfunc, :div_float_fast, 2, 2, :math_tfunc),
    (:line, 449, :none),
    (:call, :add_tfunc, :rem_float_fast, 2, 2, :math_tfunc),
    (:line, 451, :none),
    (:call, :add_tfunc, :and_int, 2, 2, :math_tfunc),
    (:line, 452, :none),
    (:call, :add_tfunc, :or_int, 2, 2, :math_tfunc),
    (:line, 453, :none),
    (:call, :add_tfunc, :xor_int, 2, 2, :math_tfunc),
    (:line, 454, :none),
    (:call, :add_tfunc, :not_int, 1, 1, :math_tfunc),
    (:line, 455, :none),
    (:call, :add_tfunc, :shl_int, 2, 2, :math_tfunc),
    (:line, 456, :none),
    (:call, :add_tfunc, :lshr_int, 2, 2, :math_tfunc),
    (:line, 457, :none),
    (:call, :add_tfunc, :ashr_int, 2, 2, :math_tfunc),
    (:line, 458, :none),
    (:call, :add_tfunc, :bswap_int, 1, 1, :math_tfunc),
    (:line, 459, :none),
    (:call, :add_tfunc, :ctpop_int, 1, 1, :math_tfunc),
    (:line, 460, :none),
    (:call, :add_tfunc, :ctlz_int, 1, 1, :math_tfunc),
    (:line, 461, :none),
    (:call, :add_tfunc, :cttz_int, 1, 1, :math_tfunc),
    (:line, 462, :none),
    (:call, :add_tfunc, :checked_sdiv_int, 2, 2, :math_tfunc),
    (:line, 463, :none),
    (:call, :add_tfunc, :checked_udiv_int, 2, 2, :math_tfunc),
    (:line, 464, :none),
    (:call, :add_tfunc, :checked_srem_int, 2, 2, :math_tfunc),
    (:line, 465, :none),
    (:call, :add_tfunc, :checked_urem_int, 2, 2, :math_tfunc),
    (:line, 467, :none),
    (:call, :add_tfunc, :abs_float, 1, 1, :math_tfunc),
    (:line, 468, :none),
    (:call, :add_tfunc, :copysign_float, 2, 2, :math_tfunc),
    (:line, 469, :none),
    (:call, :add_tfunc, :flipsign_int, 2, 2, :math_tfunc),
    (:line, 470, :none),
    (:call, :add_tfunc, :ceil_llvm, 1, 1, :math_tfunc),
    (:line, 471, :none),
    (:call, :add_tfunc, :floor_llvm, 1, 1, :math_tfunc),
    (:line, 472, :none),
    (:call, :add_tfunc, :trunc_llvm, 1, 1, :math_tfunc),
    (:line, 473, :none),
    (:call, :add_tfunc, :rint_llvm, 1, 1, :math_tfunc),
    (:line, 474, :none),
    (:call, :add_tfunc, :sqrt_llvm, 1, 1, :math_tfunc),
    (:line, 475, :none),
    (:call, :add_tfunc, :sqrt_llvm_fast, 1, 1, :math_tfunc),
    (:line, 477, :none),
    (:(=), (:call, :cmp_tfunc, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 477, :none),
        :Bool
      )),
    (:line, 478, :none),
    (:call, :add_tfunc, :eq_int, 2, 2, :cmp_tfunc),
    (:line, 479, :none),
    (:call, :add_tfunc, :ne_int, 2, 2, :cmp_tfunc),
    (:line, 480, :none),
    (:call, :add_tfunc, :slt_int, 2, 2, :cmp_tfunc),
    (:line, 481, :none),
    (:call, :add_tfunc, :ult_int, 2, 2, :cmp_tfunc),
    (:line, 482, :none),
    (:call, :add_tfunc, :sle_int, 2, 2, :cmp_tfunc),
    (:line, 483, :none),
    (:call, :add_tfunc, :ule_int, 2, 2, :cmp_tfunc),
    (:line, 484, :none),
    (:call, :add_tfunc, :eq_float, 2, 2, :cmp_tfunc),
    (:line, 485, :none),
    (:call, :add_tfunc, :ne_float, 2, 2, :cmp_tfunc),
    (:line, 486, :none),
    (:call, :add_tfunc, :lt_float, 2, 2, :cmp_tfunc),
    (:line, 487, :none),
    (:call, :add_tfunc, :le_float, 2, 2, :cmp_tfunc),
    (:line, 488, :none),
    (:call, :add_tfunc, :fpiseq, 2, 2, :cmp_tfunc),
    (:line, 489, :none),
    (:call, :add_tfunc, :fpislt, 2, 2, :cmp_tfunc),
    (:line, 490, :none),
    (:call, :add_tfunc, :eq_float_fast, 2, 2, :cmp_tfunc),
    (:line, 491, :none),
    (:call, :add_tfunc, :ne_float_fast, 2, 2, :cmp_tfunc),
    (:line, 492, :none),
    (:call, :add_tfunc, :lt_float_fast, 2, 2, :cmp_tfunc),
    (:line, 493, :none),
    (:call, :add_tfunc, :le_float_fast, 2, 2, :cmp_tfunc),
    (:line, 496, :none),
    (:(=), (:call, :chk_tfunc, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 496, :none),
        (:curly, :Tuple, (:call, :widenconst, :x), :Bool)
      )),
    (:line, 497, :none),
    (:call, :add_tfunc, :checked_sadd_int, 2, 2, :chk_tfunc),
    (:line, 498, :none),
    (:call, :add_tfunc, :checked_uadd_int, 2, 2, :chk_tfunc),
    (:line, 499, :none),
    (:call, :add_tfunc, :checked_ssub_int, 2, 2, :chk_tfunc),
    (:line, 500, :none),
    (:call, :add_tfunc, :checked_usub_int, 2, 2, :chk_tfunc),
    (:line, 501, :none),
    (:call, :add_tfunc, :checked_smul_int, 2, 2, :chk_tfunc),
    (:line, 502, :none),
    (:call, :add_tfunc, :checked_umul_int, 2, 2, :chk_tfunc),
    (:line, 504, :none),
    (:call, :add_tfunc, (:., (:., :Core, (:quote, #QuoteNode
            :Intrinsics
          )), (:quote, #QuoteNode
          :llvmcall
        )), 3, :IInf, (:->, (:tuple, (:(::), :fptr, :ANY), (:(::), :rt, :ANY), (:(::), :at, :ANY), (:..., :a)), (:block,
          (:line, 505, :none),
          (:call, :instanceof_tfunc, :rt)
        ))),
    (:line, 506, :none),
    (:(=), (:call, :cglobal_tfunc, (:(::), :fptr, :ANY)), (:block,
        (:line, 506, :none),
        (:curly, :Ptr, :Void)
      )),
    (:line, 507, :none),
    (:(=), (:call, :cglobal_tfunc, (:(::), :fptr, :ANY), (:(::), :t, :ANY)), (:block,
        (:line, 507, :none),
        (:if, (:call, :isType, :t), (:curly, :Ptr, (:ref, (:., :t, (:quote, #QuoteNode
                  :parameters
                )), 1)), :Ptr)
      )),
    (:line, 508, :none),
    (:(=), (:call, :cglobal_tfunc, (:(::), :fptr, :ANY), (:(::), :t, :Const)), (:block,
        (:line, 508, :none),
        (:if, (:call, :isa, (:., :t, (:quote, #QuoteNode
                :val
              )), :Type), (:curly, :Ptr, (:., :t, (:quote, #QuoteNode
                :val
              ))), :Ptr)
      )),
    (:line, 509, :none),
    (:call, :add_tfunc, (:., (:., :Core, (:quote, #QuoteNode
            :Intrinsics
          )), (:quote, #QuoteNode
          :cglobal
        )), 1, 2, :cglobal_tfunc),
    (:line, 510, :none),
    (:call, :add_tfunc, (:., (:., :Core, (:quote, #QuoteNode
            :Intrinsics
          )), (:quote, #QuoteNode
          :select_value
        )), 3, 3, (:function, (:tuple, (:(::), :cnd, :ANY), (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
          (:line, 512, :none),
          (:if, (:call, :isa, :cnd, :Const), (:block,
              (:line, 513, :none),
              (:if, (:call, :(===), (:., :cnd, (:quote, #QuoteNode
                      :val
                    )), true), (:block,
                  (:line, 514, :none),
                  (:return, :x)
                ), (:block,
                  (:line, 515, :none),
                  (:if, (:call, :(===), (:., :cnd, (:quote, #QuoteNode
                          :val
                        )), false), (:block,
                      (:line, 516, :none),
                      (:return, :y)
                    ), (:block,
                      (:line, 518, :none),
                      (:return, :Bottom)
                    ))
                ))
            )),
          (:line, 521, :none),
          (:||, (:call, :⊑, :Bool, :cnd), (:return, :Bottom)),
          (:line, 522, :none),
          (:return, (:call, :tmerge, :x, :y))
        ))),
    (:line, 524, :none),
    (:call, :add_tfunc, :(===), 2, 2, (:function, (:tuple, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
          (:line, 526, :none),
          (:if, (:&&, (:call, :isa, :x, :Const), (:call, :isa, :y, :Const)), (:block,
              (:line, 527, :none),
              (:return, (:call, :Const, (:call, :(===), (:., :x, (:quote, #QuoteNode
                        :val
                      )), (:., :y, (:quote, #QuoteNode
                        :val
                      )))))
            ), (:block,
              (:line, 528, :none),
              (:if, (:call, :(===), (:call, :typeintersect, (:call, :widenconst, :x), (:call, :widenconst, :y)), :Bottom), (:block,
                  (:line, 529, :none),
                  (:return, (:call, :Const, false))
                ), (:block,
                  (:line, 530, :none),
                  (:if, (:||, (:&&, (:call, :isa, :x, :Const), (:&&, (:call, :(===), :y, (:call, :typeof, (:., :x, (:quote, #QuoteNode
                                  :val
                                )))), (:call, :isdefined, :y, (:quote, #QuoteNode
                              :instance
                            )))), (:&&, (:call, :isa, :y, :Const), (:&&, (:call, :(===), :x, (:call, :typeof, (:., :y, (:quote, #QuoteNode
                                  :val
                                )))), (:call, :isdefined, :x, (:quote, #QuoteNode
                              :instance
                            ))))), (:block,
                      (:line, 532, :none),
                      (:return, (:call, :Const, true))
                    ), (:block,
                      (:line, 533, :none),
                      (:if, (:&&, (:call, :isa, :x, :Conditional), (:call, :isa, :y, :Const)), (:block,
                          (:line, 534, :none),
                          (:&&, (:call, :(===), (:., :y, (:quote, #QuoteNode
                                  :val
                                )), false), (:return, (:call, :Conditional, (:., :x, (:quote, #QuoteNode
                                    :var
                                  )), (:., :x, (:quote, #QuoteNode
                                    :elsetype
                                  )), (:., :x, (:quote, #QuoteNode
                                    :vtype
                                  ))))),
                          (:line, 535, :none),
                          (:&&, (:call, :(===), (:., :y, (:quote, #QuoteNode
                                  :val
                                )), true), (:return, :x)),
                          (:line, 536, :none),
                          (:return, :x)
                        ), (:block,
                          (:line, 537, :none),
                          (:if, (:&&, (:call, :isa, :y, :Conditional), (:call, :isa, :x, :Const)), (:block,
                              (:line, 538, :none),
                              (:&&, (:call, :(===), (:., :x, (:quote, #QuoteNode
                                      :val
                                    )), false), (:return, (:call, :Conditional, (:., :y, (:quote, #QuoteNode
                                        :var
                                      )), (:., :y, (:quote, #QuoteNode
                                        :elsetype
                                      )), (:., :y, (:quote, #QuoteNode
                                        :vtype
                                      ))))),
                              (:line, 539, :none),
                              (:&&, (:call, :(===), (:., :x, (:quote, #QuoteNode
                                      :val
                                    )), true), (:return, :y))
                            ))
                        ))
                    ))
                ))
            )),
          (:line, 541, :none),
          (:return, :Bool)
        ))),
    (:line, 543, :none),
    (:call, :add_tfunc, :isdefined, 1, :IInf, (:->, (:tuple, (:..., :args)), (:block,
          (:line, 543, :none),
          :Bool
        ))),
    (:line, 544, :none),
    (:call, :add_tfunc, (:., :Core, (:quote, #QuoteNode
          :sizeof
        )), 1, 1, (:->, :x, (:block,
          (:line, 544, :none),
          :Int
        ))),
    (:line, 545, :none),
    (:call, :add_tfunc, :nfields, 1, 1, (:function, (:tuple, (:(::), :x, :ANY)), (:block,
          (:line, 547, :none),
          (:&&, (:call, :isa, :x, :Const), (:return, (:call, :Const, (:call, :nfields, (:., :x, (:quote, #QuoteNode
                      :val
                    )))))),
          (:line, 548, :none),
          (:&&, (:call, :isa, :x, :Conditional), (:return, (:call, :Const, (:call, :nfields, :Bool)))),
          (:line, 549, :none),
          (:if, (:call, :isType, :x), (:block,
              (:line, 550, :none),
              (:&&, (:call, :isleaftype, (:ref, (:., :x, (:quote, #QuoteNode
                        :parameters
                      )), 1)), (:return, (:call, :Const, (:call, :nfields, (:ref, (:., :x, (:quote, #QuoteNode
                            :parameters
                          )), 1)))))
            ), (:block,
              (:line, 551, :none),
              (:if, (:&&, (:call, :isa, :x, :DataType), (:&&, (:call, :!, (:., :x, (:quote, #QuoteNode
                          :abstract
                        ))), (:&&, (:call, :!, (:&&, (:call, :(===), (:., :x, (:quote, #QuoteNode
                                :name
                              )), (:., :Tuple, (:quote, #QuoteNode
                                :name
                              ))), (:call, :isvatuple, :x))), (:call, :(!==), :x, :DataType)))), (:block,
                  (:line, 552, :none),
                  (:return, (:call, :Const, (:call, :length, (:., :x, (:quote, #QuoteNode
                            :types
                          )))))
                ))
            )),
          (:line, 554, :none),
          (:return, :Int)
        ))),
    (:line, 556, :none),
    (:call, :add_tfunc, (:., :Core, (:quote, #QuoteNode
          :_expr
        )), 1, :IInf, (:->, (:tuple, (:..., :args)), (:block,
          (:line, 556, :none),
          :Expr
        ))),
    (:line, 557, :none),
    (:call, :add_tfunc, :applicable, 1, :IInf, (:->, (:tuple, (:(::), :f, :ANY), (:..., :args)), (:block,
          (:line, 557, :none),
          :Bool
        ))),
    (:line, 558, :none),
    (:call, :add_tfunc, (:., (:., :Core, (:quote, #QuoteNode
            :Intrinsics
          )), (:quote, #QuoteNode
          :arraylen
        )), 1, 1, (:->, :x, (:block,
          (:line, 558, :none),
          :Int
        ))),
    (:line, 559, :none),
    (:call, :add_tfunc, :arraysize, 2, 2, (:->, (:tuple, (:(::), :a, :ANY), (:(::), :d, :ANY)), (:block,
          (:line, 559, :none),
          :Int
        ))),
    (:line, 560, :none),
    (:call, :add_tfunc, :pointerref, 3, 3, (:function, (:tuple, (:(::), :a, :ANY), (:(::), :i, :ANY), (:(::), :align, :ANY)), (:block,
          (:line, 562, :none),
          (:(=), :a, (:call, :widenconst, :a)),
          (:line, 563, :none),
          (:if, (:<:, :a, :Ptr), (:block,
              (:line, 564, :none),
              (:if, (:&&, (:call, :isa, :a, :DataType), (:call, :isa, (:ref, (:., :a, (:quote, #QuoteNode
                          :parameters
                        )), 1), :Type)), (:block,
                  (:line, 565, :none),
                  (:return, (:ref, (:., :a, (:quote, #QuoteNode
                          :parameters
                        )), 1))
                ), (:block,
                  (:line, 566, :none),
                  (:if, (:&&, (:call, :isa, :a, :UnionAll), (:call, :!, (:call, :has_free_typevars, :a))), (:block,
                      (:line, 567, :none),
                      (:(=), :unw, (:call, :unwrap_unionall, :a)),
                      (:line, 568, :none),
                      (:if, (:call, :isa, :unw, :DataType), (:block,
                          (:line, 569, :none),
                          (:return, (:call, :rewrap_unionall, (:ref, (:., :unw, (:quote, #QuoteNode
                                    :parameters
                                  )), 1), :a))
                        ))
                    ))
                ))
            )),
          (:line, 573, :none),
          (:return, :Any)
        ))),
    (:line, 575, :none),
    (:call, :add_tfunc, :pointerset, 4, 4, (:->, (:tuple, (:(::), :a, :ANY), (:(::), :v, :ANY), (:(::), :i, :ANY), (:(::), :align, :ANY)), (:block,
          (:line, 575, :none),
          :a
        ))),
    (:line, 577, :none),
    (:function, (:call, :typeof_tfunc, (:(::), :t, :ANY)), (:block,
        (:line, 578, :none),
        (:if, (:call, :isa, :t, :Const), (:block,
            (:line, 579, :none),
            (:return, (:call, :Const, (:call, :typeof, (:., :t, (:quote, #QuoteNode
                      :val
                    )))))
          ), (:block,
            (:line, 580, :none),
            (:if, (:call, :isa, :t, :Conditional), (:block,
                (:line, 581, :none),
                (:return, (:call, :Const, :Bool))
              ), (:block,
                (:line, 582, :none),
                (:if, (:call, :isType, :t), (:block,
                    (:line, 583, :none),
                    (:(=), :tp, (:ref, (:., :t, (:quote, #QuoteNode
                            :parameters
                          )), 1)),
                    (:line, 584, :none),
                    (:if, (:call, :!, (:call, :isleaftype, :tp)), (:block,
                        (:line, 585, :none),
                        (:return, :DataType)
                      ), (:block,
                        (:line, 587, :none),
                        (:return, (:call, :Const, (:call, :typeof, :tp)))
                      ))
                  ), (:block,
                    (:line, 589, :none),
                    (:if, (:call, :isa, :t, :DataType), (:block,
                        (:line, 590, :none),
                        (:if, (:||, (:call, :isleaftype, :t), (:call, :isvarargtype, :t)), (:block,
                            (:line, 591, :none),
                            (:return, (:call, :Const, :t))
                          ), (:block,
                            (:line, 592, :none),
                            (:if, (:call, :(===), :t, :Any), (:block,
                                (:line, 593, :none),
                                (:return, :DataType)
                              ), (:block,
                                (:line, 595, :none),
                                (:return, (:curly, :Type, (:<:, :t)))
                              ))
                          ))
                      ), (:block,
                        (:line, 597, :none),
                        (:if, (:call, :isa, :t, :Union), (:block,
                            (:line, 598, :none),
                            (:(=), :a, (:call, :widenconst, (:call, :typeof_tfunc, (:., :t, (:quote, #QuoteNode
                                      :a
                                    ))))),
                            (:line, 599, :none),
                            (:(=), :b, (:call, :widenconst, (:call, :typeof_tfunc, (:., :t, (:quote, #QuoteNode
                                      :b
                                    ))))),
                            (:line, 600, :none),
                            (:return, (:curly, :Union, :a, :b))
                          ), (:block,
                            (:line, 601, :none),
                            (:if, (:&&, (:call, :isa, :t, :TypeVar), (:call, :!, (:<:, :Any, (:., :t, (:quote, #QuoteNode
                                        :ub
                                      ))))), (:block,
                                (:line, 602, :none),
                                (:return, (:call, :typeof_tfunc, (:., :t, (:quote, #QuoteNode
                                        :ub
                                      ))))
                              ), (:block,
                                (:line, 603, :none),
                                (:if, (:call, :isa, :t, :UnionAll), (:block,
                                    (:line, 604, :none),
                                    (:return, (:call, :rewrap_unionall, (:call, :widenconst, (:call, :typeof_tfunc, (:call, :unwrap_unionall, :t))), :t))
                                  ), (:block,
                                    (:line, 606, :none),
                                    (:return, :DataType)
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 609, :none),
    (:call, :add_tfunc, :typeof, 1, 1, :typeof_tfunc),
    (:line, 610, :none),
    (:call, :add_tfunc, :typeassert, 2, 2, (:function, (:tuple, (:(::), :v, :ANY), (:(::), :t, :ANY)), (:block,
          (:line, 612, :none),
          (:(=), :t, (:call, :instanceof_tfunc, :t)),
          (:line, 613, :none),
          (:&&, (:call, :(===), :t, :Any), (:return, :v)),
          (:line, 614, :none),
          (:if, (:call, :isa, :v, :Const), (:block,
              (:line, 615, :none),
              (:if, (:&&, (:call, :!, (:call, :has_free_typevars, :t)), (:call, :!, (:call, :isa, (:., :v, (:quote, #QuoteNode
                          :val
                        )), :t))), (:block,
                  (:line, 616, :none),
                  (:return, :Bottom)
                )),
              (:line, 618, :none),
              (:return, :v)
            ), (:block,
              (:line, 619, :none),
              (:if, (:call, :isa, :v, :Conditional), (:block,
                  (:line, 620, :none),
                  (:if, (:call, :!, (:<:, :Bool, :t)), (:block,
                      (:line, 621, :none),
                      (:return, :Bottom)
                    )),
                  (:line, 623, :none),
                  (:return, :v)
                ))
            )),
          (:line, 625, :none),
          (:return, (:call, :typeintersect, :v, :t))
        ))),
    (:line, 627, :none),
    (:call, :add_tfunc, :isa, 2, 2, (:function, (:tuple, (:(::), :v, :ANY), (:(::), :t, :ANY)), (:block,
          (:line, 629, :none),
          (:(=), :t, (:call, :instanceof_tfunc, :t)),
          (:line, 630, :none),
          (:if, (:&&, (:call, :(!==), :t, :Any), (:call, :!, (:call, :has_free_typevars, :t))), (:block,
              (:line, 631, :none),
              (:if, (:call, :⊑, :v, :t), (:block,
                  (:line, 632, :none),
                  (:return, (:call, :Const, true))
                ), (:block,
                  (:line, 633, :none),
                  (:if, (:||, (:call, :isa, :v, :Const), (:||, (:call, :isa, :v, :Conditional), (:call, :isleaftype, :v))), (:block,
                      (:line, 634, :none),
                      (:return, (:call, :Const, false))
                    ))
                ))
            )),
          (:line, 638, :none),
          (:return, :Bool)
        ))),
    (:line, 640, :none),
    (:call, :add_tfunc, :issubtype, 2, 2, (:function, (:tuple, (:(::), :a, :ANY), (:(::), :b, :ANY)), (:block,
          (:line, 642, :none),
          (:if, (:&&, (:||, (:call, :isa, :a, :Const), (:call, :isType, :a)), (:||, (:call, :isa, :b, :Const), (:call, :isType, :b))), (:block,
              (:line, 643, :none),
              (:(=), :a, (:call, :instanceof_tfunc, :a)),
              (:line, 644, :none),
              (:(=), :b, (:call, :instanceof_tfunc, :b)),
              (:line, 645, :none),
              (:if, (:&&, (:call, :!, (:call, :has_free_typevars, :a)), (:call, :!, (:call, :has_free_typevars, :b))), (:block,
                  (:line, 646, :none),
                  (:return, (:call, :Const, (:call, :issubtype, :a, :b)))
                ))
            )),
          (:line, 649, :none),
          (:return, :Bool)
        ))),
    (:line, 652, :none),
    (:function, (:call, :type_depth, (:(::), :t, :ANY)), (:block,
        (:line, 653, :none),
        (:if, (:call, :(===), :t, :Bottom), (:block,
            (:line, 654, :none),
            (:return, 0)
          ), (:block,
            (:line, 655, :none),
            (:if, (:call, :isa, :t, :Union), (:block,
                (:line, 656, :none),
                (:return, (:call, :+, (:call, :max, (:call, :type_depth, (:., :t, (:quote, #QuoteNode
                            :a
                          ))), (:call, :type_depth, (:., :t, (:quote, #QuoteNode
                            :b
                          )))), 1))
              ), (:block,
                (:line, 657, :none),
                (:if, (:call, :isa, :t, :DataType), (:block,
                    (:line, 658, :none),
                    (:return, (:., (:(::), :t, :DataType), (:quote, #QuoteNode
                          :depth
                        )))
                  ), (:block,
                    (:line, 659, :none),
                    (:if, (:call, :isa, :t, :UnionAll), (:block,
                        (:line, 660, :none),
                        (:if, (:&&, (:call, :(===), (:., (:., :t, (:quote, #QuoteNode
                                    :var
                                  )), (:quote, #QuoteNode
                                  :ub
                                )), :Any), (:call, :(===), (:., (:., :t, (:quote, #QuoteNode
                                    :var
                                  )), (:quote, #QuoteNode
                                  :lb
                                )), :Bottom)), (:block,
                            (:line, 661, :none),
                            (:return, (:call, :type_depth, (:., :t, (:quote, #QuoteNode
                                    :body
                                  ))))
                          )),
                        (:line, 663, :none),
                        (:return, (:call, :max, (:call, :+, (:call, :type_depth, (:., (:., :t, (:quote, #QuoteNode
                                      :var
                                    )), (:quote, #QuoteNode
                                    :ub
                                  ))), 1), (:call, :+, (:call, :type_depth, (:., (:., :t, (:quote, #QuoteNode
                                      :var
                                    )), (:quote, #QuoteNode
                                    :lb
                                  ))), 1), (:call, :type_depth, (:., :t, (:quote, #QuoteNode
                                  :body
                                )))))
                      ))
                  ))
              ))
          )),
        (:line, 665, :none),
        (:return, 0)
      )),
    (:line, 668, :none),
    (:function, (:call, :limit_type_depth, (:(::), :t, :ANY), (:(::), :d, :Int)), (:block,
        (:line, 669, :none),
        (:(=), :r, (:call, :limit_type_depth, :t, :d, true, (:ref, :TypeVar))),
        (:line, 670, :none),
        (:macrocall, Symbol("@assert"), (:||, (:call, :!, (:call, :isa, :t, :Type)), (:<:, :t, :r))),
        (:line, 671, :none),
        (:return, :r)
      )),
    (:line, 674, :none),
    (:function, (:call, :limit_type_depth, (:(::), :t, :ANY), (:(::), :d, :Int), (:(::), :cov, :Bool), (:kw, (:(::), :vars, (:curly, :Vector, :TypeVar)), (:ref, :TypeVar))), (:block,
        (:line, 675, :none),
        (:if, (:call, :isa, :t, :Union), (:block,
            (:line, 676, :none),
            (:if, (:call, :>, :d, :MAX_TYPE_DEPTH), (:block,
                (:line, 677, :none),
                (:if, :cov, (:block,
                    (:line, 678, :none),
                    (:return, :Any)
                  ), (:block,
                    (:line, 680, :none),
                    (:(=), :var, (:call, :TypeVar, (:quote, #QuoteNode
                          :_
                        ))),
                    (:line, 681, :none),
                    (:call, :push!, :vars, :var),
                    (:line, 682, :none),
                    (:return, :var)
                  ))
              )),
            (:line, 685, :none),
            (:return, (:curly, :Union, (:call, :limit_type_depth, (:., :t, (:quote, #QuoteNode
                      :a
                    )), (:call, :+, :d, 1), :cov, :vars), (:call, :limit_type_depth, (:., :t, (:quote, #QuoteNode
                      :b
                    )), (:call, :+, :d, 1), :cov, :vars)))
          ), (:block,
            (:line, 687, :none),
            (:if, (:call, :isa, :t, :UnionAll), (:block,
                (:line, 688, :none),
                (:(=), :v, (:., :t, (:quote, #QuoteNode
                      :var
                    ))),
                (:line, 689, :none),
                (:if, (:call, :(===), (:., :v, (:quote, #QuoteNode
                        :ub
                      )), :Any), (:block,
                    (:line, 690, :none),
                    (:if, (:call, :(===), (:., :v, (:quote, #QuoteNode
                            :lb
                          )), :Bottom), (:block,
                        (:line, 691, :none),
                        (:return, (:call, :UnionAll, (:., :t, (:quote, #QuoteNode
                                :var
                              )), (:call, :limit_type_depth, (:., :t, (:quote, #QuoteNode
                                  :body
                                )), :d, :cov, :vars)))
                      )),
                    (:line, 693, :none),
                    (:(=), :ub, :Any)
                  ), (:block,
                    (:line, 695, :none),
                    (:(=), :ub, (:call, :limit_type_depth, (:., :v, (:quote, #QuoteNode
                            :ub
                          )), (:call, :+, :d, 1), true))
                  )),
                (:line, 697, :none),
                (:if, (:||, (:call, :(===), (:., :v, (:quote, #QuoteNode
                          :lb
                        )), :Bottom), (:call, :>, (:call, :type_depth, (:., :v, (:quote, #QuoteNode
                            :lb
                          ))), :MAX_TYPE_DEPTH)), (:block,
                    (:line, 699, :none),
                    (:(=), :lb, :Bottom)
                  ), (:block,
                    (:line, 701, :none),
                    (:(=), :lb, (:., :v, (:quote, #QuoteNode
                          :lb
                        )))
                  )),
                (:line, 703, :none),
                (:(=), :v2, (:call, :TypeVar, (:., :v, (:quote, #QuoteNode
                        :name
                      )), :lb, :ub)),
                (:line, 704, :none),
                (:return, (:call, :UnionAll, :v2, (:call, :limit_type_depth, (:curly, :t, :v2), :d, :cov, :vars)))
              ), (:block,
                (:line, 705, :none),
                (:if, (:call, :!, (:call, :isa, :t, :DataType)), (:block,
                    (:line, 706, :none),
                    (:return, :t)
                  ))
              ))
          )),
        (:line, 708, :none),
        (:(=), :P, (:., :t, (:quote, #QuoteNode
              :parameters
            ))),
        (:line, 709, :none),
        (:&&, (:call, :isempty, :P), (:return, :t)),
        (:line, 710, :none),
        (:if, (:call, :>, :d, :MAX_TYPE_DEPTH), (:block,
            (:line, 711, :none),
            (:if, (:call, :isvarargtype, :t), (:block,
                (:line, 713, :none),
                (:return, (:curly, :Vararg, (:call, :limit_type_depth, (:ref, :P, 1), :d, :cov, :vars), (:ref, :P, 2)))
              )),
            (:line, 715, :none),
            (:(=), :widert, (:., (:., :t, (:quote, #QuoteNode
                    :name
                  )), (:quote, #QuoteNode
                  :wrapper
                ))),
            (:line, 716, :none),
            (:if, (:call, :!, (:<:, :t, :widert)), (:block,
                (:line, 720, :none),
                (:(=), :widert, :Any)
              )),
            (:line, 722, :none),
            (:&&, :cov, (:return, :widert)),
            (:line, 723, :none),
            (:(=), :var, (:call, :TypeVar, (:quote, #QuoteNode
                  :_
                ), :widert)),
            (:line, 724, :none),
            (:call, :push!, :vars, :var),
            (:line, 725, :none),
            (:return, :var)
          )),
        (:line, 727, :none),
        (:(=), :stillcov, (:&&, :cov, (:call, :(===), (:., :t, (:quote, #QuoteNode
                  :name
                )), (:., :Tuple, (:quote, #QuoteNode
                  :name
                ))))),
        (:line, 728, :none),
        (:(=), :Q, (:call, :map, (:->, :x, (:block,
                (:line, 728, :none),
                (:call, :limit_type_depth, :x, (:call, :+, :d, 1), :stillcov, :vars)
              )), :P)),
        (:line, 729, :none),
        (:(=), :R, (:curly, (:., (:., :t, (:quote, #QuoteNode
                  :name
                )), (:quote, #QuoteNode
                :wrapper
              )), (:..., :Q))),
        (:line, 730, :none),
        (:if, (:&&, :cov, (:call, :!, :stillcov)), (:block,
            (:line, 731, :none),
            (:for, (:(=), :var, :vars), (:block,
                (:line, 732, :none),
                (:(=), :R, (:call, :UnionAll, :var, :R))
              ))
          )),
        (:line, 735, :none),
        (:return, :R)
      )),
    (:line, 738, :none),
    (:const, (:(=), :DataType_name_fieldindex, (:call, :fieldindex, :DataType, (:quote, #QuoteNode
            :name
          )))),
    (:line, 739, :none),
    (:const, (:(=), :DataType_parameters_fieldindex, (:call, :fieldindex, :DataType, (:quote, #QuoteNode
            :parameters
          )))),
    (:line, 740, :none),
    (:const, (:(=), :DataType_types_fieldindex, (:call, :fieldindex, :DataType, (:quote, #QuoteNode
            :types
          )))),
    (:line, 741, :none),
    (:const, (:(=), :DataType_super_fieldindex, (:call, :fieldindex, :DataType, (:quote, #QuoteNode
            :super
          )))),
    (:line, 743, :none),
    (:const, (:(=), :TypeName_name_fieldindex, (:call, :fieldindex, :TypeName, (:quote, #QuoteNode
            :name
          )))),
    (:line, 744, :none),
    (:const, (:(=), :TypeName_module_fieldindex, (:call, :fieldindex, :TypeName, (:quote, #QuoteNode
            :module
          )))),
    (:line, 745, :none),
    (:const, (:(=), :TypeName_wrapper_fieldindex, (:call, :fieldindex, :TypeName, (:quote, #QuoteNode
            :wrapper
          )))),
    (:line, 747, :none),
    (:function, (:call, :const_datatype_getfield_tfunc, :sv, :fld), (:block,
        (:line, 748, :none),
        (:if, (:||, (:call, :(==), :fld, :DataType_name_fieldindex), (:||, (:call, :(==), :fld, :DataType_parameters_fieldindex), (:||, (:call, :(==), :fld, :DataType_types_fieldindex), (:call, :(==), :fld, :DataType_super_fieldindex)))), (:block,
            (:line, 752, :none),
            (:return, (:call, :abstract_eval_constant, (:call, :getfield, :sv, :fld)))
          )),
        (:line, 754, :none),
        (:return, :nothing)
      )),
    (:line, 758, :none),
    (:function, (:call, :getfield_tfunc, (:(::), :s00, :ANY), :name), (:block,
        (:line, 759, :none),
        (:if, (:call, :isa, :s00, :TypeVar), (:block,
            (:line, 760, :none),
            (:(=), :s00, (:., :s00, (:quote, #QuoteNode
                  :ub
                )))
          )),
        (:line, 762, :none),
        (:(=), :s, (:call, :unwrap_unionall, :s00)),
        (:line, 763, :none),
        (:if, (:call, :isa, :s, :Union), (:block,
            (:line, 764, :none),
            (:return, (:call, :tmerge, (:call, :rewrap, (:call, :getfield_tfunc, (:., :s, (:quote, #QuoteNode
                        :a
                      )), :name), :s00), (:call, :rewrap, (:call, :getfield_tfunc, (:., :s, (:quote, #QuoteNode
                        :b
                      )), :name), :s00)))
          ), (:block,
            (:line, 766, :none),
            (:if, (:call, :isa, :s, :Conditional), (:block,
                (:line, 767, :none),
                (:return, :Bottom)
              ), (:block,
                (:line, 768, :none),
                (:if, (:||, (:call, :isa, :s, :Const), (:call, :isType, :s)), (:block,
                    (:line, 769, :none),
                    (:if, (:call, :!, (:call, :isa, :s, :Const)), (:block,
                        (:line, 770, :none),
                        (:(=), :p1, (:ref, (:., :s, (:quote, #QuoteNode
                                :parameters
                              )), 1)),
                        (:line, 771, :none),
                        (:if, (:call, :!, (:call, :isleaftype, :p1)), (:block,
                            (:line, 772, :none),
                            (:return, :Any)
                          )),
                        (:line, 774, :none),
                        (:(=), :sv, :p1)
                      ), (:block,
                        (:line, 776, :none),
                        (:(=), :sv, (:., :s, (:quote, #QuoteNode
                              :val
                            )))
                      )),
                    (:line, 778, :none),
                    (:if, (:call, :isa, :name, :Const), (:block,
                        (:line, 779, :none),
                        (:(=), :nv, (:., :name, (:quote, #QuoteNode
                              :val
                            ))),
                        (:line, 780, :none),
                        (:if, (:call, :isa, :sv, :UnionAll), (:block,
                            (:line, 781, :none),
                            (:if, (:||, (:call, :(===), :nv, (:quote, #QuoteNode
                                    :var
                                  )), (:call, :(===), :nv, 1)), (:block,
                                (:line, 782, :none),
                                (:return, (:call, :Const, (:., :sv, (:quote, #QuoteNode
                                        :var
                                      ))))
                              ), (:block,
                                (:line, 783, :none),
                                (:if, (:||, (:call, :(===), :nv, (:quote, #QuoteNode
                                        :body
                                      )), (:call, :(===), :nv, 2)), (:block,
                                    (:line, 784, :none),
                                    (:return, (:call, :Const, (:., :sv, (:quote, #QuoteNode
                                            :body
                                          ))))
                                  ))
                              ))
                          ), (:block,
                            (:line, 786, :none),
                            (:if, (:call, :isa, :sv, :DataType), (:block,
                                (:line, 787, :none),
                                (:(=), :t, (:call, :const_datatype_getfield_tfunc, :sv, (:if, (:call, :isa, :nv, :Symbol), (:call, :fieldindex, :DataType, :nv, false), :nv))),
                                (:line, 789, :none),
                                (:&&, (:call, :(!==), :t, :nothing), (:return, :t))
                              ), (:block,
                                (:line, 790, :none),
                                (:if, (:call, :isa, :sv, :TypeName), (:block,
                                    (:line, 791, :none),
                                    (:(=), :fld, (:if, (:call, :isa, :nv, :Symbol), (:call, :fieldindex, :TypeName, :nv, false), :nv)),
                                    (:line, 792, :none),
                                    (:if, (:||, (:call, :(==), :fld, :TypeName_name_fieldindex), (:||, (:call, :(==), :fld, :TypeName_module_fieldindex), (:call, :(==), :fld, :TypeName_wrapper_fieldindex))), (:block,
                                        (:line, 795, :none),
                                        (:return, (:call, :abstract_eval_constant, (:call, :getfield, :sv, :fld)))
                                      ))
                                  ))
                              ))
                          )),
                        (:line, 798, :none),
                        (:if, (:&&, (:call, :isa, :sv, :Module), (:call, :isa, :nv, :Symbol)), (:block,
                            (:line, 799, :none),
                            (:return, (:call, :abstract_eval_global, :sv, :nv))
                          )),
                        (:line, 801, :none),
                        (:if, (:call, :!, (:||, (:call, :isa, :nv, :Symbol), (:call, :isa, :nv, :Int))), (:block,
                            (:line, 802, :none),
                            (:return, :Bottom)
                          )),
                        (:line, 804, :none),
                        (:if, (:&&, (:||, (:call, :isa, :sv, :SimpleVector), (:call, :isimmutable, :sv)), (:call, :isdefined, :sv, :nv)), (:block,
                            (:line, 805, :none),
                            (:return, (:call, :abstract_eval_constant, (:call, :getfield, :sv, :nv)))
                          ))
                      )),
                    (:line, 808, :none),
                    (:(=), :s, (:call, :typeof, :sv))
                  ))
              ))
          )),
        (:line, 810, :none),
        (:if, (:||, (:call, :!, (:call, :isa, :s, :DataType)), (:., :s, (:quote, #QuoteNode
                :abstract
              ))), (:block,
            (:line, 811, :none),
            (:return, :Any)
          )),
        (:line, 813, :none),
        (:if, (:&&, (:<:, :s, :Tuple), (:call, :⊑, :name, :Symbol)), (:block,
            (:line, 814, :none),
            (:return, :Bottom)
          )),
        (:line, 816, :none),
        (:if, (:<:, :s, :Module), (:block,
            (:line, 817, :none),
            (:if, (:call, :⊑, :name, :Int), (:block,
                (:line, 818, :none),
                (:return, :Bottom)
              )),
            (:line, 820, :none),
            (:return, :Any)
          )),
        (:line, 822, :none),
        (:if, (:call, :isempty, (:., :s, (:quote, #QuoteNode
                :types
              ))), (:block,
            (:line, 823, :none),
            (:return, :Bottom)
          )),
        (:line, 825, :none),
        (:if, (:call, :isa, :name, :Conditional), (:block,
            (:line, 826, :none),
            (:return, :Bottom)
          )),
        (:line, 828, :none),
        (:if, (:call, :!, (:call, :isa, :name, :Const)), (:block,
            (:line, 829, :none),
            (:if, (:call, :!, (:||, (:<:, :Int, :name), (:<:, :Symbol, :name))), (:block,
                (:line, 830, :none),
                (:return, :Bottom)
              )),
            (:line, 832, :none),
            (:if, (:call, :(==), (:call, :length, (:., :s, (:quote, #QuoteNode
                      :types
                    ))), 1), (:block,
                (:line, 833, :none),
                (:return, (:call, :rewrap_unionall, (:call, :unwrapva, (:ref, (:., :s, (:quote, #QuoteNode
                            :types
                          )), 1)), :s00))
              )),
            (:line, 836, :none),
            (:(=), :R, (:call, :reduce, :tmerge, :Bottom, (:call, :map, (:->, :t, (:block,
                      (:line, 836, :none),
                      (:call, :rewrap_unionall, (:call, :unwrapva, :t), :s00)
                    )), (:., :s, (:quote, #QuoteNode
                      :types
                    ))))),
            (:line, 838, :none),
            (:if, (:call, :isempty, (:., :s, (:quote, #QuoteNode
                    :parameters
                  ))), (:block,
                (:line, 839, :none),
                (:return, :R)
              )),
            (:line, 841, :none),
            (:return, (:call, :limit_type_depth, :R, 0))
          )),
        (:line, 843, :none),
        (:(=), :fld, (:., :name, (:quote, #QuoteNode
              :val
            ))),
        (:line, 844, :none),
        (:if, (:call, :isa, :fld, :Symbol), (:block,
            (:line, 845, :none),
            (:(=), :fld, (:call, :fieldindex, :s, :fld, false))
          )),
        (:line, 847, :none),
        (:if, (:call, :!, (:call, :isa, :fld, :Int)), (:block,
            (:line, 848, :none),
            (:return, :Bottom)
          )),
        (:line, 850, :none),
        (:(=), :nf, (:call, :length, (:., :s, (:quote, #QuoteNode
                :types
              )))),
        (:line, 851, :none),
        (:if, (:&&, (:<:, :s, :Tuple), (:&&, (:call, :(>=), :fld, :nf), (:call, :isvarargtype, (:ref, (:., :s, (:quote, #QuoteNode
                      :types
                    )), :nf)))), (:block,
            (:line, 852, :none),
            (:return, (:call, :rewrap_unionall, (:call, :unwrapva, (:ref, (:., :s, (:quote, #QuoteNode
                        :types
                      )), :nf)), :s00))
          )),
        (:line, 854, :none),
        (:if, (:||, (:call, :<, :fld, 1), (:call, :>, :fld, :nf)), (:block,
            (:line, 855, :none),
            (:return, :Bottom)
          )),
        (:line, 857, :none),
        (:if, (:&&, (:call, :isType, :s00), (:call, :isleaftype, (:ref, (:., :s00, (:quote, #QuoteNode
                    :parameters
                  )), 1))), (:block,
            (:line, 858, :none),
            (:(=), :sp, (:ref, (:., :s00, (:quote, #QuoteNode
                    :parameters
                  )), 1))
          ), (:block,
            (:line, 859, :none),
            (:if, (:&&, (:call, :isa, :s00, :Const), (:call, :isa, (:., :s00, (:quote, #QuoteNode
                      :val
                    )), :DataType)), (:block,
                (:line, 860, :none),
                (:(=), :sp, (:., :s00, (:quote, #QuoteNode
                      :val
                    )))
              ), (:block,
                (:line, 862, :none),
                (:(=), :sp, :nothing)
              ))
          )),
        (:line, 864, :none),
        (:if, (:call, :(!==), :sp, :nothing), (:block,
            (:line, 865, :none),
            (:(=), :t, (:call, :const_datatype_getfield_tfunc, :sp, :fld)),
            (:line, 866, :none),
            (:&&, (:call, :(!==), :t, :nothing), (:return, :t))
          )),
        (:line, 868, :none),
        (:(=), :R, (:ref, (:., :s, (:quote, #QuoteNode
                :types
              )), :fld)),
        (:line, 869, :none),
        (:if, (:call, :isempty, (:., :s, (:quote, #QuoteNode
                :parameters
              ))), (:block,
            (:line, 870, :none),
            (:return, :R)
          )),
        (:line, 876, :none),
        (:return, (:call, :rewrap_unionall, (:call, :limit_type_depth, :R, 0), :s00))
      )),
    (:line, 878, :none),
    (:call, :add_tfunc, :getfield, 2, 2, (:->, (:tuple, (:(::), :s, :ANY), (:(::), :name, :ANY)), (:block,
          (:line, 878, :none),
          (:call, :getfield_tfunc, :s, :name)
        ))),
    (:line, 879, :none),
    (:call, :add_tfunc, :setfield!, 3, 3, (:->, (:tuple, (:(::), :o, :ANY), (:(::), :f, :ANY), (:(::), :v, :ANY)), (:block,
          (:line, 879, :none),
          :v
        ))),
    (:line, 880, :none),
    (:function, (:call, :fieldtype_tfunc, (:(::), :s0, :ANY), (:(::), :name, :ANY)), (:block,
        (:line, 881, :none),
        (:if, (:||, (:call, :(===), :s0, :Any), (:||, (:call, :(===), :s0, :Type), (:||, (:call, :⊑, :DataType, :s0), (:call, :⊑, :UnionAll, :s0)))), (:block,
            (:line, 882, :none),
            (:return, :Type)
          )),
        (:line, 885, :none),
        (:if, (:&&, (:call, :isa, :s0, :Const), (:||, (:call, :!, (:||, (:call, :isa, (:., :s0, (:quote, #QuoteNode
                        :val
                      )), :DataType), (:call, :isa, (:., :s0, (:quote, #QuoteNode
                        :val
                      )), :UnionAll))), (:call, :(===), (:., :s0, (:quote, #QuoteNode
                    :val
                  )), :Module))), (:block,
            (:line, 886, :none),
            (:return, :Bottom)
          )),
        (:line, 888, :none),
        (:if, (:||, (:call, :(==), :s0, (:curly, :Type, :Module)), (:||, (:call, :(==), :s0, (:curly, :Type, (:curly, :Union))), (:call, :isa, :s0, :Conditional))), (:block,
            (:line, 889, :none),
            (:return, :Bottom)
          )),
        (:line, 892, :none),
        (:(=), :s, (:call, :instanceof_tfunc, :s0)),
        (:line, 893, :none),
        (:(=), :u, (:call, :unwrap_unionall, :s)),
        (:line, 895, :none),
        (:if, (:call, :isa, :u, :Union), (:block,
            (:line, 896, :none),
            (:return, (:call, :tmerge, (:call, :rewrap, (:call, :fieldtype_tfunc, (:., :u, (:quote, #QuoteNode
                        :a
                      )), :name), :s), (:call, :rewrap, (:call, :fieldtype_tfunc, (:., :u, (:quote, #QuoteNode
                        :b
                      )), :name), :s)))
          )),
        (:line, 900, :none),
        (:if, (:||, (:call, :!, (:call, :isa, :u, :DataType)), (:., :u, (:quote, #QuoteNode
                :abstract
              ))), (:block,
            (:line, 901, :none),
            (:return, :Type)
          )),
        (:line, 903, :none),
        (:(=), :ftypes, (:., :u, (:quote, #QuoteNode
              :types
            ))),
        (:line, 904, :none),
        (:if, (:call, :isempty, :ftypes), (:block,
            (:line, 905, :none),
            (:return, :Bottom)
          )),
        (:line, 908, :none),
        (:if, (:call, :!, (:call, :isa, :name, :Const)), (:block,
            (:line, 909, :none),
            (:if, (:call, :!, (:||, (:<:, :Int, :name), (:<:, :Symbol, :name))), (:block,
                (:line, 910, :none),
                (:return, :Bottom)
              )),
            (:line, 912, :none),
            (:return, (:call, :reduce, :tmerge, :Bottom, (:typed_comprehension, :Any, (:generator, (:call, :fieldtype_tfunc, :s0, (:call, :Const, :i)), (:(=), :i, (:(:), 1, (:call, :length, :ftypes)))))))
          )),
        (:line, 916, :none),
        (:(=), :fld, (:., :name, (:quote, #QuoteNode
              :val
            ))),
        (:line, 917, :none),
        (:if, (:call, :isa, :fld, :Symbol), (:block,
            (:line, 918, :none),
            (:(=), :fld, (:call, :fieldindex, :u, :fld, false))
          )),
        (:line, 920, :none),
        (:if, (:call, :!, (:call, :isa, :fld, :Int)), (:block,
            (:line, 921, :none),
            (:return, :Bottom)
          )),
        (:line, 923, :none),
        (:(=), :nf, (:call, :length, :ftypes)),
        (:line, 924, :none),
        (:if, (:&&, (:call, :(===), (:., :u, (:quote, #QuoteNode
                  :name
                )), (:., :Tuple, (:quote, #QuoteNode
                  :name
                ))), (:&&, (:call, :(>=), :fld, :nf), (:call, :isvarargtype, (:ref, :ftypes, :nf)))), (:block,
            (:line, 925, :none),
            (:(=), :ft, (:call, :unwrapva, (:ref, :ftypes, :nf)))
          ), (:block,
            (:line, 926, :none),
            (:if, (:||, (:call, :<, :fld, 1), (:call, :>, :fld, :nf)), (:block,
                (:line, 927, :none),
                (:return, :Bottom)
              ), (:block,
                (:line, 929, :none),
                (:(=), :ft, (:ref, :ftypes, :fld))
              ))
          )),
        (:line, 932, :none),
        (:(=), :exact, (:&&, (:||, (:call, :isa, :s0, :Const), (:call, :isType, :s0)), (:call, :!, (:call, :has_free_typevars, :s)))),
        (:line, 933, :none),
        (:(=), :ft, (:call, :rewrap_unionall, :ft, :s)),
        (:line, 934, :none),
        (:if, :exact, (:block,
            (:line, 935, :none),
            (:return, (:call, :Const, :ft))
          )),
        (:line, 937, :none),
        (:return, (:curly, :Type, (:<:, :ft)))
      )),
    (:line, 939, :none),
    (:call, :add_tfunc, :fieldtype, 2, 2, :fieldtype_tfunc),
    (:line, 941, :none),
    (:function, (:call, :valid_tparam, (:(::), :x, :ANY)), (:block,
        (:line, 942, :none),
        (:if, (:call, :isa, :x, :Tuple), (:block,
            (:line, 943, :none),
            (:for, (:(=), :t, :x), (:block,
                (:line, 944, :none),
                (:&&, (:call, :!, (:call, :valid_tparam, :t)), (:return, false))
              )),
            (:line, 946, :none),
            (:return, true)
          )),
        (:line, 948, :none),
        (:return, (:||, (:call, :isa, :x, :Int), (:||, (:call, :isa, :x, :Symbol), (:||, (:call, :isa, :x, :Bool), (:&&, (:call, :!, (:call, :isa, :x, :Type)), (:call, :isbits, :x))))))
      )),
    (:line, 951, :none),
    (:(=), (:call, :has_free_typevars, (:(::), :t, :ANY)), (:block,
        (:line, 951, :none),
        (:call, :(!=), (:call, :ccall, (:quote, #QuoteNode
              :jl_has_free_typevars
            ), :Cint, (:tuple, :Any), :t), 0)
      )),
    (:line, 954, :none),
    (:function, (:call, :apply_type_tfunc, (:(::), :headtypetype, :ANY), (:..., (:(::), :args, :ANY))), (:block,
        (:line, 955, :none),
        (:if, (:call, :isa, :headtypetype, :Const), (:block,
            (:line, 956, :none),
            (:(=), :headtype, (:., :headtypetype, (:quote, #QuoteNode
                  :val
                )))
          ), (:block,
            (:line, 957, :none),
            (:if, (:&&, (:call, :isType, :headtypetype), (:call, :isleaftype, (:ref, (:., :headtypetype, (:quote, #QuoteNode
                        :parameters
                      )), 1))), (:block,
                (:line, 958, :none),
                (:(=), :headtype, (:ref, (:., :headtypetype, (:quote, #QuoteNode
                        :parameters
                      )), 1))
              ), (:block,
                (:line, 960, :none),
                (:return, :Any)
              ))
          )),
        (:line, 962, :none),
        (:(=), :largs, (:call, :length, :args)),
        (:line, 963, :none),
        (:if, (:call, :(===), :headtype, :Union), (:block,
            (:line, 964, :none),
            (:&&, (:call, :(==), :largs, 0), (:return, (:call, :Const, :Bottom))),
            (:line, 965, :none),
            (:&&, (:call, :(==), :largs, 1), (:return, (:ref, :args, 1))),
            (:line, 966, :none),
            (:for, (:(=), :i, (:(:), 1, :largs)), (:block,
                (:line, 967, :none),
                (:(=), :ai, (:ref, :args, :i)),
                (:line, 968, :none),
                (:if, (:||, (:call, :!, (:call, :isa, :ai, :Const)), (:call, :!, (:call, :isa, (:., :ai, (:quote, #QuoteNode
                            :val
                          )), :Type))), (:block,
                    (:line, 969, :none),
                    (:if, (:call, :!, (:call, :isType, :ai)), (:block,
                        (:line, 970, :none),
                        (:return, :Any)
                      ))
                  ))
              )),
            (:line, 974, :none),
            (:(=), :ty, (:curly, :Union)),
            (:line, 975, :none),
            (:(=), :allconst, true),
            (:line, 976, :none),
            (:for, (:(=), :i, (:(:), 1, :largs)), (:block,
                (:line, 977, :none),
                (:(=), :ai, (:ref, :args, :i)),
                (:line, 978, :none),
                (:if, (:call, :isType, :ai), (:block,
                    (:line, 979, :none),
                    (:(=), :aty, (:ref, (:., :ai, (:quote, #QuoteNode
                            :parameters
                          )), 1)),
                    (:line, 980, :none),
                    (:||, (:call, :isleaftype, :aty), (:(=), :allconst, false))
                  ), (:block,
                    (:line, 982, :none),
                    (:(=), :aty, (:., (:(::), :ai, :Const), (:quote, #QuoteNode
                          :val
                        )))
                  )),
                (:line, 984, :none),
                (:(=), :ty, (:curly, :Union, :ty, :aty))
              )),
            (:line, 986, :none),
            (:return, (:if, :allconst, (:call, :Const, :ty), (:curly, :Type, :ty)))
          )),
        (:line, 988, :none),
        (:(=), :istuple, (:call, :(==), :headtype, :Tuple)),
        (:line, 989, :none),
        (:if, (:&&, (:call, :!, :istuple), (:call, :!, (:call, :isa, :headtype, :UnionAll))), (:block,
            (:line, 991, :none),
            (:return, :Any)
          )),
        (:line, 993, :none),
        (:(=), :uncertain, false),
        (:line, 994, :none),
        (:(=), :canconst, true),
        (:line, 995, :none),
        (:(=), :tparams, (:ref, :Any)),
        (:line, 996, :none),
        (:(=), :outervars, (:ref, :Any)),
        (:line, 997, :none),
        (:for, (:(=), :i, (:(:), 1, :largs)), (:block,
            (:line, 998, :none),
            (:(=), :ai, (:ref, :args, :i)),
            (:line, 999, :none),
            (:if, (:call, :isType, :ai), (:block,
                (:line, 1000, :none),
                (:(=), :aip1, (:ref, (:., :ai, (:quote, #QuoteNode
                        :parameters
                      )), 1)),
                (:line, 1001, :none),
                (:&=, :canconst, (:call, :!, (:call, :has_free_typevars, :aip1))),
                (:line, 1002, :none),
                (:call, :push!, :tparams, :aip1)
              ), (:block,
                (:line, 1003, :none),
                (:if, (:&&, (:call, :isa, :ai, :Const), (:||, (:call, :isa, (:., :ai, (:quote, #QuoteNode
                            :val
                          )), :Type), (:||, (:call, :isa, (:., :ai, (:quote, #QuoteNode
                              :val
                            )), :TypeVar), (:call, :valid_tparam, (:., :ai, (:quote, #QuoteNode
                              :val
                            )))))), (:block,
                    (:line, 1004, :none),
                    (:call, :push!, :tparams, (:., :ai, (:quote, #QuoteNode
                          :val
                        )))
                  ), (:block,
                    (:line, 1005, :none),
                    (:if, (:call, :isa, :ai, :PartialTypeVar), (:block,
                        (:line, 1006, :none),
                        (:(=), :canconst, false),
                        (:line, 1007, :none),
                        (:call, :push!, :tparams, (:., :ai, (:quote, #QuoteNode
                              :tv
                            )))
                      ), (:block,
                        (:line, 1010, :none),
                        (:(=), :uncertain, true),
                        (:line, 1019, :none),
                        (:if, :istuple, (:block,
                            (:line, 1020, :none),
                            (:if, (:call, :(==), :i, :largs), (:block,
                                (:line, 1021, :none),
                                (:call, :push!, :tparams, :Vararg)
                              ), (:block,
                                (:line, 1026, :none),
                                (:call, :push!, :tparams, :Any)
                              ))
                          ), (:block,
                            (:line, 1036, :none),
                            (:(=), :v, (:call, :TypeVar, (:quote, #QuoteNode
                                  :_
                                ))),
                            (:line, 1037, :none),
                            (:call, :push!, :tparams, :v),
                            (:line, 1038, :none),
                            (:call, :push!, :outervars, :v)
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 1042, :none),
        (:local, :appl),
        (:line, 1043, :none),
        (:try, (:block,
            (:line, 1044, :none),
            (:(=), :appl, (:call, :apply_type, :headtype, (:..., :tparams)))
          ), :ex, (:block,
            (:line, 1048, :none),
            (:return, (:curly, :Type, (:<:, :headtype)))
          )),
        (:line, 1050, :none),
        (:&&, (:call, :!, :uncertain), (:&&, :canconst, (:return, (:call, :Const, :appl)))),
        (:line, 1051, :none),
        (:if, (:call, :isvarargtype, :headtype), (:block,
            (:line, 1052, :none),
            (:return, :Type)
          )),
        (:line, 1054, :none),
        (:if, (:&&, :uncertain, (:call, :type_too_complex, :appl, 0)), (:block,
            (:line, 1055, :none),
            (:return, (:curly, :Type, (:<:, :headtype)))
          )),
        (:line, 1057, :none),
        (:if, :istuple, (:block,
            (:line, 1058, :none),
            (:return, (:curly, :Type, (:<:, :appl)))
          )),
        (:line, 1060, :none),
        (:(=), :ans, (:curly, :Type, :appl)),
        (:line, 1061, :none),
        (:for, (:(=), :i, (:(:), (:call, :length, :outervars), -1, 1)), (:block,
            (:line, 1062, :none),
            (:(=), :ans, (:call, :UnionAll, (:ref, :outervars, :i), :ans))
          )),
        (:line, 1064, :none),
        (:return, :ans)
      )),
    (:line, 1066, :none),
    (:call, :add_tfunc, :apply_type, 1, :IInf, :apply_type_tfunc),
    (:line, 1068, :none),
    (:macrocall, Symbol("@pure"), (:function, (:call, :type_typeof, (:(::), :v, :ANY)), (:block,
          (:line, 1069, :none),
          (:if, (:call, :isa, :v, :Type), (:block,
              (:line, 1070, :none),
              (:return, (:curly, :Type, :v))
            )),
          (:line, 1072, :none),
          (:return, (:call, :typeof, :v))
        ))),
    (:line, 1075, :none),
    (:function, (:call, :invoke_tfunc, (:(::), :f, :ANY), (:(::), :types, :ANY), (:(::), :argtype, :ANY), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1076, :none),
        (:if, (:call, :!, (:call, :isleaftype, (:curly, :Type, :types))), (:block,
            (:line, 1077, :none),
            (:return, :Any)
          )),
        (:line, 1079, :none),
        (:(=), :argtype, (:call, :typeintersect, :types, (:call, :limit_tuple_type, :argtype, (:., :sv, (:quote, #QuoteNode
                  :params
                ))))),
        (:line, 1080, :none),
        (:if, (:call, :(===), :argtype, :Bottom), (:block,
            (:line, 1081, :none),
            (:return, :Bottom)
          )),
        (:line, 1083, :none),
        (:(=), :ft, (:call, :type_typeof, :f)),
        (:line, 1084, :none),
        (:(=), :types, (:curly, :Tuple, :ft, (:..., (:., :types, (:quote, #QuoteNode
                  :parameters
                ))))),
        (:line, 1085, :none),
        (:(=), :argtype, (:curly, :Tuple, :ft, (:..., (:., :argtype, (:quote, #QuoteNode
                  :parameters
                ))))),
        (:line, 1086, :none),
        (:(=), :entry, (:call, :ccall, (:quote, #QuoteNode
              :jl_gf_invoke_lookup
            ), :Any, (:tuple, :Any, :UInt), :types, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :world
              )))),
        (:line, 1087, :none),
        (:if, (:call, :(===), :entry, :nothing), (:block,
            (:line, 1088, :none),
            (:return, :Any)
          )),
        (:line, 1090, :none),
        (:(=), :meth, (:., :entry, (:quote, #QuoteNode
              :func
            ))),
        (:line, 1091, :none),
        (:(=), (:tuple, :ti, :env), (:call, :ccall, (:quote, #QuoteNode
              :jl_match_method
            ), (:curly, :Ref, :SimpleVector), (:tuple, :Any, :Any), :argtype, (:., :meth, (:quote, #QuoteNode
                :sig
              )))),
        (:line, 1093, :none),
        (:return, (:call, :typeinf_edge, (:(::), :meth, :Method), :ti, :env, :sv))
      )),
    (:line, 1096, :none),
    (:function, (:call, :tuple_tfunc, (:(::), :argtype, :ANY)), (:block,
        (:line, 1097, :none),
        (:if, (:&&, (:call, :isa, :argtype, :DataType), (:call, :(===), (:., :argtype, (:quote, #QuoteNode
                  :name
                )), (:., :Tuple, (:quote, #QuoteNode
                  :name
                )))), (:block,
            (:line, 1098, :none),
            (:(=), :p, (:typed_comprehension, :Any, (:generator, (:if, (:&&, (:call, :isType, :x), (:call, :!, (:call, :isa, (:ref, (:., :x, (:quote, #QuoteNode
                                :parameters
                              )), 1), :TypeVar))), (:call, :typeof, (:ref, (:., :x, (:quote, #QuoteNode
                            :parameters
                          )), 1)), :x), (:(=), :x, (:., :argtype, (:quote, #QuoteNode
                        :parameters
                      )))))),
            (:line, 1100, :none),
            (:(=), :t, (:curly, :Tuple, (:..., :p))),
            (:line, 1102, :none),
            (:&&, (:call, :isdefined, :t, (:quote, #QuoteNode
                  :instance
                )), (:return, (:call, :Const, (:., :t, (:quote, #QuoteNode
                      :instance
                    ))))),
            (:line, 1103, :none),
            (:return, :t)
          )),
        (:line, 1105, :none),
        (:return, :argtype)
      )),
    (:line, 1108, :none),
    (:function, (:call, :builtin_tfunction, (:(::), :f, :ANY), (:(::), :argtypes, (:curly, :Array, :Any, 1)), (:(::), :sv, (:curly, :Union, :InferenceState, :Void)), (:kw, (:(::), :params, :InferenceParams), (:., :sv, (:quote, #QuoteNode
              :params
            )))), (:block,
        (:line, 1110, :none),
        (:(=), :isva, (:&&, (:call, :!, (:call, :isempty, :argtypes)), (:call, :isvarargtype, (:ref, :argtypes, :end)))),
        (:line, 1111, :none),
        (:if, (:call, :(===), :f, :tuple), (:block,
            (:line, 1112, :none),
            (:for, (:(=), :a, :argtypes), (:block,
                (:line, 1113, :none),
                (:if, (:call, :!, (:call, :isa, :a, :Const)), (:block,
                    (:line, 1114, :none),
                    (:return, (:call, :tuple_tfunc, (:call, :limit_tuple_depth, :params, (:call, :argtypes_to_type, :argtypes))))
                  ))
              )),
            (:line, 1117, :none),
            (:return, (:call, :Const, (:call, :tuple, (:..., (:call, :anymap, (:->, :a, (:block,
                          (:line, 1117, :none),
                          (:., :a, (:quote, #QuoteNode
                              :val
                            ))
                        )), :argtypes)))))
          ), (:block,
            (:line, 1118, :none),
            (:if, (:call, :(===), :f, :svec), (:block,
                (:line, 1119, :none),
                (:return, :SimpleVector)
              ), (:block,
                (:line, 1120, :none),
                (:if, (:call, :(===), :f, :arrayset), (:block,
                    (:line, 1121, :none),
                    (:if, (:&&, (:call, :<, (:call, :length, :argtypes), 3), (:call, :!, :isva)), (:block,
                        (:line, 1122, :none),
                        (:return, :Bottom)
                      )),
                    (:line, 1124, :none),
                    (:(=), :a1, (:ref, :argtypes, 1)),
                    (:line, 1125, :none),
                    (:if, (:call, :isvarargtype, :a1), (:block,
                        (:line, 1126, :none),
                        (:return, (:ref, (:., (:call, :unwrap_unionall, :a1), (:quote, #QuoteNode
                                :parameters
                              )), 1))
                      )),
                    (:line, 1128, :none),
                    (:return, :a1)
                  ), (:block,
                    (:line, 1129, :none),
                    (:if, (:call, :(===), :f, :arrayref), (:block,
                        (:line, 1130, :none),
                        (:if, (:&&, (:call, :<, (:call, :length, :argtypes), 2), (:call, :!, :isva)), (:block,
                            (:line, 1131, :none),
                            (:return, :Bottom)
                          )),
                        (:line, 1133, :none),
                        (:(=), :a, (:call, :widenconst, (:ref, :argtypes, 1))),
                        (:line, 1134, :none),
                        (:if, (:<:, :a, :Array), (:block,
                            (:line, 1135, :none),
                            (:if, (:&&, (:call, :isa, :a, :DataType), (:||, (:call, :isa, (:ref, (:., :a, (:quote, #QuoteNode
                                          :parameters
                                        )), 1), :Type), (:call, :isa, (:ref, (:., :a, (:quote, #QuoteNode
                                          :parameters
                                        )), 1), :TypeVar))), (:block,
                                (:line, 1137, :none),
                                (:(=), :a, (:ref, (:., :a, (:quote, #QuoteNode
                                        :parameters
                                      )), 1)),
                                (:line, 1138, :none),
                                (:return, (:if, (:call, :isa, :a, :TypeVar), (:., :a, (:quote, #QuoteNode
                                        :ub
                                      )), :a))
                              ), (:block,
                                (:line, 1139, :none),
                                (:if, (:&&, (:call, :isa, :a, :UnionAll), (:call, :!, (:call, :has_free_typevars, :a))), (:block,
                                    (:line, 1140, :none),
                                    (:(=), :unw, (:call, :unwrap_unionall, :a)),
                                    (:line, 1141, :none),
                                    (:if, (:call, :isa, :unw, :DataType), (:block,
                                        (:line, 1142, :none),
                                        (:return, (:call, :rewrap_unionall, (:ref, (:., :unw, (:quote, #QuoteNode
                                                  :parameters
                                                )), 1), :a))
                                      ))
                                  ))
                              ))
                          )),
                        (:line, 1146, :none),
                        (:return, :Any)
                      ), (:block,
                        (:line, 1147, :none),
                        (:if, (:call, :(===), :f, :Expr), (:block,
                            (:line, 1148, :none),
                            (:if, (:&&, (:call, :<, (:call, :length, :argtypes), 1), (:call, :!, :isva)), (:block,
                                (:line, 1149, :none),
                                (:return, :Bottom)
                              )),
                            (:line, 1151, :none),
                            (:return, :Expr)
                          ), (:block,
                            (:line, 1152, :none),
                            (:if, (:call, :(===), :f, :invoke), (:block,
                                (:line, 1153, :none),
                                (:if, (:&&, (:call, :>, (:call, :length, :argtypes), 1), (:call, :isa, (:ref, :argtypes, 1), :Const)), (:block,
                                    (:line, 1154, :none),
                                    (:(=), :af, (:., (:ref, :argtypes, 1), (:quote, #QuoteNode
                                          :val
                                        ))),
                                    (:line, 1155, :none),
                                    (:(=), :sig, (:ref, :argtypes, 2)),
                                    (:line, 1156, :none),
                                    (:if, (:call, :isa, :sig, :Const), (:block,
                                        (:line, 1157, :none),
                                        (:(=), :sigty, (:., :sig, (:quote, #QuoteNode
                                              :val
                                            )))
                                      ), (:block,
                                        (:line, 1158, :none),
                                        (:if, (:call, :isType, :sig), (:block,
                                            (:line, 1159, :none),
                                            (:(=), :sigty, (:ref, (:., :sig, (:quote, #QuoteNode
                                                    :parameters
                                                  )), 1))
                                          ), (:block,
                                            (:line, 1161, :none),
                                            (:(=), :sigty, :nothing)
                                          ))
                                      )),
                                    (:line, 1163, :none),
                                    (:if, (:&&, (:call, :isa, :sigty, :Type), (:&&, (:<:, :sigty, :Tuple), (:call, :(!==), :sv, :nothing))), (:block,
                                        (:line, 1164, :none),
                                        (:return, (:call, :invoke_tfunc, :af, :sigty, (:call, :argtypes_to_type, (:ref, :argtypes, (:(:), 3, :end))), :sv))
                                      ))
                                  )),
                                (:line, 1167, :none),
                                (:return, :Any)
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 1169, :none),
        (:if, :isva, (:block,
            (:line, 1170, :none),
            (:return, :Any)
          )),
        (:line, 1172, :none),
        (:if, (:call, :isa, :f, :IntrinsicFunction), (:block,
            (:line, 1173, :none),
            (:(=), :iidx, (:call, :+, (:call, :Int, (:call, :reinterpret, :Int32, (:(::), :f, :IntrinsicFunction))), 1)),
            (:line, 1174, :none),
            (:if, (:call, :!, (:call, :isassigned, :t_ifunc, :iidx)), (:block,
                (:line, 1176, :none),
                (:return, :Any)
              )),
            (:line, 1178, :none),
            (:(=), :tf, (:ref, :t_ifunc, :iidx))
          ), (:block,
            (:line, 1180, :none),
            (:(=), :fidx, (:call, :findfirst, :t_ffunc_key, (:(::), :f, :Function))),
            (:line, 1181, :none),
            (:if, (:call, :(==), :fidx, 0), (:block,
                (:line, 1183, :none),
                (:return, :Any)
              )),
            (:line, 1185, :none),
            (:(=), :tf, (:ref, :t_ffunc_val, :fidx))
          )),
        (:line, 1187, :none),
        (:(=), :tf, (:(::), :tf, (:curly, :Tuple, :Real, :Real, :Any))),
        (:line, 1188, :none),
        (:if, (:call, :!, (:comparison, (:ref, :tf, 1), :(<=), (:call, :length, :argtypes), :(<=), (:ref, :tf, 2))), (:block,
            (:line, 1190, :none),
            (:return, :Bottom)
          )),
        (:line, 1192, :none),
        (:return, (:call, (:ref, :tf, 3), (:..., :argtypes)))
      )),
    (:line, 1195, :none),
    (:(=), (:call, :limit_tuple_depth, (:(::), :params, :InferenceParams), (:(::), :t, :ANY)), (:block,
        (:line, 1195, :none),
        (:call, :limit_tuple_depth_, :params, :t, 0)
      )),
    (:line, 1197, :none),
    (:function, (:call, :limit_tuple_depth_, (:(::), :params, :InferenceParams), (:(::), :t, :ANY), (:(::), :d, :Int)), (:block,
        (:line, 1198, :none),
        (:if, (:call, :isa, :t, :Union), (:block,
            (:line, 1201, :none),
            (:return, (:curly, :Union, (:call, :limit_tuple_depth_, :params, (:., :t, (:quote, #QuoteNode
                      :a
                    )), (:call, :+, :d, 1)), (:call, :limit_tuple_depth_, :params, (:., :t, (:quote, #QuoteNode
                      :b
                    )), (:call, :+, :d, 1))))
          ), (:block,
            (:line, 1203, :none),
            (:if, (:call, :isa, :t, :UnionAll), (:block,
                (:line, 1204, :none),
                (:(=), :ub, (:call, :limit_tuple_depth_, :params, (:., (:., :t, (:quote, #QuoteNode
                          :var
                        )), (:quote, #QuoteNode
                        :ub
                      )), :d)),
                (:line, 1205, :none),
                (:if, (:call, :(!==), :ub, (:., (:., :t, (:quote, #QuoteNode
                          :var
                        )), (:quote, #QuoteNode
                        :ub
                      ))), (:block,
                    (:line, 1206, :none),
                    (:(=), :var, (:call, :TypeVar, (:., (:., :t, (:quote, #QuoteNode
                              :var
                            )), (:quote, #QuoteNode
                            :name
                          )), (:., (:., :t, (:quote, #QuoteNode
                              :var
                            )), (:quote, #QuoteNode
                            :lb
                          )), :ub)),
                    (:line, 1207, :none),
                    (:(=), :body, (:curly, :t, :var))
                  ), (:block,
                    (:line, 1209, :none),
                    (:(=), :var, (:., :t, (:quote, #QuoteNode
                          :var
                        ))),
                    (:line, 1210, :none),
                    (:(=), :body, (:., :t, (:quote, #QuoteNode
                          :body
                        )))
                  )),
                (:line, 1212, :none),
                (:(=), :body, (:call, :limit_tuple_depth_, :params, :body, :d)),
                (:line, 1213, :none),
                (:return, (:call, :UnionAll, :var, :body))
              ), (:block,
                (:line, 1214, :none),
                (:if, (:call, :!, (:&&, (:call, :isa, :t, :DataType), (:call, :(===), (:., :t, (:quote, #QuoteNode
                            :name
                          )), (:., :Tuple, (:quote, #QuoteNode
                            :name
                          ))))), (:block,
                    (:line, 1215, :none),
                    (:return, :t)
                  ), (:block,
                    (:line, 1216, :none),
                    (:if, (:call, :>, :d, (:., :params, (:quote, #QuoteNode
                            :MAX_TUPLE_DEPTH
                          ))), (:block,
                        (:line, 1217, :none),
                        (:return, :Tuple)
                      ))
                  ))
              ))
          )),
        (:line, 1219, :none),
        (:(=), :p, (:call, :map, (:->, :x, (:block,
                (:line, 1219, :none),
                (:call, :limit_tuple_depth_, :params, :x, (:call, :+, :d, 1))
              )), (:., :t, (:quote, #QuoteNode
                :parameters
              )))),
        (:line, 1220, :none),
        (:curly, :Tuple, (:..., :p))
      )),
    (:line, 1223, :none),
    (:(=), :limit_tuple_type, (:->, (:tuple, (:(::), :t, :ANY), (:(::), :params, :InferenceParams)), (:block,
          (:line, 1223, :none),
          (:call, :limit_tuple_type_n, :t, (:., :params, (:quote, #QuoteNode
                :MAX_TUPLETYPE_LEN
              )))
        ))),
    (:line, 1225, :none),
    (:function, (:call, :limit_tuple_type_n, (:(::), :t, :ANY), (:(::), :lim, :Int)), (:block,
        (:line, 1226, :none),
        (:if, (:call, :isa, :t, :UnionAll), (:block,
            (:line, 1227, :none),
            (:return, (:call, :UnionAll, (:., :t, (:quote, #QuoteNode
                    :var
                  )), (:call, :limit_tuple_type_n, (:., :t, (:quote, #QuoteNode
                      :body
                    )), :lim)))
          )),
        (:line, 1229, :none),
        (:(=), :p, (:., :t, (:quote, #QuoteNode
              :parameters
            ))),
        (:line, 1230, :none),
        (:(=), :n, (:call, :length, :p)),
        (:line, 1231, :none),
        (:if, (:call, :>, :n, :lim), (:block,
            (:line, 1232, :none),
            (:(=), :tail, (:call, :reduce, :typejoin, :Bottom, (:ref, :Any, (:..., (:ref, :p, (:(:), :lim, (:call, :-, :n, 1)))), (:call, :unwrapva, (:ref, :p, :n))))),
            (:line, 1233, :none),
            (:return, (:curly, :Tuple, (:..., (:ref, :p, (:(:), 1, (:call, :-, :lim, 1)))), (:curly, :Vararg, :tail)))
          )),
        (:line, 1235, :none),
        (:return, :t)
      )),
    (:line, 1240, :none),
    (:function, (:call, :typesubtract, (:(::), :a, :ANY), (:(::), :b, :ANY)), (:block,
        (:line, 1241, :none),
        (:if, (:<:, :a, :b), (:block,
            (:line, 1242, :none),
            (:return, :Bottom)
          )),
        (:line, 1244, :none),
        (:if, (:call, :isa, :a, :Union), (:block,
            (:line, 1245, :none),
            (:return, (:curly, :Union, (:call, :typesubtract, (:., :a, (:quote, #QuoteNode
                      :a
                    )), :b), (:call, :typesubtract, (:., :a, (:quote, #QuoteNode
                      :b
                    )), :b)))
          )),
        (:line, 1248, :none),
        (:return, :a)
      )),
    (:line, 1253, :none),
    (:function, (:call, :abstract_call_gf_by_type, (:(::), :f, :ANY), (:(::), :atype, :ANY), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1254, :none),
        (:(=), :tm, (:call, :_topmod, :sv)),
        (:line, 1262, :none),
        (:(=), :argtype, (:call, :limit_tuple_type, :atype, (:., :sv, (:quote, #QuoteNode
                :params
              )))),
        (:line, 1263, :none),
        (:(=), :argtypes, (:., (:call, :unwrap_unionall, :argtype), (:quote, #QuoteNode
              :parameters
            ))),
        (:line, 1264, :none),
        (:(=), :ft, (:call, :unwrap_unionall, (:ref, :argtypes, 1))),
        (:line, 1265, :none),
        (:||, (:call, :isa, :ft, :DataType), (:return, :Any)),
        (:line, 1266, :none),
        (:(=), :ftname, (:., :ft, (:quote, #QuoteNode
              :name
            ))),
        (:line, 1267, :none),
        (:||, (:call, :isdefined, :ftname, (:quote, #QuoteNode
              :mt
            )), (:return, :Any)),
        (:line, 1268, :none),
        (:if, (:call, :(===), :ftname, :_Type_name), (:block,
            (:line, 1269, :none),
            (:(=), :tname, (:ref, (:., :ft, (:quote, #QuoteNode
                    :parameters
                  )), 1)),
            (:line, 1270, :none),
            (:if, (:call, :isa, :tname, :TypeVar), (:block,
                (:line, 1271, :none),
                (:(=), :tname, (:., :tname, (:quote, #QuoteNode
                      :ub
                    )))
              )),
            (:line, 1273, :none),
            (:(=), :tname, (:call, :unwrap_unionall, :tname)),
            (:line, 1274, :none),
            (:if, (:call, :!, (:call, :isa, :tname, :DataType)), (:block,
                (:line, 1277, :none),
                (:return, :Any)
              ))
          )),
        (:line, 1280, :none),
        (:(=), :min_valid, (:ref, :UInt, (:call, :typemin, :UInt))),
        (:line, 1281, :none),
        (:(=), :max_valid, (:ref, :UInt, (:call, :typemax, :UInt))),
        (:line, 1282, :none),
        (:(=), :applicable, (:call, :_methods_by_ftype, :argtype, 4, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :world
              )), :min_valid, :max_valid)),
        (:line, 1283, :none),
        (:(=), :rettype, :Bottom),
        (:line, 1284, :none),
        (:if, (:call, :(===), :applicable, false), (:block,
            (:line, 1286, :none),
            (:return, :Any)
          )),
        (:line, 1288, :none),
        (:(=), (:(::), :x, (:curly, :Array, :Any, 1)), :applicable),
        (:line, 1289, :none),
        (:(=), :fullmatch, false),
        (:line, 1290, :none),
        (:for, (:(=), (:(::), :m, :SimpleVector), :x), (:block,
            (:line, 1291, :none),
            (:(=), :sig, (:ref, :m, 1)),
            (:line, 1292, :none),
            (:(=), :sigtuple, (:(::), (:call, :unwrap_unionall, :sig), :DataType)),
            (:line, 1293, :none),
            (:(=), :method, (:(::), (:ref, :m, 3), :Method)),
            (:line, 1294, :none),
            (:(=), :sparams, (:(::), (:ref, :m, 2), :SimpleVector)),
            (:line, 1295, :none),
            (:(=), :recomputesvec, false),
            (:line, 1296, :none),
            (:if, (:&&, (:call, :!, :fullmatch), (:call, :typeseq, :sig, :argtype)), (:block,
                (:line, 1297, :none),
                (:(=), :fullmatch, true)
              )),
            (:line, 1301, :none),
            (:(=), :msig, (:call, :unwrap_unionall, (:., (:ref, :m, 3), (:quote, #QuoteNode
                    :sig
                  )))),
            (:line, 1302, :none),
            (:(=), :lsig, (:call, :length, (:., :msig, (:quote, #QuoteNode
                    :parameters
                  )))),
            (:line, 1303, :none),
            (:(=), :ls, (:call, :length, (:., :sigtuple, (:quote, #QuoteNode
                    :parameters
                  )))),
            (:line, 1304, :none),
            (:(=), :td, (:call, :type_depth, :sig)),
            (:line, 1306, :none),
            (:(=), :mightlimitlength, (:call, :>, :ls, (:call, :+, :lsig, 1))),
            (:line, 1307, :none),
            (:(=), :mightlimitdepth, (:call, :>, :td, 2)),
            (:line, 1309, :none),
            (:(=), :limitlength, false),
            (:line, 1310, :none),
            (:if, :mightlimitlength, (:block,
                (:line, 1311, :none),
                (:for, (:(=), (:tuple, :callee, :_), (:., :sv, (:quote, #QuoteNode
                        :edges
                      ))), (:block,
                    (:line, 1312, :none),
                    (:(=), :callee, (:(::), :callee, :InferenceState)),
                    (:line, 1313, :none),
                    (:if, (:&&, (:call, :(===), :method, (:., (:., :callee, (:quote, #QuoteNode
                                :linfo
                              )), (:quote, #QuoteNode
                              :def
                            ))), (:call, :>, :ls, (:call, :length, (:., (:call, :unwrap_unionall, (:., (:., :callee, (:quote, #QuoteNode
                                      :linfo
                                    )), (:quote, #QuoteNode
                                    :specTypes
                                  ))), (:quote, #QuoteNode
                                :parameters
                              ))))), (:block,
                        (:line, 1314, :none),
                        (:(=), :limitlength, true),
                        (:line, 1315, :none),
                        (:break,)
                      ))
                  ))
              )),
            (:line, 1321, :none),
            (:if, (:||, :mightlimitlength, :mightlimitdepth), (:block,
                (:line, 1323, :none),
                (:for, (:(=), :infstate, :active), (:block,
                    (:line, 1324, :none),
                    (:&&, (:call, :(===), :infstate, :nothing), (:continue,)),
                    (:line, 1325, :none),
                    (:(=), :infstate, (:(::), :infstate, :InferenceState)),
                    (:line, 1326, :none),
                    (:if, (:&&, (:call, :isdefined, (:., :infstate, (:quote, #QuoteNode
                              :linfo
                            )), (:quote, #QuoteNode
                            :def
                          )), (:call, :(===), :method, (:., (:., :infstate, (:quote, #QuoteNode
                                :linfo
                              )), (:quote, #QuoteNode
                              :def
                            )))), (:block,
                        (:line, 1327, :none),
                        (:if, (:&&, :mightlimitlength, (:call, :>, :ls, (:call, :length, (:., (:call, :unwrap_unionall, (:., (:., :infstate, (:quote, #QuoteNode
                                          :linfo
                                        )), (:quote, #QuoteNode
                                        :specTypes
                                      ))), (:quote, #QuoteNode
                                    :parameters
                                  ))))), (:block,
                            (:line, 1328, :none),
                            (:(=), :limitlength, true)
                          )),
                        (:line, 1330, :none),
                        (:if, (:&&, :mightlimitdepth, (:call, :>, :td, (:call, :type_depth, (:., (:., :infstate, (:quote, #QuoteNode
                                      :linfo
                                    )), (:quote, #QuoteNode
                                    :specTypes
                                  ))))), (:block,
                            (:line, 1332, :none),
                            (:if, (:call, :>, :td, :MAX_TYPE_DEPTH), (:block,
                                (:line, 1333, :none),
                                (:(=), :sig, (:call, :limit_type_depth, :sig, 0)),
                                (:line, 1334, :none),
                                (:(=), :sigtuple, (:call, :unwrap_unionall, :sig)),
                                (:line, 1335, :none),
                                (:(=), :recomputesvec, true),
                                (:line, 1336, :none),
                                (:break,)
                              ), (:block,
                                (:line, 1338, :none),
                                (:(=), (:tuple, :p1, :p2), (:tuple, (:., :sigtuple, (:quote, #QuoteNode
                                        :parameters
                                      )), (:., (:call, :unwrap_unionall, (:., (:., :infstate, (:quote, #QuoteNode
                                              :linfo
                                            )), (:quote, #QuoteNode
                                            :specTypes
                                          ))), (:quote, #QuoteNode
                                        :parameters
                                      )))),
                                (:line, 1339, :none),
                                (:if, (:call, :(==), (:call, :length, :p2), :ls), (:block,
                                    (:line, 1340, :none),
                                    (:(=), :limitdepth, false),
                                    (:line, 1341, :none),
                                    (:(=), :newsig, (:call, (:curly, :Vector, :Any), :ls)),
                                    (:line, 1342, :none),
                                    (:for, (:(=), :i, (:(:), 1, :ls)), (:block,
                                        (:line, 1343, :none),
                                        (:if, (:&&, (:<:, (:ref, :p1, :i), :Function), (:&&, (:call, :>, (:call, :type_depth, (:ref, :p1, :i)), (:call, :type_depth, (:ref, :p2, :i))), (:call, :isa, (:ref, :p1, :i), :DataType))), (:block,
                                            (:line, 1348, :none),
                                            (:(=), (:ref, :newsig, :i), (:., (:., (:ref, :p1, :i), (:quote, #QuoteNode
                                                    :name
                                                  )), (:quote, #QuoteNode
                                                  :wrapper
                                                ))),
                                            (:line, 1349, :none),
                                            (:(=), :limitdepth, true)
                                          ), (:block,
                                            (:line, 1351, :none),
                                            (:(=), (:ref, :newsig, :i), (:call, :limit_type_depth, (:ref, :p1, :i), 1))
                                          ))
                                      )),
                                    (:line, 1354, :none),
                                    (:if, :limitdepth, (:block,
                                        (:line, 1355, :none),
                                        (:(=), :sigtuple, (:curly, :Tuple, (:..., :newsig))),
                                        (:line, 1356, :none),
                                        (:(=), :sig, (:call, :rewrap_unionall, :sigtuple, :sig)),
                                        (:line, 1357, :none),
                                        (:(=), :recomputesvec, true),
                                        (:line, 1358, :none),
                                        (:break,)
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  ))
              )),
            (:line, 1370, :none),
            (:if, :limitlength, (:block,
                (:line, 1371, :none),
                (:if, (:call, :!, (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                        :promote_typeof
                      ))), (:block,
                    (:line, 1372, :none),
                    (:(=), :fst, (:ref, (:., :sigtuple, (:quote, #QuoteNode
                            :parameters
                          )), (:call, :+, :lsig, 1))),
                    (:line, 1373, :none),
                    (:(=), :allsame, true),
                    (:line, 1377, :none),
                    (:for, (:(=), :i, (:(:), (:call, :+, :lsig, 2), :ls)), (:block,
                        (:line, 1378, :none),
                        (:if, (:call, :(!=), (:ref, (:., :sigtuple, (:quote, #QuoteNode
                                  :parameters
                                )), :i), :fst), (:block,
                            (:line, 1379, :none),
                            (:(=), :allsame, false),
                            (:line, 1380, :none),
                            (:break,)
                          ))
                      )),
                    (:line, 1383, :none),
                    (:if, (:call, :!, :allsame), (:block,
                        (:line, 1384, :none),
                        (:(=), :sigtuple, (:call, :limit_tuple_type_n, :sigtuple, (:call, :+, :lsig, 1))),
                        (:line, 1385, :none),
                        (:(=), :sig, (:call, :rewrap_unionall, :sigtuple, :sig)),
                        (:line, 1386, :none),
                        (:(=), :recomputesvec, true)
                      ))
                  ))
              )),
            (:line, 1392, :none),
            (:if, (:&&, :recomputesvec, (:call, :!, (:call, :isempty, :sparams))), (:block,
                (:line, 1393, :none),
                (:(=), :recomputed, (:call, :ccall, (:quote, #QuoteNode
                      :jl_env_from_type_intersection
                    ), (:curly, :Ref, :SimpleVector), (:tuple, :Any, :Any), :sig, (:., :method, (:quote, #QuoteNode
                        :sig
                      )))),
                (:line, 1394, :none),
                (:(=), :sig, (:ref, :recomputed, 1)),
                (:line, 1395, :none),
                (:if, (:call, :!, (:call, :isa, (:call, :unwrap_unionall, :sig), :DataType)), (:block,
                    (:line, 1396, :none),
                    (:(=), :rettype, :Any),
                    (:line, 1397, :none),
                    (:break,)
                  )),
                (:line, 1399, :none),
                (:(=), :sparams, (:(::), (:ref, :recomputed, 2), :SimpleVector))
              )),
            (:line, 1401, :none),
            (:(=), :rt, (:call, :typeinf_edge, :method, :sig, :sparams, :sv)),
            (:line, 1402, :none),
            (:(=), :rettype, (:call, :tmerge, :rettype, :rt)),
            (:line, 1403, :none),
            (:if, (:call, :(===), :rettype, :Any), (:block,
                (:line, 1404, :none),
                (:break,)
              ))
          )),
        (:line, 1407, :none),
        (:if, (:call, :!, (:||, :fullmatch, (:call, :(===), :rettype, :Any))), (:block,
            (:line, 1410, :none),
            (:call, :add_mt_backedge, (:., :ftname, (:quote, #QuoteNode
                  :mt
                )), :argtype, :sv),
            (:line, 1411, :none),
            (:call, :update_valid_age!, (:ref, :min_valid, 1), (:ref, :max_valid, 1), :sv)
          )),
        (:line, 1413, :none),
        (:if, (:call, :isempty, :x), (:block,
            (:line, 1415, :none),
            (:return, :Any)
          )),
        (:line, 1418, :none),
        (:return, :rettype)
      )),
    (:line, 1422, :none),
    (:function, (:call, :abstract_evals_to_constant, (:(::), :ex, :ANY), (:(::), :c, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1423, :none),
        (:(=), :av, (:call, :abstract_eval, :ex, :vtypes, :sv)),
        (:line, 1424, :none),
        (:return, (:&&, (:call, :isa, :av, :Const), (:call, :(===), (:., :av, (:quote, #QuoteNode
                  :val
                )), :c)))
      )),
    (:line, 1432, :none),
    (:function, (:call, :precise_container_type, (:(::), :arg, :ANY), (:(::), :typ, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1433, :none),
        (:if, (:call, :isa, :typ, :Const), (:block,
            (:line, 1434, :none),
            (:(=), :val, (:., :typ, (:quote, #QuoteNode
                  :val
                ))),
            (:line, 1435, :none),
            (:if, (:||, (:call, :isa, :val, :SimpleVector), (:call, :isa, :val, :Tuple)), (:block,
                (:line, 1436, :none),
                (:return, (:typed_comprehension, :Any, (:generator, (:call, :abstract_eval_constant, :x), (:(=), :x, :val))))
              ))
          )),
        (:line, 1440, :none),
        (:(=), :tti0, (:call, :widenconst, :typ)),
        (:line, 1441, :none),
        (:(=), :tti, (:call, :unwrap_unionall, :tti0)),
        (:line, 1442, :none),
        (:if, (:&&, (:call, :isa, :arg, :Expr), (:&&, (:call, :(===), (:., :arg, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :call
                )), (:||, (:call, :abstract_evals_to_constant, (:ref, (:., :arg, (:quote, #QuoteNode
                        :args
                      )), 1), :svec, :vtypes, :sv), (:call, :abstract_evals_to_constant, (:ref, (:., :arg, (:quote, #QuoteNode
                        :args
                      )), 1), :tuple, :vtypes, :sv)))), (:block,
            (:line, 1444, :none),
            (:(=), :aa, (:., :arg, (:quote, #QuoteNode
                  :args
                ))),
            (:line, 1445, :none),
            (:(=), :result, (:typed_comprehension, :Any, (:generator, (:if, (:call, :isa, (:ref, :aa, :j), :Expr), (:., (:ref, :aa, :j), (:quote, #QuoteNode
                        :typ
                      )), (:call, :abstract_eval, (:ref, :aa, :j), :vtypes, :sv)), (:(=), :j, (:(:), 2, (:call, :length, :aa)))))),
            (:line, 1446, :none),
            (:if, (:call, :_any, :isvarargtype, :result), (:block,
                (:line, 1447, :none),
                (:return, (:ref, :Any, (:curly, :Vararg, :Any)))
              )),
            (:line, 1449, :none),
            (:return, :result)
          ), (:block,
            (:line, 1450, :none),
            (:if, (:call, :isa, :tti, :Union), (:block,
                (:line, 1451, :none),
                (:(=), :utis, (:call, :uniontypes, :tti)),
                (:line, 1452, :none),
                (:if, (:call, :_any, (:->, :t, (:block,
                        (:line, 1452, :none),
                        (:||, (:call, :!, (:call, :isa, :t, :DataType)), (:||, (:call, :!, (:<:, :t, :Tuple)), (:call, :!, (:call, :isknownlength, :t))))
                      )), :utis), (:block,
                    (:line, 1453, :none),
                    (:return, (:ref, :Any, (:curly, :Vararg, :Any)))
                  )),
                (:line, 1455, :none),
                (:(=), :result, (:typed_comprehension, :Any, (:generator, (:call, :rewrap_unionall, :p, :tti0), (:(=), :p, (:., (:ref, :utis, 1), (:quote, #QuoteNode
                            :parameters
                          )))))),
                (:line, 1456, :none),
                (:for, (:(=), :t, (:ref, :utis, (:(:), 2, :end))), (:block,
                    (:line, 1457, :none),
                    (:if, (:call, :(!=), (:call, :length, (:., :t, (:quote, #QuoteNode
                              :parameters
                            ))), (:call, :length, :result)), (:block,
                        (:line, 1458, :none),
                        (:return, (:ref, :Any, (:curly, :Vararg, :Any)))
                      )),
                    (:line, 1460, :none),
                    (:for, (:(=), :j, (:(:), 1, (:call, :length, (:., :t, (:quote, #QuoteNode
                                :parameters
                              ))))), (:block,
                        (:line, 1461, :none),
                        (:(=), (:ref, :result, :j), (:call, :tmerge, (:ref, :result, :j), (:call, :rewrap_unionall, (:ref, (:., :t, (:quote, #QuoteNode
                                    :parameters
                                  )), :j), :tti0)))
                      ))
                  )),
                (:line, 1464, :none),
                (:return, :result)
              ), (:block,
                (:line, 1465, :none),
                (:if, (:&&, (:call, :isa, :tti0, :DataType), (:<:, :tti0, :Tuple)), (:block,
                    (:line, 1466, :none),
                    (:if, (:&&, (:call, :isvatuple, :tti0), (:call, :(==), (:call, :length, (:., :tti0, (:quote, #QuoteNode
                                :parameters
                              ))), 1)), (:block,
                        (:line, 1467, :none),
                        (:return, (:ref, :Any, (:curly, :Vararg, (:call, :unwrapva, (:ref, (:., :tti0, (:quote, #QuoteNode
                                      :parameters
                                    )), 1)))))
                      ), (:block,
                        (:line, 1469, :none),
                        (:return, (:., :tti0, (:quote, #QuoteNode
                              :parameters
                            )))
                      ))
                  ), (:block,
                    (:line, 1471, :none),
                    (:if, (:<:, :tti0, :Array), (:block,
                        (:line, 1472, :none),
                        (:return, (:ref, :Any, (:curly, :Vararg, (:call, :eltype, :tti0))))
                      ), (:block,
                        (:line, 1474, :none),
                        (:return, (:ref, :Any, (:call, :abstract_iteration, :typ, :vtypes, :sv)))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 1479, :none),
    (:function, (:call, :abstract_iteration, (:(::), :itertype, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1480, :none),
        (:(=), :tm, (:call, :_topmod, :sv)),
        (:line, 1481, :none),
        (:if, (:||, (:call, :!, (:call, :isdefined, :tm, (:quote, #QuoteNode
                  :start
                ))), (:||, (:call, :!, (:call, :isdefined, :tm, (:quote, #QuoteNode
                    :next
                  ))), (:||, (:call, :!, (:call, :isconst, :tm, (:quote, #QuoteNode
                      :start
                    ))), (:call, :!, (:call, :isconst, :tm, (:quote, #QuoteNode
                      :next
                    )))))), (:block,
            (:line, 1482, :none),
            (:return, (:curly, :Vararg, :Any))
          )),
        (:line, 1484, :none),
        (:(=), :startf, (:call, :getfield, :tm, (:quote, #QuoteNode
              :start
            ))),
        (:line, 1485, :none),
        (:(=), :nextf, (:call, :getfield, :tm, (:quote, #QuoteNode
              :next
            ))),
        (:line, 1486, :none),
        (:(=), :statetype, (:call, :abstract_call, :startf, (:tuple,), (:ref, :Any, (:call, :Const, :startf), :itertype), :vtypes, :sv)),
        (:line, 1487, :none),
        (:&&, (:call, :(===), :statetype, :Bottom), (:return, :Bottom)),
        (:line, 1488, :none),
        (:(=), :valtype, :Bottom),
        (:line, 1489, :none),
        (:while, (:call, :(!==), :valtype, :Any), (:block,
            (:line, 1490, :none),
            (:(=), :nt, (:call, :abstract_call, :nextf, (:tuple,), (:ref, :Any, (:call, :Const, :nextf), :itertype, :statetype), :vtypes, :sv)),
            (:line, 1491, :none),
            (:(=), :nt, (:call, :widenconst, :nt)),
            (:line, 1492, :none),
            (:if, (:||, (:call, :!, (:call, :isa, :nt, :DataType)), (:||, (:call, :!, (:<:, :nt, :Tuple)), (:||, (:call, :isvatuple, :nt), (:call, :(!=), (:call, :length, (:., :nt, (:quote, #QuoteNode
                            :parameters
                          ))), 2)))), (:block,
                (:line, 1493, :none),
                (:return, (:curly, :Vararg, :Any))
              )),
            (:line, 1495, :none),
            (:if, (:&&, (:<:, (:ref, (:., :nt, (:quote, #QuoteNode
                        :parameters
                      )), 1), :valtype), (:<:, (:ref, (:., :nt, (:quote, #QuoteNode
                        :parameters
                      )), 2), :statetype)), (:block,
                (:line, 1496, :none),
                (:break,)
              )),
            (:line, 1498, :none),
            (:(=), :valtype, (:call, :tmerge, :valtype, (:ref, (:., :nt, (:quote, #QuoteNode
                      :parameters
                    )), 1))),
            (:line, 1499, :none),
            (:(=), :statetype, (:call, :tmerge, :statetype, (:ref, (:., :nt, (:quote, #QuoteNode
                      :parameters
                    )), 2)))
          )),
        (:line, 1501, :none),
        (:return, (:curly, :Vararg, :valtype))
      )),
    (:line, 1505, :none),
    (:function, (:call, :abstract_apply, (:(::), :af, :ANY), (:(::), :fargs, (:curly, :Vector, :Any)), (:(::), :aargtypes, (:curly, :Vector, :Any)), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1506, :none),
        (:(=), :res, (:curly, :Union)),
        (:line, 1507, :none),
        (:(=), :nargs, (:call, :length, :fargs)),
        (:line, 1508, :none),
        (:call, :assert, (:call, :(==), :nargs, (:call, :length, :aargtypes))),
        (:line, 1509, :none),
        (:(=), :splitunions, (:call, :(<=), (:call, :countunionsplit, :aargtypes), (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :MAX_APPLY_UNION_ENUM
              )))),
        (:line, 1510, :none),
        (:(=), :ctypes, (:ref, :Any, (:ref, :Any))),
        (:line, 1511, :none),
        (:for, (:(=), :i, (:(:), 1, :nargs)), (:block,
            (:line, 1512, :none),
            (:if, (:call, :(===), (:ref, :aargtypes, :i), :Any), (:block,
                (:line, 1517, :none),
                (:(=), :ctypes, (:ref, :Any, (:ref, :Any, (:curly, :Vararg, :Any)))),
                (:line, 1518, :none),
                (:break,)
              )),
            (:line, 1520, :none),
            (:(=), :ctypes´, (:vect,)),
            (:line, 1521, :none),
            (:for, (:(=), :ti, (:if, :splitunions, (:call, :uniontypes, (:ref, :aargtypes, :i)), (:ref, :Any, (:ref, :aargtypes, :i)))), (:block,
                (:line, 1522, :none),
                (:(=), :cti, (:call, :precise_container_type, (:ref, :fargs, :i), :ti, :vtypes, :sv)),
                (:line, 1523, :none),
                (:for, (:(=), :ct, :ctypes), (:block,
                    (:line, 1524, :none),
                    (:if, (:&&, (:call, :!, (:call, :isempty, :ct)), (:call, :isvarargtype, (:ref, :ct, :end))), (:block,
                        (:line, 1525, :none),
                        (:(=), :tail, (:call, :foldl, (:->, (:tuple, :a, :b), (:block,
                                (:line, 1525, :none),
                                (:call, :tmerge, :a, (:call, :unwrapva, :b))
                              )), (:call, :unwrapva, (:ref, :ct, :end)), :cti)),
                        (:line, 1526, :none),
                        (:call, :push!, :ctypes´, (:call, :push!, (:ref, :ct, (:(:), 1, (:call, :-, :end, 1))), (:curly, :Vararg, (:call, :widenconst, :tail))))
                      ), (:block,
                        (:line, 1528, :none),
                        (:call, :push!, :ctypes´, (:call, :append_any, :ct, :cti))
                      ))
                  ))
              )),
            (:line, 1532, :none),
            (:(=), :ctypes, :ctypes´)
          )),
        (:line, 1534, :none),
        (:for, (:(=), :ct, :ctypes), (:block,
            (:line, 1535, :none),
            (:if, (:call, :>, (:call, :length, :ct), (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :MAX_TUPLETYPE_LEN
                  ))), (:block,
                (:line, 1536, :none),
                (:(=), :tail, (:call, :foldl, (:->, (:tuple, :a, :b), (:block,
                        (:line, 1536, :none),
                        (:call, :tmerge, :a, (:call, :unwrapva, :b))
                      )), :Bottom, (:ref, :ct, (:(:), (:., (:., :sv, (:quote, #QuoteNode
                              :params
                            )), (:quote, #QuoteNode
                            :MAX_TUPLETYPE_LEN
                          )), :end)))),
                (:line, 1537, :none),
                (:call, :resize!, :ct, (:., (:., :sv, (:quote, #QuoteNode
                        :params
                      )), (:quote, #QuoteNode
                      :MAX_TUPLETYPE_LEN
                    ))),
                (:line, 1538, :none),
                (:(=), (:ref, :ct, :end), (:curly, :Vararg, (:call, :widenconst, :tail)))
              )),
            (:line, 1540, :none),
            (:(=), :at, (:call, :append_any, (:ref, :Any, (:call, :Const, :af)), :ct)),
            (:line, 1541, :none),
            (:(=), :res, (:call, :tmerge, :res, (:call, :abstract_call, :af, (:tuple,), :at, :vtypes, :sv))),
            (:line, 1542, :none),
            (:if, (:call, :(===), :res, :Any), (:block,
                (:line, 1543, :none),
                (:break,)
              ))
          )),
        (:line, 1546, :none),
        (:return, :res)
      )),
    (:line, 1549, :none),
    (:function, (:call, :return_type_tfunc, (:(::), :argtypes, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1550, :none),
        (:if, (:call, :(==), (:call, :length, :argtypes), 3), (:block,
            (:line, 1551, :none),
            (:(=), :tt, (:ref, :argtypes, 3)),
            (:line, 1552, :none),
            (:if, (:||, (:call, :isa, :tt, :Const), (:&&, (:call, :isType, :tt), (:call, :!, (:call, :has_free_typevars, :tt)))), (:block,
                (:line, 1553, :none),
                (:(=), :aft, (:ref, :argtypes, 2)),
                (:line, 1554, :none),
                (:if, (:||, (:call, :isa, :aft, :Const), (:||, (:&&, (:call, :isType, :aft), (:call, :!, (:call, :has_free_typevars, :aft))), (:&&, (:call, :isleaftype, :aft), (:call, :!, (:<:, :aft, :Builtin))))), (:block,
                    (:line, 1556, :none),
                    (:(=), :af_argtype, (:if, (:call, :isa, :tt, :Const), (:., :tt, (:quote, #QuoteNode
                            :val
                          )), (:ref, (:., :tt, (:quote, #QuoteNode
                              :parameters
                            )), 1))),
                    (:line, 1557, :none),
                    (:if, (:&&, (:call, :isa, :af_argtype, :DataType), (:<:, :af_argtype, :Tuple)), (:block,
                        (:line, 1558, :none),
                        (:(=), :argtypes_vec, (:ref, :Any, :aft, (:..., (:., :af_argtype, (:quote, #QuoteNode
                                  :parameters
                                ))))),
                        (:line, 1559, :none),
                        (:(=), :astype, (:call, :argtypes_to_type, :argtypes_vec)),
                        (:line, 1560, :none),
                        (:if, (:&&, (:call, :!, (:call, :⊑, :aft, :Builtin)), (:call, :(!==), (:call, :_methods_by_ftype, :astype, 0, (:., (:., :sv, (:quote, #QuoteNode
                                      :params
                                    )), (:quote, #QuoteNode
                                    :world
                                  )), (:ref, :UInt, (:call, :typemin, :UInt)), (:ref, :UInt, (:call, :typemax, :UInt))), false)), (:block,
                            (:line, 1565, :none),
                            (:return, (:call, :Const, :Bottom))
                          )),
                        (:line, 1567, :none),
                        (:if, (:call, :isa, :aft, :Const), (:block,
                            (:line, 1568, :none),
                            (:(=), :rt, (:call, :abstract_call, (:., :aft, (:quote, #QuoteNode
                                    :val
                                  )), (:tuple,), :argtypes_vec, :vtypes, :sv))
                          ), (:block,
                            (:line, 1569, :none),
                            (:if, (:call, :isconstType, :aft), (:block,
                                (:line, 1570, :none),
                                (:(=), :rt, (:call, :abstract_call, (:ref, (:., :aft, (:quote, #QuoteNode
                                          :parameters
                                        )), 1), (:tuple,), :argtypes_vec, :vtypes, :sv))
                              ), (:block,
                                (:line, 1572, :none),
                                (:(=), :rt, (:call, :abstract_call_gf_by_type, :nothing, :astype, :sv))
                              ))
                          )),
                        (:line, 1574, :none),
                        (:if, (:call, :isa, :rt, :Const), (:block,
                            (:line, 1576, :none),
                            (:return, (:call, :Const, (:call, :typeof, (:., :rt, (:quote, #QuoteNode
                                      :val
                                    )))))
                          ), (:block,
                            (:line, 1577, :none),
                            (:if, (:||, (:call, :isleaftype, :rt), (:call, :(===), :rt, :Bottom)), (:block,
                                (:line, 1579, :none),
                                (:return, (:call, :Const, :rt))
                              ), (:block,
                                (:line, 1580, :none),
                                (:if, (:&&, (:||, (:call, :isa, :tt, :Const), (:call, :isconstType, :tt)), (:||, (:call, :isa, :aft, :Const), (:call, :isconstType, :aft))), (:block,
                                    (:line, 1583, :none),
                                    (:return, (:call, :Const, :rt))
                                  ), (:block,
                                    (:line, 1585, :none),
                                    (:return, (:curly, :Type, (:<:, :rt)))
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 1591, :none),
        (:return, :NF)
      )),
    (:line, 1594, :none),
    (:function, (:call, :pure_eval_call, (:(::), :f, :ANY), (:(::), :argtypes, :ANY), (:(::), :atype, :ANY), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1595, :none),
        (:for, (:(=), :i, (:(:), 2, (:call, :length, :argtypes))), (:block,
            (:line, 1596, :none),
            (:(=), :a, (:ref, :argtypes, :i)),
            (:line, 1597, :none),
            (:if, (:call, :!, (:||, (:call, :isa, :a, :Const), (:call, :isconstType, :a))), (:block,
                (:line, 1598, :none),
                (:return, false)
              ))
          )),
        (:line, 1602, :none),
        (:(=), :min_valid, (:ref, :UInt, (:call, :typemin, :UInt))),
        (:line, 1603, :none),
        (:(=), :max_valid, (:ref, :UInt, (:call, :typemax, :UInt))),
        (:line, 1604, :none),
        (:(=), :meth, (:call, :_methods_by_ftype, :atype, 1, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :world
              )), :min_valid, :max_valid)),
        (:line, 1605, :none),
        (:if, (:||, (:call, :(===), :meth, false), (:call, :(!=), (:call, :length, :meth), 1)), (:block,
            (:line, 1606, :none),
            (:return, false)
          )),
        (:line, 1608, :none),
        (:(=), :meth, (:(::), (:ref, :meth, 1), :SimpleVector)),
        (:line, 1609, :none),
        (:(=), :method, (:(::), (:ref, :meth, 3), :Method)),
        (:line, 1611, :none),
        (:if, (:||, (:., :method, (:quote, #QuoteNode
                :isstaged
              )), (:call, :!, (:., :method, (:quote, #QuoteNode
                  :pure
                )))), (:block,
            (:line, 1612, :none),
            (:return, false)
          )),
        (:line, 1615, :none),
        (:(=), :args, (:typed_comprehension, :Any, (:generator, (:block,
                (:(=), :a, (:ref, :argtypes, :i)),
                (:if, (:call, :isa, :a, :Const), (:., :a, (:quote, #QuoteNode
                      :val
                    )), (:ref, (:., :a, (:quote, #QuoteNode
                        :parameters
                      )), 1))
              ), (:(=), :i, (:(:), 2, (:call, :length, :argtypes)))))),
        (:line, 1616, :none),
        (:try, (:block,
            (:line, 1617, :none),
            (:(=), :value, (:call, (:., :Core, (:quote, #QuoteNode
                    :_apply_pure
                  )), :f, :args)),
            (:line, 1619, :none),
            (:return, (:call, :Const, :value, true))
          ), false, (:block,
            (:line, 1621, :none),
            (:return, false)
          ))
      )),
    (:line, 1625, :none),
    (:(=), (:call, :argtypes_to_type, (:(::), :argtypes, (:curly, :Array, :Any, 1))), (:block,
        (:line, 1625, :none),
        (:curly, :Tuple, (:..., (:call, :anymap, :widenconst, :argtypes)))
      )),
    (:line, 1627, :none),
    (:(=), :_Pair_name, :nothing),
    (:line, 1628, :none),
    (:function, (:call, :Pair_name), (:block,
        (:line, 1629, :none),
        (:global, :_Pair_name),
        (:line, 1630, :none),
        (:if, (:call, :(===), :_Pair_name, :nothing), (:block,
            (:line, 1631, :none),
            (:if, (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                    :Base
                  )), (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                      :Base
                    )), (:quote, #QuoteNode
                    :Pair
                  ))), (:block,
                (:line, 1632, :none),
                (:(=), :_Pair_name, (:., (:., (:., (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :Pair
                          )), (:quote, #QuoteNode
                          :body
                        )), (:quote, #QuoteNode
                        :body
                      )), (:quote, #QuoteNode
                      :name
                    )))
              ))
          )),
        (:line, 1635, :none),
        (:return, :_Pair_name)
      )),
    (:line, 1638, :none),
    (:(=), (:call, :_typename, :a), (:block,
        (:line, 1638, :none),
        (:curly, :Union)
      )),
    (:line, 1639, :none),
    (:(=), (:call, :_typename, (:(::), :a, :Vararg)), (:block,
        (:line, 1639, :none),
        :Any
      )),
    (:line, 1640, :none),
    (:(=), (:call, :_typename, (:(::), :a, :TypeVar)), (:block,
        (:line, 1640, :none),
        :Any
      )),
    (:line, 1641, :none),
    (:(=), (:call, :_typename, (:(::), :a, :DataType)), (:block,
        (:line, 1641, :none),
        (:call, :Const, (:., :a, (:quote, #QuoteNode
              :name
            )))
      )),
    (:line, 1642, :none),
    (:function, (:call, :_typename, (:(::), :a, :Union)), (:block,
        (:line, 1643, :none),
        (:(=), :ta, (:call, :_typename, (:., :a, (:quote, #QuoteNode
                :a
              )))),
        (:line, 1644, :none),
        (:(=), :tb, (:call, :_typename, (:., :a, (:quote, #QuoteNode
                :b
              )))),
        (:line, 1645, :none),
        (:if, (:call, :(===), :ta, :tb), :tb, (:if, (:||, (:call, :(===), :ta, :Any), (:call, :(===), :tb, :Any)), :Any, (:curly, :Union)))
      )),
    (:line, 1647, :none),
    (:(=), (:call, :_typename, (:(::), :union, :UnionAll)), (:block,
        (:line, 1647, :none),
        (:call, :_typename, (:., :union, (:quote, #QuoteNode
              :body
            )))
      )),
    (:line, 1650, :none),
    (:(=), (:call, :typename_static, (:(::), :t, :Const)), (:block,
        (:line, 1650, :none),
        (:call, :_typename, (:., :t, (:quote, #QuoteNode
              :val
            )))
      )),
    (:line, 1651, :none),
    (:(=), (:call, :typename_static, (:(::), :t, :ANY)), (:block,
        (:line, 1651, :none),
        (:if, (:call, :isType, :t), (:call, :_typename, (:ref, (:., :t, (:quote, #QuoteNode
                  :parameters
                )), 1)), :Any)
      )),
    (:line, 1653, :none),
    (:function, (:call, :abstract_call, (:(::), :f, :ANY), (:(::), :fargs, (:curly, :Union, (:curly, :Tuple), (:curly, :Vector, :Any))), (:(::), :argtypes, (:curly, :Vector, :Any)), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1654, :none),
        (:if, (:call, :(===), :f, :_apply), (:block,
            (:line, 1655, :none),
            (:||, (:call, :>, (:call, :length, :fargs), 1), (:return, :Any)),
            (:line, 1656, :none),
            (:(=), :aft, (:ref, :argtypes, 2)),
            (:line, 1657, :none),
            (:if, (:call, :isa, :aft, :Const), (:block,
                (:line, 1658, :none),
                (:(=), :af, (:., :aft, (:quote, #QuoteNode
                      :val
                    )))
              ), (:block,
                (:line, 1660, :none),
                (:if, (:&&, (:call, :isType, :aft), (:call, :isleaftype, (:ref, (:., :aft, (:quote, #QuoteNode
                            :parameters
                          )), 1))), (:block,
                    (:line, 1661, :none),
                    (:(=), :af, (:ref, (:., :aft, (:quote, #QuoteNode
                            :parameters
                          )), 1))
                  ), (:block,
                    (:line, 1662, :none),
                    (:if, (:&&, (:call, :isleaftype, :aft), (:call, :isdefined, :aft, (:quote, #QuoteNode
                            :instance
                          ))), (:block,
                        (:line, 1663, :none),
                        (:(=), :af, (:., :aft, (:quote, #QuoteNode
                              :instance
                            )))
                      ), (:block,
                        (:line, 1666, :none),
                        (:return, :Any)
                      ))
                  ))
              )),
            (:line, 1669, :none),
            (:return, (:call, :abstract_apply, :af, (:ref, :fargs, (:(:), 3, :end)), (:ref, :argtypes, (:(:), 3, :end)), :vtypes, :sv))
          )),
        (:line, 1672, :none),
        (:(=), :la, (:call, :length, :argtypes)),
        (:line, 1673, :none),
        (:for, (:(=), :i, (:(:), 2, (:call, :-, :la, 1))), (:block,
            (:line, 1674, :none),
            (:if, (:call, :isvarargtype, (:ref, :argtypes, :i)), (:block,
                (:line, 1675, :none),
                (:return, :Any)
              ))
          )),
        (:line, 1679, :none),
        (:(=), :tm, (:call, :_topmod, :sv)),
        (:line, 1680, :none),
        (:if, (:||, (:call, :isa, :f, :Builtin), (:call, :isa, :f, :IntrinsicFunction)), (:block,
            (:line, 1681, :none),
            (:(=), :rt, (:call, :builtin_tfunction, :f, (:ref, :argtypes, (:(:), 2, :end)), :sv)),
            (:line, 1682, :none),
            (:if, (:&&, (:call, :(===), :rt, :Bool), (:call, :isa, :fargs, (:curly, :Vector, :Any))), (:block,
                (:line, 1684, :none),
                (:if, (:call, :(===), :f, :isa), (:block,
                    (:line, 1685, :none),
                    (:(=), :a, (:ref, :fargs, 2)),
                    (:line, 1686, :none),
                    (:if, (:call, :isa, :a, (:call, :fieldtype, :Conditional, (:quote, #QuoteNode
                            :var
                          ))), (:block,
                        (:line, 1687, :none),
                        (:(=), :aty, (:call, :widenconst, (:ref, :argtypes, 2))),
                        (:line, 1688, :none),
                        (:(=), :tty, (:call, :instanceof_tfunc, (:ref, :argtypes, 3))),
                        (:line, 1689, :none),
                        (:if, (:&&, (:call, :(!==), :tty, :Any), (:call, :(!==), :tty, :Bottom)), (:block,
                            (:line, 1690, :none),
                            (:if, (:call, :isa, :tty, :TypeVar), (:block,
                                (:line, 1691, :none),
                                (:(=), :tty_ub, (:., :tty, (:quote, #QuoteNode
                                      :ub
                                    ))),
                                (:line, 1692, :none),
                                (:(=), :tty_lb, (:., :tty, (:quote, #QuoteNode
                                      :lb
                                    )))
                              ), (:block,
                                (:line, 1694, :none),
                                (:(=), :tty_ub, (:(=), :tty_lb, :tty))
                              )),
                            (:line, 1696, :none),
                            (:if, (:&&, (:call, :!, (:call, :has_free_typevars, :tty_lb)), (:call, :!, (:call, :has_free_typevars, :tty_ub))), (:block,
                                (:line, 1697, :none),
                                (:(=), :ifty, (:call, :typeintersect, :aty, :tty_ub)),
                                (:line, 1698, :none),
                                (:(=), :elsety, (:call, :typesubtract, :aty, :tty_lb)),
                                (:line, 1699, :none),
                                (:if, (:call, :(!=), :ifty, :elsety), (:block,
                                    (:line, 1700, :none),
                                    (:return, (:call, :Conditional, :a, :ifty, :elsety))
                                  ))
                              ))
                          )),
                        (:line, 1704, :none),
                        (:return, :Bool)
                      ))
                  ), (:block,
                    (:line, 1706, :none),
                    (:if, (:call, :(===), :f, :(===)), (:block,
                        (:line, 1707, :none),
                        (:(=), :a, (:ref, :fargs, 2)),
                        (:line, 1708, :none),
                        (:(=), :b, (:ref, :fargs, 3)),
                        (:line, 1709, :none),
                        (:(=), :aty, (:ref, :argtypes, 2)),
                        (:line, 1710, :none),
                        (:(=), :bty, (:ref, :argtypes, 3)),
                        (:line, 1712, :none),
                        (:if, (:&&, (:call, :isa, :aty, :Const), (:call, :isa, :b, (:call, :fieldtype, :Conditional, (:quote, #QuoteNode
                                  :var
                                )))), (:block,
                            (:line, 1713, :none),
                            (:if, (:call, :isdefined, (:call, :typeof, (:., :aty, (:quote, #QuoteNode
                                      :val
                                    ))), (:quote, #QuoteNode
                                  :instance
                                )), (:block,
                                (:line, 1714, :none),
                                (:return, (:call, :Conditional, :b, :aty, (:call, :typesubtract, (:call, :widenconst, :bty), (:call, :typeof, (:., :aty, (:quote, #QuoteNode
                                            :val
                                          ))))))
                              )),
                            (:line, 1716, :none),
                            (:return, (:call, :Conditional, :b, :aty, :bty))
                          )),
                        (:line, 1718, :none),
                        (:if, (:&&, (:call, :isa, :bty, :Const), (:call, :isa, :a, (:call, :fieldtype, :Conditional, (:quote, #QuoteNode
                                  :var
                                )))), (:block,
                            (:line, 1719, :none),
                            (:if, (:call, :isdefined, (:call, :typeof, (:., :bty, (:quote, #QuoteNode
                                      :val
                                    ))), (:quote, #QuoteNode
                                  :instance
                                )), (:block,
                                (:line, 1720, :none),
                                (:return, (:call, :Conditional, :a, :bty, (:call, :typesubtract, (:call, :widenconst, :aty), (:call, :typeof, (:., :bty, (:quote, #QuoteNode
                                            :val
                                          ))))))
                              )),
                            (:line, 1722, :none),
                            (:return, (:call, :Conditional, :a, :bty, :aty))
                          ))
                      ))
                  ))
              )),
            (:line, 1726, :none),
            (:return, (:if, (:call, :isa, :rt, :TypeVar), (:., :rt, (:quote, #QuoteNode
                    :ub
                  )), :rt))
          ), (:block,
            (:line, 1727, :none),
            (:if, (:call, :(===), :f, (:., :Core, (:quote, #QuoteNode
                    :kwfunc
                  ))), (:block,
                (:line, 1728, :none),
                (:if, (:call, :(==), (:call, :length, :fargs), 2), (:block,
                    (:line, 1729, :none),
                    (:(=), :ft, (:call, :widenconst, (:ref, :argtypes, 2))),
                    (:line, 1730, :none),
                    (:if, (:&&, (:call, :isa, :ft, :DataType), (:&&, (:call, :isdefined, (:., :ft, (:quote, #QuoteNode
                                :name
                              )), (:quote, #QuoteNode
                              :mt
                            )), (:call, :isdefined, (:., (:., :ft, (:quote, #QuoteNode
                                  :name
                                )), (:quote, #QuoteNode
                                :mt
                              )), (:quote, #QuoteNode
                              :kwsorter
                            )))), (:block,
                        (:line, 1731, :none),
                        (:return, (:call, :Const, (:., (:., (:., :ft, (:quote, #QuoteNode
                                    :name
                                  )), (:quote, #QuoteNode
                                  :mt
                                )), (:quote, #QuoteNode
                                :kwsorter
                              ))))
                      ))
                  )),
                (:line, 1734, :none),
                (:return, :Any)
              ), (:block,
                (:line, 1735, :none),
                (:if, (:call, :(===), :f, :TypeVar), (:block,
                    (:line, 1736, :none),
                    (:(=), :lb, (:curly, :Union)),
                    (:line, 1737, :none),
                    (:(=), :ub, :Any),
                    (:line, 1738, :none),
                    (:(=), :ub_certain, (:(=), :lb_certain, true)),
                    (:line, 1739, :none),
                    (:if, (:&&, (:call, :(>=), (:call, :length, :fargs), 2), (:call, :isa, (:ref, :argtypes, 2), :Const)), (:block,
                        (:line, 1740, :none),
                        (:(=), :nv, (:., (:ref, :argtypes, 2), (:quote, #QuoteNode
                              :val
                            ))),
                        (:line, 1741, :none),
                        (:(=), :ubidx, 3),
                        (:line, 1742, :none),
                        (:if, (:call, :(>=), (:call, :length, :fargs), 4), (:block,
                            (:line, 1743, :none),
                            (:(=), :ubidx, 4),
                            (:line, 1744, :none),
                            (:if, (:call, :isa, (:ref, :argtypes, 3), :Const), (:block,
                                (:line, 1745, :none),
                                (:(=), :lb, (:., (:ref, :argtypes, 3), (:quote, #QuoteNode
                                      :val
                                    )))
                              ), (:block,
                                (:line, 1746, :none),
                                (:if, (:call, :isType, (:ref, :argtypes, 3)), (:block,
                                    (:line, 1747, :none),
                                    (:(=), :lb, (:ref, (:., (:ref, :argtypes, 3), (:quote, #QuoteNode
                                            :parameters
                                          )), 1)),
                                    (:line, 1748, :none),
                                    (:(=), :lb_certain, false)
                                  ), (:block,
                                    (:line, 1750, :none),
                                    (:return, :TypeVar)
                                  ))
                              ))
                          )),
                        (:line, 1753, :none),
                        (:if, (:call, :(>=), (:call, :length, :fargs), :ubidx), (:block,
                            (:line, 1754, :none),
                            (:if, (:call, :isa, (:ref, :argtypes, :ubidx), :Const), (:block,
                                (:line, 1755, :none),
                                (:(=), :ub, (:., (:ref, :argtypes, :ubidx), (:quote, #QuoteNode
                                      :val
                                    )))
                              ), (:block,
                                (:line, 1756, :none),
                                (:if, (:call, :isType, (:ref, :argtypes, :ubidx)), (:block,
                                    (:line, 1757, :none),
                                    (:(=), :ub, (:ref, (:., (:ref, :argtypes, :ubidx), (:quote, #QuoteNode
                                            :parameters
                                          )), 1)),
                                    (:line, 1758, :none),
                                    (:(=), :ub_certain, false)
                                  ), (:block,
                                    (:line, 1760, :none),
                                    (:return, :TypeVar)
                                  ))
                              ))
                          )),
                        (:line, 1763, :none),
                        (:(=), :tv, (:call, :TypeVar, :nv, :lb, :ub)),
                        (:line, 1764, :none),
                        (:return, (:call, :PartialTypeVar, :tv, :lb_certain, :ub_certain))
                      )),
                    (:line, 1766, :none),
                    (:return, :TypeVar)
                  ), (:block,
                    (:line, 1767, :none),
                    (:if, (:call, :(===), :f, :UnionAll), (:block,
                        (:line, 1768, :none),
                        (:if, (:call, :(==), (:call, :length, :fargs), 3), (:block,
                            (:line, 1769, :none),
                            (:(=), :canconst, true),
                            (:line, 1770, :none),
                            (:if, (:call, :isa, (:ref, :argtypes, 3), :Const), (:block,
                                (:line, 1771, :none),
                                (:(=), :body, (:., (:ref, :argtypes, 3), (:quote, #QuoteNode
                                      :val
                                    )))
                              ), (:block,
                                (:line, 1772, :none),
                                (:if, (:call, :isType, (:ref, :argtypes, 3)), (:block,
                                    (:line, 1773, :none),
                                    (:(=), :body, (:ref, (:., (:ref, :argtypes, 3), (:quote, #QuoteNode
                                            :parameters
                                          )), 1)),
                                    (:line, 1774, :none),
                                    (:(=), :canconst, false)
                                  ), (:block,
                                    (:line, 1776, :none),
                                    (:return, :Any)
                                  ))
                              )),
                            (:line, 1778, :none),
                            (:if, (:&&, (:call, :!, (:call, :isa, :body, :Type)), (:call, :!, (:call, :isa, :body, :TypeVar))), (:block,
                                (:line, 1779, :none),
                                (:return, :Any)
                              )),
                            (:line, 1781, :none),
                            (:||, (:call, :has_free_typevars, :body), (:return, :body)),
                            (:line, 1782, :none),
                            (:if, (:call, :isa, (:ref, :argtypes, 2), :Const), (:block,
                                (:line, 1783, :none),
                                (:(=), :tv, (:., (:ref, :argtypes, 2), (:quote, #QuoteNode
                                      :val
                                    )))
                              ), (:block,
                                (:line, 1784, :none),
                                (:if, (:call, :isa, (:ref, :argtypes, 2), :PartialTypeVar), (:block,
                                    (:line, 1785, :none),
                                    (:(=), :ptv, (:ref, :argtypes, 2)),
                                    (:line, 1786, :none),
                                    (:(=), :tv, (:., :ptv, (:quote, #QuoteNode
                                          :tv
                                        ))),
                                    (:line, 1787, :none),
                                    (:(=), :canconst, false)
                                  ), (:block,
                                    (:line, 1789, :none),
                                    (:return, :Any)
                                  ))
                              )),
                            (:line, 1791, :none),
                            (:&&, (:call, :!, (:call, :isa, :tv, :TypeVar)), (:return, :Any)),
                            (:line, 1792, :none),
                            (:(=), :theunion, (:call, :UnionAll, :tv, :body)),
                            (:line, 1793, :none),
                            (:(=), :ret, (:if, :canconst, (:call, :abstract_eval_constant, :theunion), (:curly, :Type, :theunion))),
                            (:line, 1794, :none),
                            (:return, :ret)
                          )),
                        (:line, 1796, :none),
                        (:return, :Any)
                      ), (:block,
                        (:line, 1797, :none),
                        (:if, (:call, :(===), :f, :return_type), (:block,
                            (:line, 1798, :none),
                            (:(=), :rt_rt, (:call, :return_type_tfunc, :argtypes, :vtypes, :sv)),
                            (:line, 1799, :none),
                            (:if, (:call, :(!==), :rt_rt, :NF), (:block,
                                (:line, 1800, :none),
                                (:return, :rt_rt)
                              ))
                          ), (:block,
                            (:line, 1802, :none),
                            (:if, (:&&, (:call, :(==), (:call, :length, :fargs), 2), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                                    :!
                                  ))), (:block,
                                (:line, 1803, :none),
                                (:(=), :aty, (:ref, :argtypes, 2)),
                                (:line, 1804, :none),
                                (:if, (:call, :isa, :aty, :Conditional), (:block,
                                    (:line, 1805, :none),
                                    (:call, :abstract_call_gf_by_type, :f, (:curly, :Tuple, (:call, :typeof, :f), :Bool), :sv),
                                    (:line, 1806, :none),
                                    (:return, (:call, :Conditional, (:., :aty, (:quote, #QuoteNode
                                            :var
                                          )), (:., :aty, (:quote, #QuoteNode
                                            :elsetype
                                          )), (:., :aty, (:quote, #QuoteNode
                                            :vtype
                                          ))))
                                  ))
                              ), (:block,
                                (:line, 1808, :none),
                                (:if, (:&&, (:call, :(==), (:call, :length, :fargs), 3), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                                        :(!==)
                                      ))), (:block,
                                    (:line, 1809, :none),
                                    (:(=), :rty, (:call, :abstract_call, :(===), :fargs, :argtypes, :vtypes, :sv)),
                                    (:line, 1810, :none),
                                    (:if, (:call, :isa, :rty, :Conditional), (:block,
                                        (:line, 1811, :none),
                                        (:return, (:call, :Conditional, (:., :rty, (:quote, #QuoteNode
                                                :var
                                              )), (:., :rty, (:quote, #QuoteNode
                                                :elsetype
                                              )), (:., :rty, (:quote, #QuoteNode
                                                :vtype
                                              ))))
                                      ), (:block,
                                        (:line, 1812, :none),
                                        (:if, (:call, :isa, :rty, :Const), (:block,
                                            (:line, 1813, :none),
                                            (:return, (:call, :Const, (:call, :(===), (:., :rty, (:quote, #QuoteNode
                                                      :val
                                                    )), false)))
                                          ))
                                      )),
                                    (:line, 1815, :none),
                                    (:return, :rty)
                                  ), (:block,
                                    (:line, 1816, :none),
                                    (:if, (:&&, (:call, :(==), (:call, :length, :fargs), 3), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                                            :>:
                                          ))), (:block,
                                        (:line, 1818, :none),
                                        (:(=), :fargs, (:ref, :Any, :issubtype, (:ref, :fargs, 3), (:ref, :fargs, 2))),
                                        (:line, 1819, :none),
                                        (:(=), :argtypes, (:ref, :Any, (:call, :typeof, :issubtype), (:ref, :argtypes, 3), (:ref, :argtypes, 2))),
                                        (:line, 1820, :none),
                                        (:(=), :rty, (:call, :abstract_call, :issubtype, :fargs, :argtypes, :vtypes, :sv)),
                                        (:line, 1821, :none),
                                        (:return, :rty)
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 1824, :none),
        (:if, (:&&, (:call, :>, :la, 2), (:call, :⊑, (:ref, :argtypes, 3), :Int)), (:block,
            (:line, 1825, :none),
            (:(=), :at2, (:call, :widenconst, (:ref, :argtypes, 2))),
            (:line, 1826, :none),
            (:if, (:&&, (:call, :(==), :la, 3), (:&&, (:<:, :at2, :SimpleVector), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                      :getindex
                    )))), (:block,
                (:line, 1827, :none),
                (:if, (:&&, (:call, :isa, (:ref, :argtypes, 2), :Const), (:call, :isa, (:ref, :argtypes, 3), :Const)), (:block,
                    (:line, 1828, :none),
                    (:(=), :svecval, (:., (:ref, :argtypes, 2), (:quote, #QuoteNode
                          :val
                        ))),
                    (:line, 1829, :none),
                    (:(=), :idx, (:., (:ref, :argtypes, 3), (:quote, #QuoteNode
                          :val
                        ))),
                    (:line, 1830, :none),
                    (:if, (:&&, (:call, :isa, :idx, :Int), (:&&, (:comparison, 1, :(<=), :idx, :(<=), (:call, :length, :svecval)), (:call, :isassigned, :svecval, :idx))), (:block,
                        (:line, 1832, :none),
                        (:return, (:call, :Const, (:call, :getindex, :svecval, :idx)))
                      ))
                  ))
              ), (:block,
                (:line, 1835, :none),
                (:if, (:||, (:<:, :at2, :Tuple), (:&&, (:call, :isa, :at2, :DataType), (:call, :(===), (:., (:(::), :at2, :DataType), (:quote, #QuoteNode
                            :name
                          )), (:call, :Pair_name)))), (:block,
                    (:line, 1839, :none),
                    (:if, (:&&, (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                            :getindex
                          )), (:call, :(==), :la, 3)), (:block,
                        (:line, 1840, :none),
                        (:return, (:call, :getfield_tfunc, (:ref, :argtypes, 2), (:ref, :argtypes, 3)))
                      ), (:block,
                        (:line, 1841, :none),
                        (:if, (:&&, (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                                :next
                              )), (:call, :(==), :la, 3)), (:block,
                            (:line, 1842, :none),
                            (:(=), :t1, (:call, :widenconst, (:call, :getfield_tfunc, (:ref, :argtypes, 2), (:ref, :argtypes, 3)))),
                            (:line, 1843, :none),
                            (:return, (:if, (:call, :(===), :t1, :Bottom), :Bottom, (:curly, :Tuple, :t1, :Int)))
                          ), (:block,
                            (:line, 1844, :none),
                            (:if, (:&&, (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                                    :indexed_next
                                  )), (:call, :(==), :la, 4)), (:block,
                                (:line, 1845, :none),
                                (:(=), :t1, (:call, :widenconst, (:call, :getfield_tfunc, (:ref, :argtypes, 2), (:ref, :argtypes, 3)))),
                                (:line, 1846, :none),
                                (:return, (:if, (:call, :(===), :t1, :Bottom), :Bottom, (:curly, :Tuple, :t1, :Int)))
                              ))
                          ))
                      ))
                  ))
              ))
          ), (:block,
            (:line, 1849, :none),
            (:if, (:&&, (:call, :(==), :la, 2), (:&&, (:call, :⊑, (:ref, :argtypes, 2), :SimpleVector), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                      :length
                    )))), (:block,
                (:line, 1850, :none),
                (:if, (:call, :isa, (:ref, :argtypes, 2), :Const), (:block,
                    (:line, 1851, :none),
                    (:return, (:call, :Const, (:call, :length, (:., (:ref, :argtypes, 2), (:quote, #QuoteNode
                              :val
                            )))))
                  ))
              ))
          )),
        (:line, 1855, :none),
        (:(=), :atype, (:call, :argtypes_to_type, :argtypes)),
        (:line, 1856, :none),
        (:(=), :t, (:call, :pure_eval_call, :f, :argtypes, :atype, :sv)),
        (:line, 1857, :none),
        (:&&, (:call, :(!==), :t, false), (:return, :t)),
        (:line, 1859, :none),
        (:if, (:||, (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                :typejoin
              )), (:call, :(===), :f, :return_type)), (:block,
            (:line, 1860, :none),
            (:return, :Type)
          ), (:block,
            (:line, 1861, :none),
            (:if, (:&&, (:call, :(==), (:call, :length, :argtypes), 2), (:call, :istopfunction, :tm, :f, (:quote, #QuoteNode
                    :typename
                  ))), (:block,
                (:line, 1862, :none),
                (:return, (:call, :typename_static, (:ref, :argtypes, 2)))
              ))
          )),
        (:line, 1865, :none),
        (:if, (:., (:., :sv, (:quote, #QuoteNode
                :params
              )), (:quote, #QuoteNode
              :inlining
            )), (:block,
            (:line, 1868, :none),
            (:if, (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                    :Base
                  )), (:&&, (:||, (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                            :Base
                          )), (:quote, #QuoteNode
                          :^
                        )), (:call, :(===), :f, (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :^
                          )))), (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                            :Base
                          )), (:quote, #QuoteNode
                          :.^
                        )), (:call, :(===), :f, (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :.^
                          ))))), (:&&, (:call, :(==), (:call, :length, :argtypes), 3), (:||, (:call, :⊑, (:ref, :argtypes, 3), :Int32), (:call, :⊑, (:ref, :argtypes, 3), :Int64))))), (:block,
                (:line, 1873, :none),
                (:(=), :a1, (:ref, :argtypes, 2)),
                (:line, 1874, :none),
                (:(=), :basenumtype, (:curly, :Union, :corenumtype, (:., (:., :Main, (:quote, #QuoteNode
                          :Base
                        )), (:quote, #QuoteNode
                        :Complex64
                      )), (:., (:., :Main, (:quote, #QuoteNode
                          :Base
                        )), (:quote, #QuoteNode
                        :Complex128
                      )), (:., (:., :Main, (:quote, #QuoteNode
                          :Base
                        )), (:quote, #QuoteNode
                        :Rational
                      )))),
                (:line, 1875, :none),
                (:if, (:call, :⊑, :a1, :basenumtype), (:block,
                    (:line, 1876, :none),
                    (:(=), :ftimes, (:., (:., :Main, (:quote, #QuoteNode
                            :Base
                          )), (:quote, #QuoteNode
                          :*
                        ))),
                    (:line, 1877, :none),
                    (:(=), :ta1, (:call, :widenconst, :a1)),
                    (:line, 1878, :none),
                    (:call, :abstract_call_gf_by_type, :ftimes, (:curly, :Tuple, (:call, :typeof, :ftimes), :ta1, :ta1), :sv)
                  ))
              ))
          )),
        (:line, 1882, :none),
        (:return, (:call, :abstract_call_gf_by_type, :f, :atype, :sv))
      )),
    (:line, 1885, :none),
    (:function, (:call, :abstract_eval_call, (:(::), :e, :Expr), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1886, :none),
        (:(=), :argtypes, (:typed_comprehension, :Any, (:generator, (:call, :abstract_eval, :a, :vtypes, :sv), (:(=), :a, (:., :e, (:quote, #QuoteNode
                    :args
                  )))))),
        (:line, 1888, :none),
        (:for, (:(=), :x, :argtypes), (:block,
            (:line, 1889, :none),
            (:&&, (:call, :(===), :x, :Bottom), (:return, :Bottom))
          )),
        (:line, 1891, :none),
        (:(=), :ft, (:ref, :argtypes, 1)),
        (:line, 1892, :none),
        (:if, (:call, :isa, :ft, :Const), (:block,
            (:line, 1893, :none),
            (:(=), :f, (:., :ft, (:quote, #QuoteNode
                  :val
                )))
          ), (:block,
            (:line, 1895, :none),
            (:if, (:&&, (:call, :isType, :ft), (:call, :isleaftype, (:ref, (:., :ft, (:quote, #QuoteNode
                        :parameters
                      )), 1))), (:block,
                (:line, 1896, :none),
                (:(=), :f, (:ref, (:., :ft, (:quote, #QuoteNode
                        :parameters
                      )), 1))
              ), (:block,
                (:line, 1897, :none),
                (:if, (:&&, (:call, :isleaftype, :ft), (:call, :isdefined, :ft, (:quote, #QuoteNode
                        :instance
                      ))), (:block,
                    (:line, 1898, :none),
                    (:(=), :f, (:., :ft, (:quote, #QuoteNode
                          :instance
                        )))
                  ), (:block,
                    (:line, 1900, :none),
                    (:for, (:(=), :i, (:(:), 2, (:call, :-, (:call, :length, :argtypes), 1))), (:block,
                        (:line, 1901, :none),
                        (:if, (:call, :isvarargtype, (:ref, :argtypes, :i)), (:block,
                            (:line, 1902, :none),
                            (:return, :Any)
                          ))
                      )),
                    (:line, 1906, :none),
                    (:if, (:&&, (:||, (:call, :isleaftype, :ft), (:<:, :ft, :Type)), (:&&, (:call, :!, (:<:, :ft, :Builtin)), (:call, :!, (:<:, :ft, :IntrinsicFunction)))), (:block,
                        (:line, 1907, :none),
                        (:return, (:call, :abstract_call_gf_by_type, :nothing, (:call, :argtypes_to_type, :argtypes), :sv))
                      )),
                    (:line, 1909, :none),
                    (:return, :Any)
                  ))
              ))
          )),
        (:line, 1912, :none),
        (:return, (:call, :abstract_call, :f, (:., :e, (:quote, #QuoteNode
                :args
              )), :argtypes, :vtypes, :sv))
      )),
    (:line, 1915, :none),
    (:const, (:(=), :_Ref_name, (:., (:., :Ref, (:quote, #QuoteNode
              :body
            )), (:quote, #QuoteNode
            :name
          )))),
    (:line, 1917, :none),
    (:function, (:call, :abstract_eval, (:(::), :e, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 1918, :none),
        (:if, (:call, :isa, :e, :QuoteNode), (:block,
            (:line, 1919, :none),
            (:return, (:call, :abstract_eval_constant, (:., (:(::), :e, :QuoteNode), (:quote, #QuoteNode
                    :value
                  ))))
          ), (:block,
            (:line, 1920, :none),
            (:if, (:call, :isa, :e, :SSAValue), (:block,
                (:line, 1921, :none),
                (:return, (:call, :abstract_eval_ssavalue, (:(::), :e, :SSAValue), (:., :sv, (:quote, #QuoteNode
                        :src
                      ))))
              ), (:block,
                (:line, 1922, :none),
                (:if, (:call, :isa, :e, :Slot), (:block,
                    (:line, 1923, :none),
                    (:return, (:., (:ref, :vtypes, (:call, :slot_id, :e)), (:quote, #QuoteNode
                          :typ
                        )))
                  ), (:block,
                    (:line, 1924, :none),
                    (:if, (:call, :isa, :e, :Symbol), (:block,
                        (:line, 1925, :none),
                        (:return, (:call, :abstract_eval_global, (:., :sv, (:quote, #QuoteNode
                                :mod
                              )), :e))
                      ), (:block,
                        (:line, 1926, :none),
                        (:if, (:call, :isa, :e, :GlobalRef), (:block,
                            (:line, 1927, :none),
                            (:return, (:call, :abstract_eval_global, (:., :e, (:quote, #QuoteNode
                                    :mod
                                  )), (:., :e, (:quote, #QuoteNode
                                    :name
                                  ))))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 1930, :none),
        (:if, (:call, :!, (:call, :isa, :e, :Expr)), (:block,
            (:line, 1931, :none),
            (:return, (:call, :abstract_eval_constant, :e))
          )),
        (:line, 1933, :none),
        (:(=), :e, (:(::), :e, :Expr)),
        (:line, 1934, :none),
        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :call
            )), (:block,
            (:line, 1935, :none),
            (:(=), :t, (:call, :abstract_eval_call, :e, :vtypes, :sv))
          ), (:block,
            (:line, 1936, :none),
            (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :null
                )), (:block,
                (:line, 1937, :none),
                (:(=), :t, :Void)
              ), (:block,
                (:line, 1938, :none),
                (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :new
                    )), (:block,
                    (:line, 1939, :none),
                    (:(=), :t, (:call, :instanceof_tfunc, (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                :args
                              )), 1), :vtypes, :sv))),
                    (:line, 1940, :none),
                    (:for, (:(=), :i, (:(:), 2, (:call, :length, (:., :e, (:quote, #QuoteNode
                                :args
                              ))))), (:block,
                        (:line, 1941, :none),
                        (:if, (:call, :(===), (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                    :args
                                  )), :i), :vtypes, :sv), :Bottom), (:block,
                            (:line, 1942, :none),
                            (:(=), :rt, :Bottom)
                          ))
                      ))
                  ), (:block,
                    (:line, 1945, :none),
                    (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :&
                        )), (:block,
                        (:line, 1946, :none),
                        (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                :args
                              )), 1), :vtypes, :sv),
                        (:line, 1947, :none),
                        (:(=), :t, :Any)
                      ), (:block,
                        (:line, 1948, :none),
                        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                :head
                              )), (:quote, #QuoteNode
                              :foreigncall
                            )), (:block,
                            (:line, 1949, :none),
                            (:(=), :rt, (:ref, (:., :e, (:quote, #QuoteNode
                                    :args
                                  )), 2)),
                            (:line, 1950, :none),
                            (:if, (:call, :isdefined, (:., :sv, (:quote, #QuoteNode
                                    :linfo
                                  )), (:quote, #QuoteNode
                                  :def
                                )), (:block,
                                (:line, 1951, :none),
                                (:(=), :spsig, (:., (:., (:., :sv, (:quote, #QuoteNode
                                          :linfo
                                        )), (:quote, #QuoteNode
                                        :def
                                      )), (:quote, #QuoteNode
                                      :sig
                                    ))),
                                (:line, 1952, :none),
                                (:if, (:call, :isa, :spsig, :UnionAll), (:block,
                                    (:line, 1953, :none),
                                    (:if, (:call, :!, (:call, :isempty, (:., (:., :sv, (:quote, #QuoteNode
                                                :linfo
                                              )), (:quote, #QuoteNode
                                              :sparam_vals
                                            )))), (:block,
                                        (:line, 1954, :none),
                                        (:(=), :env, (:call, :+, (:call, :data_pointer_from_objref, (:., (:., :sv, (:quote, #QuoteNode
                                                    :linfo
                                                  )), (:quote, #QuoteNode
                                                  :sparam_vals
                                                ))), (:call, :sizeof, (:curly, :Ptr, :Void)))),
                                        (:line, 1955, :none),
                                        (:(=), :rt, (:call, :ccall, (:quote, #QuoteNode
                                              :jl_instantiate_type_in_env
                                            ), :Any, (:tuple, :Any, :Any, (:curly, :Ptr, :Any)), (:ref, (:., :e, (:quote, #QuoteNode
                                                  :args
                                                )), 2), :spsig, :env))
                                      ), (:block,
                                        (:line, 1957, :none),
                                        (:(=), :rt, (:call, :rewrap_unionall, (:ref, (:., :e, (:quote, #QuoteNode
                                                  :args
                                                )), 2), :spsig))
                                      ))
                                  ))
                              )),
                            (:line, 1961, :none),
                            (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                    :args
                                  )), 1), :vtypes, :sv),
                            (:line, 1962, :none),
                            (:for, (:(=), :i, (:(:), 3, (:call, :length, (:., :e, (:quote, #QuoteNode
                                        :args
                                      ))))), (:block,
                                (:line, 1963, :none),
                                (:if, (:call, :(===), (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                            :args
                                          )), :i), :vtypes, :sv), :Bottom), (:block,
                                    (:line, 1964, :none),
                                    (:(=), :t, :Bottom)
                                  ))
                              )),
                            (:line, 1967, :none),
                            (:if, (:call, :(===), :rt, :Bottom), (:block,
                                (:line, 1968, :none),
                                (:(=), :t, :Bottom)
                              ), (:block,
                                (:line, 1969, :none),
                                (:if, (:call, :isa, :rt, :Type), (:block,
                                    (:line, 1970, :none),
                                    (:(=), :t, :rt),
                                    (:line, 1971, :none),
                                    (:if, (:&&, (:call, :isa, :t, :DataType), (:call, :(===), (:., (:(::), :t, :DataType), (:quote, #QuoteNode
                                              :name
                                            )), :_Ref_name)), (:block,
                                        (:line, 1972, :none),
                                        (:(=), :t, (:ref, (:., :t, (:quote, #QuoteNode
                                                :parameters
                                              )), 1)),
                                        (:line, 1973, :none),
                                        (:if, (:call, :(===), :t, :Any), (:block,
                                            (:line, 1974, :none),
                                            (:(=), :t, :Bottom)
                                          ))
                                      )),
                                    (:line, 1977, :none),
                                    (:for, (:(=), :v, (:., (:., :sv, (:quote, #QuoteNode
                                              :linfo
                                            )), (:quote, #QuoteNode
                                            :sparam_vals
                                          ))), (:block,
                                        (:line, 1978, :none),
                                        (:if, (:call, :isa, :v, :TypeVar), (:block,
                                            (:line, 1979, :none),
                                            (:(=), :t, (:call, :UnionAll, :v, :t))
                                          ))
                                      ))
                                  ), (:block,
                                    (:line, 1983, :none),
                                    (:(=), :t, :Any)
                                  ))
                              ))
                          ), (:block,
                            (:line, 1985, :none),
                            (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                    :head
                                  )), (:quote, #QuoteNode
                                  :static_parameter
                                )), (:block,
                                (:line, 1986, :none),
                                (:(=), :n, (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), 1)),
                                (:line, 1987, :none),
                                (:(=), :t, :Any),
                                (:line, 1988, :none),
                                (:if, (:call, :(<=), :n, (:call, :length, (:., :sv, (:quote, #QuoteNode
                                          :sp
                                        )))), (:block,
                                    (:line, 1989, :none),
                                    (:(=), :val, (:ref, (:., :sv, (:quote, #QuoteNode
                                            :sp
                                          )), :n)),
                                    (:line, 1990, :none),
                                    (:if, (:&&, (:call, :isa, :val, :TypeVar), (:<:, :Any, (:., :val, (:quote, #QuoteNode
                                              :ub
                                            )))), (:block,), (:block,
                                        (:line, 1994, :none),
                                        (:if, (:call, :has_free_typevars, :val), (:block,
                                            (:line, 1995, :none),
                                            (:(=), :vs, (:call, :ccall, (:quote, #QuoteNode
                                                  :jl_find_free_typevars
                                                ), :Any, (:tuple, :Any), :val)),
                                            (:line, 1996, :none),
                                            (:(=), :t, (:curly, :Type, :val)),
                                            (:line, 1997, :none),
                                            (:for, (:(=), :v, :vs), (:block,
                                                (:line, 1998, :none),
                                                (:(=), :t, (:call, :UnionAll, :v, :t))
                                              ))
                                          ), (:block,
                                            (:line, 2001, :none),
                                            (:(=), :t, (:call, :abstract_eval_constant, :val))
                                          ))
                                      ))
                                  ))
                              ), (:block,
                                (:line, 2004, :none),
                                (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                        :head
                                      )), (:quote, #QuoteNode
                                      :method
                                    )), (:block,
                                    (:line, 2005, :none),
                                    (:(=), :t, (:if, (:call, :(==), (:call, :length, (:., :e, (:quote, #QuoteNode
                                                :args
                                              ))), 1), :Any, :Void))
                                  ), (:block,
                                    (:line, 2006, :none),
                                    (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                            :head
                                          )), (:quote, #QuoteNode
                                          :copyast
                                        )), (:block,
                                        (:line, 2007, :none),
                                        (:(=), :t, (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                                                  :args
                                                )), 1), :vtypes, :sv))
                                      ), (:block,
                                        (:line, 2008, :none),
                                        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                                :head
                                              )), (:quote, #QuoteNode
                                              :inert
                                            )), (:block,
                                            (:line, 2009, :none),
                                            (:return, (:call, :abstract_eval_constant, (:ref, (:., :e, (:quote, #QuoteNode
                                                      :args
                                                    )), 1)))
                                          ), (:block,
                                            (:line, 2010, :none),
                                            (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                                    :head
                                                  )), (:quote, #QuoteNode
                                                  :invoke
                                                )), (:block,
                                                (:line, 2011, :none),
                                                (:call, :error, "type inference data-flow error: tried to double infer a function")
                                              ), (:block,
                                                (:line, 2013, :none),
                                                (:(=), :t, :Any)
                                              ))
                                          ))
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 2015, :none),
        (:if, (:call, :isa, :t, :TypeVar), (:block,
            (:line, 2017, :none),
            (:(=), :t, (:., :t, (:quote, #QuoteNode
                  :ub
                )))
          )),
        (:line, 2019, :none),
        (:if, (:&&, (:call, :isa, :t, :DataType), (:call, :isdefined, :t, (:quote, #QuoteNode
                :instance
              ))), (:block,
            (:line, 2021, :none),
            (:(=), :t, (:call, :Const, (:., :t, (:quote, #QuoteNode
                    :instance
                  ))))
          )),
        (:line, 2023, :none),
        (:if, (:call, :isa, :t, :Conditional), (:block,
            (:line, 2024, :none),
            (:(=), (:., :e, (:quote, #QuoteNode
                  :typ
                )), :Bool)
          ), (:block,
            (:line, 2026, :none),
            (:(=), (:., :e, (:quote, #QuoteNode
                  :typ
                )), :t)
          )),
        (:line, 2028, :none),
        (:return, :t)
      )),
    (:line, 2031, :none),
    (:const, (:(=), :abstract_eval_constant, :Const)),
    (:line, 2033, :none),
    (:function, (:call, :abstract_eval_global, (:(::), :M, :Module), (:(::), :s, :Symbol)), (:block,
        (:line, 2034, :none),
        (:if, (:&&, (:call, :isdefined, :M, :s), (:call, :isconst, :M, :s)), (:block,
            (:line, 2035, :none),
            (:return, (:call, :abstract_eval_constant, (:call, :getfield, :M, :s)))
          )),
        (:line, 2037, :none),
        (:return, :Any)
      )),
    (:line, 2040, :none),
    (:function, (:call, :abstract_eval_ssavalue, (:(::), :s, :SSAValue), (:(::), :src, :CodeInfo)), (:block,
        (:line, 2041, :none),
        (:(=), :typ, (:ref, (:., :src, (:quote, #QuoteNode
                :ssavaluetypes
              )), (:call, :+, (:., :s, (:quote, #QuoteNode
                  :id
                )), 1))),
        (:line, 2042, :none),
        (:if, (:call, :(===), :typ, :NF), (:block,
            (:line, 2043, :none),
            (:return, :Bottom)
          )),
        (:line, 2045, :none),
        (:return, :typ)
      )),
    (:line, 2051, :none),
    (:type, true, :StateUpdate, (:block,
        (:line, 2052, :none),
        (:(::), :var, (:curly, :Union, :Slot, :SSAValue)),
        (:line, 2053, :none),
        (:(::), :vtype, :VarState),
        (:line, 2054, :none),
        (:(::), :state, :VarTable)
      )),
    (:line, 2057, :none),
    (:function, (:call, :abstract_interpret, (:(::), :e, :ANY), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState)), (:block,
        (:line, 2058, :none),
        (:&&, (:call, :!, (:call, :isa, :e, :Expr)), (:return, :vtypes)),
        (:line, 2060, :none),
        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :(=)
            )), (:block,
            (:line, 2061, :none),
            (:(=), :t, (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                      :args
                    )), 2), :vtypes, :sv)),
            (:line, 2062, :none),
            (:&&, (:call, :(===), :t, :Bottom), (:return, (:tuple,))),
            (:line, 2063, :none),
            (:(=), :lhs, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), 1)),
            (:line, 2064, :none),
            (:if, (:||, (:call, :isa, :lhs, :Slot), (:call, :isa, :lhs, :SSAValue)), (:block,
                (:line, 2066, :none),
                (:return, (:call, :StateUpdate, :lhs, (:call, :VarState, :t, false), :vtypes))
              ))
          ), (:block,
            (:line, 2068, :none),
            (:if, (:||, (:call, :(===), (:., :e, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :call
                  )), (:call, :(===), (:., :e, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :foreigncall
                  ))), (:block,
                (:line, 2069, :none),
                (:(=), :t, (:call, :abstract_eval, :e, :vtypes, :sv)),
                (:line, 2070, :none),
                (:&&, (:call, :(===), :t, :Bottom), (:return, (:tuple,)))
              ), (:block,
                (:line, 2071, :none),
                (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :gotoifnot
                    )), (:block,
                    (:line, 2072, :none),
                    (:(=), :t, (:call, :abstract_eval, (:ref, (:., :e, (:quote, #QuoteNode
                              :args
                            )), 1), :vtypes, :sv)),
                    (:line, 2073, :none),
                    (:&&, (:call, :(===), :t, :Bottom), (:return, (:tuple,)))
                  ), (:block,
                    (:line, 2074, :none),
                    (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :method
                        )), (:block,
                        (:line, 2075, :none),
                        (:(=), :fname, (:ref, (:., :e, (:quote, #QuoteNode
                                :args
                              )), 1)),
                        (:line, 2076, :none),
                        (:if, (:call, :isa, :fname, :Slot), (:block,
                            (:line, 2077, :none),
                            (:return, (:call, :StateUpdate, :fname, (:call, :VarState, :Any, false), :vtypes))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 2080, :none),
        (:return, :vtypes)
      )),
    (:line, 2083, :none),
    (:function, (:call, :type_too_complex, (:(::), :t, :ANY), :d), (:block,
        (:line, 2084, :none),
        (:if, (:call, :>, :d, :MAX_TYPE_DEPTH), (:block,
            (:line, 2085, :none),
            (:return, true)
          ), (:block,
            (:line, 2086, :none),
            (:if, (:call, :isa, :t, :Union), (:block,
                (:line, 2087, :none),
                (:return, (:||, (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                          :a
                        )), (:call, :+, :d, 1)), (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                          :b
                        )), (:call, :+, :d, 1))))
              ), (:block,
                (:line, 2088, :none),
                (:if, (:call, :isa, :t, :TypeVar), (:block,
                    (:line, 2089, :none),
                    (:return, (:||, (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                              :lb
                            )), (:call, :+, :d, 1)), (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                              :ub
                            )), (:call, :+, :d, 1))))
                  ), (:block,
                    (:line, 2090, :none),
                    (:if, (:call, :isa, :t, :UnionAll), (:block,
                        (:line, 2091, :none),
                        (:return, (:||, (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                                  :var
                                )), :d), (:call, :type_too_complex, (:., :t, (:quote, #QuoteNode
                                  :body
                                )), :d)))
                      ), (:block,
                        (:line, 2092, :none),
                        (:if, (:call, :isa, :t, :DataType), (:block,
                            (:line, 2093, :none),
                            (:for, (:(=), :x, (:(::), (:., :t, (:quote, #QuoteNode
                                      :parameters
                                    )), :SimpleVector)), (:block,
                                (:line, 2094, :none),
                                (:if, (:call, :type_too_complex, :x, (:call, :+, :d, 1)), (:block,
                                    (:line, 2095, :none),
                                    (:return, true)
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 2099, :none),
        (:return, false)
      )),
    (:line, 2104, :none),
    (:function, (:call, :issubconditional, (:(::), :a, :Conditional), (:(::), :b, :Conditional)), (:block,
        (:line, 2105, :none),
        (:(=), :avar, (:., :a, (:quote, #QuoteNode
              :var
            ))),
        (:line, 2106, :none),
        (:(=), :bvar, (:., :b, (:quote, #QuoteNode
              :var
            ))),
        (:line, 2107, :none),
        (:if, (:||, (:&&, (:call, :isa, :avar, :Slot), (:&&, (:call, :isa, :bvar, :Slot), (:call, :(===), (:call, :slot_id, :avar), (:call, :slot_id, :bvar)))), (:&&, (:call, :isa, :avar, :SSAValue), (:&&, (:call, :isa, :bvar, :SSAValue), (:call, :(===), :avar, :bvar)))), (:block,
            (:line, 2109, :none),
            (:if, (:call, :⊑, (:., :a, (:quote, #QuoteNode
                    :vtype
                  )), (:., :b, (:quote, #QuoteNode
                    :vtype
                  ))), (:block,
                (:line, 2110, :none),
                (:if, (:call, :⊑, (:., :a, (:quote, #QuoteNode
                        :elsetype
                      )), (:., :b, (:quote, #QuoteNode
                        :elsetype
                      ))), (:block,
                    (:line, 2111, :none),
                    (:return, true)
                  ))
              ))
          )),
        (:line, 2115, :none),
        (:return, false)
      )),
    (:line, 2118, :none),
    (:function, (:call, :⊑, (:(::), :a, :ANY), (:(::), :b, :ANY)), (:block,
        (:line, 2119, :none),
        (:&&, (:call, :(===), :a, :NF), (:return, true)),
        (:line, 2120, :none),
        (:&&, (:call, :(===), :b, :NF), (:return, false)),
        (:line, 2121, :none),
        (:if, (:call, :isa, :a, :Conditional), (:block,
            (:line, 2122, :none),
            (:if, (:call, :isa, :b, :Conditional), (:block,
                (:line, 2123, :none),
                (:return, (:call, :issubconditional, :a, :b))
              )),
            (:line, 2125, :none),
            (:(=), :a, :Bool)
          ), (:block,
            (:line, 2126, :none),
            (:if, (:call, :isa, :b, :Conditional), (:block,
                (:line, 2127, :none),
                (:return, (:call, :(===), :a, :Bottom))
              ))
          )),
        (:line, 2129, :none),
        (:if, (:call, :isa, :a, :Const), (:block,
            (:line, 2130, :none),
            (:if, (:call, :isa, :b, :Const), (:block,
                (:line, 2131, :none),
                (:return, (:call, :(===), (:., :a, (:quote, #QuoteNode
                        :val
                      )), (:., :b, (:quote, #QuoteNode
                        :val
                      ))))
              )),
            (:line, 2133, :none),
            (:return, (:call, :isa, (:., :a, (:quote, #QuoteNode
                    :val
                  )), (:call, :widenconst, :b)))
          ), (:block,
            (:line, 2134, :none),
            (:if, (:call, :isa, :b, :Const), (:block,
                (:line, 2135, :none),
                (:return, (:call, :(===), :a, :Bottom))
              ), (:block,
                (:line, 2136, :none),
                (:if, (:||, (:call, :!, (:||, (:call, :isa, :a, :Type), (:call, :isa, :a, :TypeVar))), (:call, :!, (:||, (:call, :isa, :b, :Type), (:call, :isa, :b, :TypeVar)))), (:block,
                    (:line, 2138, :none),
                    (:return, (:call, :(===), :a, :b))
                  ), (:block,
                    (:line, 2140, :none),
                    (:return, (:<:, :a, :b))
                  ))
              ))
          ))
      )),
    (:line, 2144, :none),
    (:(=), (:call, :widenconst, (:(::), :c, :Conditional)), (:block,
        (:line, 2144, :none),
        :Bool
      )),
    (:line, 2145, :none),
    (:function, (:call, :widenconst, (:(::), :c, :Const)), (:block,
        (:line, 2146, :none),
        (:if, (:call, :isa, (:., :c, (:quote, #QuoteNode
                :val
              )), :Type), (:block,
            (:line, 2147, :none),
            (:if, (:call, :isvarargtype, (:., :c, (:quote, #QuoteNode
                    :val
                  ))), (:block,
                (:line, 2148, :none),
                (:return, :Type)
              )),
            (:line, 2150, :none),
            (:return, (:curly, :Type, (:., :c, (:quote, #QuoteNode
                    :val
                  ))))
          ), (:block,
            (:line, 2152, :none),
            (:return, (:call, :typeof, (:., :c, (:quote, #QuoteNode
                    :val
                  ))))
          ))
      )),
    (:line, 2155, :none),
    (:(=), (:call, :widenconst, (:(::), :c, :PartialTypeVar)), (:block,
        (:line, 2155, :none),
        :TypeVar
      )),
    (:line, 2156, :none),
    (:(=), (:call, :widenconst, (:(::), :t, :ANY)), (:block,
        (:line, 2156, :none),
        :t
      )),
    (:line, 2158, :none),
    (:(=), (:call, :issubstate, (:(::), :a, :VarState), (:(::), :b, :VarState)), (:block,
        (:line, 2158, :none),
        (:&&, (:call, :⊑, (:., :a, (:quote, #QuoteNode
                :typ
              )), (:., :b, (:quote, #QuoteNode
                :typ
              ))), (:call, :(<=), (:., :a, (:quote, #QuoteNode
                :undef
              )), (:., :b, (:quote, #QuoteNode
                :undef
              ))))
      )),
    (:line, 2162, :none),
    (:(=), (:call, :is_meta_expr_head, (:(::), :head, :Symbol)), (:block,
        (:line, 2162, :none),
        (:||, (:call, :(===), :head, (:quote, #QuoteNode
              :inbounds
            )), (:||, (:call, :(===), :head, (:quote, #QuoteNode
                :boundscheck
              )), (:||, (:call, :(===), :head, (:quote, #QuoteNode
                  :meta
                )), (:||, (:call, :(===), :head, (:quote, #QuoteNode
                    :line
                  )), (:call, :(===), :head, (:quote, #QuoteNode
                    :simdloop
                  ))))))
      )),
    (:line, 2165, :none),
    (:(=), (:call, :is_meta_expr, (:(::), :ex, :Expr)), (:block,
        (:line, 2165, :none),
        (:call, :is_meta_expr_head, (:., :ex, (:quote, #QuoteNode
              :head
            )))
      )),
    (:line, 2167, :none),
    (:function, (:call, :tmerge, (:(::), :typea, :ANY), (:(::), :typeb, :ANY)), (:block,
        (:line, 2168, :none),
        (:&&, (:call, :⊑, :typea, :typeb), (:return, :typeb)),
        (:line, 2169, :none),
        (:&&, (:call, :⊑, :typeb, :typea), (:return, :typea)),
        (:line, 2170, :none),
        (:if, (:&&, (:call, :isa, :typea, :Conditional), (:call, :isa, :typeb, :Conditional)), (:block,
            (:line, 2171, :none),
            (:if, (:call, :(===), (:., :typea, (:quote, #QuoteNode
                    :var
                  )), (:., :typeb, (:quote, #QuoteNode
                    :var
                  ))), (:block,
                (:line, 2172, :none),
                (:(=), :vtype, (:call, :tmerge, (:., :typea, (:quote, #QuoteNode
                        :vtype
                      )), (:., :typeb, (:quote, #QuoteNode
                        :vtype
                      )))),
                (:line, 2173, :none),
                (:(=), :elsetype, (:call, :tmerge, (:., :typea, (:quote, #QuoteNode
                        :elsetype
                      )), (:., :typeb, (:quote, #QuoteNode
                        :elsetype
                      )))),
                (:line, 2174, :none),
                (:if, (:call, :(!=), :vtype, :elsetype), (:block,
                    (:line, 2175, :none),
                    (:return, (:call, :Conditional, (:., :typea, (:quote, #QuoteNode
                            :var
                          )), :vtype, :elsetype))
                  ))
              )),
            (:line, 2178, :none),
            (:return, :Bool)
          )),
        (:line, 2180, :none),
        (:(=), (:tuple, :typea, :typeb), (:tuple, (:call, :widenconst, :typea), (:call, :widenconst, :typeb))),
        (:line, 2181, :none),
        (:&&, (:call, :(===), :typea, :typeb), (:return, :typea)),
        (:line, 2182, :none),
        (:if, (:||, (:call, :!, (:||, (:call, :isa, :typea, :Type), (:call, :isa, :typea, :TypeVar))), (:call, :!, (:||, (:call, :isa, :typeb, :Type), (:call, :isa, :typeb, :TypeVar)))), (:block,
            (:line, 2183, :none),
            (:return, :Any)
          )),
        (:line, 2185, :none),
        (:if, (:&&, (:<:, :typea, :Tuple), (:<:, :typeb, :Tuple)), (:block,
            (:line, 2186, :none),
            (:if, (:&&, (:call, :isa, :typea, :DataType), (:&&, (:call, :isa, :typeb, :DataType), (:&&, (:call, :(==), (:call, :length, (:., :typea, (:quote, #QuoteNode
                            :parameters
                          ))), (:call, :length, (:., :typeb, (:quote, #QuoteNode
                            :parameters
                          )))), (:&&, (:call, :!, (:call, :isvatuple, :typea)), (:call, :!, (:call, :isvatuple, :typeb)))))), (:block,
                (:line, 2187, :none),
                (:return, (:call, :typejoin, :typea, :typeb))
              )),
            (:line, 2189, :none),
            (:if, (:||, (:call, :isa, :typea, :Union), (:||, (:call, :isa, :typeb, :Union), (:||, (:&&, (:call, :isa, :typea, :DataType), (:call, :>, (:call, :length, (:., :typea, (:quote, #QuoteNode
                              :parameters
                            ))), 3)), (:&&, (:call, :isa, :typeb, :DataType), (:call, :>, (:call, :length, (:., :typeb, (:quote, #QuoteNode
                              :parameters
                            ))), 3))))), (:block,
                (:line, 2193, :none),
                (:return, :Tuple)
              ))
          )),
        (:line, 2196, :none),
        (:(=), :u, (:curly, :Union, :typea, :typeb)),
        (:line, 2197, :none),
        (:if, (:||, (:call, :>, (:call, :unionlen, :u), :MAX_TYPEUNION_LEN), (:call, :type_too_complex, :u, 0)), (:block,
            (:line, 2200, :none),
            (:return, :Any)
          )),
        (:line, 2202, :none),
        (:return, :u)
      )),
    (:line, 2205, :none),
    (:function, (:call, :smerge, (:(::), :sa, (:curly, :Union, :NotFound, :VarState)), (:(::), :sb, (:curly, :Union, :NotFound, :VarState))), (:block,
        (:line, 2206, :none),
        (:&&, (:call, :(===), :sa, :sb), (:return, :sa)),
        (:line, 2207, :none),
        (:&&, (:call, :(===), :sa, :NF), (:return, :sb)),
        (:line, 2208, :none),
        (:&&, (:call, :(===), :sb, :NF), (:return, :sa)),
        (:line, 2209, :none),
        (:&&, (:call, :issubstate, :sa, :sb), (:return, :sb)),
        (:line, 2210, :none),
        (:&&, (:call, :issubstate, :sb, :sa), (:return, :sa)),
        (:line, 2211, :none),
        (:return, (:call, :VarState, (:call, :tmerge, (:., :sa, (:quote, #QuoteNode
                  :typ
                )), (:., :sb, (:quote, #QuoteNode
                  :typ
                ))), (:call, :|, (:., :sa, (:quote, #QuoteNode
                  :undef
                )), (:., :sb, (:quote, #QuoteNode
                  :undef
                )))))
      )),
    (:line, 2214, :none),
    (:macrocall, Symbol("@inline"), (:(=), (:call, :tchanged, (:(::), :n, :ANY), (:(::), :o, :ANY)), (:block,
          (:line, 2214, :none),
          (:||, (:call, :(===), :o, :NF), (:&&, (:call, :(!==), :n, :NF), (:call, :!, (:call, :⊑, :n, :o))))
        ))),
    (:line, 2215, :none),
    (:macrocall, Symbol("@inline"), (:(=), (:call, :schanged, (:(::), :n, :ANY), (:(::), :o, :ANY)), (:block,
          (:line, 2215, :none),
          (:&&, (:call, :(!==), :n, :o), (:||, (:call, :(===), :o, :NF), (:&&, (:call, :(!==), :n, :NF), (:call, :!, (:call, :issubstate, :n, :o)))))
        ))),
    (:line, 2217, :none),
    (:function, (:call, :stupdate!, (:(::), :state, (:curly, :Tuple)), (:(::), :changes, :StateUpdate)), (:block,
        (:line, 2218, :none),
        (:(=), :newst, (:call, :copy, (:., :changes, (:quote, #QuoteNode
                :state
              )))),
        (:line, 2219, :none),
        (:if, (:call, :isa, (:., :changes, (:quote, #QuoteNode
                :var
              )), :Slot), (:block,
            (:line, 2220, :none),
            (:(=), (:ref, :newst, (:call, :slot_id, (:(::), (:., :changes, (:quote, #QuoteNode
                        :var
                      )), :Slot))), (:., :changes, (:quote, #QuoteNode
                  :vtype
                )))
          )),
        (:line, 2222, :none),
        (:return, :newst)
      )),
    (:line, 2225, :none),
    (:function, (:call, :stupdate!, (:(::), :state, :VarTable), (:(::), :change, :StateUpdate)), (:block,
        (:line, 2226, :none),
        (:if, (:call, :!, (:call, :isa, (:., :change, (:quote, #QuoteNode
                  :var
                )), :Slot)), (:block,
            (:line, 2227, :none),
            (:return, (:call, :stupdate!, :state, (:., :change, (:quote, #QuoteNode
                    :state
                  ))))
          )),
        (:line, 2229, :none),
        (:(=), :newstate, false),
        (:line, 2230, :none),
        (:(=), :changeid, (:call, :slot_id, (:(::), (:., :change, (:quote, #QuoteNode
                  :var
                )), :Slot))),
        (:line, 2231, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :state))), (:block,
            (:line, 2232, :none),
            (:if, (:call, :(==), :i, :changeid), (:block,
                (:line, 2233, :none),
                (:(=), :newtype, (:., :change, (:quote, #QuoteNode
                      :vtype
                    )))
              ), (:block,
                (:line, 2235, :none),
                (:(=), :newtype, (:ref, (:., :change, (:quote, #QuoteNode
                        :state
                      )), :i))
              )),
            (:line, 2237, :none),
            (:(=), :oldtype, (:ref, :state, :i)),
            (:line, 2238, :none),
            (:if, (:call, :schanged, :newtype, :oldtype), (:block,
                (:line, 2239, :none),
                (:(=), :newstate, :state),
                (:line, 2240, :none),
                (:(=), (:ref, :state, :i), (:call, :smerge, :oldtype, :newtype))
              ))
          )),
        (:line, 2243, :none),
        (:return, :newstate)
      )),
    (:line, 2246, :none),
    (:function, (:call, :stupdate!, (:(::), :state, :VarTable), (:(::), :changes, :VarTable)), (:block,
        (:line, 2247, :none),
        (:(=), :newstate, false),
        (:line, 2248, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :state))), (:block,
            (:line, 2249, :none),
            (:(=), :newtype, (:ref, :changes, :i)),
            (:line, 2250, :none),
            (:(=), :oldtype, (:ref, :state, :i)),
            (:line, 2251, :none),
            (:if, (:call, :schanged, :newtype, :oldtype), (:block,
                (:line, 2252, :none),
                (:(=), :newstate, :state),
                (:line, 2253, :none),
                (:(=), (:ref, :state, :i), (:call, :smerge, :oldtype, :newtype))
              ))
          )),
        (:line, 2256, :none),
        (:return, :newstate)
      )),
    (:line, 2259, :none),
    (:(=), (:call, :stupdate!, (:(::), :state, (:curly, :Tuple)), (:(::), :changes, :VarTable)), (:block,
        (:line, 2259, :none),
        (:call, :copy, :changes)
      )),
    (:line, 2261, :none),
    (:(=), (:call, :stupdate!, (:(::), :state, (:curly, :Tuple)), (:(::), :changes, (:curly, :Tuple))), (:block,
        (:line, 2261, :none),
        false
      )),
    (:line, 2263, :none),
    (:function, (:call, :stupdate1!, (:(::), :state, :VarTable), (:(::), :change, :StateUpdate)), (:block,
        (:line, 2264, :none),
        (:if, (:call, :!, (:call, :isa, (:., :change, (:quote, #QuoteNode
                  :var
                )), :Slot)), (:block,
            (:line, 2265, :none),
            (:return, false)
          )),
        (:line, 2267, :none),
        (:(=), :i, (:call, :slot_id, (:(::), (:., :change, (:quote, #QuoteNode
                  :var
                )), :Slot))),
        (:line, 2268, :none),
        (:(=), :newtype, (:., :change, (:quote, #QuoteNode
              :vtype
            ))),
        (:line, 2269, :none),
        (:(=), :oldtype, (:ref, :state, :i)),
        (:line, 2270, :none),
        (:if, (:call, :schanged, :newtype, :oldtype), (:block,
            (:line, 2271, :none),
            (:(=), (:ref, :state, :i), (:call, :smerge, :oldtype, :newtype)),
            (:line, 2272, :none),
            (:return, true)
          )),
        (:line, 2274, :none),
        (:return, false)
      )),
    (:line, 2280, :none),
    (:function, (:call, :label_counter, :body), (:block,
        (:line, 2281, :none),
        (:(=), :l, -1),
        (:line, 2282, :none),
        (:for, (:(=), :b, :body), (:block,
            (:line, 2283, :none),
            (:if, (:&&, (:call, :isa, :b, :LabelNode), (:call, :>, (:., (:(::), :b, :LabelNode), (:quote, #QuoteNode
                      :label
                    )), :l)), (:block,
                (:line, 2284, :none),
                (:(=), :l, (:., (:(::), :b, :LabelNode), (:quote, #QuoteNode
                      :label
                    )))
              ))
          )),
        (:line, 2287, :none),
        (:return, :l)
      )),
    (:line, 2289, :none),
    (:(=), (:call, :genlabel, :sv), (:block,
        (:line, 2289, :none),
        (:call, :LabelNode, (:+=, (:., :sv, (:quote, #QuoteNode
                :label_counter
              )), 1))
      )),
    (:line, 2291, :none),
    (:function, (:call, :find_ssavalue_uses, :body), (:block,
        (:line, 2292, :none),
        (:(=), :uses, (:ref, :IntSet)),
        (:line, 2293, :none),
        (:for, (:(=), :line, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 2294, :none),
            (:call, :find_ssavalue_uses, (:ref, :body, :line), :uses, :line)
          )),
        (:line, 2296, :none),
        (:return, :uses)
      )),
    (:line, 2298, :none),
    (:function, (:call, :find_ssavalue_uses, (:(::), :e, :ANY), :uses, :line), (:block,
        (:line, 2299, :none),
        (:if, (:call, :isa, :e, :SSAValue), (:block,
            (:line, 2300, :none),
            (:(=), :id, (:call, :+, (:., (:(::), :e, :SSAValue), (:quote, #QuoteNode
                    :id
                  )), 1)),
            (:line, 2301, :none),
            (:while, (:call, :<, (:call, :length, :uses), :id), (:block,
                (:line, 2302, :none),
                (:call, :push!, :uses, (:call, :IntSet))
              )),
            (:line, 2304, :none),
            (:call, :push!, (:ref, :uses, :id), :line)
          ), (:block,
            (:line, 2305, :none),
            (:if, (:call, :isa, :e, :Expr), (:block,
                (:line, 2306, :none),
                (:(=), :b, (:(::), :e, :Expr)),
                (:line, 2307, :none),
                (:(=), :head, (:., :b, (:quote, #QuoteNode
                      :head
                    ))),
                (:line, 2308, :none),
                (:&&, (:call, :is_meta_expr_head, :head), (:return, nothing)),
                (:line, 2309, :none),
                (:if, (:call, :(===), :head, (:quote, #QuoteNode
                      :(=)
                    )), (:block,
                    (:line, 2310, :none),
                    (:if, (:call, :isa, (:ref, (:., :b, (:quote, #QuoteNode
                              :args
                            )), 1), :SSAValue), (:block,
                        (:line, 2311, :none),
                        (:(=), :id, (:call, :+, (:., (:(::), (:ref, (:., :b, (:quote, #QuoteNode
                                      :args
                                    )), 1), :SSAValue), (:quote, #QuoteNode
                                :id
                              )), 1)),
                        (:line, 2312, :none),
                        (:while, (:call, :<, (:call, :length, :uses), :id), (:block,
                            (:line, 2313, :none),
                            (:call, :push!, :uses, (:call, :IntSet))
                          ))
                      )),
                    (:line, 2316, :none),
                    (:call, :find_ssavalue_uses, (:ref, (:., :b, (:quote, #QuoteNode
                            :args
                          )), 2), :uses, :line),
                    (:line, 2317, :none),
                    (:return, nothing)
                  )),
                (:line, 2319, :none),
                (:for, (:(=), :a, (:., :b, (:quote, #QuoteNode
                        :args
                      ))), (:block,
                    (:line, 2320, :none),
                    (:call, :find_ssavalue_uses, :a, :uses, :line)
                  ))
              ))
          ))
      )),
    (:line, 2325, :none),
    (:function, (:call, :newvar!, (:(::), :sv, :InferenceState), (:(::), :typ, :ANY)), (:block,
        (:line, 2326, :none),
        (:(=), :id, (:call, :length, (:., (:., :sv, (:quote, #QuoteNode
                  :src
                )), (:quote, #QuoteNode
                :ssavaluetypes
              )))),
        (:line, 2327, :none),
        (:call, :push!, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :ssavaluetypes
            )), :typ),
        (:line, 2328, :none),
        (:return, (:call, :SSAValue, :id))
      )),
    (:line, 2331, :none),
    (:(=), (:call, :inlining_enabled), (:block,
        (:line, 2331, :none),
        (:call, :(==), (:., (:call, :JLOptions), (:quote, #QuoteNode
              :can_inline
            )), 1)
      )),
    (:line, 2332, :none),
    (:(=), (:call, :coverage_enabled), (:block,
        (:line, 2332, :none),
        (:call, :(!=), (:., (:call, :JLOptions), (:quote, #QuoteNode
              :code_coverage
            )), 0)
      )),
    (:line, 2336, :none),
    (:function, (:call, :converge_valid_age!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 2339, :none),
        (:for, (:(=), (:tuple, :i, :_), (:., :sv, (:quote, #QuoteNode
                :backedges
              ))), (:block,
            (:line, 2340, :none),
            (:if, (:., :i, (:quote, #QuoteNode
                  :fixedpoint
                )), (:block,
                (:line, 2341, :none),
                (:(=), :updated, false),
                (:line, 2342, :none),
                (:if, (:call, :<, (:., :i, (:quote, #QuoteNode
                        :min_valid
                      )), (:., :sv, (:quote, #QuoteNode
                        :min_valid
                      ))), (:block,
                    (:line, 2343, :none),
                    (:(=), (:., :i, (:quote, #QuoteNode
                          :min_valid
                        )), (:., :sv, (:quote, #QuoteNode
                          :min_valid
                        ))),
                    (:line, 2344, :none),
                    (:(=), :updated, true)
                  )),
                (:line, 2346, :none),
                (:if, (:call, :>, (:., :i, (:quote, #QuoteNode
                        :max_valid
                      )), (:., :sv, (:quote, #QuoteNode
                        :max_valid
                      ))), (:block,
                    (:line, 2347, :none),
                    (:(=), (:., :i, (:quote, #QuoteNode
                          :max_valid
                        )), (:., :sv, (:quote, #QuoteNode
                          :max_valid
                        ))),
                    (:line, 2348, :none),
                    (:(=), :updated, true)
                  )),
                (:line, 2350, :none),
                (:macrocall, Symbol("@assert"), (:||, (:call, :!, (:call, :isdefined, (:., :i, (:quote, #QuoteNode
                            :linfo
                          )), (:quote, #QuoteNode
                          :def
                        ))), (:||, (:call, :!, (:., :i, (:quote, #QuoteNode
                            :cached
                          ))), (:comparison, (:., :i, (:quote, #QuoteNode
                            :min_valid
                          )), :(<=), (:., (:., :i, (:quote, #QuoteNode
                              :params
                            )), (:quote, #QuoteNode
                            :world
                          )), :(<=), (:., :i, (:quote, #QuoteNode
                            :max_valid
                          ))))), "invalid age range update"),
                (:line, 2351, :none),
                (:if, :updated, (:block,
                    (:line, 2352, :none),
                    (:call, :converge_valid_age!, :i)
                  ))
              ))
          )),
        (:line, 2356, :none),
        :nothing
      )),
    (:line, 2360, :none),
    (:function, (:call, :update_valid_age!, (:(::), :min_valid, :UInt), (:(::), :max_valid, :UInt), (:(::), :sv, :InferenceState)), (:block,
        (:line, 2361, :none),
        (:(=), (:., :sv, (:quote, #QuoteNode
              :min_valid
            )), (:call, :max, (:., :sv, (:quote, #QuoteNode
                :min_valid
              )), :min_valid)),
        (:line, 2362, :none),
        (:(=), (:., :sv, (:quote, #QuoteNode
              :max_valid
            )), (:call, :min, (:., :sv, (:quote, #QuoteNode
                :max_valid
              )), :max_valid)),
        (:line, 2363, :none),
        (:macrocall, Symbol("@assert"), (:||, (:call, :!, (:call, :isdefined, (:., :sv, (:quote, #QuoteNode
                    :linfo
                  )), (:quote, #QuoteNode
                  :def
                ))), (:||, (:call, :!, (:., :sv, (:quote, #QuoteNode
                    :cached
                  ))), (:comparison, (:., :sv, (:quote, #QuoteNode
                    :min_valid
                  )), :(<=), (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :world
                  )), :(<=), (:., :sv, (:quote, #QuoteNode
                    :max_valid
                  ))))), "invalid age range update"),
        (:line, 2364, :none),
        :nothing
      )),
    (:line, 2366, :none),
    (:(=), (:call, :update_valid_age!, (:(::), :edge, :InferenceState), (:(::), :sv, :InferenceState)), (:block,
        (:line, 2366, :none),
        (:call, :update_valid_age!, (:., :edge, (:quote, #QuoteNode
              :min_valid
            )), (:., :edge, (:quote, #QuoteNode
              :max_valid
            )), :sv)
      )),
    (:line, 2367, :none),
    (:(=), (:call, :update_valid_age!, (:(::), :li, :MethodInstance), (:(::), :sv, :InferenceState)), (:block,
        (:line, 2367, :none),
        (:call, :update_valid_age!, (:call, :min_world, :li), (:call, :max_world, :li), :sv)
      )),
    (:line, 2370, :none),
    (:function, (:call, :add_backedge, (:(::), :li, :MethodInstance), (:(::), :caller, :InferenceState)), (:block,
        (:line, 2371, :none),
        (:||, (:call, :isdefined, (:., :caller, (:quote, #QuoteNode
                :linfo
              )), (:quote, #QuoteNode
              :def
            )), (:return, nothing)),
        (:line, 2372, :none),
        (:if, (:call, :(===), (:ref, (:., :caller, (:quote, #QuoteNode
                  :stmt_edges
                )), (:., :caller, (:quote, #QuoteNode
                  :currpc
                ))), (:tuple,)), (:block,
            (:line, 2373, :none),
            (:(=), (:ref, (:., :caller, (:quote, #QuoteNode
                    :stmt_edges
                  )), (:., :caller, (:quote, #QuoteNode
                    :currpc
                  ))), (:vect,))
          )),
        (:line, 2375, :none),
        (:call, :push!, (:ref, (:., :caller, (:quote, #QuoteNode
                :stmt_edges
              )), (:., :caller, (:quote, #QuoteNode
                :currpc
              ))), :li),
        (:line, 2376, :none),
        (:call, :update_valid_age!, :li, :caller),
        (:line, 2377, :none),
        :nothing
      )),
    (:line, 2381, :none),
    (:function, (:call, :add_mt_backedge, (:(::), :mt, :MethodTable), (:(::), :typ, :ANY), (:(::), :caller, :InferenceState)), (:block,
        (:line, 2382, :none),
        (:||, (:call, :isdefined, (:., :caller, (:quote, #QuoteNode
                :linfo
              )), (:quote, #QuoteNode
              :def
            )), (:return, nothing)),
        (:line, 2383, :none),
        (:if, (:call, :(===), (:ref, (:., :caller, (:quote, #QuoteNode
                  :stmt_edges
                )), (:., :caller, (:quote, #QuoteNode
                  :currpc
                ))), (:tuple,)), (:block,
            (:line, 2384, :none),
            (:(=), (:ref, (:., :caller, (:quote, #QuoteNode
                    :stmt_edges
                  )), (:., :caller, (:quote, #QuoteNode
                    :currpc
                  ))), (:vect,))
          )),
        (:line, 2386, :none),
        (:call, :push!, (:ref, (:., :caller, (:quote, #QuoteNode
                :stmt_edges
              )), (:., :caller, (:quote, #QuoteNode
                :currpc
              ))), :mt),
        (:line, 2387, :none),
        (:call, :push!, (:ref, (:., :caller, (:quote, #QuoteNode
                :stmt_edges
              )), (:., :caller, (:quote, #QuoteNode
                :currpc
              ))), :typ),
        (:line, 2388, :none),
        :nothing
      )),
    (:line, 2392, :none),
    (:function, (:call, :finalize_backedges, (:(::), :frame, :InferenceState)), (:block,
        (:line, 2393, :none),
        (:(=), :toplevel, (:call, :!, (:call, :isdefined, (:., :frame, (:quote, #QuoteNode
                  :linfo
                )), (:quote, #QuoteNode
                :def
              )))),
        (:line, 2394, :none),
        (:if, (:&&, (:call, :!, :toplevel), (:&&, (:., :frame, (:quote, #QuoteNode
                  :cached
                )), (:call, :(==), (:., :frame, (:quote, #QuoteNode
                    :max_valid
                  )), (:call, :typemax, :UInt)))), (:block,
            (:line, 2395, :none),
            (:(=), :caller, (:., :frame, (:quote, #QuoteNode
                  :linfo
                ))),
            (:line, 2396, :none),
            (:for, (:(=), :edges, (:., :frame, (:quote, #QuoteNode
                    :stmt_edges
                  ))), (:block,
                (:line, 2397, :none),
                (:(=), :i, 1),
                (:line, 2398, :none),
                (:while, (:call, :(<=), :i, (:call, :length, :edges)), (:block,
                    (:line, 2399, :none),
                    (:(=), :to, (:ref, :edges, :i)),
                    (:line, 2400, :none),
                    (:if, (:call, :isa, :to, :MethodInstance), (:block,
                        (:line, 2401, :none),
                        (:call, :ccall, (:quote, #QuoteNode
                            :jl_method_instance_add_backedge
                          ), :Void, (:tuple, :Any, :Any), :to, :caller),
                        (:line, 2402, :none),
                        (:+=, :i, 1)
                      ), (:block,
                        (:line, 2404, :none),
                        (:call, :typeassert, :to, :MethodTable),
                        (:line, 2405, :none),
                        (:(=), :typ, (:ref, :edges, (:call, :+, :i, 1))),
                        (:line, 2406, :none),
                        (:call, :ccall, (:quote, #QuoteNode
                            :jl_method_table_add_backedge
                          ), :Void, (:tuple, :Any, :Any, :Any), :to, :typ, :caller),
                        (:line, 2407, :none),
                        (:+=, :i, 2)
                      ))
                  ))
              ))
          ))
      )),
    (:line, 2414, :none),
    (:function, (:call, :code_for_method, (:(::), :method, :Method), (:(::), :atypes, :ANY), (:(::), :sparams, :SimpleVector), (:(::), :world, :UInt), (:kw, (:(::), :preexisting, :Bool), false)), (:block,
        (:line, 2415, :none),
        (:if, (:call, :<, :world, (:call, :min_world, :method)), (:block,
            (:line, 2416, :none),
            (:return, :nothing)
          )),
        (:line, 2418, :none),
        (:if, (:&&, (:., :method, (:quote, #QuoteNode
                :isstaged
              )), (:call, :!, (:call, :isleaftype, :atypes))), (:block,
            (:line, 2423, :none),
            (:return, :nothing)
          )),
        (:line, 2425, :none),
        (:if, :preexisting, (:block,
            (:line, 2426, :none),
            (:if, (:call, :(!==), (:., :method, (:quote, #QuoteNode
                    :specializations
                  )), :nothing), (:block,
                (:line, 2429, :none),
                (:return, (:call, :ccall, (:quote, #QuoteNode
                      :jl_specializations_lookup
                    ), :Any, (:tuple, :Any, :Any, :UInt), :method, :atypes, :world))
              )),
            (:line, 2431, :none),
            (:return, :nothing)
          )),
        (:line, 2433, :none),
        (:return, (:call, :ccall, (:quote, #QuoteNode
              :jl_specializations_get_linfo
            ), (:curly, :Ref, :MethodInstance), (:tuple, :Any, :Any, :Any, :UInt), :method, :atypes, :sparams, :world))
      )),
    (:line, 2436, :none),
    (:function, (:call, :typeinf_active, (:(::), :linfo, :MethodInstance)), (:block,
        (:line, 2437, :none),
        (:for, (:(=), :infstate, :active), (:block,
            (:line, 2438, :none),
            (:&&, (:call, :(===), :infstate, :nothing), (:continue,)),
            (:line, 2439, :none),
            (:(=), :infstate, (:(::), :infstate, :InferenceState)),
            (:line, 2440, :none),
            (:if, (:&&, (:call, :(===), :linfo, (:., :infstate, (:quote, #QuoteNode
                      :linfo
                    ))), (:., :infstate, (:quote, #QuoteNode
                    :cached
                  ))), (:block,
                (:line, 2441, :none),
                (:return, :infstate)
              ))
          )),
        (:line, 2444, :none),
        (:return, :nothing)
      )),
    (:line, 2447, :none),
    (:function, (:call, :add_backedge, (:(::), :frame, :InferenceState), (:(::), :caller, :InferenceState), (:(::), :currpc, :Int)), (:block,
        (:line, 2448, :none),
        (:call, :update_valid_age!, :frame, :caller),
        (:line, 2449, :none),
        (:if, (:call, :haskey, (:., :caller, (:quote, #QuoteNode
                :edges
              )), :frame), (:block,
            (:line, 2450, :none),
            (:(=), :Ws, (:(::), (:ref, (:., :caller, (:quote, #QuoteNode
                      :edges
                    )), :frame), (:curly, :Vector, :Int))),
            (:line, 2451, :none),
            (:if, (:call, :!, (:call, :in, :currpc, :Ws)), (:block,
                (:line, 2452, :none),
                (:call, :push!, :Ws, :currpc)
              ))
          ), (:block,
            (:line, 2455, :none),
            (:(=), :Ws, (:ref, :Int, :currpc)),
            (:line, 2456, :none),
            (:(=), (:ref, (:., :caller, (:quote, #QuoteNode
                    :edges
                  )), :frame), :Ws),
            (:line, 2457, :none),
            (:call, :push!, (:., :frame, (:quote, #QuoteNode
                  :backedges
                )), (:tuple, :caller, :Ws))
          ))
      )),
    (:line, 2462, :none),
    (:function, (:call, :typeinf_frame, (:(::), :linfo, :MethodInstance), :caller, (:(::), :optimize, :Bool), (:(::), :cached, :Bool), (:(::), :params, :InferenceParams)), (:block,
        (:line, 2465, :none),
        (:if, (:&&, :cached, (:., :linfo, (:quote, #QuoteNode
                :inInference
              ))), (:block,
            (:line, 2468, :none),
            (:(=), :frame, (:call, :typeinf_active, :linfo)),
            (:line, 2470, :none),
            (:call, :assert, (:call, :(!==), :frame, :nothing))
          ), (:block,
            (:line, 2473, :none),
            (:if, (:., (:., :linfo, (:quote, #QuoteNode
                    :def
                  )), (:quote, #QuoteNode
                  :isstaged
                )), (:block,
                (:line, 2474, :none),
                (:try, (:block,
                    (:line, 2476, :none),
                    (:(=), :src, (:call, :get_staged, :linfo))
                  ), false, (:block,
                    (:line, 2478, :none),
                    (:return, :nothing)
                  ))
              ), (:block,
                (:line, 2481, :none),
                (:(=), :src, (:call, :get_source, :linfo))
              )),
            (:line, 2483, :none),
            (:&&, :cached, (:(=), (:., :linfo, (:quote, #QuoteNode
                    :inInference
                  )), true)),
            (:line, 2484, :none),
            (:(=), :frame, (:call, :InferenceState, :linfo, :src, :optimize, :cached, :params))
          )),
        (:line, 2486, :none),
        (:(=), :frame, (:(::), :frame, :InferenceState)),
        (:line, 2488, :none),
        (:if, (:call, :isa, :caller, :InferenceState), (:block,
            (:line, 2491, :none),
            (:macrocall, Symbol("@assert"), (:call, :>, (:., :caller, (:quote, #QuoteNode
                    :currpc
                  )), 0)),
            (:line, 2492, :none),
            (:call, :add_backedge, :frame, :caller, (:., :caller, (:quote, #QuoteNode
                  :currpc
                )))
          )),
        (:line, 2494, :none),
        (:call, :typeinf_loop, :frame),
        (:line, 2495, :none),
        (:return, :frame)
      )),
    (:line, 2499, :none),
    (:function, (:call, :typeinf_edge, (:(::), :method, :Method), (:(::), :atypes, :ANY), (:(::), :sparams, :SimpleVector), (:(::), :caller, :InferenceState)), (:block,
        (:line, 2500, :none),
        (:(=), :code, (:call, :code_for_method, :method, :atypes, :sparams, (:., (:., :caller, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :world
              )))),
        (:line, 2501, :none),
        (:&&, (:call, :(===), :code, :nothing), (:return, :Any)),
        (:line, 2502, :none),
        (:(=), :code, (:(::), :code, :MethodInstance)),
        (:line, 2503, :none),
        (:if, (:call, :isdefined, :code, (:quote, #QuoteNode
              :inferred
            )), (:block,
            (:line, 2507, :none),
            (:(=), :inf, (:., :code, (:quote, #QuoteNode
                  :inferred
                ))),
            (:line, 2508, :none),
            (:if, (:||, (:call, :!, (:call, :isa, :inf, :CodeInfo)), (:., (:(::), :inf, :CodeInfo), (:quote, #QuoteNode
                    :inferred
                  ))), (:block,
                (:line, 2509, :none),
                (:call, :add_backedge, :code, :caller),
                (:line, 2510, :none),
                (:if, (:call, :isdefined, :code, (:quote, #QuoteNode
                      :inferred_const
                    )), (:block,
                    (:line, 2511, :none),
                    (:return, (:call, :abstract_eval_constant, (:., :code, (:quote, #QuoteNode
                            :inferred_const
                          ))))
                  ), (:block,
                    (:line, 2513, :none),
                    (:return, (:., :code, (:quote, #QuoteNode
                          :rettype
                        )))
                  ))
              ))
          )),
        (:line, 2517, :none),
        (:(=), :frame, (:call, :typeinf_frame, :code, :caller, true, true, (:., :caller, (:quote, #QuoteNode
                :params
              )))),
        (:line, 2518, :none),
        (:&&, (:call, :(===), :frame, :nothing), (:return, :Any)),
        (:line, 2519, :none),
        (:(=), :frame, (:(::), :frame, :InferenceState)),
        (:line, 2520, :none),
        (:return, (:., :frame, (:quote, #QuoteNode
              :bestguess
            )))
      )),
    (:line, 2526, :none),
    (:function, (:call, :typeinf_code, (:(::), :method, :Method), (:(::), :atypes, :ANY), (:(::), :sparams, :SimpleVector), (:(::), :optimize, :Bool), (:(::), :cached, :Bool), (:(::), :params, :InferenceParams)), (:block,
        (:line, 2528, :none),
        (:(=), :code, (:call, :code_for_method, :method, :atypes, :sparams, (:., :params, (:quote, #QuoteNode
                :world
              )))),
        (:line, 2529, :none),
        (:&&, (:call, :(===), :code, :nothing), (:return, (:tuple, :nothing, :nothing, :Any))),
        (:line, 2530, :none),
        (:return, (:call, :typeinf_code, (:(::), :code, :MethodInstance), :optimize, :cached, :params))
      )),
    (:line, 2532, :none),
    (:function, (:call, :typeinf_code, (:(::), :linfo, :MethodInstance), (:(::), :optimize, :Bool), (:(::), :cached, :Bool), (:(::), :params, :InferenceParams)), (:block,
        (:line, 2534, :none),
        (:for, (:(=), :i, (:(:), 1, 2)), (:block,
            (:line, 2535, :none),
            (:&&, (:call, :(==), :i, 2), (:call, :ccall, (:quote, #QuoteNode
                  :jl_typeinf_begin
                ), :Void, (:tuple,))),
            (:line, 2536, :none),
            (:if, (:&&, :cached, (:call, :isdefined, :linfo, (:quote, #QuoteNode
                    :inferred
                  ))), (:block,
                (:line, 2540, :none),
                (:if, (:comparison, (:call, :min_world, :linfo), :(<=), (:., :params, (:quote, #QuoteNode
                        :world
                      )), :(<=), (:call, :max_world, :linfo)), (:block,
                    (:line, 2541, :none),
                    (:(=), :inf, (:., :linfo, (:quote, #QuoteNode
                          :inferred
                        ))),
                    (:line, 2542, :none),
                    (:if, (:call, :(==), (:., :linfo, (:quote, #QuoteNode
                            :jlcall_api
                          )), 2), (:block,
                        (:line, 2543, :none),
                        (:(=), :method, (:., :linfo, (:quote, #QuoteNode
                              :def
                            ))),
                        (:line, 2544, :none),
                        (:(=), :tree, (:call, :ccall, (:quote, #QuoteNode
                              :jl_new_code_info_uninit
                            ), (:curly, :Ref, :CodeInfo), (:tuple,))),
                        (:line, 2545, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :code
                            )), (:ref, :Any, (:call, :Expr, (:quote, #QuoteNode
                                :return
                              ), (:call, :QuoteNode, (:., :linfo, (:quote, #QuoteNode
                                    :inferred_const
                                  )))))),
                        (:line, 2546, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :slotnames
                            )), (:typed_comprehension, :Any, (:generator, :compiler_temp_sym, (:(=), :i, (:(:), 1, (:., :method, (:quote, #QuoteNode
                                      :nargs
                                    ))))))),
                        (:line, 2547, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :slotflags
                            )), (:typed_comprehension, :UInt8, (:generator, 0, (:(=), :i, (:(:), 1, (:., :method, (:quote, #QuoteNode
                                      :nargs
                                    ))))))),
                        (:line, 2548, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :slottypes
                            )), :nothing),
                        (:line, 2549, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :ssavaluetypes
                            )), 0),
                        (:line, 2550, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :inferred
                            )), true),
                        (:line, 2551, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :pure
                            )), true),
                        (:line, 2552, :none),
                        (:(=), (:., :tree, (:quote, #QuoteNode
                              :inlineable
                            )), true),
                        (:line, 2553, :none),
                        (:&&, (:call, :(==), :i, 2), (:call, :ccall, (:quote, #QuoteNode
                              :jl_typeinf_end
                            ), :Void, (:tuple,))),
                        (:line, 2554, :none),
                        (:return, (:call, :svec, :linfo, :tree, (:., :linfo, (:quote, #QuoteNode
                                :rettype
                              ))))
                      ), (:block,
                        (:line, 2555, :none),
                        (:if, (:call, :isa, :inf, :CodeInfo), (:block,
                            (:line, 2556, :none),
                            (:if, (:., :inf, (:quote, #QuoteNode
                                  :inferred
                                )), (:block,
                                (:line, 2557, :none),
                                (:&&, (:call, :(==), :i, 2), (:call, :ccall, (:quote, #QuoteNode
                                      :jl_typeinf_end
                                    ), :Void, (:tuple,))),
                                (:line, 2558, :none),
                                (:return, (:call, :svec, :linfo, :inf, (:., :linfo, (:quote, #QuoteNode
                                        :rettype
                                      ))))
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 2564, :none),
        (:(=), :frame, (:call, :typeinf_frame, :linfo, :nothing, :optimize, :cached, :params)),
        (:line, 2565, :none),
        (:call, :ccall, (:quote, #QuoteNode
            :jl_typeinf_end
          ), :Void, (:tuple,)),
        (:line, 2566, :none),
        (:&&, (:call, :(===), :frame, :nothing), (:return, (:call, :svec, :nothing, :nothing, :Any))),
        (:line, 2567, :none),
        (:(=), :frame, (:(::), :frame, :InferenceState)),
        (:line, 2568, :none),
        (:||, (:., :frame, (:quote, #QuoteNode
              :inferred
            )), (:return, (:call, :svec, :nothing, :nothing, :Any))),
        (:line, 2569, :none),
        (:||, (:., :frame, (:quote, #QuoteNode
              :cached
            )), (:return, (:call, :svec, :nothing, (:., :frame, (:quote, #QuoteNode
                  :src
                )), (:call, :widenconst, (:., :frame, (:quote, #QuoteNode
                    :bestguess
                  )))))),
        (:line, 2570, :none),
        (:return, (:call, :svec, (:., :frame, (:quote, #QuoteNode
                :linfo
              )), (:., :frame, (:quote, #QuoteNode
                :src
              )), (:call, :widenconst, (:., :frame, (:quote, #QuoteNode
                  :bestguess
                )))))
      )),
    (:line, 2574, :none),
    (:function, (:call, :typeinf_type, (:(::), :method, :Method), (:(::), :atypes, :ANY), (:(::), :sparams, :SimpleVector), (:(::), :cached, :Bool), (:(::), :params, :InferenceParams)), (:block,
        (:line, 2576, :none),
        (:(=), :code, (:call, :code_for_method, :method, :atypes, :sparams, (:., :params, (:quote, #QuoteNode
                :world
              )))),
        (:line, 2577, :none),
        (:&&, (:call, :(===), :code, :nothing), (:return, :nothing)),
        (:line, 2578, :none),
        (:(=), :code, (:(::), :code, :MethodInstance)),
        (:line, 2579, :none),
        (:for, (:(=), :i, (:(:), 1, 2)), (:block,
            (:line, 2580, :none),
            (:&&, (:call, :(==), :i, 2), (:call, :ccall, (:quote, #QuoteNode
                  :jl_typeinf_begin
                ), :Void, (:tuple,))),
            (:line, 2581, :none),
            (:if, (:&&, :cached, (:call, :isdefined, :code, (:quote, #QuoteNode
                    :inferred
                  ))), (:block,
                (:line, 2585, :none),
                (:(=), :inf, (:., :code, (:quote, #QuoteNode
                      :inferred
                    ))),
                (:line, 2586, :none),
                (:if, (:||, (:call, :!, (:call, :isa, :inf, :CodeInfo)), (:., (:(::), :inf, :CodeInfo), (:quote, #QuoteNode
                        :inferred
                      ))), (:block,
                    (:line, 2587, :none),
                    (:&&, (:call, :(==), :i, 2), (:call, :ccall, (:quote, #QuoteNode
                          :jl_typeinf_end
                        ), :Void, (:tuple,))),
                    (:line, 2588, :none),
                    (:return, (:., :code, (:quote, #QuoteNode
                          :rettype
                        )))
                  ))
              ))
          )),
        (:line, 2592, :none),
        (:(=), :frame, (:call, :typeinf_frame, :code, :nothing, :cached, :cached, :params)),
        (:line, 2593, :none),
        (:call, :ccall, (:quote, #QuoteNode
            :jl_typeinf_end
          ), :Void, (:tuple,)),
        (:line, 2594, :none),
        (:&&, (:call, :(===), :frame, :nothing), (:return, :nothing)),
        (:line, 2595, :none),
        (:(=), :frame, (:(::), :frame, :InferenceState)),
        (:line, 2596, :none),
        (:||, (:., :frame, (:quote, #QuoteNode
              :inferred
            )), (:return, :nothing)),
        (:line, 2597, :none),
        (:return, (:call, :widenconst, (:., :frame, (:quote, #QuoteNode
                :bestguess
              ))))
      )),
    (:line, 2600, :none),
    (:function, (:call, :typeinf_ext, (:(::), :linfo, :MethodInstance), (:(::), :world, :UInt)), (:block,
        (:line, 2601, :none),
        (:if, (:call, :isdefined, :linfo, (:quote, #QuoteNode
              :def
            )), (:block,
            (:line, 2603, :none),
            (:return, (:call, :typeinf_code, :linfo, true, true, (:call, :InferenceParams, :world)))
          ), (:block,
            (:line, 2606, :none),
            (:(=), (:., :linfo, (:quote, #QuoteNode
                  :inInference
                )), true),
            (:line, 2607, :none),
            (:call, :ccall, (:quote, #QuoteNode
                :jl_typeinf_begin
              ), :Void, (:tuple,)),
            (:line, 2608, :none),
            (:(=), :frame, (:call, :InferenceState, :linfo, (:(::), (:., :linfo, (:quote, #QuoteNode
                      :inferred
                    )), :CodeInfo), true, true, (:call, :InferenceParams, :world))),
            (:line, 2610, :none),
            (:call, :typeinf_loop, :frame),
            (:line, 2611, :none),
            (:call, :ccall, (:quote, #QuoteNode
                :jl_typeinf_end
              ), :Void, (:tuple,)),
            (:line, 2612, :none),
            (:macrocall, Symbol("@assert"), (:., :frame, (:quote, #QuoteNode
                  :inferred
                ))),
            (:line, 2613, :none),
            (:macrocall, Symbol("@assert"), (:call, :(===), (:., :frame, (:quote, #QuoteNode
                    :linfo
                  )), :linfo)),
            (:line, 2614, :none),
            (:return, (:call, :svec, :linfo, (:., :frame, (:quote, #QuoteNode
                    :src
                  )), (:., :linfo, (:quote, #QuoteNode
                    :rettype
                  ))))
          ))
      )),
    (:line, 2620, :none),
    (:(=), :in_typeinf_loop, false),
    (:line, 2621, :none),
    (:function, (:call, :typeinf_loop, :frame), (:block,
        (:line, 2622, :none),
        (:global, :in_typeinf_loop),
        (:line, 2623, :none),
        (:if, :in_typeinf_loop, (:block,
            (:line, 2624, :none),
            (:||, (:., :frame, (:quote, #QuoteNode
                  :inworkq
                )), (:call, :typeinf_frame, :frame)),
            (:line, 2625, :none),
            (:return, nothing)
          )),
        (:line, 2627, :none),
        (:try, (:block,
            (:line, 2628, :none),
            (:(=), :in_typeinf_loop, true),
            (:line, 2632, :none),
            (:while, (:call, :>, (:ref, :nactive), 0), (:block,
                (:line, 2633, :none),
                (:while, (:call, :(===), (:ref, :active, :end), :nothing), (:block,
                    (:line, 2634, :none),
                    (:call, :pop!, :active)
                  )),
                (:line, 2636, :none),
                (:if, (:call, :isempty, :workq), (:block,
                    (:line, 2637, :none),
                    (:(=), :frame, (:(::), (:ref, :active, :end), :InferenceState))
                  ), (:block,
                    (:line, 2639, :none),
                    (:(=), :frame, (:call, :pop!, :workq))
                  )),
                (:line, 2641, :none),
                (:call, :typeinf_frame, :frame),
                (:line, 2642, :none),
                (:if, (:&&, (:call, :isempty, :workq), (:call, :>, (:ref, :nactive), 0)), (:block,
                    (:line, 2645, :none),
                    (:(=), :fplist, (:ref, :Any)),
                    (:line, 2646, :none),
                    (:for, (:(=), :i, :active), (:block,
                        (:line, 2647, :none),
                        (:&&, (:call, :(===), :i, :nothing), (:continue,)),
                        (:line, 2648, :none),
                        (:(=), :i, (:(::), :i, :InferenceState)),
                        (:line, 2649, :none),
                        (:if, (:., :i, (:quote, #QuoteNode
                              :fixedpoint
                            )), (:block,
                            (:line, 2650, :none),
                            (:call, :push!, :fplist, :i),
                            (:line, 2651, :none),
                            (:(=), (:., :i, (:quote, #QuoteNode
                                  :inworkq
                                )), true)
                          ))
                      )),
                    (:line, 2654, :none),
                    (:for, (:(=), :i, (:(:), (:call, :length, :fplist), -1, 1)), (:block,
                        (:line, 2657, :none),
                        (:call, :optimize, (:(::), (:ref, :fplist, :i), :InferenceState))
                      )),
                    (:line, 2659, :none),
                    (:for, (:(=), :i, :fplist), (:block,
                        (:line, 2661, :none),
                        (:call, :converge_valid_age!, (:(::), :i, :InferenceState))
                      )),
                    (:line, 2663, :none),
                    (:for, (:(=), :i, :fplist), (:block,
                        (:line, 2665, :none),
                        (:call, :finish, (:(::), :i, :InferenceState))
                      )),
                    (:line, 2667, :none),
                    (:for, (:(=), :i, :fplist), (:block,
                        (:line, 2669, :none),
                        (:call, :finalize_backedges, (:(::), :i, :InferenceState))
                      ))
                  ))
              )),
            (:line, 2674, :none),
            (:call, :empty!, :active),
            (:line, 2681, :none),
            (:(=), :in_typeinf_loop, false)
          ), :ex, (:block,
            (:line, 2683, :none),
            (:call, :println, "WARNING: An error occurred during inference. Type inference is now partially disabled."),
            (:line, 2684, :none),
            (:call, :println, :ex),
            (:line, 2685, :none),
            (:call, :ccall, (:quote, #QuoteNode
                :jlbacktrace
              ), :Void, (:tuple,))
          )),
        (:line, 2687, :none),
        :nothing
      )),
    (:line, 2690, :none),
    (:(=), :global_sv, :nothing),
    (:line, 2691, :none),
    (:function, (:call, :typeinf_frame, :frame), (:block,
        (:line, 2692, :none),
        (:global, :global_sv),
        (:line, 2693, :none),
        (:(=), :last_global_sv, :global_sv),
        (:line, 2694, :none),
        (:(=), :global_sv, :frame),
        (:line, 2695, :none),
        (:macrocall, Symbol("@assert"), (:call, :!, (:., :frame, (:quote, #QuoteNode
                :inferred
              )))),
        (:line, 2696, :none),
        (:(=), (:., :frame, (:quote, #QuoteNode
              :inworkq
            )), true),
        (:line, 2697, :none),
        (:(=), :W, (:., :frame, (:quote, #QuoteNode
              :ip
            ))),
        (:line, 2698, :none),
        (:(=), :s, (:., :frame, (:quote, #QuoteNode
              :stmt_types
            ))),
        (:line, 2699, :none),
        (:(=), :n, (:., :frame, (:quote, #QuoteNode
              :nstmts
            ))),
        (:line, 2700, :none),
        (:while, (:call, :(<=), (:., :frame, (:quote, #QuoteNode
                :pc´´
              )), :n), (:block,
            (:line, 2702, :none),
            (:local, (:(=), (:(::), :pc, :Int), (:., :frame, (:quote, #QuoteNode
                    :pc´´
                  )))),
            (:line, 2703, :none),
            (:while, true, (:block,
                (:line, 2705, :none),
                (:local, (:(=), (:(::), :pc´, :Int), (:call, :+, :pc, 1))),
                (:line, 2706, :none),
                (:if, (:call, :(==), :pc, (:., :frame, (:quote, #QuoteNode
                        :pc´´
                      ))), (:block,
                    (:line, 2708, :none),
                    (:(=), :min_pc, (:ref, (:call, :next, :W, :pc), 2)),
                    (:line, 2709, :none),
                    (:if, (:call, :done, :W, :min_pc), (:block,
                        (:line, 2710, :none),
                        (:(=), (:., :frame, (:quote, #QuoteNode
                              :pc´´
                            )), (:call, :max, :min_pc, (:call, :+, :n, 1)))
                      ), (:block,
                        (:line, 2712, :none),
                        (:(=), (:., :frame, (:quote, #QuoteNode
                              :pc´´
                            )), :min_pc)
                      ))
                  )),
                (:line, 2715, :none),
                (:call, :delete!, :W, :pc),
                (:line, 2716, :none),
                (:(=), (:., :frame, (:quote, #QuoteNode
                      :currpc
                    )), :pc),
                (:line, 2717, :none),
                (:(=), (:., :frame, (:quote, #QuoteNode
                      :cur_hand
                    )), (:ref, (:., :frame, (:quote, #QuoteNode
                        :handler_at
                      )), :pc)),
                (:line, 2718, :none),
                (:||, (:call, :(===), (:ref, (:., :frame, (:quote, #QuoteNode
                          :stmt_edges
                        )), :pc), (:tuple,)), (:call, :empty!, (:ref, (:., :frame, (:quote, #QuoteNode
                          :stmt_edges
                        )), :pc))),
                (:line, 2719, :none),
                (:(=), :stmt, (:ref, (:., (:., :frame, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :code
                      )), :pc)),
                (:line, 2720, :none),
                (:(=), :changes, (:call, :abstract_interpret, :stmt, (:(::), (:ref, :s, :pc), :VarTable), :frame)),
                (:line, 2721, :none),
                (:if, (:call, :(===), :changes, (:tuple,)), (:block,
                    (:line, 2722, :none),
                    (:break,)
                  )),
                (:line, 2725, :none),
                (:if, (:&&, (:call, :(!==), (:., :frame, (:quote, #QuoteNode
                          :cur_hand
                        )), (:tuple,)), (:call, :isa, :changes, :StateUpdate)), (:block,
                    (:line, 2729, :none),
                    (:(=), :l, (:ref, (:., :frame, (:quote, #QuoteNode
                            :cur_hand
                          )), 1)),
                    (:line, 2730, :none),
                    (:if, (:call, :(!==), (:call, :stupdate1!, (:(::), (:ref, :s, :l), :VarTable), (:(::), :changes, :StateUpdate)), false), (:block,
                        (:line, 2731, :none),
                        (:if, (:call, :<, :l, (:., :frame, (:quote, #QuoteNode
                                :pc´´
                              ))), (:block,
                            (:line, 2732, :none),
                            (:(=), (:., :frame, (:quote, #QuoteNode
                                  :pc´´
                                )), :l)
                          )),
                        (:line, 2734, :none),
                        (:call, :push!, :W, :l)
                      ))
                  )),
                (:line, 2737, :none),
                (:if, (:call, :isa, :changes, :StateUpdate), (:block,
                    (:line, 2738, :none),
                    (:(=), :changes_var, (:., :changes, (:quote, #QuoteNode
                          :var
                        ))),
                    (:line, 2739, :none),
                    (:if, (:call, :isa, :changes_var, :SSAValue), (:block,
                        (:line, 2741, :none),
                        (:call, :record_ssa_assign, (:call, :+, (:., :changes_var, (:quote, #QuoteNode
                                :id
                              )), 1), (:., (:., :changes, (:quote, #QuoteNode
                                :vtype
                              )), (:quote, #QuoteNode
                              :typ
                            )), :frame)
                      ))
                  ), (:block,
                    (:line, 2743, :none),
                    (:if, (:call, :isa, :stmt, :GotoNode), (:block,
                        (:line, 2744, :none),
                        (:(=), :pc´, (:., (:(::), :stmt, :GotoNode), (:quote, #QuoteNode
                              :label
                            )))
                      ), (:block,
                        (:line, 2745, :none),
                        (:if, (:call, :isa, :stmt, :Expr), (:block,
                            (:line, 2746, :none),
                            (:(=), :stmt, (:(::), :stmt, :Expr)),
                            (:line, 2747, :none),
                            (:(=), :hd, (:., :stmt, (:quote, #QuoteNode
                                  :head
                                ))),
                            (:line, 2748, :none),
                            (:if, (:call, :(===), :hd, (:quote, #QuoteNode
                                  :gotoifnot
                                )), (:block,
                                (:line, 2749, :none),
                                (:(=), :condt, (:call, :abstract_eval, (:ref, (:., :stmt, (:quote, #QuoteNode
                                          :args
                                        )), 1), (:ref, :s, :pc), :frame)),
                                (:line, 2750, :none),
                                (:(=), :condval, (:if, (:call, :isa, :condt, :Const), (:., :condt, (:quote, #QuoteNode
                                        :val
                                      )), :nothing)),
                                (:line, 2751, :none),
                                (:(=), :l, (:(::), (:ref, (:., :stmt, (:quote, #QuoteNode
                                          :args
                                        )), 2), :Int)),
                                (:line, 2752, :none),
                                (:(=), :changes, (:(::), :changes, :VarTable)),
                                (:line, 2754, :none),
                                (:if, (:call, :(===), :condval, true), (:block,), (:block,
                                    (:line, 2755, :none),
                                    (:if, (:call, :(===), :condval, false), (:block,
                                        (:line, 2756, :none),
                                        (:(=), :pc´, :l)
                                      ), (:block,
                                        (:line, 2759, :none),
                                        (:(=), (:ref, (:., :frame, (:quote, #QuoteNode
                                                :handler_at
                                              )), :l), (:., :frame, (:quote, #QuoteNode
                                              :cur_hand
                                            ))),
                                        (:line, 2760, :none),
                                        (:if, (:call, :isa, :condt, :Conditional), (:block,
                                            (:line, 2761, :none),
                                            (:(=), :changes_else, (:call, :StateUpdate, (:., :condt, (:quote, #QuoteNode
                                                    :var
                                                  )), (:call, :VarState, (:., :condt, (:quote, #QuoteNode
                                                      :elsetype
                                                    )), false), :changes)),
                                            (:line, 2762, :none),
                                            (:(=), :changes, (:call, :StateUpdate, (:., :condt, (:quote, #QuoteNode
                                                    :var
                                                  )), (:call, :VarState, (:., :condt, (:quote, #QuoteNode
                                                      :vtype
                                                    )), false), :changes))
                                          ), (:block,
                                            (:line, 2764, :none),
                                            (:(=), :changes_else, :changes)
                                          )),
                                        (:line, 2766, :none),
                                        (:(=), :newstate_else, (:call, :stupdate!, (:ref, :s, :l), :changes_else)),
                                        (:line, 2767, :none),
                                        (:if, (:call, :(!==), :newstate_else, false), (:block,
                                            (:line, 2769, :none),
                                            (:if, (:call, :<, :l, (:., :frame, (:quote, #QuoteNode
                                                    :pc´´
                                                  ))), (:block,
                                                (:line, 2770, :none),
                                                (:(=), (:., :frame, (:quote, #QuoteNode
                                                      :pc´´
                                                    )), :l)
                                              )),
                                            (:line, 2772, :none),
                                            (:call, :push!, :W, :l),
                                            (:line, 2773, :none),
                                            (:(=), (:ref, :s, :l), :newstate_else)
                                          ))
                                      ))
                                  ))
                              ), (:block,
                                (:line, 2776, :none),
                                (:if, (:call, :(===), :hd, (:quote, #QuoteNode
                                      :return
                                    )), (:block,
                                    (:line, 2777, :none),
                                    (:(=), :pc´, (:call, :+, :n, 1)),
                                    (:line, 2778, :none),
                                    (:(=), :rt, (:call, :abstract_eval, (:ref, (:., :stmt, (:quote, #QuoteNode
                                              :args
                                            )), 1), (:ref, :s, :pc), :frame)),
                                    (:line, 2779, :none),
                                    (:if, (:call, :tchanged, :rt, (:., :frame, (:quote, #QuoteNode
                                            :bestguess
                                          ))), (:block,
                                        (:line, 2781, :none),
                                        (:(=), (:., :frame, (:quote, #QuoteNode
                                              :bestguess
                                            )), (:call, :tmerge, (:., :frame, (:quote, #QuoteNode
                                                :bestguess
                                              )), :rt)),
                                        (:line, 2782, :none),
                                        (:for, (:(=), (:tuple, :caller, :callerW), (:., :frame, (:quote, #QuoteNode
                                                :backedges
                                              ))), (:block,
                                            (:line, 2784, :none),
                                            (:for, (:(=), :caller_pc, :callerW), (:block,
                                                (:line, 2785, :none),
                                                (:if, (:call, :(!==), (:ref, (:., :caller, (:quote, #QuoteNode
                                                          :stmt_types
                                                        )), :caller_pc), (:tuple,)), (:block,
                                                    (:line, 2786, :none),
                                                    (:if, (:call, :<, :caller_pc, (:., :caller, (:quote, #QuoteNode
                                                            :pc´´
                                                          ))), (:block,
                                                        (:line, 2787, :none),
                                                        (:(=), (:., :caller, (:quote, #QuoteNode
                                                              :pc´´
                                                            )), :caller_pc)
                                                      )),
                                                    (:line, 2789, :none),
                                                    (:call, :push!, (:., :caller, (:quote, #QuoteNode
                                                          :ip
                                                        )), :caller_pc)
                                                  ))
                                              ))
                                          )),
                                        (:line, 2793, :none),
                                        (:call, :unmark_fixedpoint, :frame)
                                      ))
                                  ), (:block,
                                    (:line, 2795, :none),
                                    (:if, (:call, :(===), :hd, (:quote, #QuoteNode
                                          :enter
                                        )), (:block,
                                        (:line, 2796, :none),
                                        (:(=), :l, (:(::), (:ref, (:., :stmt, (:quote, #QuoteNode
                                                  :args
                                                )), 1), :Int)),
                                        (:line, 2797, :none),
                                        (:(=), (:., :frame, (:quote, #QuoteNode
                                              :cur_hand
                                            )), (:tuple, :l, (:., :frame, (:quote, #QuoteNode
                                                :cur_hand
                                              )))),
                                        (:line, 2799, :none),
                                        (:(=), :l, (:ref, (:., :frame, (:quote, #QuoteNode
                                                :cur_hand
                                              )), 1)),
                                        (:line, 2800, :none),
                                        (:(=), :old, (:ref, :s, :l)),
                                        (:line, 2801, :none),
                                        (:(=), :new, (:(::), (:ref, :s, :pc), (:curly, :Array, :Any, 1))),
                                        (:line, 2802, :none),
                                        (:(=), :newstate_catch, (:call, :stupdate!, :old, :new)),
                                        (:line, 2803, :none),
                                        (:if, (:call, :(!==), :newstate_catch, false), (:block,
                                            (:line, 2804, :none),
                                            (:if, (:call, :<, :l, (:., :frame, (:quote, #QuoteNode
                                                    :pc´´
                                                  ))), (:block,
                                                (:line, 2805, :none),
                                                (:(=), (:., :frame, (:quote, #QuoteNode
                                                      :pc´´
                                                    )), :l)
                                              )),
                                            (:line, 2807, :none),
                                            (:call, :push!, :W, :l),
                                            (:line, 2808, :none),
                                            (:(=), (:ref, :s, :l), :newstate_catch)
                                          )),
                                        (:line, 2810, :none),
                                        (:call, :typeassert, (:ref, :s, :l), :VarTable),
                                        (:line, 2811, :none),
                                        (:(=), (:ref, (:., :frame, (:quote, #QuoteNode
                                                :handler_at
                                              )), :l), (:., :frame, (:quote, #QuoteNode
                                              :cur_hand
                                            )))
                                      ), (:block,
                                        (:line, 2812, :none),
                                        (:if, (:call, :(===), :hd, (:quote, #QuoteNode
                                              :leave
                                            )), (:block,
                                            (:line, 2813, :none),
                                            (:for, (:(=), :i, (:(:), 1, (:(::), (:ref, (:., :stmt, (:quote, #QuoteNode
                                                          :args
                                                        )), 1), :Int))), (:block,
                                                (:line, 2814, :none),
                                                (:(=), (:., :frame, (:quote, #QuoteNode
                                                      :cur_hand
                                                    )), (:ref, (:., :frame, (:quote, #QuoteNode
                                                        :cur_hand
                                                      )), 2))
                                              ))
                                          ))
                                      ))
                                  ))
                              ))
                          ))
                      ))
                  )),
                (:line, 2818, :none),
                (:&&, (:call, :>, :pc´, :n), (:break,)),
                (:line, 2819, :none),
                (:(=), (:ref, (:., :frame, (:quote, #QuoteNode
                        :handler_at
                      )), :pc´), (:., :frame, (:quote, #QuoteNode
                      :cur_hand
                    ))),
                (:line, 2820, :none),
                (:(=), :newstate, (:call, :stupdate!, (:ref, :s, :pc´), :changes)),
                (:line, 2821, :none),
                (:if, (:&&, (:call, :isa, :stmt, :GotoNode), (:call, :<, (:., :frame, (:quote, #QuoteNode
                          :pc´´
                        )), :pc´)), (:block,
                    (:line, 2826, :none),
                    (:if, (:call, :(!==), :newstate, false), (:block,
                        (:line, 2827, :none),
                        (:(=), (:ref, :s, :pc´), :newstate)
                      )),
                    (:line, 2829, :none),
                    (:call, :push!, :W, :pc´),
                    (:line, 2830, :none),
                    (:(=), :pc, (:., :frame, (:quote, #QuoteNode
                          :pc´´
                        )))
                  ), (:block,
                    (:line, 2831, :none),
                    (:if, (:call, :(!==), :newstate, false), (:block,
                        (:line, 2832, :none),
                        (:(=), (:ref, :s, :pc´), :newstate),
                        (:line, 2833, :none),
                        (:(=), :pc, :pc´)
                      ), (:block,
                        (:line, 2834, :none),
                        (:if, (:call, :in, :pc´, :W), (:block,
                            (:line, 2835, :none),
                            (:(=), :pc, :pc´)
                          ), (:block,
                            (:line, 2837, :none),
                            (:break,)
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 2844, :none),
        (:macrocall, Symbol("@assert"), (:call, :!, (:., :frame, (:quote, #QuoteNode
                :inferred
              )))),
        (:line, 2845, :none),
        (:(=), :finished, (:call, :isempty, (:., :frame, (:quote, #QuoteNode
                :edges
              )))),
        (:line, 2846, :none),
        (:if, (:call, :isempty, :workq), (:block,
            (:line, 2849, :none),
            (:(=), (:., :frame, (:quote, #QuoteNode
                  :fixedpoint
                )), true)
          )),
        (:line, 2852, :none),
        (:if, (:||, :finished, (:., :frame, (:quote, #QuoteNode
                :fixedpoint
              ))), (:block,
            (:line, 2853, :none),
            (:if, :finished, (:block,
                (:line, 2854, :none),
                (:call, :optimize, :frame),
                (:line, 2855, :none),
                (:call, :finish, :frame),
                (:line, 2856, :none),
                (:call, :finalize_backedges, :frame)
              ), (:block,
                (:line, 2858, :none),
                (:for, (:(=), (:tuple, :i, :_), (:., :frame, (:quote, #QuoteNode
                        :edges
                      ))), (:block,
                    (:line, 2859, :none),
                    (:(=), :i, (:(::), :i, :InferenceState)),
                    (:line, 2860, :none),
                    (:if, (:call, :!, (:., :i, (:quote, #QuoteNode
                            :fixedpoint
                          ))), (:block,
                        (:line, 2861, :none),
                        (:call, :update_valid_age!, :i, :frame),
                        (:line, 2862, :none),
                        (:if, (:call, :!, (:., :i, (:quote, #QuoteNode
                                :inworkq
                              ))), (:block,
                            (:line, 2863, :none),
                            (:call, :push!, :workq, :i),
                            (:line, 2864, :none),
                            (:(=), (:., :i, (:quote, #QuoteNode
                                  :inworkq
                                )), true)
                          )),
                        (:line, 2866, :none),
                        (:(=), (:., :i, (:quote, #QuoteNode
                              :fixedpoint
                            )), true)
                      ))
                  ))
              ))
          )),
        (:line, 2871, :none),
        (:(=), (:., :frame, (:quote, #QuoteNode
              :inworkq
            )), false),
        (:line, 2872, :none),
        (:(=), :global_sv, :last_global_sv),
        (:line, 2873, :none),
        :nothing
      )),
    (:line, 2876, :none),
    (:function, (:call, :unmark_fixedpoint, (:(::), :frame, :InferenceState)), (:block,
        (:line, 2880, :none),
        (:if, (:., :frame, (:quote, #QuoteNode
              :fixedpoint
            )), (:block,
            (:line, 2881, :none),
            (:(=), (:., :frame, (:quote, #QuoteNode
                  :fixedpoint
                )), false),
            (:line, 2882, :none),
            (:for, (:(=), (:tuple, :i, :_), (:., :frame, (:quote, #QuoteNode
                    :backedges
                  ))), (:block,
                (:line, 2883, :none),
                (:call, :unmark_fixedpoint, :i)
              ))
          ))
      )),
    (:line, 2888, :none),
    (:function, (:call, :record_ssa_assign, (:(::), :ssa_id, :Int), (:(::), :new, :ANY), (:(::), :frame, :InferenceState)), (:block,
        (:line, 2889, :none),
        (:(=), :old, (:ref, (:., (:., :frame, (:quote, #QuoteNode
                  :src
                )), (:quote, #QuoteNode
                :ssavaluetypes
              )), :ssa_id)),
        (:line, 2890, :none),
        (:if, (:||, (:call, :(===), :old, :NF), (:call, :!, (:call, :⊑, :new, :old))), (:block,
            (:line, 2891, :none),
            (:(=), (:ref, (:., (:., :frame, (:quote, #QuoteNode
                      :src
                    )), (:quote, #QuoteNode
                    :ssavaluetypes
                  )), :ssa_id), (:call, :tmerge, :old, :new)),
            (:line, 2892, :none),
            (:(=), :W, (:., :frame, (:quote, #QuoteNode
                  :ip
                ))),
            (:line, 2893, :none),
            (:(=), :s, (:., :frame, (:quote, #QuoteNode
                  :stmt_types
                ))),
            (:line, 2894, :none),
            (:for, (:(=), :r, (:ref, (:., :frame, (:quote, #QuoteNode
                      :ssavalue_uses
                    )), :ssa_id)), (:block,
                (:line, 2895, :none),
                (:if, (:call, :(!==), (:ref, :s, :r), (:tuple,)), (:block,
                    (:line, 2896, :none),
                    (:if, (:call, :<, :r, (:., :frame, (:quote, #QuoteNode
                            :pc´´
                          ))), (:block,
                        (:line, 2897, :none),
                        (:(=), (:., :frame, (:quote, #QuoteNode
                              :pc´´
                            )), :r)
                      )),
                    (:line, 2899, :none),
                    (:call, :push!, :W, :r)
                  ))
              ))
          )),
        (:line, 2903, :none),
        :nothing
      )),
    (:line, 2909, :none),
    (:function, (:call, :isinlineable, (:(::), :m, :Method), (:(::), :src, :CodeInfo)), (:block,
        (:line, 2910, :none),
        (:(=), :inlineable, false),
        (:line, 2911, :none),
        (:(=), :cost, 1000),
        (:line, 2912, :none),
        (:if, (:call, :(===), (:., :m, (:quote, #QuoteNode
                :module
              )), (:call, :_topmod, (:., :m, (:quote, #QuoteNode
                  :module
                )))), (:block,
            (:line, 2913, :none),
            (:(=), :name, (:., :m, (:quote, #QuoteNode
                  :name
                ))),
            (:line, 2914, :none),
            (:(=), :sig, (:., :m, (:quote, #QuoteNode
                  :sig
                ))),
            (:line, 2915, :none),
            (:if, (:&&, (:||, (:call, :(===), :name, (:quote, #QuoteNode
                      :+
                    )), (:||, (:call, :(===), :name, (:quote, #QuoteNode
                        :*
                      )), (:||, (:call, :(===), :name, (:quote, #QuoteNode
                          :min
                        )), (:call, :(===), :name, (:quote, #QuoteNode
                          :max
                        ))))), (:&&, (:call, :isa, :sig, :DataType), (:call, :(==), :sig, (:curly, :Tuple, (:ref, (:., :sig, (:quote, #QuoteNode
                            :parameters
                          )), 1), :Any, :Any, :Any, (:curly, :Vararg, :Any))))), (:block,
                (:line, 2918, :none),
                (:(=), :inlineable, true)
              ), (:block,
                (:line, 2919, :none),
                (:if, (:||, (:call, :(===), :name, (:quote, #QuoteNode
                        :next
                      )), (:||, (:call, :(===), :name, (:quote, #QuoteNode
                          :done
                        )), (:||, (:call, :(===), :name, (:quote, #QuoteNode
                            :unsafe_convert
                          )), (:call, :(===), :name, (:quote, #QuoteNode
                            :cconvert
                          ))))), (:block,
                    (:line, 2921, :none),
                    (:÷=, :cost, 4)
                  ))
              ))
          )),
        (:line, 2924, :none),
        (:if, (:call, :!, :inlineable), (:block,
            (:line, 2925, :none),
            (:(=), :inlineable, (:call, :inline_worthy_stmts, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :cost))
          )),
        (:line, 2927, :none),
        (:return, :inlineable)
      )),
    (:line, 2932, :none),
    (:function, (:call, :optimize, (:(::), :me, :InferenceState)), (:block,
        (:line, 2933, :none),
        (:for, (:(=), (:tuple, :i, :_), (:., :me, (:quote, #QuoteNode
                :edges
              ))), (:block,
            (:line, 2934, :none),
            (:(=), :i, (:(::), :i, :InferenceState)),
            (:line, 2935, :none),
            (:macrocall, Symbol("@assert"), (:., :i, (:quote, #QuoteNode
                  :fixedpoint
                )))
          )),
        (:line, 2941, :none),
        (:macrocall, Symbol("@assert"), (:., :me, (:quote, #QuoteNode
              :inworkq
            ))),
        (:line, 2944, :none),
        (:call, :type_annotate!, :me),
        (:line, 2947, :none),
        (:(=), :force_noinline, false),
        (:line, 2948, :none),
        (:if, (:., :me, (:quote, #QuoteNode
              :optimize
            )), (:block,
            (:line, 2954, :none),
            (:call, :gotoifnot_elim_pass!, :me),
            (:line, 2955, :none),
            (:call, :inlining_pass!, :me),
            (:line, 2956, :none),
            (:call, :void_use_elim_pass!, :me),
            (:line, 2957, :none),
            (:call, :alloc_elim_pass!, :me),
            (:line, 2958, :none),
            (:call, :getfield_elim_pass!, :me),
            (:line, 2960, :none),
            (:call, :void_use_elim_pass!, :me),
            (:line, 2961, :none),
            (:(=), :do_coverage, (:call, :coverage_enabled)),
            (:line, 2962, :none),
            (:call, :meta_elim_pass!, (:(::), (:., (:., :me, (:quote, #QuoteNode
                      :src
                    )), (:quote, #QuoteNode
                    :code
                  )), (:curly, :Array, :Any, 1)), (:., (:., :me, (:quote, #QuoteNode
                    :src
                  )), (:quote, #QuoteNode
                  :propagate_inbounds
                )), :do_coverage),
            (:line, 2964, :none),
            (:(=), :force_noinline, (:ref, (:call, :popmeta!, (:(::), (:., (:., :me, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :code
                      )), (:curly, :Array, :Any, 1)), (:quote, #QuoteNode
                    :noinline
                  )), 1)),
            (:line, 2965, :none),
            (:call, :reindex_labels!, :me)
          )),
        (:line, 2969, :none),
        (:call, :widen_all_consts!, (:., :me, (:quote, #QuoteNode
              :src
            ))),
        (:line, 2971, :none),
        (:if, (:||, (:call, :isa, (:., :me, (:quote, #QuoteNode
                  :bestguess
                )), :Const), (:call, :isconstType, (:., :me, (:quote, #QuoteNode
                  :bestguess
                )))), (:block,
            (:line, 2972, :none),
            (:(=), (:., :me, (:quote, #QuoteNode
                  :const_ret
                )), true),
            (:line, 2973, :none),
            (:(=), :proven_pure, false),
            (:line, 2978, :none),
            (:if, (:call, :<, (:call, :length, (:., (:., :me, (:quote, #QuoteNode
                        :src
                      )), (:quote, #QuoteNode
                      :code
                    ))), 10), (:block,
                (:line, 2979, :none),
                (:(=), :proven_pure, true),
                (:line, 2980, :none),
                (:for, (:(=), :stmt, (:., (:., :me, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :code
                      ))), (:block,
                    (:line, 2981, :none),
                    (:if, (:call, :!, (:call, :statement_effect_free, :stmt, (:., :me, (:quote, #QuoteNode
                              :src
                            )), (:., :me, (:quote, #QuoteNode
                              :mod
                            )))), (:block,
                        (:line, 2982, :none),
                        (:(=), :proven_pure, false),
                        (:line, 2983, :none),
                        (:break,)
                      ))
                  )),
                (:line, 2986, :none),
                (:if, :proven_pure, (:block,
                    (:line, 2987, :none),
                    (:for, (:(=), :fl, (:., (:., :me, (:quote, #QuoteNode
                              :src
                            )), (:quote, #QuoteNode
                            :slotflags
                          ))), (:block,
                        (:line, 2988, :none),
                        (:if, (:call, :(!=), (:call, :&, :fl, :Slot_UsedUndef), 0), (:block,
                            (:line, 2989, :none),
                            (:(=), :proven_pure, false),
                            (:line, 2990, :none),
                            (:break,)
                          ))
                      ))
                  ))
              )),
            (:line, 2995, :none),
            (:if, :proven_pure, (:block,
                (:line, 2996, :none),
                (:(=), (:., (:., :me, (:quote, #QuoteNode
                        :src
                      )), (:quote, #QuoteNode
                      :pure
                    )), true)
              )),
            (:line, 2999, :none),
            (:if, (:&&, :proven_pure, (:call, :!, (:call, :coverage_enabled))), (:block,
                (:line, 3006, :none),
                (:(=), (:., :me, (:quote, #QuoteNode
                      :const_api
                    )), true),
                (:line, 3007, :none),
                (:||, :force_noinline, (:(=), (:., (:., :me, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :inlineable
                      )), true))
              ))
          )),
        (:line, 3012, :none),
        (:if, (:&&, (:call, :!, (:., (:., :me, (:quote, #QuoteNode
                    :src
                  )), (:quote, #QuoteNode
                  :inlineable
                ))), (:&&, (:call, :!, :force_noinline), (:call, :isdefined, (:., :me, (:quote, #QuoteNode
                    :linfo
                  )), (:quote, #QuoteNode
                  :def
                )))), (:block,
            (:line, 3013, :none),
            (:(=), (:., (:., :me, (:quote, #QuoteNode
                    :src
                  )), (:quote, #QuoteNode
                  :inlineable
                )), (:call, :isinlineable, (:., (:., :me, (:quote, #QuoteNode
                      :linfo
                    )), (:quote, #QuoteNode
                    :def
                  )), (:., :me, (:quote, #QuoteNode
                    :src
                  ))))
          )),
        (:line, 3015, :none),
        (:(=), (:., (:., :me, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :inferred
            )), true),
        (:line, 3016, :none),
        :nothing
      )),
    (:line, 3021, :none),
    (:function, (:call, :finish, (:(::), :me, :InferenceState)), (:block,
        (:line, 3022, :none),
        (:(=), (:., :me, (:quote, #QuoteNode
              :currpc
            )), 1),
        (:line, 3023, :none),
        (:if, (:., :me, (:quote, #QuoteNode
              :cached
            )), (:block,
            (:line, 3024, :none),
            (:(=), :toplevel, (:call, :!, (:call, :isdefined, (:., :me, (:quote, #QuoteNode
                      :linfo
                    )), (:quote, #QuoteNode
                    :def
                  )))),
            (:line, 3025, :none),
            (:if, (:call, :!, :toplevel), (:block,
                (:line, 3026, :none),
                (:(=), :min_valid, (:., :me, (:quote, #QuoteNode
                      :min_valid
                    ))),
                (:line, 3027, :none),
                (:(=), :max_valid, (:., :me, (:quote, #QuoteNode
                      :max_valid
                    )))
              ), (:block,
                (:line, 3029, :none),
                (:(=), :min_valid, (:call, :UInt, 0)),
                (:line, 3030, :none),
                (:(=), :max_valid, (:call, :UInt, 0))
              )),
            (:line, 3035, :none),
            (:(=), :already_inferred, false),
            (:line, 3036, :none),
            (:if, (:call, :isdefined, (:., :me, (:quote, #QuoteNode
                    :linfo
                  )), (:quote, #QuoteNode
                  :inferred
                )), (:block,
                (:line, 3037, :none),
                (:(=), :inf, (:., (:., :me, (:quote, #QuoteNode
                        :linfo
                      )), (:quote, #QuoteNode
                      :inferred
                    ))),
                (:line, 3038, :none),
                (:if, (:||, (:call, :!, (:call, :isa, :inf, :CodeInfo)), (:., (:(::), :inf, :CodeInfo), (:quote, #QuoteNode
                        :inferred
                      ))), (:block,
                    (:line, 3039, :none),
                    (:if, (:&&, (:call, :(==), (:call, :min_world, (:., :me, (:quote, #QuoteNode
                                :linfo
                              ))), :min_valid), (:call, :(==), (:call, :max_world, (:., :me, (:quote, #QuoteNode
                                :linfo
                              ))), :max_valid)), (:block,
                        (:line, 3040, :none),
                        (:(=), :already_inferred, true)
                      ))
                  ))
              )),
            (:line, 3045, :none),
            (:if, (:call, :!, :already_inferred), (:block,
                (:line, 3046, :none),
                (:(=), :const_flags, (:call, :|, (:call, :<<, (:., :me, (:quote, #QuoteNode
                          :const_ret
                        )), 1), (:., :me, (:quote, #QuoteNode
                        :const_api
                      )))),
                (:line, 3047, :none),
                (:if, (:., :me, (:quote, #QuoteNode
                      :const_ret
                    )), (:block,
                    (:line, 3048, :none),
                    (:if, (:call, :isa, (:., :me, (:quote, #QuoteNode
                            :bestguess
                          )), :Const), (:block,
                        (:line, 3049, :none),
                        (:(=), :inferred_const, (:., (:(::), (:., :me, (:quote, #QuoteNode
                                  :bestguess
                                )), :Const), (:quote, #QuoteNode
                              :val
                            )))
                      ), (:block,
                        (:line, 3051, :none),
                        (:macrocall, Symbol("@assert"), (:call, :isconstType, (:., :me, (:quote, #QuoteNode
                                :bestguess
                              )))),
                        (:line, 3052, :none),
                        (:(=), :inferred_const, (:ref, (:., (:., :me, (:quote, #QuoteNode
                                  :bestguess
                                )), (:quote, #QuoteNode
                                :parameters
                              )), 1))
                      ))
                  ), (:block,
                    (:line, 3055, :none),
                    (:(=), :inferred_const, :nothing)
                  )),
                (:line, 3057, :none),
                (:if, (:., :me, (:quote, #QuoteNode
                      :const_api
                    )), (:block,
                    (:line, 3059, :none),
                    (:(=), :inferred_result, :nothing)
                  ), (:block,
                    (:line, 3061, :none),
                    (:(=), :inferred_result, (:., :me, (:quote, #QuoteNode
                          :src
                        )))
                  )),
                (:line, 3064, :none),
                (:if, (:call, :!, :toplevel), (:block,
                    (:line, 3065, :none),
                    (:if, (:call, :!, (:., :me, (:quote, #QuoteNode
                            :const_api
                          ))), (:block,
                        (:line, 3066, :none),
                        (:(=), :keeptree, (:||, (:., (:., :me, (:quote, #QuoteNode
                                  :src
                                )), (:quote, #QuoteNode
                                :inlineable
                              )), (:call, :(!=), (:call, :ccall, (:quote, #QuoteNode
                                  :jl_is_cacheable_sig
                                ), :Int32, (:tuple, :Any, :Any, :Any), (:., (:., :me, (:quote, #QuoteNode
                                      :linfo
                                    )), (:quote, #QuoteNode
                                    :specTypes
                                  )), (:., (:., (:., :me, (:quote, #QuoteNode
                                        :linfo
                                      )), (:quote, #QuoteNode
                                      :def
                                    )), (:quote, #QuoteNode
                                    :sig
                                  )), (:., (:., :me, (:quote, #QuoteNode
                                      :linfo
                                    )), (:quote, #QuoteNode
                                    :def
                                  ))), 0))),
                        (:line, 3068, :none),
                        (:if, (:call, :!, :keeptree), (:block,
                            (:line, 3069, :none),
                            (:(=), :inferred_result, :nothing)
                          ), (:block,
                            (:line, 3072, :none),
                            (:(=), :inferred_result, (:call, :ccall, (:quote, #QuoteNode
                                  :jl_compress_ast
                                ), :Any, (:tuple, :Any, :Any), (:., (:., :me, (:quote, #QuoteNode
                                      :linfo
                                    )), (:quote, #QuoteNode
                                    :def
                                  )), :inferred_result))
                          ))
                      ))
                  )),
                (:line, 3076, :none),
                (:(=), :cache, (:call, :ccall, (:quote, #QuoteNode
                      :jl_set_method_inferred
                    ), (:curly, :Ref, :MethodInstance), (:tuple, :Any, :Any, :Any, :Any, :Int32, :UInt, :UInt), (:., :me, (:quote, #QuoteNode
                        :linfo
                      )), (:call, :widenconst, (:., :me, (:quote, #QuoteNode
                          :bestguess
                        ))), :inferred_const, :inferred_result, :const_flags, :min_valid, :max_valid)),
                (:line, 3079, :none),
                (:if, (:call, :(!==), :cache, (:., :me, (:quote, #QuoteNode
                        :linfo
                      ))), (:block,
                    (:line, 3080, :none),
                    (:(=), (:., (:., :me, (:quote, #QuoteNode
                            :linfo
                          )), (:quote, #QuoteNode
                          :inInference
                        )), false),
                    (:line, 3081, :none),
                    (:(=), (:., :me, (:quote, #QuoteNode
                          :linfo
                        )), :cache)
                  ))
              ))
          )),
        (:line, 3088, :none),
        (:-=, (:ref, :nactive), 1),
        (:line, 3089, :none),
        (:(=), (:ref, :active, (:call, :findlast, :active, :me)), :nothing),
        (:line, 3092, :none),
        (:for, (:(=), (:tuple, :i, :_), (:., :me, (:quote, #QuoteNode
                :backedges
              ))), (:block,
            (:line, 3093, :none),
            (:if, (:||, (:call, :!, (:., :me, (:quote, #QuoteNode
                      :fixedpoint
                    ))), (:call, :!, (:., :i, (:quote, #QuoteNode
                      :fixedpoint
                    )))), (:block,
                (:line, 3095, :none),
                (:call, :delete!, (:., :i, (:quote, #QuoteNode
                      :edges
                    )), :me),
                (:line, 3096, :none),
                (:||, (:., :i, (:quote, #QuoteNode
                      :inworkq
                    )), (:call, :push!, :workq, :i)),
                (:line, 3097, :none),
                (:(=), (:., :i, (:quote, #QuoteNode
                      :inworkq
                    )), true)
              )),
            (:line, 3099, :none),
            (:call, :add_backedge, (:., :me, (:quote, #QuoteNode
                  :linfo
                )), :i)
          )),
        (:line, 3103, :none),
        (:&&, (:., :me, (:quote, #QuoteNode
              :cached
            )), (:(=), (:., (:., :me, (:quote, #QuoteNode
                  :linfo
                )), (:quote, #QuoteNode
                :inInference
              )), false)),
        (:line, 3104, :none),
        (:(=), (:., :me, (:quote, #QuoteNode
              :inferred
            )), true),
        (:line, 3105, :none),
        :nothing
      )),
    (:line, 3108, :none),
    (:function, (:call, :annotate_slot_load!, (:(::), :e, :Expr), (:(::), :vtypes, :VarTable), (:(::), :sv, :InferenceState), (:(::), :undefs, (:curly, :Array, :Bool, 1))), (:block,
        (:line, 3109, :none),
        (:(=), :head, (:., :e, (:quote, #QuoteNode
              :head
            ))),
        (:line, 3110, :none),
        (:(=), :i0, 1),
        (:line, 3111, :none),
        (:if, (:||, (:call, :is_meta_expr_head, :head), (:call, :(===), :head, (:quote, #QuoteNode
                :const
              ))), (:block,
            (:line, 3112, :none),
            (:return, nothing)
          )),
        (:line, 3114, :none),
        (:if, (:||, (:call, :(===), :head, (:quote, #QuoteNode
                :(=)
              )), (:call, :(===), :head, (:quote, #QuoteNode
                :method
              ))), (:block,
            (:line, 3115, :none),
            (:(=), :i0, 2)
          )),
        (:line, 3117, :none),
        (:for, (:(=), :i, (:(:), :i0, (:call, :length, (:., :e, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 3118, :none),
            (:(=), :subex, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), :i)),
            (:line, 3119, :none),
            (:if, (:call, :isa, :subex, :Expr), (:block,
                (:line, 3120, :none),
                (:call, :annotate_slot_load!, :subex, :vtypes, :sv, :undefs)
              ), (:block,
                (:line, 3121, :none),
                (:if, (:call, :isa, :subex, :Slot), (:block,
                    (:line, 3122, :none),
                    (:(=), :id, (:call, :slot_id, :subex)),
                    (:line, 3123, :none),
                    (:(=), :s, (:ref, :vtypes, :id)),
                    (:line, 3124, :none),
                    (:(=), :vt, (:call, :widenconst, (:., :s, (:quote, #QuoteNode
                            :typ
                          )))),
                    (:line, 3125, :none),
                    (:if, (:., :s, (:quote, #QuoteNode
                          :undef
                        )), (:block,
                        (:line, 3127, :none),
                        (:(=), (:ref, :undefs, :id), true)
                      )),
                    (:line, 3130, :none),
                    (:if, (:call, :!, (:call, :⊑, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:quote, #QuoteNode
                                :slottypes
                              )), :id), :vt)), (:block,
                        (:line, 3131, :none),
                        (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                                :args
                              )), :i), (:call, :TypedSlot, :id, :vt))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 3137, :none),
    (:function, (:call, :record_slot_assign!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 3141, :none),
        (:(=), :states, (:., :sv, (:quote, #QuoteNode
              :stmt_types
            ))),
        (:line, 3142, :none),
        (:(=), :body, (:(::), (:., (:., :sv, (:quote, #QuoteNode
                  :src
                )), (:quote, #QuoteNode
                :code
              )), (:curly, :Vector, :Any))),
        (:line, 3143, :none),
        (:(=), :slottypes, (:(::), (:., (:., :sv, (:quote, #QuoteNode
                  :src
                )), (:quote, #QuoteNode
                :slottypes
              )), (:curly, :Vector, :Any))),
        (:line, 3144, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 3145, :none),
            (:(=), :expr, (:ref, :body, :i)),
            (:line, 3146, :none),
            (:(=), :st_i, (:ref, :states, :i)),
            (:line, 3148, :none),
            (:if, (:&&, (:call, :isa, :st_i, :VarTable), (:&&, (:call, :isa, :expr, :Expr), (:call, :(===), (:., :expr, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :(=)
                    )))), (:block,
                (:line, 3149, :none),
                (:(=), :lhs, (:ref, (:., :expr, (:quote, #QuoteNode
                        :args
                      )), 1)),
                (:line, 3150, :none),
                (:(=), :rhs, (:ref, (:., :expr, (:quote, #QuoteNode
                        :args
                      )), 2)),
                (:line, 3151, :none),
                (:if, (:call, :isa, :lhs, :Slot), (:block,
                    (:line, 3152, :none),
                    (:(=), :id, (:call, :slot_id, :lhs)),
                    (:line, 3153, :none),
                    (:if, (:call, :isa, :rhs, :Slot), (:block,
                        (:line, 3155, :none),
                        (:(=), :vt, (:., (:ref, :st_i, (:call, :slot_id, :rhs)), (:quote, #QuoteNode
                              :typ
                            )))
                      ), (:block,
                        (:line, 3157, :none),
                        (:(=), :vt, (:call, :exprtype, :rhs, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:., :sv, (:quote, #QuoteNode
                                :mod
                              ))))
                      )),
                    (:line, 3159, :none),
                    (:(=), :vt, (:call, :widenconst, :vt)),
                    (:line, 3160, :none),
                    (:if, (:call, :(!==), :vt, :Bottom), (:block,
                        (:line, 3161, :none),
                        (:(=), :otherTy, (:ref, :slottypes, :id)),
                        (:line, 3162, :none),
                        (:if, (:call, :(===), :otherTy, :Bottom), (:block,
                            (:line, 3163, :none),
                            (:(=), (:ref, :slottypes, :id), :vt)
                          ), (:block,
                            (:line, 3164, :none),
                            (:if, (:call, :(===), :otherTy, :Any), (:block,
                                (:line, 3165, :none),
                                (:(=), (:ref, :slottypes, :id), :Any)
                              ), (:block,
                                (:line, 3167, :none),
                                (:(=), (:ref, :slottypes, :id), (:call, :tmerge, :otherTy, :vt))
                              ))
                          ))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 3176, :none),
    (:function, (:call, :type_annotate!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 3178, :none),
        (:(=), :gt, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :ssavaluetypes
            ))),
        (:line, 3179, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :gt))), (:block,
            (:line, 3180, :none),
            (:if, (:call, :(===), (:ref, :gt, :i), :NF), (:block,
                (:line, 3181, :none),
                (:(=), (:ref, :gt, :i), (:curly, :Union))
              ))
          )),
        (:line, 3187, :none),
        (:call, :record_slot_assign!, :sv),
        (:line, 3192, :none),
        (:(=), :src, (:., :sv, (:quote, #QuoteNode
              :src
            ))),
        (:line, 3193, :none),
        (:(=), :states, (:., :sv, (:quote, #QuoteNode
              :stmt_types
            ))),
        (:line, 3194, :none),
        (:(=), :nargs, (:., :sv, (:quote, #QuoteNode
              :nargs
            ))),
        (:line, 3195, :none),
        (:(=), :nslots, (:call, :length, (:ref, :states, 1))),
        (:line, 3196, :none),
        (:(=), :undefs, (:call, :fill, false, :nslots)),
        (:line, 3197, :none),
        (:(=), :body, (:(::), (:., :src, (:quote, #QuoteNode
                :code
              )), (:curly, :Array, :Any, 1))),
        (:line, 3198, :none),
        (:(=), :nexpr, (:call, :length, :body)),
        (:line, 3199, :none),
        (:(=), :i, 1),
        (:line, 3200, :none),
        (:while, (:call, :(<=), :i, :nexpr), (:block,
            (:line, 3201, :none),
            (:(=), :st_i, (:ref, :states, :i)),
            (:line, 3202, :none),
            (:(=), :expr, (:ref, :body, :i)),
            (:line, 3203, :none),
            (:if, (:call, :isa, :st_i, :VarTable), (:block,
                (:line, 3205, :none),
                (:if, (:call, :isa, :expr, :Expr), (:block,
                    (:line, 3206, :none),
                    (:call, :annotate_slot_load!, :expr, :st_i, :sv, :undefs)
                  ), (:block,
                    (:line, 3207, :none),
                    (:if, (:call, :isa, :expr, :Slot), (:block,
                        (:line, 3208, :none),
                        (:(=), :id, (:call, :slot_id, :expr)),
                        (:line, 3209, :none),
                        (:if, (:., (:ref, :st_i, (:call, :slot_id, :expr)), (:quote, #QuoteNode
                              :undef
                            )), (:block,
                            (:line, 3211, :none),
                            (:(=), (:ref, :undefs, :id), true)
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 3214, :none),
                (:if, (:., :sv, (:quote, #QuoteNode
                      :optimize
                    )), (:block,
                    (:line, 3215, :none),
                    (:if, (:||, (:&&, (:call, :isa, :expr, :Expr), (:call, :is_meta_expr, :expr)), (:call, :isa, :expr, :LineNumberNode)), (:block,
                        (:line, 3218, :none),
                        (:+=, :i, 1),
                        (:line, 3219, :none),
                        (:continue,)
                      )),
                    (:line, 3223, :none),
                    (:call, :deleteat!, :body, :i),
                    (:line, 3224, :none),
                    (:call, :deleteat!, :states, :i),
                    (:line, 3225, :none),
                    (:-=, :nexpr, 1),
                    (:line, 3226, :none),
                    (:continue,)
                  ))
              )),
            (:line, 3228, :none),
            (:+=, :i, 1)
          )),
        (:line, 3232, :none),
        (:for, (:(=), :i, (:(:), 1, :nslots)), (:block,
            (:line, 3233, :none),
            (:if, (:ref, :undefs, :i), (:block,
                (:line, 3234, :none),
                (:|=, (:ref, (:., :src, (:quote, #QuoteNode
                        :slotflags
                      )), :i), :Slot_UsedUndef)
              ))
          )),
        (:line, 3237, :none),
        :nothing
      )),
    (:line, 3241, :none),
    (:function, (:call, :_widen_all_consts!, (:(::), :e, :Expr), (:(::), :untypedload, (:curly, :Vector, :Bool))), (:block,
        (:line, 3242, :none),
        (:(=), (:., :e, (:quote, #QuoteNode
              :typ
            )), (:call, :widenconst, (:., :e, (:quote, #QuoteNode
                :typ
              )))),
        (:line, 3243, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 3244, :none),
            (:(=), :x, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), :i)),
            (:line, 3245, :none),
            (:if, (:call, :isa, :x, :Expr), (:block,
                (:line, 3246, :none),
                (:call, :_widen_all_consts!, :x, :untypedload)
              ), (:block,
                (:line, 3247, :none),
                (:if, (:&&, (:call, :isa, :x, :Slot), (:||, (:call, :(!=), :i, 1), (:call, :(!==), (:., :e, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :(=)
                        )))), (:block,
                    (:line, 3248, :none),
                    (:(=), (:ref, :untypedload, (:call, :slot_id, :x)), true)
                  ))
              ))
          )),
        (:line, 3251, :none),
        :nothing
      )),
    (:line, 3253, :none),
    (:function, (:call, :widen_all_consts!, (:(::), :src, :CodeInfo)), (:block,
        (:line, 3254, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :ssavaluetypes
                  ))))), (:block,
            (:line, 3255, :none),
            (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                    :ssavaluetypes
                  )), :i), (:call, :widenconst, (:ref, (:., :src, (:quote, #QuoteNode
                      :ssavaluetypes
                    )), :i)))
          )),
        (:line, 3257, :none),
        (:(=), :nslots, (:call, :length, (:., :src, (:quote, #QuoteNode
                :slottypes
              )))),
        (:line, 3258, :none),
        (:(=), :untypedload, (:call, :fill, false, :nslots)),
        (:line, 3259, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :code
                  ))))), (:block,
            (:line, 3260, :none),
            (:(=), :x, (:ref, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :i)),
            (:line, 3261, :none),
            (:&&, (:call, :isa, :x, :Expr), (:call, :_widen_all_consts!, :x, :untypedload))
          )),
        (:line, 3263, :none),
        (:for, (:(=), :i, (:(:), 1, :nslots)), (:block,
            (:line, 3264, :none),
            (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                    :slottypes
                  )), :i), (:call, :widen_slot_type, (:ref, (:., :src, (:quote, #QuoteNode
                      :slottypes
                    )), :i), (:ref, :untypedload, :i)))
          )),
        (:line, 3266, :none),
        (:return, :src)
      )),
    (:line, 3272, :none),
    (:function, (:call, :widen_slot_type, (:(::), :ty, :ANY), (:(::), :untypedload, :Bool)), (:block,
        (:line, 3273, :none),
        (:(=), :ty, (:call, :widenconst, :ty)),
        (:line, 3274, :none),
        (:if, (:call, :isa, :ty, :DataType), (:block,
            (:line, 3275, :none),
            (:if, (:||, :untypedload, (:||, (:call, :isbits, :ty), (:call, :isdefined, :ty, (:quote, #QuoteNode
                      :instance
                    )))), (:block,
                (:line, 3276, :none),
                (:return, :ty)
              ))
          ), (:block,
            (:line, 3278, :none),
            (:if, (:call, :isa, :ty, :Union), (:block,
                (:line, 3279, :none),
                (:(=), :ty_a, (:call, :widen_slot_type, (:., :ty, (:quote, #QuoteNode
                        :a
                      )), false)),
                (:line, 3280, :none),
                (:(=), :ty_b, (:call, :widen_slot_type, (:., :ty, (:quote, #QuoteNode
                        :b
                      )), false)),
                (:line, 3281, :none),
                (:if, (:||, (:call, :(!==), :ty_a, :Any), (:call, :(!==), :ty_b, :Any)), (:block,
                    (:line, 3283, :none),
                    (:return, :ty)
                  ))
              ), (:block,
                (:line, 3285, :none),
                (:if, (:call, :isa, :ty, :UnionAll), (:block,
                    (:line, 3286, :none),
                    (:if, :untypedload, (:block,
                        (:line, 3287, :none),
                        (:return, :ty)
                      ))
                  ))
              ))
          )),
        (:line, 3290, :none),
        (:return, :Any)
      )),
    (:line, 3295, :none),
    (:function, (:call, :substitute!, (:(::), :e, :ANY), (:(::), :na, :Int), (:(::), :argexprs, (:curly, :Vector, :Any)), (:(::), :spsig, :ANY), (:(::), :spvals, (:curly, :Vector, :Any)), (:(::), :offset, :Int)), (:block,
        (:line, 3296, :none),
        (:if, (:call, :isa, :e, :Slot), (:block,
            (:line, 3297, :none),
            (:(=), :id, (:call, :slot_id, :e)),
            (:line, 3298, :none),
            (:if, (:comparison, 1, :(<=), :id, :(<=), :na), (:block,
                (:line, 3299, :none),
                (:(=), :ae, (:ref, :argexprs, :id)),
                (:line, 3300, :none),
                (:if, (:&&, (:call, :isa, :e, :TypedSlot), (:call, :isa, :ae, :Slot)), (:block,
                    (:line, 3301, :none),
                    (:return, (:call, :TypedSlot, (:., :ae, (:quote, #QuoteNode
                            :id
                          )), (:., :e, (:quote, #QuoteNode
                            :typ
                          ))))
                  )),
                (:line, 3303, :none),
                (:return, :ae)
              )),
            (:line, 3305, :none),
            (:if, (:call, :isa, :e, :SlotNumber), (:block,
                (:line, 3306, :none),
                (:return, (:call, :SlotNumber, (:call, :+, :id, :offset)))
              ), (:block,
                (:line, 3308, :none),
                (:return, (:call, :TypedSlot, (:call, :+, :id, :offset), (:., :e, (:quote, #QuoteNode
                        :typ
                      ))))
              ))
          )),
        (:line, 3311, :none),
        (:if, (:call, :isa, :e, :NewvarNode), (:block,
            (:line, 3312, :none),
            (:return, (:call, :NewvarNode, (:call, :substitute!, (:., :e, (:quote, #QuoteNode
                      :slot
                    )), :na, :argexprs, :spsig, :spvals, :offset)))
          )),
        (:line, 3314, :none),
        (:if, (:call, :isa, :e, :Expr), (:block,
            (:line, 3315, :none),
            (:(=), :e, (:(::), :e, :Expr)),
            (:line, 3316, :none),
            (:(=), :head, (:., :e, (:quote, #QuoteNode
                  :head
                ))),
            (:line, 3317, :none),
            (:if, (:call, :(===), :head, (:quote, #QuoteNode
                  :static_parameter
                )), (:block,
                (:line, 3318, :none),
                (:return, (:ref, :spvals, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), 1)))
              ), (:block,
                (:line, 3319, :none),
                (:if, (:call, :(===), :head, (:quote, #QuoteNode
                      :foreigncall
                    )), (:block,
                    (:line, 3320, :none),
                    (:macrocall, Symbol("@assert"), (:||, (:call, :!, (:call, :isa, :spsig, :UnionAll)), (:call, :!, (:call, :isempty, :spvals)))),
                    (:line, 3321, :none),
                    (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                                :args
                              ))))), (:block,
                        (:line, 3322, :none),
                        (:if, (:call, :(==), :i, 2), (:block,
                            (:line, 3323, :none),
                            (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                                    :args
                                  )), 2), (:call, :ccall, (:quote, #QuoteNode
                                  :jl_instantiate_type_in_env
                                ), :Any, (:tuple, :Any, :Any, (:curly, :Ptr, :Any)), (:ref, (:., :e, (:quote, #QuoteNode
                                      :args
                                    )), 2), :spsig, :spvals))
                          ), (:block,
                            (:line, 3324, :none),
                            (:if, (:call, :(==), :i, 3), (:block,
                                (:line, 3325, :none),
                                (:(=), :argtuple, (:typed_comprehension, :Any, (:generator, (:call, :ccall, (:quote, #QuoteNode
                                          :jl_instantiate_type_in_env
                                        ), :Any, (:tuple, :Any, :Any, (:curly, :Ptr, :Any)), :argt, :spsig, :spvals), (:(=), :argt, (:ref, (:., :e, (:quote, #QuoteNode
                                              :args
                                            )), 3))))),
                                (:line, 3329, :none),
                                (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), 3), (:call, :svec, (:..., :argtuple)))
                              ), (:block,
                                (:line, 3331, :none),
                                (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), :i), (:call, :substitute!, (:ref, (:., :e, (:quote, #QuoteNode
                                          :args
                                        )), :i), :na, :argexprs, :spsig, :spvals, :offset))
                              ))
                          ))
                      ))
                  ), (:block,
                    (:line, 3334, :none),
                    (:if, (:call, :!, (:call, :is_meta_expr_head, :head)), (:block,
                        (:line, 3335, :none),
                        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                                    :args
                                  ))))), (:block,
                            (:line, 3336, :none),
                            (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                                    :args
                                  )), :i), (:call, :substitute!, (:ref, (:., :e, (:quote, #QuoteNode
                                      :args
                                    )), :i), :na, :argexprs, :spsig, :spvals, :offset))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 3340, :none),
        (:return, :e)
      )),
    (:line, 3344, :none),
    (:function, (:call, :occurs_more, (:(::), :e, :ANY), :pred, :n), (:block,
        (:line, 3345, :none),
        (:if, (:call, :isa, :e, :Expr), (:block,
            (:line, 3346, :none),
            (:(=), :e, (:(::), :e, :Expr)),
            (:line, 3347, :none),
            (:(=), :head, (:., :e, (:quote, #QuoteNode
                  :head
                ))),
            (:line, 3348, :none),
            (:&&, (:call, :is_meta_expr_head, :head), (:return, 0)),
            (:line, 3349, :none),
            (:(=), :c, 0),
            (:line, 3350, :none),
            (:for, (:(=), :a, (:., :e, (:quote, #QuoteNode
                    :args
                  ))), (:block,
                (:line, 3351, :none),
                (:+=, :c, (:call, :occurs_more, :a, :pred, :n)),
                (:line, 3352, :none),
                (:if, (:call, :>, :c, :n), (:block,
                    (:line, 3353, :none),
                    (:return, :c)
                  ))
              )),
            (:line, 3356, :none),
            (:return, :c)
          )),
        (:line, 3358, :none),
        (:if, (:call, :pred, :e), (:block,
            (:line, 3359, :none),
            (:return, 1)
          )),
        (:line, 3361, :none),
        (:return, 0)
      )),
    (:line, 3364, :none),
    (:function, (:call, :exprtype, (:(::), :x, :ANY), (:(::), :src, :CodeInfo), (:(::), :mod, :Module)), (:block,
        (:line, 3365, :none),
        (:if, (:call, :isa, :x, :Expr), (:block,
            (:line, 3366, :none),
            (:return, (:., (:(::), :x, :Expr), (:quote, #QuoteNode
                  :typ
                )))
          ), (:block,
            (:line, 3367, :none),
            (:if, (:call, :isa, :x, :SlotNumber), (:block,
                (:line, 3368, :none),
                (:return, (:ref, (:., :src, (:quote, #QuoteNode
                        :slottypes
                      )), (:., (:(::), :x, :SlotNumber), (:quote, #QuoteNode
                        :id
                      ))))
              ), (:block,
                (:line, 3369, :none),
                (:if, (:call, :isa, :x, :TypedSlot), (:block,
                    (:line, 3370, :none),
                    (:return, (:., (:(::), :x, :TypedSlot), (:quote, #QuoteNode
                          :typ
                        )))
                  ), (:block,
                    (:line, 3371, :none),
                    (:if, (:call, :isa, :x, :SSAValue), (:block,
                        (:line, 3372, :none),
                        (:return, (:call, :abstract_eval_ssavalue, (:(::), :x, :SSAValue), :src))
                      ), (:block,
                        (:line, 3373, :none),
                        (:if, (:call, :isa, :x, :Symbol), (:block,
                            (:line, 3374, :none),
                            (:return, (:call, :abstract_eval_global, :mod, (:(::), :x, :Symbol)))
                          ), (:block,
                            (:line, 3375, :none),
                            (:if, (:call, :isa, :x, :QuoteNode), (:block,
                                (:line, 3376, :none),
                                (:return, (:call, :abstract_eval_constant, (:., (:(::), :x, :QuoteNode), (:quote, #QuoteNode
                                        :value
                                      ))))
                              ), (:block,
                                (:line, 3377, :none),
                                (:if, (:call, :isa, :x, :GlobalRef), (:block,
                                    (:line, 3378, :none),
                                    (:return, (:call, :abstract_eval_global, (:., :x, (:quote, #QuoteNode
                                            :mod
                                          )), (:., (:(::), :x, :GlobalRef), (:quote, #QuoteNode
                                            :name
                                          ))))
                                  ), (:block,
                                    (:line, 3380, :none),
                                    (:return, (:call, :abstract_eval_constant, :x))
                                  ))
                              ))
                          ))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 3385, :none),
    (:const, (:(=), :_pure_builtins, (:ref, :Any, :tuple, :svec, :fieldtype, :apply_type, :(===), :isa, :typeof, :UnionAll, :nfields))),
    (:line, 3388, :none),
    (:const, (:(=), :_pure_builtins_volatile, (:ref, :Any, :getfield, :arrayref))),
    (:line, 3390, :none),
    (:function, (:call, :is_pure_intrinsic, (:(::), :f, :IntrinsicFunction)), (:block,
        (:line, 3391, :none),
        (:return, (:call, :!, (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                    :pointerref
                  ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                      :pointerset
                    ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                        :llvmcall
                      ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                          :checked_trunc_sint
                        ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                            :checked_trunc_uint
                          ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                              :checked_sdiv_int
                            ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                :checked_udiv_int
                              ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                  :checked_srem_int
                                ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                    :checked_urem_int
                                  ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                      :check_top_bit
                                    ))), (:||, (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                        :sqrt_llvm
                                      ))), (:call, :(===), :f, (:., :Intrinsics, (:quote, #QuoteNode
                                        :cglobal
                                      ))))))))))))))))
      )),
    (:line, 3405, :none),
    (:function, (:call, :is_pure_builtin, (:(::), :f, :ANY)), (:block,
        (:line, 3406, :none),
        (:return, (:||, (:call, :contains_is, :_pure_builtins, :f), (:||, (:call, :contains_is, :_pure_builtins_volatile, :f), (:||, (:&&, (:call, :isa, :f, :IntrinsicFunction), (:call, :is_pure_intrinsic, :f)), (:call, :(===), :f, :return_type)))))
      )),
    (:line, 3412, :none),
    (:function, (:call, :statement_effect_free, (:(::), :e, :ANY), (:(::), :src, :CodeInfo), (:(::), :mod, :Module)), (:block,
        (:line, 3413, :none),
        (:if, (:call, :isa, :e, :Expr), (:block,
            (:line, 3414, :none),
            (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :(=)
                )), (:block,
                (:line, 3415, :none),
                (:return, (:&&, (:call, :!, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                              :args
                            )), 1), :GlobalRef)), (:call, :effect_free, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), 2), :src, :mod, false)))
              ), (:block,
                (:line, 3416, :none),
                (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :gotoifnot
                    )), (:block,
                    (:line, 3417, :none),
                    (:return, (:call, :effect_free, (:ref, (:., :e, (:quote, #QuoteNode
                              :args
                            )), 1), :src, :mod, false))
                  ))
              ))
          ), (:block,
            (:line, 3419, :none),
            (:if, (:||, (:call, :isa, :e, :LabelNode), (:call, :isa, :e, :GotoNode)), (:block,
                (:line, 3420, :none),
                (:return, true)
              ))
          )),
        (:line, 3422, :none),
        (:return, (:call, :effect_free, :e, :src, :mod, false))
      )),
    (:line, 3428, :none),
    (:function, (:call, :effect_free, (:(::), :e, :ANY), (:(::), :src, :CodeInfo), (:(::), :mod, :Module), (:(::), :allow_volatile, :Bool)), (:block,
        (:line, 3429, :none),
        (:if, (:call, :isa, :e, :GlobalRef), (:block,
            (:line, 3430, :none),
            (:return, (:&&, (:call, :isdefined, (:., :e, (:quote, #QuoteNode
                      :mod
                    )), (:., :e, (:quote, #QuoteNode
                      :name
                    ))), (:||, :allow_volatile, (:call, :isconst, (:., :e, (:quote, #QuoteNode
                        :mod
                      )), (:., :e, (:quote, #QuoteNode
                        :name
                      ))))))
          ), (:block,
            (:line, 3431, :none),
            (:if, (:call, :isa, :e, :Symbol), (:block,
                (:line, 3432, :none),
                (:return, :allow_volatile)
              ), (:block,
                (:line, 3433, :none),
                (:if, (:call, :isa, :e, :Slot), (:block,
                    (:line, 3434, :none),
                    (:return, (:call, :(==), (:call, :&, (:ref, (:., :src, (:quote, #QuoteNode
                                :slotflags
                              )), (:call, :slot_id, :e)), :Slot_UsedUndef), 0))
                  ), (:block,
                    (:line, 3435, :none),
                    (:if, (:call, :isa, :e, :Expr), (:block,
                        (:line, 3436, :none),
                        (:(=), :e, (:(::), :e, :Expr)),
                        (:line, 3437, :none),
                        (:(=), :head, (:., :e, (:quote, #QuoteNode
                              :head
                            ))),
                        (:line, 3438, :none),
                        (:if, (:||, (:call, :(===), :head, (:quote, #QuoteNode
                                :static_parameter
                              )), (:call, :is_meta_expr_head, :head)), (:block,
                            (:line, 3439, :none),
                            (:return, true)
                          )),
                        (:line, 3441, :none),
                        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                                :typ
                              )), :Bottom), (:block,
                            (:line, 3442, :none),
                            (:return, false)
                          )),
                        (:line, 3444, :none),
                        (:(=), :ea, (:., :e, (:quote, #QuoteNode
                              :args
                            ))),
                        (:line, 3445, :none),
                        (:if, (:call, :(===), :head, (:quote, #QuoteNode
                              :call
                            )), (:block,
                            (:line, 3446, :none),
                            (:if, (:call, :is_known_call_p, :e, :is_pure_builtin, :src, :mod), (:block,
                                (:line, 3447, :none),
                                (:if, (:call, :!, :allow_volatile), (:block,
                                    (:line, 3448, :none),
                                    (:if, (:||, (:call, :is_known_call, :e, :arrayref, :src, :mod), (:call, :is_known_call, :e, :arraylen, :src, :mod)), (:block,
                                        (:line, 3449, :none),
                                        (:return, false)
                                      ), (:block,
                                        (:line, 3450, :none),
                                        (:if, (:call, :is_known_call, :e, :getfield, :src, :mod), (:block,
                                            (:line, 3451, :none),
                                            (:||, (:call, :(==), (:call, :length, :ea), 3), (:return, false)),
                                            (:line, 3452, :none),
                                            (:(=), :et, (:call, :exprtype, :e, :src, :mod)),
                                            (:line, 3453, :none),
                                            (:if, (:&&, (:call, :!, (:call, :isa, :et, :Const)), (:call, :!, (:&&, (:call, :isType, :et), (:call, :isleaftype, :et)))), (:block,
                                                (:line, 3455, :none),
                                                (:(=), :a, (:ref, :ea, 2)),
                                                (:line, 3456, :none),
                                                (:(=), :typ, (:call, :widenconst, (:call, :exprtype, :a, :src, :mod))),
                                                (:line, 3457, :none),
                                                (:if, (:call, :isconstType, :typ), (:block,
                                                    (:line, 3458, :none),
                                                    (:if, (:call, :⊑, (:call, :Const, (:quote, #QuoteNode
                                                            :uid
                                                          )), (:call, :exprtype, (:ref, :ea, 3), :src, :mod)), (:block,
                                                        (:line, 3459, :none),
                                                        (:return, false)
                                                      ))
                                                  ), (:block,
                                                    (:line, 3461, :none),
                                                    (:if, (:&&, (:call, :(!==), :typ, :SimpleVector), (:||, (:call, :!, (:call, :isa, :typ, :DataType)), (:||, (:., :typ, (:quote, #QuoteNode
                                                                :mutable
                                                              )), (:., :typ, (:quote, #QuoteNode
                                                                :abstract
                                                              ))))), (:block,
                                                        (:line, 3462, :none),
                                                        (:return, false)
                                                      ))
                                                  ))
                                              ))
                                          ))
                                      ))
                                  ))
                              ), (:block,
                                (:line, 3468, :none),
                                (:if, (:&&, (:call, :is_known_call, :e, :_apply, :src, :mod), (:call, :>, (:call, :length, :ea), 1)), (:block,
                                    (:line, 3469, :none),
                                    (:(=), :ft, (:call, :exprtype, (:ref, :ea, 2), :src, :mod)),
                                    (:line, 3470, :none),
                                    (:if, (:||, (:call, :!, (:call, :isa, :ft, :Const)), (:call, :!, (:call, :contains_is, :_pure_builtins, (:., :ft, (:quote, #QuoteNode
                                                :val
                                              ))))), (:block,
                                        (:line, 3471, :none),
                                        (:return, false)
                                      ))
                                  ), (:block,
                                    (:line, 3475, :none),
                                    (:return, false)
                                  ))
                              ))
                          ), (:block,
                            (:line, 3477, :none),
                            (:if, (:call, :(===), :head, (:quote, #QuoteNode
                                  :new
                                )), (:block,
                                (:line, 3478, :none),
                                (:if, (:call, :!, :allow_volatile), (:block,
                                    (:line, 3479, :none),
                                    (:(=), :a, (:ref, :ea, 1)),
                                    (:line, 3480, :none),
                                    (:(=), :typ, (:call, :widenconst, (:call, :exprtype, :a, :src, :mod))),
                                    (:line, 3481, :none),
                                    (:if, (:||, (:call, :!, (:call, :isType, :typ)), (:||, (:call, :!, (:call, :isa, (:ref, (:., (:(::), :typ, :Type), (:quote, #QuoteNode
                                                    :parameters
                                                  )), 1), :DataType)), (:., (:(::), (:ref, (:., (:(::), :typ, :Type), (:quote, #QuoteNode
                                                    :parameters
                                                  )), 1), :DataType), (:quote, #QuoteNode
                                              :mutable
                                            )))), (:block,
                                        (:line, 3482, :none),
                                        (:return, false)
                                      ))
                                  ))
                              ), (:block,
                                (:line, 3486, :none),
                                (:if, (:call, :(===), :head, (:quote, #QuoteNode
                                      :return
                                    )), (:block,), (:block,
                                    (:line, 3488, :none),
                                    (:if, (:call, :(===), :head, (:quote, #QuoteNode
                                          :the_exception
                                        )), (:block,
                                        (:line, 3489, :none),
                                        (:return, :allow_volatile)
                                      ), (:block,
                                        (:line, 3491, :none),
                                        (:return, false)
                                      ))
                                  ))
                              ))
                          )),
                        (:line, 3493, :none),
                        (:for, (:(=), :a, :ea), (:block,
                            (:line, 3494, :none),
                            (:if, (:call, :!, (:call, :effect_free, :a, :src, :mod, :allow_volatile)), (:block,
                                (:line, 3495, :none),
                                (:return, false)
                              ))
                          ))
                      ), (:block,
                        (:line, 3498, :none),
                        (:if, (:||, (:call, :isa, :e, :LabelNode), (:call, :isa, :e, :GotoNode)), (:block,
                            (:line, 3499, :none),
                            (:return, false)
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 3501, :none),
        (:return, true)
      )),
    (:line, 3507, :none),
    (:type, false, :InvokeData, (:block,
        (:line, 3508, :none),
        (:(::), :mt, :MethodTable),
        (:line, 3509, :none),
        (:(::), :entry, :TypeMapEntry),
        (:line, 3510, :none),
        :types0,
        (:line, 3511, :none),
        :fexpr,
        (:line, 3512, :none),
        :texpr
      )),
    (:line, 3515, :none),
    (:function, (:call, :inline_as_constant, (:(::), :val, :ANY), :argexprs, (:(::), :sv, :InferenceState), (:(::), :invoke_data, :ANY)), (:block,
        (:line, 3516, :none),
        (:if, (:call, :(===), :invoke_data, :nothing), (:block,
            (:line, 3517, :none),
            (:(=), :invoke_fexpr, :nothing),
            (:line, 3518, :none),
            (:(=), :invoke_texpr, :nothing)
          ), (:block,
            (:line, 3520, :none),
            (:(=), :invoke_data, (:(::), :invoke_data, :InvokeData)),
            (:line, 3521, :none),
            (:(=), :invoke_fexpr, (:., :invoke_data, (:quote, #QuoteNode
                  :fexpr
                ))),
            (:line, 3522, :none),
            (:(=), :invoke_texpr, (:., :invoke_data, (:quote, #QuoteNode
                  :texpr
                )))
          )),
        (:line, 3525, :none),
        (:(=), :stmts, (:if, (:call, :(===), :invoke_fexpr, :nothing), (:vect,), (:ref, :Any, :invoke_fexpr))),
        (:line, 3526, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :argexprs))), (:block,
            (:line, 3527, :none),
            (:(=), :arg, (:ref, :argexprs, :i)),
            (:line, 3528, :none),
            (:if, (:call, :!, (:call, :effect_free, :arg, (:., :sv, (:quote, #QuoteNode
                      :src
                    )), (:., :sv, (:quote, #QuoteNode
                      :mod
                    )), false)), (:block,
                (:line, 3529, :none),
                (:call, :push!, :stmts, :arg)
              )),
            (:line, 3531, :none),
            (:if, (:&&, (:call, :(==), :i, 1), (:call, :!, (:call, :(===), :invoke_texpr, :nothing))), (:block,
                (:line, 3532, :none),
                (:call, :push!, :stmts, :invoke_texpr)
              ))
          )),
        (:line, 3535, :none),
        (:if, (:call, :!, (:call, :is_self_quoting, :val)), (:block,
            (:line, 3536, :none),
            (:(=), :val, (:call, :QuoteNode, :val))
          )),
        (:line, 3538, :none),
        (:return, (:tuple, :val, :stmts))
      )),
    (:line, 3541, :none),
    (:function, (:call, :is_self_quoting, (:(::), :x, :ANY)), (:block,
        (:line, 3542, :none),
        (:return, (:||, (:call, :isa, :x, :Number), (:||, (:call, :isa, :x, :AbstractString), (:||, (:call, :isa, :x, :Tuple), (:call, :isa, :x, :Type)))))
      )),
    (:line, 3545, :none),
    (:function, (:call, :countunionsplit, (:(::), :atypes, (:curly, :Vector, :Any))), (:block,
        (:line, 3546, :none),
        (:(=), :nu, 1),
        (:line, 3547, :none),
        (:for, (:(=), :ti, :atypes), (:block,
            (:line, 3548, :none),
            (:if, (:call, :isa, :ti, :Union), (:block,
                (:line, 3549, :none),
                (:*=, :nu, (:call, :unionlen, (:(::), :ti, :Union)))
              ))
          )),
        (:line, 3552, :none),
        (:return, :nu)
      )),
    (:line, 3555, :none),
    (:function, (:call, :get_spec_lambda, (:(::), :atypes, :ANY), :sv, (:(::), :invoke_data, :ANY)), (:block,
        (:line, 3556, :none),
        (:if, (:call, :(===), :invoke_data, :nothing), (:block,
            (:line, 3557, :none),
            (:return, (:call, :ccall, (:quote, #QuoteNode
                  :jl_get_spec_lambda
                ), :Any, (:tuple, :Any, :UInt), :atypes, (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :world
                  ))))
          ), (:block,
            (:line, 3559, :none),
            (:(=), :invoke_data, (:(::), :invoke_data, :InvokeData)),
            (:line, 3560, :none),
            (:||, (:<:, :atypes, (:., :invoke_data, (:quote, #QuoteNode
                    :types0
                  ))), (:return, :nothing)),
            (:line, 3561, :none),
            (:return, (:call, :ccall, (:quote, #QuoteNode
                  :jl_get_invoke_lambda
                ), :Any, (:tuple, :Any, :Any, :Any, :UInt), (:., :invoke_data, (:quote, #QuoteNode
                    :mt
                  )), (:., :invoke_data, (:quote, #QuoteNode
                    :entry
                  )), :atypes, (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :world
                  ))))
          ))
      )),
    (:line, 3566, :none),
    (:function, (:call, :invoke_NF, :argexprs, (:(::), :etype, :ANY), :atypes, :sv, (:(::), :atype_unlimited, :ANY), (:(::), :invoke_data, :ANY)), (:block,
        (:line, 3569, :none),
        (:(=), :nu, (:call, :countunionsplit, :atypes)),
        (:line, 3570, :none),
        (:&&, (:call, :>, :nu, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :MAX_UNION_SPLITTING
              ))), (:return, :NF)),
        (:line, 3571, :none),
        (:if, (:call, :(===), :invoke_data, :nothing), (:block,
            (:line, 3572, :none),
            (:(=), :invoke_fexpr, :nothing),
            (:line, 3573, :none),
            (:(=), :invoke_texpr, :nothing)
          ), (:block,
            (:line, 3575, :none),
            (:(=), :invoke_data, (:(::), :invoke_data, :InvokeData)),
            (:line, 3576, :none),
            (:(=), :invoke_fexpr, (:., :invoke_data, (:quote, #QuoteNode
                  :fexpr
                ))),
            (:line, 3577, :none),
            (:(=), :invoke_texpr, (:., :invoke_data, (:quote, #QuoteNode
                  :texpr
                )))
          )),
        (:line, 3580, :none),
        (:if, (:call, :>, :nu, 1), (:block,
            (:line, 3581, :none),
            (:(=), :spec_hit, :nothing),
            (:line, 3582, :none),
            (:(=), :spec_miss, :nothing),
            (:line, 3583, :none),
            (:(=), :error_label, :nothing),
            (:line, 3584, :none),
            (:(=), :linfo_var, (:call, :add_slot!, (:., :sv, (:quote, #QuoteNode
                    :src
                  )), :MethodInstance, false)),
            (:line, 3585, :none),
            (:(=), :ex, (:call, :Expr, (:quote, #QuoteNode
                  :call
                ))),
            (:line, 3586, :none),
            (:(=), (:., :ex, (:quote, #QuoteNode
                  :args
                )), (:call, :copy, :argexprs)),
            (:line, 3587, :none),
            (:(=), (:., :ex, (:quote, #QuoteNode
                  :typ
                )), :etype),
            (:line, 3588, :none),
            (:(=), :stmts, (:vect,)),
            (:line, 3589, :none),
            (:(=), :arg_hoisted, false),
            (:line, 3590, :none),
            (:for, (:(=), :i, (:(:), (:call, :length, :atypes), -1, 1)), (:block,
                (:line, 3591, :none),
                (:if, (:&&, (:call, :(==), :i, 1), (:call, :!, (:call, :(===), :invoke_texpr, :nothing))), (:block,
                    (:line, 3592, :none),
                    (:call, :unshift!, :stmts, :invoke_texpr),
                    (:line, 3593, :none),
                    (:(=), :arg_hoisted, true)
                  )),
                (:line, 3595, :none),
                (:(=), :ti, (:ref, :atypes, :i)),
                (:line, 3596, :none),
                (:if, (:||, :arg_hoisted, (:call, :isa, :ti, :Union)), (:block,
                    (:line, 3597, :none),
                    (:(=), :aei, (:ref, (:., :ex, (:quote, #QuoteNode
                            :args
                          )), :i)),
                    (:line, 3598, :none),
                    (:if, (:call, :!, (:call, :effect_free, :aei, (:., :sv, (:quote, #QuoteNode
                              :src
                            )), (:., :sv, (:quote, #QuoteNode
                              :mod
                            )), false)), (:block,
                        (:line, 3599, :none),
                        (:(=), :arg_hoisted, true),
                        (:line, 3600, :none),
                        (:(=), :newvar, (:call, :newvar!, :sv, :ti)),
                        (:line, 3601, :none),
                        (:call, :unshift!, :stmts, (:quote, (:(=), (:$, :newvar), (:$, :aei)))),
                        (:line, 3602, :none),
                        (:(=), (:ref, (:., :ex, (:quote, #QuoteNode
                                :args
                              )), :i), :newvar)
                      ))
                  ))
              )),
            (:line, 3606, :none),
            (:||, (:call, :(===), :invoke_fexpr, :nothing), (:call, :unshift!, :stmts, :invoke_fexpr)),
            (:line, 3607, :none),
            (:function, (:call, :splitunion, (:(::), :atypes, (:curly, :Vector, :Any)), (:(::), :i, :Int)), (:block,
                (:line, 3608, :none),
                (:if, (:call, :(==), :i, 0), (:block,
                    (:line, 3609, :none),
                    (:local, (:(=), :sig, (:call, :argtypes_to_type, :atypes))),
                    (:line, 3610, :none),
                    (:local, (:(=), :li, (:call, :get_spec_lambda, :sig, :sv, :invoke_data))),
                    (:line, 3611, :none),
                    (:&&, (:call, :(===), :li, :nothing), (:return, false)),
                    (:line, 3612, :none),
                    (:call, :add_backedge, :li, :sv),
                    (:line, 3613, :none),
                    (:local, (:(=), :stmt, (:vect,))),
                    (:line, 3614, :none),
                    (:call, :push!, :stmt, (:call, :Expr, (:quote, #QuoteNode
                          :(=)
                        ), :linfo_var, :li)),
                    (:line, 3615, :none),
                    (:&&, (:call, :(===), :spec_hit, :nothing), (:(=), :spec_hit, (:call, :genlabel, :sv))),
                    (:line, 3616, :none),
                    (:call, :push!, :stmt, (:call, :GotoNode, (:., :spec_hit, (:quote, #QuoteNode
                            :label
                          )))),
                    (:line, 3617, :none),
                    (:return, :stmt)
                  ), (:block,
                    (:line, 3619, :none),
                    (:local, (:(=), :ti, (:ref, :atypes, :i))),
                    (:line, 3620, :none),
                    (:if, (:call, :isa, :ti, :Union), (:block,
                        (:line, 3621, :none),
                        (:local, (:(=), :all, true)),
                        (:line, 3622, :none),
                        (:local, (:(=), :stmts, (:vect,))),
                        (:line, 3623, :none),
                        (:local, (:(=), :aei, (:ref, (:., :ex, (:quote, #QuoteNode
                                  :args
                                )), :i))),
                        (:line, 3624, :none),
                        (:for, (:(=), :ty, (:call, :uniontypes, (:(::), :ti, :Union))), (:block,
                            (:line, 3625, :none),
                            (:local, :ty),
                            (:line, 3626, :none),
                            (:(=), (:ref, :atypes, :i), :ty),
                            (:line, 3627, :none),
                            (:local, (:(=), :match, (:call, :splitunion, :atypes, (:call, :-, :i, 1)))),
                            (:line, 3628, :none),
                            (:if, (:call, :(!==), :match, false), (:block,
                                (:line, 3629, :none),
                                (:(=), :after, (:call, :genlabel, :sv)),
                                (:line, 3630, :none),
                                (:(=), :isa_ty, (:call, :Expr, (:quote, #QuoteNode
                                      :call
                                    ), (:call, :GlobalRef, :Core, (:quote, #QuoteNode
                                        :isa
                                      )), :aei, :ty)),
                                (:line, 3631, :none),
                                (:(=), (:., :isa_ty, (:quote, #QuoteNode
                                      :typ
                                    )), :Bool),
                                (:line, 3632, :none),
                                (:call, :unshift!, :match, (:call, :Expr, (:quote, #QuoteNode
                                      :gotoifnot
                                    ), :isa_ty, (:., :after, (:quote, #QuoteNode
                                        :label
                                      )))),
                                (:line, 3633, :none),
                                (:call, :append!, :stmts, :match),
                                (:line, 3634, :none),
                                (:call, :push!, :stmts, :after)
                              ), (:block,
                                (:line, 3636, :none),
                                (:(=), :all, false)
                              ))
                          )),
                        (:line, 3639, :none),
                        (:if, (:&&, :UNION_SPLIT_MISMATCH_ERROR, :all), (:block,
                            (:line, 3640, :none),
                            (:&&, (:call, :(===), :error_label, :nothing), (:(=), :error_label, (:call, :genlabel, :sv))),
                            (:line, 3641, :none),
                            (:call, :push!, :stmts, (:call, :GotoNode, (:., :error_label, (:quote, #QuoteNode
                                    :label
                                  ))))
                          ), (:block,
                            (:line, 3643, :none),
                            (:&&, (:call, :(===), :spec_miss, :nothing), (:(=), :spec_miss, (:call, :genlabel, :sv))),
                            (:line, 3644, :none),
                            (:call, :push!, :stmts, (:call, :GotoNode, (:., :spec_miss, (:quote, #QuoteNode
                                    :label
                                  ))))
                          )),
                        (:line, 3646, :none),
                        (:(=), (:ref, :atypes, :i), :ti),
                        (:line, 3647, :none),
                        (:return, (:if, (:call, :isempty, :stmts), false, :stmts))
                      ), (:block,
                        (:line, 3649, :none),
                        (:return, (:call, :splitunion, :atypes, (:call, :-, :i, 1)))
                      ))
                  ))
              )),
            (:line, 3653, :none),
            (:local, (:(=), :match, (:call, :splitunion, :atypes, (:call, :length, :atypes)))),
            (:line, 3654, :none),
            (:if, (:&&, (:call, :(!==), :match, false), (:call, :(!==), :spec_hit, :nothing)), (:block,
                (:line, 3655, :none),
                (:call, :append!, :stmts, :match),
                (:line, 3656, :none),
                (:if, (:call, :(!==), :error_label, :nothing), (:block,
                    (:line, 3657, :none),
                    (:call, :push!, :stmts, :error_label),
                    (:line, 3658, :none),
                    (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                          :call
                        ), (:call, :GlobalRef, (:call, :_topmod, (:., :sv, (:quote, #QuoteNode
                                :mod
                              ))), (:quote, #QuoteNode
                            :error
                          )), "fatal error in type inference (type bound)"))
                  )),
                (:line, 3660, :none),
                (:local, :ret_var, :merge),
                (:line, 3661, :none),
                (:if, (:call, :(!==), :spec_miss, :nothing), (:block,
                    (:line, 3662, :none),
                    (:(=), :ret_var, (:call, :add_slot!, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:call, :widenconst, (:., :ex, (:quote, #QuoteNode
                              :typ
                            ))), false)),
                    (:line, 3663, :none),
                    (:(=), :merge, (:call, :genlabel, :sv)),
                    (:line, 3664, :none),
                    (:call, :push!, :stmts, :spec_miss),
                    (:line, 3665, :none),
                    (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                          :(=)
                        ), :ret_var, :ex)),
                    (:line, 3666, :none),
                    (:call, :push!, :stmts, (:call, :GotoNode, (:., :merge, (:quote, #QuoteNode
                            :label
                          ))))
                  ), (:block,
                    (:line, 3668, :none),
                    (:(=), :ret_var, (:call, :newvar!, :sv, (:., :ex, (:quote, #QuoteNode
                            :typ
                          ))))
                  )),
                (:line, 3670, :none),
                (:call, :push!, :stmts, :spec_hit),
                (:line, 3671, :none),
                (:(=), :ex, (:call, :copy, :ex)),
                (:line, 3672, :none),
                (:(=), (:., :ex, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :invoke
                  )),
                (:line, 3673, :none),
                (:call, :unshift!, (:., :ex, (:quote, #QuoteNode
                      :args
                    )), :linfo_var),
                (:line, 3674, :none),
                (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                      :(=)
                    ), :ret_var, :ex)),
                (:line, 3675, :none),
                (:if, (:call, :(!==), :spec_miss, :nothing), (:block,
                    (:line, 3676, :none),
                    (:call, :push!, :stmts, :merge)
                  )),
                (:line, 3678, :none),
                (:return, (:tuple, :ret_var, :stmts))
              ))
          ), (:block,
            (:line, 3681, :none),
            (:local, (:(=), :cache_linfo, (:call, :get_spec_lambda, :atype_unlimited, :sv, :invoke_data))),
            (:line, 3682, :none),
            (:&&, (:call, :(===), :cache_linfo, :nothing), (:return, :NF)),
            (:line, 3683, :none),
            (:call, :add_backedge, :cache_linfo, :sv),
            (:line, 3684, :none),
            (:call, :unshift!, :argexprs, :cache_linfo),
            (:line, 3685, :none),
            (:(=), :ex, (:call, :Expr, (:quote, #QuoteNode
                  :invoke
                ))),
            (:line, 3686, :none),
            (:(=), (:., :ex, (:quote, #QuoteNode
                  :args
                )), :argexprs),
            (:line, 3687, :none),
            (:(=), (:., :ex, (:quote, #QuoteNode
                  :typ
                )), :etype),
            (:line, 3688, :none),
            (:if, (:call, :(===), :invoke_texpr, :nothing), (:block,
                (:line, 3689, :none),
                (:if, (:call, :(===), :invoke_fexpr, :nothing), (:block,
                    (:line, 3690, :none),
                    (:return, :ex)
                  ), (:block,
                    (:line, 3692, :none),
                    (:return, (:tuple, :ex, (:ref, :Any, :invoke_fexpr)))
                  ))
              )),
            (:line, 3695, :none),
            (:(=), :newvar, (:call, :newvar!, :sv, (:ref, :atypes, 1))),
            (:line, 3696, :none),
            (:(=), :stmts, (:ref, :Any, :invoke_fexpr, (:quote, (:(=), (:$, :newvar), (:$, (:ref, :argexprs, 2)))), :invoke_texpr)),
            (:line, 3699, :none),
            (:(=), (:ref, :argexprs, 2), :newvar),
            (:line, 3700, :none),
            (:return, (:tuple, :ex, :stmts))
          )),
        (:line, 3702, :none),
        (:return, :NF)
      )),
    (:line, 3712, :none),
    (:function, (:call, :inlineable, (:(::), :f, :ANY), (:(::), :ft, :ANY), (:(::), :e, :Expr), (:(::), :atypes, (:curly, :Vector, :Any)), (:(::), :sv, :InferenceState), :pending_stmts), (:block,
        (:line, 3714, :none),
        (:(=), :argexprs, (:., :e, (:quote, #QuoteNode
              :args
            ))),
        (:line, 3716, :none),
        (:if, (:&&, (:||, (:call, :(===), :f, :typeassert), (:call, :⊑, :ft, (:call, :typeof, :typeassert))), (:call, :(==), (:call, :length, :atypes), 3)), (:block,
            (:line, 3718, :none),
            (:(=), :a3, (:ref, :atypes, 3)),
            (:line, 3719, :none),
            (:if, (:||, (:&&, (:call, :isType, :a3), (:&&, (:call, :isleaftype, :a3), (:call, :⊑, (:ref, :atypes, 2), (:ref, (:., :a3, (:quote, #QuoteNode
                            :parameters
                          )), 1)))), (:&&, (:call, :isa, :a3, :Const), (:&&, (:call, :isa, (:., :a3, (:quote, #QuoteNode
                          :val
                        )), :Type), (:call, :⊑, (:ref, :atypes, 2), (:., :a3, (:quote, #QuoteNode
                          :val
                        )))))), (:block,
                (:line, 3721, :none),
                (:return, (:tuple, (:ref, :argexprs, 2), (:tuple,)))
              ))
          )),
        (:line, 3724, :none),
        (:(=), :topmod, (:call, :_topmod, :sv)),
        (:line, 3726, :none),
        (:if, (:., (:., :sv, (:quote, #QuoteNode
                :params
              )), (:quote, #QuoteNode
              :inlining
            )), (:block,
            (:line, 3727, :none),
            (:if, (:call, :isa, (:., :e, (:quote, #QuoteNode
                    :typ
                  )), :Const), (:block,
                (:line, 3728, :none),
                (:(=), :val, (:., (:., :e, (:quote, #QuoteNode
                        :typ
                      )), (:quote, #QuoteNode
                      :val
                    ))),
                (:line, 3729, :none),
                (:if, (:||, (:call, :(===), :f, :apply_type), (:||, (:call, :(===), :f, :fieldtype), (:||, (:call, :(===), :f, :typeof), (:||, (:call, :(===), :f, :(===)), (:||, (:call, :istopfunction, :topmod, :f, (:quote, #QuoteNode
                                :typejoin
                              )), (:||, (:call, :istopfunction, :topmod, :f, (:quote, #QuoteNode
                                  :isbits
                                )), (:||, (:call, :istopfunction, :topmod, :f, (:quote, #QuoteNode
                                    :promote_type
                                  )), (:||, (:&&, (:call, :(===), :f, (:., :Core, (:quote, #QuoteNode
                                          :kwfunc
                                        ))), (:call, :(==), (:call, :length, :argexprs), 2)), (:&&, (:call, :isbits, :val), (:&&, (:call, :(<=), (:call, (:., :Core, (:quote, #QuoteNode
                                              :sizeof
                                            )), :val), :MAX_INLINE_CONST_SIZE), (:||, (:call, :contains_is, :_pure_builtins, :f), (:||, (:&&, (:call, :(===), :f, :getfield), (:call, :effect_free, :e, (:., :sv, (:quote, #QuoteNode
                                                  :src
                                                )), (:., :sv, (:quote, #QuoteNode
                                                  :mod
                                                )), false)), (:&&, (:call, :isa, :f, :IntrinsicFunction), (:call, :is_pure_intrinsic, :f)))))))))))))), (:block,
                    (:line, 3738, :none),
                    (:return, (:call, :inline_as_constant, :val, :argexprs, :sv, :nothing))
                  ))
              ))
          )),
        (:line, 3742, :none),
        (:(=), :invoke_data, :nothing),
        (:line, 3743, :none),
        (:(=), :invoke_fexpr, :nothing),
        (:line, 3744, :none),
        (:(=), :invoke_texpr, :nothing),
        (:line, 3745, :none),
        (:if, (:&&, (:call, :(===), :f, (:., :Core, (:quote, #QuoteNode
                  :invoke
                ))), (:call, :(>=), (:call, :length, :atypes), 3)), (:block,
            (:line, 3746, :none),
            (:(=), :ft, (:call, :widenconst, (:ref, :atypes, 2))),
            (:line, 3747, :none),
            (:(=), :invoke_tt, (:call, :widenconst, (:ref, :atypes, 3))),
            (:line, 3748, :none),
            (:if, (:||, (:call, :!, (:call, :isleaftype, :ft)), (:||, (:call, :!, (:call, :isleaftype, :invoke_tt)), (:call, :!, (:call, :isType, :invoke_tt)))), (:block,
                (:line, 3749, :none),
                (:return, :NF)
              )),
            (:line, 3751, :none),
            (:if, (:call, :!, (:&&, (:call, :isa, (:ref, (:., :invoke_tt, (:quote, #QuoteNode
                          :parameters
                        )), 1), :Type), (:<:, (:ref, (:., :invoke_tt, (:quote, #QuoteNode
                          :parameters
                        )), 1), :Tuple))), (:block,
                (:line, 3753, :none),
                (:return, :NF)
              )),
            (:line, 3755, :none),
            (:(=), :invoke_tt_params, (:., (:ref, (:., :invoke_tt, (:quote, #QuoteNode
                      :parameters
                    )), 1), (:quote, #QuoteNode
                  :parameters
                ))),
            (:line, 3756, :none),
            (:(=), :invoke_types, (:curly, :Tuple, :ft, (:..., :invoke_tt_params))),
            (:line, 3757, :none),
            (:(=), :invoke_entry, (:call, :ccall, (:quote, #QuoteNode
                  :jl_gf_invoke_lookup
                ), :Any, (:tuple, :Any, :UInt), :invoke_types, (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :world
                  )))),
            (:line, 3759, :none),
            (:&&, (:call, :(===), :invoke_entry, :nothing), (:return, :NF)),
            (:line, 3760, :none),
            (:(=), :invoke_fexpr, (:ref, :argexprs, 1)),
            (:line, 3761, :none),
            (:(=), :invoke_texpr, (:ref, :argexprs, 3)),
            (:line, 3762, :none),
            (:if, (:call, :effect_free, :invoke_fexpr, (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:., :sv, (:quote, #QuoteNode
                    :mod
                  )), false), (:block,
                (:line, 3763, :none),
                (:(=), :invoke_fexpr, :nothing)
              )),
            (:line, 3765, :none),
            (:if, (:call, :effect_free, :invoke_texpr, (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:., :sv, (:quote, #QuoteNode
                    :mod
                  )), false), (:block,
                (:line, 3766, :none),
                (:(=), :invoke_fexpr, :nothing)
              )),
            (:line, 3768, :none),
            (:(=), :invoke_data, (:call, :InvokeData, (:., (:., :ft, (:quote, #QuoteNode
                      :name
                    )), (:quote, #QuoteNode
                    :mt
                  )), :invoke_entry, :invoke_types, :invoke_fexpr, :invoke_texpr)),
            (:line, 3770, :none),
            (:(=), :atype0, (:ref, :atypes, 2)),
            (:line, 3771, :none),
            (:(=), :argexpr0, (:ref, :argexprs, 2)),
            (:line, 3772, :none),
            (:(=), :atypes, (:ref, :atypes, (:(:), 4, :end))),
            (:line, 3773, :none),
            (:(=), :argexprs, (:ref, :argexprs, (:(:), 4, :end))),
            (:line, 3774, :none),
            (:call, :unshift!, :atypes, :atype0),
            (:line, 3775, :none),
            (:call, :unshift!, :argexprs, :argexpr0),
            (:line, 3776, :none),
            (:(=), :f, (:if, (:call, :isdefined, :ft, (:quote, #QuoteNode
                    :instance
                  )), (:., :ft, (:quote, #QuoteNode
                    :instance
                  )), :nothing))
          ), (:block,
            (:line, 3777, :none),
            (:if, (:||, (:call, :isa, :f, :IntrinsicFunction), (:||, (:call, :⊑, :ft, :IntrinsicFunction), (:||, (:call, :isa, :f, :Builtin), (:call, :⊑, :ft, :Builtin)))), (:block,
                (:line, 3779, :none),
                (:return, :NF)
              ))
          )),
        (:line, 3782, :none),
        (:(=), :atype_unlimited, (:call, :argtypes_to_type, :atypes)),
        (:line, 3783, :none),
        (:if, (:call, :!, (:call, :(===), :invoke_data, :nothing)), (:block,
            (:line, 3784, :none),
            (:(=), :invoke_data, (:(::), :invoke_data, :InvokeData)),
            (:line, 3786, :none),
            (:||, (:<:, :atype_unlimited, (:., :invoke_data, (:quote, #QuoteNode
                    :types0
                  ))), (:return, :NF))
          )),
        (:line, 3788, :none),
        (:if, (:call, :!, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :inlining
              ))), (:block,
            (:line, 3789, :none),
            (:return, (:call, :invoke_NF, :argexprs, (:., :e, (:quote, #QuoteNode
                    :typ
                  )), :atypes, :sv, :atype_unlimited, :invoke_data))
          )),
        (:line, 3793, :none),
        (:if, (:&&, (:call, :(==), (:call, :length, :atypes), 3), (:call, :istopfunction, :topmod, :f, (:quote, #QuoteNode
                :(!==)
              ))), (:block,
            (:line, 3796, :none),
            (:if, (:call, :isa, (:., :e, (:quote, #QuoteNode
                    :typ
                  )), :Const), (:block,
                (:line, 3797, :none),
                (:return, (:call, :inline_as_constant, (:., (:., :e, (:quote, #QuoteNode
                          :typ
                        )), (:quote, #QuoteNode
                        :val
                      )), :argexprs, :sv, :nothing))
              )),
            (:line, 3799, :none),
            (:(=), :not_is, (:call, :Expr, (:quote, #QuoteNode
                  :call
                ), (:call, :GlobalRef, (:., :Core, (:quote, #QuoteNode
                      :Intrinsics
                    )), (:quote, #QuoteNode
                    :not_int
                  )), (:call, :Expr, (:quote, #QuoteNode
                    :call
                  ), (:call, :GlobalRef, :Core, (:quote, #QuoteNode
                      :(===)
                    )), (:ref, :argexprs, 2), (:ref, :argexprs, 3)))),
            (:line, 3801, :none),
            (:(=), (:., :not_is, (:quote, #QuoteNode
                  :typ
                )), :Bool),
            (:line, 3802, :none),
            (:(=), (:., (:ref, (:., :not_is, (:quote, #QuoteNode
                      :args
                    )), 2), (:quote, #QuoteNode
                  :typ
                )), :Bool),
            (:line, 3803, :none),
            (:return, (:tuple, :not_is, (:tuple,)))
          ), (:block,
            (:line, 3804, :none),
            (:if, (:&&, (:call, :(==), (:call, :length, :atypes), 3), (:call, :istopfunction, :topmod, :f, (:quote, #QuoteNode
                    :>:
                  ))), (:block,
                (:line, 3807, :none),
                (:if, (:call, :isa, (:., :e, (:quote, #QuoteNode
                        :typ
                      )), :Const), (:block,
                    (:line, 3808, :none),
                    (:return, (:call, :inline_as_constant, (:., (:., :e, (:quote, #QuoteNode
                              :typ
                            )), (:quote, #QuoteNode
                            :val
                          )), :argexprs, :sv, :nothing))
                  )),
                (:line, 3810, :none),
                (:(=), :arg_T1, (:ref, :argexprs, 2)),
                (:line, 3811, :none),
                (:(=), :arg_T2, (:ref, :argexprs, 3)),
                (:line, 3812, :none),
                (:(=), :issubtype_stmts, (:tuple,)),
                (:line, 3813, :none),
                (:if, (:call, :!, (:call, :effect_free, :arg_T2, (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:., :sv, (:quote, #QuoteNode
                          :mod
                        )), false)), (:block,
                    (:line, 3815, :none),
                    (:(=), :issubtype_vnew, (:call, :newvar!, :sv, (:call, :widenconst, (:call, :exprtype, :arg_T1, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:., :sv, (:quote, #QuoteNode
                                :mod
                              )))))),
                    (:line, 3816, :none),
                    (:(=), :issubtype_stmts, (:ref, :Any, (:call, :Expr, (:quote, #QuoteNode
                            :(=)
                          ), :issubtype_vnew, :arg_T1))),
                    (:line, 3817, :none),
                    (:(=), :arg_T1, :issubtype_vnew)
                  )),
                (:line, 3819, :none),
                (:(=), :issubtype_expr, (:call, :Expr, (:quote, #QuoteNode
                      :call
                    ), (:call, :GlobalRef, :Core, (:quote, #QuoteNode
                        :issubtype
                      )), :arg_T2, :arg_T1)),
                (:line, 3820, :none),
                (:(=), (:., :issubtype_expr, (:quote, #QuoteNode
                      :typ
                    )), :Bool),
                (:line, 3821, :none),
                (:return, (:tuple, :issubtype_expr, :issubtype_stmts))
              ))
          )),
        (:line, 3824, :none),
        (:if, (:call, :>, (:call, :-, (:call, :length, (:., :atype_unlimited, (:quote, #QuoteNode
                    :parameters
                  ))), 1), (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :MAX_TUPLETYPE_LEN
              ))), (:block,
            (:line, 3825, :none),
            (:(=), :atype, (:call, :limit_tuple_type, :atype_unlimited, (:., :sv, (:quote, #QuoteNode
                    :params
                  ))))
          ), (:block,
            (:line, 3827, :none),
            (:(=), :atype, :atype_unlimited)
          )),
        (:line, 3829, :none),
        (:if, (:call, :(===), :invoke_data, :nothing), (:block,
            (:line, 3830, :none),
            (:(=), :min_valid, (:ref, :UInt, (:call, :typemin, :UInt))),
            (:line, 3831, :none),
            (:(=), :max_valid, (:ref, :UInt, (:call, :typemax, :UInt))),
            (:line, 3832, :none),
            (:(=), :meth, (:call, :_methods_by_ftype, :atype, 1, (:., (:., :sv, (:quote, #QuoteNode
                      :params
                    )), (:quote, #QuoteNode
                    :world
                  )), :min_valid, :max_valid)),
            (:line, 3833, :none),
            (:if, (:||, (:call, :(===), :meth, false), (:call, :(!=), (:call, :length, :meth), 1)), (:block,
                (:line, 3834, :none),
                (:return, (:call, :invoke_NF, :argexprs, (:., :e, (:quote, #QuoteNode
                        :typ
                      )), :atypes, :sv, :atype_unlimited, :invoke_data))
              )),
            (:line, 3837, :none),
            (:(=), :meth, (:(::), (:ref, :meth, 1), :SimpleVector)),
            (:line, 3838, :none),
            (:(=), :metharg, (:(::), (:ref, :meth, 1), :Type)),
            (:line, 3839, :none),
            (:(=), :methsp, (:(::), (:ref, :meth, 2), :SimpleVector)),
            (:line, 3840, :none),
            (:(=), :method, (:(::), (:ref, :meth, 3), :Method))
          ), (:block,
            (:line, 3842, :none),
            (:(=), :invoke_data, (:(::), :invoke_data, :InvokeData)),
            (:line, 3843, :none),
            (:(=), :method, (:., (:., :invoke_data, (:quote, #QuoteNode
                    :entry
                  )), (:quote, #QuoteNode
                  :func
                ))),
            (:line, 3844, :none),
            (:(=), (:tuple, :metharg, :methsp), (:call, :ccall, (:quote, #QuoteNode
                  :jl_match_method
                ), (:curly, :Ref, :SimpleVector), (:tuple, :Any, :Any), :atype_unlimited, (:., :method, (:quote, #QuoteNode
                    :sig
                  )))),
            (:line, 3846, :none),
            (:(=), :methsp, (:(::), :methsp, :SimpleVector))
          )),
        (:line, 3849, :none),
        (:(=), :methsig, (:., :method, (:quote, #QuoteNode
              :sig
            ))),
        (:line, 3850, :none),
        (:if, (:call, :!, (:<:, :atype, :metharg)), (:block,
            (:line, 3851, :none),
            (:return, (:call, :invoke_NF, :argexprs, (:., :e, (:quote, #QuoteNode
                    :typ
                  )), :atypes, :sv, :atype_unlimited, :invoke_data))
          )),
        (:line, 3856, :none),
        (:if, (:&&, (:call, :isa, :f, (:call, :widenconst, :ft)), (:call, :!, (:., :method, (:quote, #QuoteNode
                  :isstaged
                )))), (:block,
            (:line, 3857, :none),
            (:if, (:call, :(===), :f, :return_type), (:block,
                (:line, 3858, :none),
                (:if, (:call, :isconstType, (:., :e, (:quote, #QuoteNode
                        :typ
                      ))), (:block,
                    (:line, 3859, :none),
                    (:return, (:call, :inline_as_constant, (:ref, (:., (:., :e, (:quote, #QuoteNode
                                :typ
                              )), (:quote, #QuoteNode
                              :parameters
                            )), 1), :argexprs, :sv, :invoke_data))
                  ), (:block,
                    (:line, 3860, :none),
                    (:if, (:call, :isa, (:., :e, (:quote, #QuoteNode
                            :typ
                          )), :Const), (:block,
                        (:line, 3861, :none),
                        (:return, (:call, :inline_as_constant, (:., (:., :e, (:quote, #QuoteNode
                                  :typ
                                )), (:quote, #QuoteNode
                                :val
                              )), :argexprs, :sv, :invoke_data))
                      ))
                  ))
              ), (:block,
                (:line, 3863, :none),
                (:if, (:&&, (:., :method, (:quote, #QuoteNode
                        :pure
                      )), (:&&, (:call, :isa, (:., :e, (:quote, #QuoteNode
                            :typ
                          )), :Const), (:., (:., :e, (:quote, #QuoteNode
                            :typ
                          )), (:quote, #QuoteNode
                          :actual
                        )))), (:block,
                    (:line, 3864, :none),
                    (:return, (:call, :inline_as_constant, (:., (:., :e, (:quote, #QuoteNode
                              :typ
                            )), (:quote, #QuoteNode
                            :val
                          )), :argexprs, :sv, :invoke_data))
                  ))
              ))
          )),
        (:line, 3868, :none),
        (:(=), :argexprs0, :argexprs),
        (:line, 3869, :none),
        (:(=), :na, (:call, :Int, (:., :method, (:quote, #QuoteNode
                :nargs
              )))),
        (:line, 3871, :none),
        (:(=), :isva, false),
        (:line, 3872, :none),
        (:if, (:&&, (:call, :>, :na, 0), (:., :method, (:quote, #QuoteNode
                :isva
              ))), (:block,
            (:line, 3873, :none),
            (:macrocall, Symbol("@assert"), (:call, :(>=), (:call, :length, :argexprs), (:call, :-, :na, 1))),
            (:line, 3875, :none),
            (:(=), :vararg, (:call, :mk_tuplecall, (:ref, :argexprs, (:(:), :na, :end)), :sv)),
            (:line, 3876, :none),
            (:(=), :argexprs, (:ref, :Any, (:..., (:ref, :argexprs, (:(:), 1, (:call, :-, :na, 1)))), :vararg)),
            (:line, 3877, :none),
            (:(=), :isva, true)
          ), (:block,
            (:line, 3878, :none),
            (:if, (:call, :(!=), :na, (:call, :length, :argexprs)), (:block,
                (:line, 3883, :none),
                (:return, :NF)
              ))
          )),
        (:line, 3886, :none),
        (:macrocall, Symbol("@assert"), (:call, :(==), :na, (:call, :length, :argexprs))),
        (:line, 3888, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :methsp))), (:block,
            (:line, 3889, :none),
            (:(=), :si, (:ref, :methsp, :i)),
            (:line, 3890, :none),
            (:&&, (:call, :isa, :si, :TypeVar), (:return, :NF))
          )),
        (:line, 3895, :none),
        (:(=), :force_infer, false),
        (:line, 3896, :none),
        (:if, (:call, :!, (:., :method, (:quote, #QuoteNode
                :isstaged
              ))), (:block,
            (:line, 3897, :none),
            (:if, (:||, (:call, :(==), (:., :method, (:quote, #QuoteNode
                      :module
                    )), (:call, :_topmod, (:., :method, (:quote, #QuoteNode
                        :module
                      )))), (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                      :Base
                    )), (:call, :(==), (:., :method, (:quote, #QuoteNode
                        :module
                      )), (:., :Main, (:quote, #QuoteNode
                        :Base
                      ))))), (:block,
                (:line, 3898, :none),
                (:(=), :la, (:call, :length, :atypes)),
                (:line, 3899, :none),
                (:if, (:||, (:&&, (:call, :(==), :la, 3), (:||, (:call, :(==), (:., :method, (:quote, #QuoteNode
                              :name
                            )), (:quote, #QuoteNode
                            :getindex
                          )), (:call, :(==), (:., :method, (:quote, #QuoteNode
                              :name
                            )), (:quote, #QuoteNode
                            :next
                          )))), (:&&, (:call, :(==), :la, 4), (:call, :(==), (:., :method, (:quote, #QuoteNode
                            :name
                          )), (:quote, #QuoteNode
                          :indexed_next
                        )))), (:block,
                    (:line, 3901, :none),
                    (:if, (:call, :⊑, (:ref, :atypes, 3), :Int), (:block,
                        (:line, 3902, :none),
                        (:(=), :at2, (:call, :widenconst, (:ref, :atypes, 2))),
                        (:line, 3903, :none),
                        (:if, (:||, (:<:, :at2, :Tuple), (:||, (:<:, :at2, :SimpleVector), (:&&, (:call, :isa, :at2, :DataType), (:call, :(===), (:., (:(::), :at2, :DataType), (:quote, #QuoteNode
                                      :name
                                    )), (:call, :Pair_name))))), (:block,
                            (:line, 3905, :none),
                            (:(=), :force_infer, true)
                          ))
                      ))
                  ), (:block,
                    (:line, 3908, :none),
                    (:if, (:&&, (:call, :(==), :la, 2), (:&&, (:call, :(==), (:., :method, (:quote, #QuoteNode
                                :name
                              )), (:quote, #QuoteNode
                              :length
                            )), (:call, :⊑, (:ref, :atypes, 2), :SimpleVector))), (:block,
                        (:line, 3909, :none),
                        (:(=), :force_infer, true)
                      ))
                  ))
              ))
          )),
        (:line, 3915, :none),
        (:(=), :linfo, (:call, :code_for_method, :method, :metharg, :methsp, (:., (:., :sv, (:quote, #QuoteNode
                  :params
                )), (:quote, #QuoteNode
                :world
              )), (:call, :!, :force_infer))),
        (:line, 3916, :none),
        (:||, (:call, :isa, :linfo, :MethodInstance), (:return, (:call, :invoke_NF, :argexprs0, (:., :e, (:quote, #QuoteNode
                  :typ
                )), :atypes, :sv, :atype_unlimited, :invoke_data))),
        (:line, 3918, :none),
        (:(=), :linfo, (:(::), :linfo, :MethodInstance)),
        (:line, 3919, :none),
        (:if, (:call, :(==), (:., :linfo, (:quote, #QuoteNode
                :jlcall_api
              )), 2), (:block,
            (:line, 3921, :none),
            (:call, :add_backedge, :linfo, :sv),
            (:line, 3922, :none),
            (:return, (:call, :inline_as_constant, (:., :linfo, (:quote, #QuoteNode
                    :inferred_const
                  )), :argexprs, :sv, :invoke_data))
          )),
        (:line, 3927, :none),
        (:(=), :frame, :nothing),
        (:line, 3928, :none),
        (:(=), :inferred, :nothing),
        (:line, 3929, :none),
        (:if, (:&&, :force_infer, (:&&, (:call, :>, :la, 2), (:call, :isa, (:ref, :atypes, 3), :Const))), (:block,
            (:line, 3938, :none),
            (:(=), :frame, (:call, :InferenceState, :linfo, (:call, :get_source, :linfo), true, false, (:., :sv, (:quote, #QuoteNode
                    :params
                  )))),
            (:line, 3939, :none),
            (:(=), (:ref, (:ref, (:., :frame, (:quote, #QuoteNode
                      :stmt_types
                    )), 1), 3), (:call, :VarState, (:ref, :atypes, 3), false)),
            (:line, 3940, :none),
            (:call, :typeinf_loop, :frame)
          ), (:block,
            (:line, 3942, :none),
            (:if, (:&&, (:call, :isdefined, :linfo, (:quote, #QuoteNode
                    :inferred
                  )), (:call, :(!==), (:., :linfo, (:quote, #QuoteNode
                      :inferred
                    )), :nothing)), (:block,
                (:line, 3944, :none),
                (:(=), :inferred, (:., :linfo, (:quote, #QuoteNode
                      :inferred
                    )))
              ), (:block,
                (:line, 3945, :none),
                (:if, (:., :linfo, (:quote, #QuoteNode
                      :inInference
                    )), (:block,
                    (:line, 3947, :none),
                    (:(=), :frame, (:call, :typeinf_active, :linfo))
                  ), (:block,
                    (:line, 3948, :none),
                    (:if, :force_infer, (:block,
                        (:line, 3953, :none),
                        (:(=), :frame, (:call, :typeinf_frame, :linfo, :nothing, true, true, (:., :sv, (:quote, #QuoteNode
                                :params
                              ))))
                      ))
                  ))
              ))
          )),
        (:line, 3958, :none),
        (:if, (:call, :isa, :frame, :InferenceState), (:block,
            (:line, 3959, :none),
            (:(=), :frame, (:(::), :frame, :InferenceState)),
            (:line, 3960, :none),
            (:(=), :linfo, (:., :frame, (:quote, #QuoteNode
                  :linfo
                ))),
            (:line, 3961, :none),
            (:(=), :inferred, (:., :frame, (:quote, #QuoteNode
                  :src
                ))),
            (:line, 3962, :none),
            (:if, (:., :frame, (:quote, #QuoteNode
                  :const_api
                )), (:block,
                (:line, 3963, :none),
                (:if, (:||, (:., :frame, (:quote, #QuoteNode
                        :inferred
                      )), (:call, :!, (:., :frame, (:quote, #QuoteNode
                          :cached
                        )))), (:block,
                    (:line, 3964, :none),
                    (:call, :add_backedge, (:., :frame, (:quote, #QuoteNode
                          :linfo
                        )), :sv)
                  ), (:block,
                    (:line, 3966, :none),
                    (:call, :add_backedge, :frame, :sv, 0)
                  )),
                (:line, 3968, :none),
                (:if, (:call, :isa, (:., :frame, (:quote, #QuoteNode
                        :bestguess
                      )), :Const), (:block,
                    (:line, 3969, :none),
                    (:(=), :inferred_const, (:., (:(::), (:., :frame, (:quote, #QuoteNode
                              :bestguess
                            )), :Const), (:quote, #QuoteNode
                          :val
                        )))
                  ), (:block,
                    (:line, 3971, :none),
                    (:macrocall, Symbol("@assert"), (:call, :isconstType, (:., :frame, (:quote, #QuoteNode
                            :bestguess
                          )))),
                    (:line, 3972, :none),
                    (:(=), :inferred_const, (:ref, (:., (:., :frame, (:quote, #QuoteNode
                              :bestguess
                            )), (:quote, #QuoteNode
                            :parameters
                          )), 1))
                  )),
                (:line, 3974, :none),
                (:return, (:call, :inline_as_constant, :inferred_const, :argexprs, :sv, :invoke_data))
              )),
            (:line, 3976, :none),
            (:(=), :rettype, (:call, :widenconst, (:., :frame, (:quote, #QuoteNode
                    :bestguess
                  ))))
          ), (:block,
            (:line, 3978, :none),
            (:(=), :rettype, (:., :linfo, (:quote, #QuoteNode
                  :rettype
                )))
          )),
        (:line, 3982, :none),
        (:if, (:call, :(===), :inferred, :nothing), (:block,
            (:line, 3983, :none),
            (:(=), :src_inferred, (:(=), :src_inlineable, false))
          ), (:block,
            (:line, 3985, :none),
            (:(=), :src_inferred, (:call, :ccall, (:quote, #QuoteNode
                  :jl_ast_flag_inferred
                ), :Bool, (:tuple, :Any), :inferred)),
            (:line, 3986, :none),
            (:(=), :src_inlineable, (:call, :ccall, (:quote, #QuoteNode
                  :jl_ast_flag_inlineable
                ), :Bool, (:tuple, :Any), :inferred))
          )),
        (:line, 3988, :none),
        (:if, (:||, (:call, :!, :src_inferred), (:call, :!, :src_inlineable)), (:block,
            (:line, 3989, :none),
            (:return, (:call, :invoke_NF, :argexprs0, (:., :e, (:quote, #QuoteNode
                    :typ
                  )), :atypes, :sv, :atype_unlimited, :invoke_data))
          )),
        (:line, 3993, :none),
        (:if, (:call, :isa, :inferred, :CodeInfo), (:block,
            (:line, 3994, :none),
            (:(=), :src, :inferred),
            (:line, 3995, :none),
            (:(=), :ast, (:call, :copy_exprargs, (:., :inferred, (:quote, #QuoteNode
                    :code
                  ))))
          ), (:block,
            (:line, 3997, :none),
            (:(=), :src, (:(::), (:call, :ccall, (:quote, #QuoteNode
                    :jl_uncompress_ast
                  ), :Any, (:tuple, :Any, :Any), :method, :inferred), :CodeInfo)),
            (:line, 3998, :none),
            (:(=), :ast, (:., :src, (:quote, #QuoteNode
                  :code
                )))
          )),
        (:line, 4000, :none),
        (:(=), :ast, (:(::), :ast, (:curly, :Array, :Any, 1))),
        (:line, 4003, :none),
        (:if, (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                :Base
              )), (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                    :Base
                  )), (:quote, #QuoteNode
                  :promote
                )), (:&&, (:call, :>, (:call, :length, (:., (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :slottypes
                      ))), 0), (:call, :⊑, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :slottypes
                      )), 1), (:call, :typeof, (:call, :getfield, (:., :Main, (:quote, #QuoteNode
                          :Base
                        )), (:quote, #QuoteNode
                        :promote
                      ))))))), (:block,
            (:line, 4006, :none),
            (:if, (:&&, (:call, :⊑, (:., :sv, (:quote, #QuoteNode
                      :bestguess
                    )), :Tuple), (:call, :!, (:call, :isbits, (:call, :widenconst, (:., :sv, (:quote, #QuoteNode
                          :bestguess
                        )))))), (:block,
                (:line, 4012, :none),
                (:(=), :current_stmts, (:call, :vcat, (:., (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:quote, #QuoteNode
                        :code
                      )), :pending_stmts)),
                (:line, 4013, :none),
                (:if, (:call, :inline_worthy_stmts, :current_stmts), (:block,
                    (:line, 4014, :none),
                    (:call, :append!, :current_stmts, :ast),
                    (:line, 4015, :none),
                    (:if, (:call, :!, (:call, :inline_worthy_stmts, :current_stmts)), (:block,
                        (:line, 4016, :none),
                        (:return, (:call, :invoke_NF, :argexprs0, (:., :e, (:quote, #QuoteNode
                                :typ
                              )), :atypes, :sv, :atype_unlimited, :invoke_data))
                      ))
                  ))
              ))
          )),
        (:line, 4024, :none),
        (:if, (:&&, (:call, :isa, :frame, :InferenceState), (:&&, (:call, :!, (:., :frame, (:quote, #QuoteNode
                    :inferred
                  ))), (:., :frame, (:quote, #QuoteNode
                  :cached
                )))), (:block,
            (:line, 4027, :none),
            (:call, :add_backedge, :frame, :sv, 0)
          ), (:block,
            (:line, 4029, :none),
            (:call, :add_backedge, :linfo, :sv)
          )),
        (:line, 4032, :none),
        (:(=), :spvals, (:ref, :Any)),
        (:line, 4033, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :methsp))), (:block,
            (:line, 4034, :none),
            (:call, :push!, :spvals, (:ref, :methsp, :i))
          )),
        (:line, 4036, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :spvals))), (:block,
            (:line, 4037, :none),
            (:(=), :si, (:ref, :spvals, :i)),
            (:line, 4038, :none),
            (:if, (:||, (:call, :isa, :si, :Symbol), (:||, (:call, :isa, :si, :SSAValue), (:call, :isa, :si, :Slot))), (:block,
                (:line, 4039, :none),
                (:(=), (:ref, :spvals, :i), (:call, :QuoteNode, :si))
              ))
          )),
        (:line, 4043, :none),
        (:(=), :nm, (:call, :length, (:., (:call, :unwrap_unionall, :metharg), (:quote, #QuoteNode
                :parameters
              )))),
        (:line, 4045, :none),
        (:(=), :body, (:call, :Expr, (:quote, #QuoteNode
              :block
            ))),
        (:line, 4046, :none),
        (:(=), (:., :body, (:quote, #QuoteNode
              :args
            )), :ast),
        (:line, 4047, :none),
        (:(=), :propagate_inbounds, (:., :src, (:quote, #QuoteNode
              :propagate_inbounds
            ))),
        (:line, 4050, :none),
        (:(=), :stmts, (:vect,)),
        (:line, 4051, :none),
        (:(=), :prelude_stmts, (:vect,)),
        (:line, 4052, :none),
        (:(=), :stmts_free, true),
        (:line, 4054, :none),
        (:for, (:(=), :i, (:(:), :na, -1, 1)), (:block,
            (:line, 4056, :none),
            (:(=), :aei, (:ref, :argexprs, :i)),
            (:line, 4057, :none),
            (:(=), :aeitype, (:(=), :argtype, (:call, :widenconst, (:call, :exprtype, :aei, (:., :sv, (:quote, #QuoteNode
                        :src
                      )), (:., :sv, (:quote, #QuoteNode
                        :mod
                      )))))),
            (:line, 4058, :none),
            (:if, (:&&, (:call, :(==), :i, 1), (:call, :!, (:call, :(===), :invoke_texpr, :nothing))), (:block,
                (:line, 4059, :none),
                (:call, :unshift!, :prelude_stmts, :invoke_texpr)
              )),
            (:line, 4065, :none),
            (:(=), :affect_free, :stmts_free),
            (:line, 4066, :none),
            (:(=), :occ, 0),
            (:line, 4067, :none),
            (:for, (:(=), :j, (:(:), (:call, :length, (:., :body, (:quote, #QuoteNode
                        :args
                      ))), -1, 1)), (:block,
                (:line, 4068, :none),
                (:(=), :b, (:ref, (:., :body, (:quote, #QuoteNode
                        :args
                      )), :j)),
                (:line, 4069, :none),
                (:if, (:call, :<, :occ, 6), (:block,
                    (:line, 4070, :none),
                    (:+=, :occ, (:call, :occurs_more, :b, (:->, :x, (:block,
                            (:line, 4070, :none),
                            (:&&, (:call, :isa, :x, :Slot), (:call, :(==), (:call, :slot_id, :x), :i))
                          )), 6))
                  )),
                (:line, 4072, :none),
                (:if, (:&&, (:call, :>, :occ, 0), (:&&, :affect_free, (:call, :!, (:call, :effect_free, :b, :src, (:., :method, (:quote, #QuoteNode
                              :module
                            )), true)))), (:block,
                    (:line, 4074, :none),
                    (:(=), :affect_free, false)
                  )),
                (:line, 4076, :none),
                (:if, (:&&, (:call, :>, :occ, 5), (:call, :!, :affect_free)), (:block,
                    (:line, 4077, :none),
                    (:break,)
                  ))
              )),
            (:line, 4080, :none),
            (:(=), :free, (:call, :effect_free, :aei, (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:., :sv, (:quote, #QuoteNode
                    :mod
                  )), true)),
            (:line, 4081, :none),
            (:if, (:||, (:&&, (:call, :(==), :occ, 0), (:call, :(===), :aeitype, :Bottom)), (:||, (:&&, (:call, :>, :occ, 1), (:call, :!, (:call, :inline_worthy, :aei, (:call, :*, :occ, 2000)))), (:||, (:&&, :affect_free, (:call, :!, :free)), (:&&, (:call, :!, :affect_free), (:call, :!, (:call, :effect_free, :aei, (:., :sv, (:quote, #QuoteNode
                              :src
                            )), (:., :sv, (:quote, #QuoteNode
                              :mod
                            )), false)))))), (:block,
                (:line, 4083, :none),
                (:if, (:call, :(!=), :occ, 0), (:block,
                    (:line, 4084, :none),
                    (:(=), :vnew, (:call, :newvar!, :sv, :aeitype)),
                    (:line, 4085, :none),
                    (:(=), (:ref, :argexprs, :i), :vnew),
                    (:line, 4086, :none),
                    (:call, :unshift!, :prelude_stmts, (:call, :Expr, (:quote, #QuoteNode
                          :(=)
                        ), :vnew, :aei)),
                    (:line, 4087, :none),
                    (:&=, :stmts_free, :free)
                  ), (:block,
                    (:line, 4088, :none),
                    (:if, (:&&, (:call, :!, :free), (:call, :!, (:call, :isType, :aeitype))), (:block,
                        (:line, 4089, :none),
                        (:call, :unshift!, :prelude_stmts, :aei),
                        (:line, 4090, :none),
                        (:(=), :stmts_free, false)
                      ))
                  ))
              ))
          )),
        (:line, 4094, :none),
        (:||, (:call, :(===), :invoke_fexpr, :nothing), (:call, :unshift!, :prelude_stmts, :invoke_fexpr)),
        (:line, 4097, :none),
        (:(=), :ssavalue_types, (:., :src, (:quote, #QuoteNode
              :ssavaluetypes
            ))),
        (:line, 4098, :none),
        (:if, (:call, :!, (:call, :isempty, :ssavalue_types)), (:block,
            (:line, 4099, :none),
            (:(=), :incr, (:call, :length, (:., (:., :sv, (:quote, #QuoteNode
                      :src
                    )), (:quote, #QuoteNode
                    :ssavaluetypes
                  )))),
            (:line, 4100, :none),
            (:if, (:call, :(!=), :incr, 0), (:block,
                (:line, 4101, :none),
                (:(=), :body, (:call, :ssavalue_increment, :body, :incr))
              )),
            (:line, 4103, :none),
            (:call, :append!, (:., (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:quote, #QuoteNode
                  :ssavaluetypes
                )), :ssavalue_types)
          )),
        (:line, 4107, :none),
        (:(=), :body, (:call, :substitute!, :body, :na, :argexprs, (:., :method, (:quote, #QuoteNode
                :sig
              )), :spvals, (:call, :-, (:call, :length, (:., (:., :sv, (:quote, #QuoteNode
                      :src
                    )), (:quote, #QuoteNode
                    :slotnames
                  ))), :na))),
        (:line, 4108, :none),
        (:call, :append!, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :slotnames
            )), (:ref, (:., :src, (:quote, #QuoteNode
                :slotnames
              )), (:(:), (:call, :+, :na, 1), :end))),
        (:line, 4109, :none),
        (:call, :append!, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :slottypes
            )), (:ref, (:., :src, (:quote, #QuoteNode
                :slottypes
              )), (:(:), (:call, :+, :na, 1), :end))),
        (:line, 4110, :none),
        (:call, :append!, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :slotflags
            )), (:ref, (:., :src, (:quote, #QuoteNode
                :slotflags
              )), (:(:), (:call, :+, :na, 1), :end))),
        (:line, 4114, :none),
        (:(=), :newlabels, (:call, :zeros, :Int, (:call, :+, (:call, :label_counter, (:., :body, (:quote, #QuoteNode
                    :args
                  ))), 1))),
        (:line, 4115, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :body, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 4116, :none),
            (:(=), :a, (:ref, (:., :body, (:quote, #QuoteNode
                    :args
                  )), :i)),
            (:line, 4117, :none),
            (:if, (:call, :isa, :a, :LabelNode), (:block,
                (:line, 4118, :none),
                (:(=), :a, (:(::), :a, :LabelNode)),
                (:line, 4119, :none),
                (:(=), :newlabel, (:call, :genlabel, :sv)),
                (:line, 4120, :none),
                (:(=), (:ref, :newlabels, (:call, :+, (:., :a, (:quote, #QuoteNode
                          :label
                        )), 1)), (:., :newlabel, (:quote, #QuoteNode
                      :label
                    ))),
                (:line, 4121, :none),
                (:(=), (:ref, (:., :body, (:quote, #QuoteNode
                        :args
                      )), :i), :newlabel)
              ))
          )),
        (:line, 4124, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :body, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 4125, :none),
            (:(=), :a, (:ref, (:., :body, (:quote, #QuoteNode
                    :args
                  )), :i)),
            (:line, 4126, :none),
            (:if, (:call, :isa, :a, :GotoNode), (:block,
                (:line, 4127, :none),
                (:(=), :a, (:(::), :a, :GotoNode)),
                (:line, 4128, :none),
                (:(=), (:ref, (:., :body, (:quote, #QuoteNode
                        :args
                      )), :i), (:call, :GotoNode, (:ref, :newlabels, (:call, :+, (:., :a, (:quote, #QuoteNode
                            :label
                          )), 1))))
              ), (:block,
                (:line, 4129, :none),
                (:if, (:call, :isa, :a, :Expr), (:block,
                    (:line, 4130, :none),
                    (:(=), :a, (:(::), :a, :Expr)),
                    (:line, 4131, :none),
                    (:if, (:call, :(===), (:., :a, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :enter
                        )), (:block,
                        (:line, 4132, :none),
                        (:(=), (:ref, (:., :a, (:quote, #QuoteNode
                                :args
                              )), 1), (:ref, :newlabels, (:call, :+, (:ref, (:., :a, (:quote, #QuoteNode
                                    :args
                                  )), 1), 1)))
                      ), (:block,
                        (:line, 4133, :none),
                        (:if, (:call, :(===), (:., :a, (:quote, #QuoteNode
                                :head
                              )), (:quote, #QuoteNode
                              :gotoifnot
                            )), (:block,
                            (:line, 4134, :none),
                            (:(=), (:ref, (:., :a, (:quote, #QuoteNode
                                    :args
                                  )), 2), (:ref, :newlabels, (:call, :+, (:ref, (:., :a, (:quote, #QuoteNode
                                        :args
                                      )), 2), 1)))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 4140, :none),
        (:(=), :retstmt, (:call, :genlabel, :sv)),
        (:line, 4141, :none),
        (:local, :retval),
        (:line, 4142, :none),
        (:(=), :multiret, false),
        (:line, 4143, :none),
        (:(=), :lastexpr, (:call, :pop!, (:., :body, (:quote, #QuoteNode
                :args
              )))),
        (:line, 4144, :none),
        (:if, (:call, :isa, :lastexpr, :LabelNode), (:block,
            (:line, 4145, :none),
            (:call, :push!, (:., :body, (:quote, #QuoteNode
                  :args
                )), :lastexpr),
            (:line, 4146, :none),
            (:call, :push!, (:., :body, (:quote, #QuoteNode
                  :args
                )), (:call, :Expr, (:quote, #QuoteNode
                  :call
                ), (:call, :GlobalRef, :topmod, (:quote, #QuoteNode
                    :error
                  )), "fatal error in type inference (lowering)")),
            (:line, 4147, :none),
            (:(=), :lastexpr, :nothing)
          ), (:block,
            (:line, 4148, :none),
            (:if, (:call, :!, (:&&, (:call, :isa, :lastexpr, :Expr), (:call, :(===), (:., :lastexpr, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :return
                    )))), (:block,
                (:line, 4150, :none),
                (:call, :push!, (:., :body, (:quote, #QuoteNode
                      :args
                    )), :lastexpr),
                (:line, 4151, :none),
                (:(=), :lastexpr, :nothing)
              ))
          )),
        (:line, 4153, :none),
        (:for, (:(=), :a, (:., :body, (:quote, #QuoteNode
                :args
              ))), (:block,
            (:line, 4154, :none),
            (:call, :push!, :stmts, :a),
            (:line, 4155, :none),
            (:if, (:call, :isa, :a, :Expr), (:block,
                (:line, 4156, :none),
                (:(=), :a, (:(::), :a, :Expr)),
                (:line, 4157, :none),
                (:if, (:call, :(===), (:., :a, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :return
                    )), (:block,
                    (:line, 4158, :none),
                    (:if, (:call, :!, :multiret), (:block,
                        (:line, 4160, :none),
                        (:(=), :retval, (:call, :add_slot!, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), :rettype, false))
                      )),
                    (:line, 4162, :none),
                    (:(=), :multiret, true),
                    (:line, 4163, :none),
                    (:call, :unshift!, (:., :a, (:quote, #QuoteNode
                          :args
                        )), :retval),
                    (:line, 4164, :none),
                    (:(=), (:., :a, (:quote, #QuoteNode
                          :head
                        )), (:quote, #QuoteNode
                        :(=)
                      )),
                    (:line, 4165, :none),
                    (:call, :push!, :stmts, (:call, :GotoNode, (:., :retstmt, (:quote, #QuoteNode
                            :label
                          ))))
                  ))
              ))
          )),
        (:line, 4170, :none),
        (:if, :multiret, (:block,
            (:line, 4171, :none),
            (:if, (:call, :(!==), :lastexpr, :nothing), (:block,
                (:line, 4172, :none),
                (:call, :unshift!, (:., :lastexpr, (:quote, #QuoteNode
                      :args
                    )), :retval),
                (:line, 4173, :none),
                (:(=), (:., :lastexpr, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :(=)
                  )),
                (:line, 4174, :none),
                (:call, :push!, :stmts, :lastexpr)
              )),
            (:line, 4176, :none),
            (:call, :push!, :stmts, :retstmt),
            (:line, 4177, :none),
            (:(=), :expr, :retval)
          ), (:block,
            (:line, 4180, :none),
            (:if, (:call, :(===), :lastexpr, :nothing), (:block,
                (:line, 4181, :none),
                (:(=), :expr, :nothing)
              ), (:block,
                (:line, 4183, :none),
                (:(=), :expr, (:ref, (:., :lastexpr, (:quote, #QuoteNode
                        :args
                      )), 1))
              ))
          )),
        (:line, 4187, :none),
        (:(=), :inlining_ignore, (:function, (:tuple, (:(::), :stmt, :ANY)), (:block,
              (:line, 4188, :none),
              (:&&, (:call, :isa, :stmt, :Expr), (:return, (:call, :is_meta_expr, (:(::), :stmt, :Expr)))),
              (:line, 4189, :none),
              (:&&, (:call, :isa, :stmt, :LineNumberNode), (:return, true)),
              (:line, 4190, :none),
              (:&&, (:call, :(===), :stmt, :nothing), (:return, true)),
              (:line, 4191, :none),
              (:return, false)
            ))),
        (:line, 4194, :none),
        (:(=), :do_coverage, (:call, :coverage_enabled)),
        (:line, 4195, :none),
        (:if, :do_coverage, (:block,
            (:line, 4196, :none),
            (:(=), :line, (:., :method, (:quote, #QuoteNode
                  :line
                ))),
            (:line, 4197, :none),
            (:if, (:&&, (:call, :!, (:call, :isempty, :stmts)), (:call, :isa, (:ref, :stmts, 1), :LineNumberNode)), (:block,
                (:line, 4198, :none),
                (:(=), :line, (:., (:(::), (:call, :shift!, :stmts), :LineNumberNode), (:quote, #QuoteNode
                      :line
                    )))
              )),
            (:line, 4204, :none),
            (:(=), :mod, (:., :method, (:quote, #QuoteNode
                  :module
                ))),
            (:line, 4205, :none),
            (:if, (:call, :(===), :mod, (:., :sv, (:quote, #QuoteNode
                    :mod
                  ))), (:block,
                (:line, 4206, :none),
                (:call, :unshift!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                      :meta
                    ), (:quote, #QuoteNode
                      :push_loc
                    ), (:., :method, (:quote, #QuoteNode
                        :file
                      )), (:., :method, (:quote, #QuoteNode
                        :name
                      )), :line))
              ), (:block,
                (:line, 4209, :none),
                (:call, :unshift!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                      :meta
                    ), (:quote, #QuoteNode
                      :push_loc
                    ), (:., :method, (:quote, #QuoteNode
                        :file
                      )), (:., :method, (:quote, #QuoteNode
                        :name
                      )), :line, :mod))
              )),
            (:line, 4212, :none),
            (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                  :meta
                ), (:quote, #QuoteNode
                  :pop_loc
                )))
          ), (:block,
            (:line, 4213, :none),
            (:if, (:call, :!, (:call, :isempty, :stmts)), (:block,
                (:line, 4214, :none),
                (:if, (:call, :all, :inlining_ignore, :stmts), (:block,
                    (:line, 4215, :none),
                    (:call, :empty!, :stmts)
                  ), (:block,
                    (:line, 4217, :none),
                    (:(=), (:(::), :line, :Int), (:., :method, (:quote, #QuoteNode
                          :line
                        ))),
                    (:line, 4218, :none),
                    (:if, (:call, :isa, (:ref, :stmts, 1), :LineNumberNode), (:block,
                        (:line, 4219, :none),
                        (:(=), :line, (:., (:(::), (:call, :shift!, :stmts), :LineNumberNode), (:quote, #QuoteNode
                              :line
                            )))
                      )),
                    (:line, 4221, :none),
                    (:call, :unshift!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                          :meta
                        ), (:quote, #QuoteNode
                          :push_loc
                        ), (:., :method, (:quote, #QuoteNode
                            :file
                          )), (:., :method, (:quote, #QuoteNode
                            :name
                          )), :line)),
                    (:line, 4223, :none),
                    (:if, (:call, :isa, (:ref, :stmts, :end), :LineNumberNode), (:block,
                        (:line, 4224, :none),
                        (:(=), (:ref, :stmts, :end), (:call, :Expr, (:quote, #QuoteNode
                              :meta
                            ), (:quote, #QuoteNode
                              :pop_loc
                            )))
                      ), (:block,
                        (:line, 4226, :none),
                        (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                              :meta
                            ), (:quote, #QuoteNode
                              :pop_loc
                            )))
                      ))
                  ))
              ))
          )),
        (:line, 4230, :none),
        (:if, (:&&, (:call, :!, (:call, :isempty, :stmts)), (:call, :!, :propagate_inbounds)), (:block,
            (:line, 4232, :none),
            (:(=), (:tuple, :s_1, :s_end), (:tuple, (:ref, :stmts, 1), (:ref, :stmts, :end))),
            (:line, 4233, :none),
            (:(=), :i, 2),
            (:line, 4234, :none),
            (:while, (:&&, (:call, :>, (:call, :length, :stmts), :i), (:||, (:&&, (:call, :isa, :s_1, :Expr), (:call, :(===), (:., :s_1, (:quote, #QuoteNode
                          :head
                        )), (:quote, #QuoteNode
                        :line
                      ))), (:call, :isa, :s_1, :LineNumberNode))), (:block,
                (:line, 4235, :none),
                (:(=), :s_1, (:ref, :stmts, :i)),
                (:line, 4236, :none),
                (:+=, :i, 1)
              )),
            (:line, 4238, :none),
            (:if, (:&&, (:call, :isa, :s_1, :Expr), (:&&, (:call, :(===), (:., :s_1, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :inbounds
                    )), (:&&, (:call, :(===), (:ref, (:., :s_1, (:quote, #QuoteNode
                            :args
                          )), 1), false), (:&&, (:call, :isa, :s_end, :Expr), (:&&, (:call, :(===), (:., :s_end, (:quote, #QuoteNode
                              :head
                            )), (:quote, #QuoteNode
                            :inbounds
                          )), (:call, :(===), (:ref, (:., :s_end, (:quote, #QuoteNode
                                :args
                              )), 1), (:quote, #QuoteNode
                            :pop
                          ))))))), (:block,), (:block,
                (:line, 4242, :none),
                (:call, :unshift!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                      :inbounds
                    ), false)),
                (:line, 4243, :none),
                (:call, :push!, :stmts, (:call, :Expr, (:quote, #QuoteNode
                      :inbounds
                    ), (:quote, #QuoteNode
                      :pop
                    )))
              ))
          )),
        (:line, 4247, :none),
        (:if, (:call, :isa, :expr, :Expr), (:block,
            (:line, 4248, :none),
            (:(=), :old_t, (:., :e, (:quote, #QuoteNode
                  :typ
                ))),
            (:line, 4249, :none),
            (:if, (:call, :⊑, :old_t, (:., :expr, (:quote, #QuoteNode
                    :typ
                  ))), (:block,
                (:line, 4252, :none),
                (:(=), (:., :expr, (:quote, #QuoteNode
                      :typ
                    )), :old_t)
              ))
          )),
        (:line, 4255, :none),
        (:if, (:call, :!, (:call, :isempty, :prelude_stmts)), (:block,
            (:line, 4256, :none),
            (:(=), :stmts, (:call, :append!, :prelude_stmts, :stmts))
          )),
        (:line, 4258, :none),
        (:return, (:tuple, :expr, :stmts))
      )),
    (:line, 4261, :none),
    (:(=), (:call, :inline_worthy, (:(::), :body, :ANY), (:(::), :cost, :Integer)), (:block,
        (:line, 4261, :none),
        true
      )),
    (:line, 4264, :none),
    (:function, (:call, :inline_ignore, (:(::), :ex, :ANY)), (:block,
        (:line, 4265, :none),
        (:if, (:||, (:call, :isa, :ex, :LineNumberNode), (:call, :(===), :ex, :nothing)), (:block,
            (:line, 4266, :none),
            (:return, true)
          )),
        (:line, 4268, :none),
        (:return, (:&&, (:call, :isa, :ex, :Expr), (:call, :is_meta_expr, (:(::), :ex, :Expr))))
      )),
    (:line, 4271, :none),
    (:function, (:call, :inline_worthy_stmts, (:(::), :stmts, (:curly, :Vector, :Any)), (:kw, (:(::), :cost, :Integer), 1000)), (:block,
        (:line, 4272, :none),
        (:(=), :body, (:call, :Expr, (:quote, #QuoteNode
              :block
            ))),
        (:line, 4273, :none),
        (:(=), (:., :body, (:quote, #QuoteNode
              :args
            )), :stmts),
        (:line, 4274, :none),
        (:return, (:call, :inline_worthy, :body, :cost))
      )),
    (:line, 4277, :none),
    (:function, (:call, :inline_worthy, (:(::), :body, :Expr), (:kw, (:(::), :cost, :Integer), 1000)), (:block,
        (:line, 4278, :none),
        (:(=), :symlim, (:call, :+, 1000, (:call, :÷, 5000000, :cost))),
        (:line, 4279, :none),
        (:(=), :nstmt, 0),
        (:line, 4280, :none),
        (:for, (:(=), :stmt, (:., :body, (:quote, #QuoteNode
                :args
              ))), (:block,
            (:line, 4281, :none),
            (:if, (:call, :!, (:||, (:call, :isa, :stmt, :SSAValue), (:call, :inline_ignore, :stmt))), (:block,
                (:line, 4282, :none),
                (:+=, :nstmt, 1)
              ))
          )),
        (:line, 4285, :none),
        (:if, (:call, :<, :nstmt, (:call, :÷, (:call, :+, :symlim, 500), 1000)), (:block,
            (:line, 4286, :none),
            (:*=, :symlim, 16),
            (:line, 4287, :none),
            (:÷=, :symlim, 1000),
            (:line, 4288, :none),
            (:if, (:call, :<, (:call, :occurs_more, :body, (:->, :e, (:block,
                      (:line, 4288, :none),
                      (:call, :!, (:call, :inline_ignore, :e))
                    )), :symlim), :symlim), (:block,
                (:line, 4289, :none),
                (:return, true)
              ))
          )),
        (:line, 4292, :none),
        (:return, false)
      )),
    (:line, 4295, :none),
    (:(=), (:call, :ssavalue_increment, (:(::), :body, :ANY), :incr), (:block,
        (:line, 4295, :none),
        :body
      )),
    (:line, 4296, :none),
    (:(=), (:call, :ssavalue_increment, (:(::), :body, :SSAValue), :incr), (:block,
        (:line, 4296, :none),
        (:call, :SSAValue, (:call, :+, (:., :body, (:quote, #QuoteNode
                :id
              )), :incr))
      )),
    (:line, 4297, :none),
    (:function, (:call, :ssavalue_increment, (:(::), :body, :Expr), :incr), (:block,
        (:line, 4298, :none),
        (:if, (:call, :is_meta_expr, :body), (:block,
            (:line, 4299, :none),
            (:return, :body)
          )),
        (:line, 4301, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :body, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 4302, :none),
            (:(=), (:ref, (:., :body, (:quote, #QuoteNode
                    :args
                  )), :i), (:call, :ssavalue_increment, (:ref, (:., :body, (:quote, #QuoteNode
                      :args
                    )), :i), :incr))
          )),
        (:line, 4304, :none),
        (:return, :body)
      )),
    (:line, 4307, :none),
    (:const, (:(=), :top_getfield, (:call, :GlobalRef, :Core, (:quote, #QuoteNode
            :getfield
          )))),
    (:line, 4308, :none),
    (:const, (:(=), :top_tuple, (:call, :GlobalRef, :Core, (:quote, #QuoteNode
            :tuple
          )))),
    (:line, 4310, :none),
    (:function, (:call, :mk_getfield, :texpr, :i, :T), (:block,
        (:line, 4311, :none),
        (:(=), :e, (:call, :Expr, (:quote, #QuoteNode
              :call
            ), :top_getfield, :texpr, :i)),
        (:line, 4312, :none),
        (:(=), (:., :e, (:quote, #QuoteNode
              :typ
            )), :T),
        (:line, 4313, :none),
        (:return, :e)
      )),
    (:line, 4316, :none),
    (:function, (:call, :mk_tuplecall, :args, (:(::), :sv, :InferenceState)), (:block,
        (:line, 4317, :none),
        (:(=), :e, (:call, :Expr, (:quote, #QuoteNode
              :call
            ), :top_tuple, (:..., :args))),
        (:line, 4318, :none),
        (:(=), (:., :e, (:quote, #QuoteNode
              :typ
            )), (:call, :tuple_tfunc, (:curly, :Tuple, (:..., (:typed_comprehension, :Any, (:generator, (:call, :widenconst, (:call, :exprtype, :x, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )))), (:(=), :x, :args))))))),
        (:line, 4319, :none),
        (:return, :e)
      )),
    (:line, 4322, :none),
    (:function, (:call, :inlining_pass!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 4323, :none),
        (:(=), :eargs, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :code
            ))),
        (:line, 4324, :none),
        (:(=), :i, 1),
        (:line, 4325, :none),
        (:(=), :stmtbuf, (:vect,)),
        (:line, 4326, :none),
        (:while, (:call, :(<=), :i, (:call, :length, :eargs)), (:block,
            (:line, 4327, :none),
            (:(=), :ei, (:ref, :eargs, :i)),
            (:line, 4328, :none),
            (:if, (:call, :isa, :ei, :Expr), (:block,
                (:line, 4329, :none),
                (:(=), (:ref, :eargs, :i), (:call, :inlining_pass, :ei, :sv, :stmtbuf, 1)),
                (:line, 4330, :none),
                (:if, (:call, :!, (:call, :isempty, :stmtbuf)), (:block,
                    (:line, 4331, :none),
                    (:call, :splice!, :eargs, (:(:), :i, (:call, :-, :i, 1)), :stmtbuf),
                    (:line, 4332, :none),
                    (:+=, :i, (:call, :length, :stmtbuf)),
                    (:line, 4333, :none),
                    (:call, :empty!, :stmtbuf)
                  ))
              )),
            (:line, 4336, :none),
            (:+=, :i, 1)
          ))
      )),
    (:line, 4340, :none),
    (:const, (:(=), :corenumtype, (:curly, :Union, :Int32, :Int64, :Float32, :Float64))),
    (:line, 4344, :none),
    (:function, (:call, :inlining_pass, (:(::), :e, :Expr), (:(::), :sv, :InferenceState), :stmts, :ins), (:block,
        (:line, 4345, :none),
        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :method
            )), (:block,
            (:line, 4347, :none),
            (:return, :e)
          )),
        (:line, 4349, :none),
        (:(=), :eargs, (:., :e, (:quote, #QuoteNode
              :args
            ))),
        (:line, 4350, :none),
        (:if, (:call, :<, (:call, :length, :eargs), 1), (:block,
            (:line, 4351, :none),
            (:return, :e)
          )),
        (:line, 4353, :none),
        (:(=), :arg1, (:ref, :eargs, 1)),
        (:line, 4354, :none),
        (:(=), :isccall, false),
        (:line, 4355, :none),
        (:(=), :i0, 1),
        (:line, 4359, :none),
        (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :foreigncall
            )), (:block,
            (:line, 4361, :none),
            (:(=), :i0, 3),
            (:line, 4362, :none),
            (:(=), :isccall, true)
          ), (:block,
            (:line, 4363, :none),
            (:if, (:call, :is_known_call, :e, (:., (:., :Core, (:quote, #QuoteNode
                      :Intrinsics
                    )), (:quote, #QuoteNode
                    :llvmcall
                  )), (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:., :sv, (:quote, #QuoteNode
                    :mod
                  ))), (:block,
                (:line, 4364, :none),
                (:(=), :i0, 5)
              ))
          )),
        (:line, 4366, :none),
        (:(=), :has_stmts, false),
        (:line, 4367, :none),
        (:(=), :prev_stmts_length, (:call, :length, :stmts)),
        (:line, 4368, :none),
        (:for, (:(=), :_i, (:(:), (:call, :length, :eargs), -1, :i0)), (:block,
            (:line, 4369, :none),
            (:if, (:&&, :isccall, (:call, :(==), :_i, 3)), (:block,
                (:line, 4370, :none),
                (:(=), :i, 1),
                (:line, 4371, :none),
                (:(=), :isccallee, true)
              ), (:block,
                (:line, 4373, :none),
                (:(=), :i, :_i),
                (:line, 4374, :none),
                (:(=), :isccallee, false)
              )),
            (:line, 4376, :none),
            (:(=), :ei, (:ref, :eargs, :i)),
            (:line, 4377, :none),
            (:if, (:call, :isa, :ei, :Expr), (:block,
                (:line, 4378, :none),
                (:(=), :ei, (:(::), :ei, :Expr)),
                (:line, 4379, :none),
                (:if, (:call, :(===), (:., :ei, (:quote, #QuoteNode
                        :head
                      )), (:quote, #QuoteNode
                      :&
                    )), (:block,
                    (:line, 4380, :none),
                    (:(=), :argloc, (:., :ei, (:quote, #QuoteNode
                          :args
                        ))),
                    (:line, 4381, :none),
                    (:(=), :i, 1),
                    (:line, 4382, :none),
                    (:(=), :ei, (:ref, :argloc, 1)),
                    (:line, 4383, :none),
                    (:if, (:call, :!, (:call, :isa, :ei, :Expr)), (:block,
                        (:line, 4384, :none),
                        (:continue,)
                      )),
                    (:line, 4386, :none),
                    (:(=), :ei, (:(::), :ei, :Expr))
                  ), (:block,
                    (:line, 4388, :none),
                    (:(=), :argloc, :eargs)
                  )),
                (:line, 4390, :none),
                (:(=), :sl0, (:call, :length, :stmts)),
                (:line, 4391, :none),
                (:(=), :res, (:call, :inlining_pass, :ei, :sv, :stmts, :ins)),
                (:line, 4392, :none),
                (:(=), :ns, (:call, :-, (:call, :length, :stmts), :sl0)),
                (:line, 4393, :none),
                (:if, :isccallee, (:block,
                    (:line, 4394, :none),
                    (:(=), :restype, (:call, :exprtype, :res, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )))),
                    (:line, 4395, :none),
                    (:if, (:call, :isa, :restype, :Const), (:block,
                        (:line, 4396, :none),
                        (:(=), (:ref, :argloc, :i), (:., :restype, (:quote, #QuoteNode
                              :val
                            ))),
                        (:line, 4397, :none),
                        (:if, (:call, :!, (:call, :effect_free, :res, (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:., :sv, (:quote, #QuoteNode
                                  :mod
                                )), false)), (:block,
                            (:line, 4398, :none),
                            (:call, :insert!, :stmts, (:call, :+, :ins, :ns), :res)
                          )),
                        (:line, 4401, :none),
                        (:break,)
                      ))
                  )),
                (:line, 4404, :none),
                (:if, (:&&, :has_stmts, (:call, :!, (:call, :effect_free, :res, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )), false))), (:block,
                    (:line, 4405, :none),
                    (:(=), :restype, (:call, :exprtype, :res, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )))),
                    (:line, 4406, :none),
                    (:(=), :vnew, (:call, :newvar!, :sv, :restype)),
                    (:line, 4407, :none),
                    (:(=), (:ref, :argloc, :i), :vnew),
                    (:line, 4408, :none),
                    (:call, :insert!, :stmts, (:call, :+, :ins, :ns), (:call, :Expr, (:quote, #QuoteNode
                          :(=)
                        ), :vnew, :res))
                  ), (:block,
                    (:line, 4410, :none),
                    (:(=), (:ref, :argloc, :i), :res)
                  )),
                (:line, 4412, :none),
                (:if, (:&&, (:call, :!, :has_stmts), (:&&, (:call, :>, :ns, 0), (:call, :!, (:call, :(==), :_i, :i0)))), (:block,
                    (:line, 4413, :none),
                    (:for, (:(=), :s, (:(:), :ins, (:call, :-, (:call, :+, :ins, :ns), 1))), (:block,
                        (:line, 4414, :none),
                        (:(=), :stmt, (:ref, :stmts, :s)),
                        (:line, 4415, :none),
                        (:if, (:call, :!, (:call, :effect_free, :stmt, (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:., :sv, (:quote, #QuoteNode
                                  :mod
                                )), true)), (:block,
                            (:line, 4416, :none),
                            (:(=), :has_stmts, true),
                            (:line, 4416, :none),
                            (:break,)
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 4422, :none),
        (:if, :isccall, (:block,
            (:line, 4423, :none),
            (:(=), :le, (:call, :length, :eargs)),
            (:line, 4424, :none),
            (:for, (:(=), :i, (:(:), 4, 2, (:call, :-, :le, 1))), (:block,
                (:line, 4425, :none),
                (:if, (:call, :(===), (:ref, :eargs, :i), (:ref, :eargs, (:call, :+, :i, 1))), (:block,
                    (:line, 4426, :none),
                    (:(=), (:ref, :eargs, (:call, :+, :i, 1)), 0)
                  ))
              ))
          )),
        (:line, 4430, :none),
        (:if, (:call, :(!==), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :call
            )), (:block,
            (:line, 4431, :none),
            (:return, :e)
          )),
        (:line, 4434, :none),
        (:(=), :ft, (:call, :exprtype, :arg1, (:., :sv, (:quote, #QuoteNode
                :src
              )), (:., :sv, (:quote, #QuoteNode
                :mod
              )))),
        (:line, 4435, :none),
        (:if, (:call, :isa, :ft, :Const), (:block,
            (:line, 4436, :none),
            (:(=), :f, (:., :ft, (:quote, #QuoteNode
                  :val
                )))
          ), (:block,
            (:line, 4437, :none),
            (:if, (:call, :isa, :ft, :Conditional), (:block,
                (:line, 4438, :none),
                (:(=), :f, :nothing),
                (:line, 4439, :none),
                (:(=), :ft, :Bool)
              ), (:block,
                (:line, 4441, :none),
                (:(=), :f, :nothing),
                (:line, 4442, :none),
                (:if, (:call, :!, (:||, (:call, :isleaftype, :ft), (:<:, :ft, :Type))), (:block,
                    (:line, 4443, :none),
                    (:return, :e)
                  ))
              ))
          )),
        (:line, 4447, :none),
        (:+=, :ins, (:call, :-, (:call, :length, :stmts), :prev_stmts_length)),
        (:line, 4449, :none),
        (:if, (:., (:., :sv, (:quote, #QuoteNode
                :params
              )), (:quote, #QuoteNode
              :inlining
            )), (:block,
            (:line, 4450, :none),
            (:if, (:&&, (:call, :isdefined, :Main, (:quote, #QuoteNode
                    :Base
                  )), (:&&, (:||, (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                            :Base
                          )), (:quote, #QuoteNode
                          :^
                        )), (:call, :(===), :f, (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :^
                          )))), (:&&, (:call, :isdefined, (:., :Main, (:quote, #QuoteNode
                            :Base
                          )), (:quote, #QuoteNode
                          :.^
                        )), (:call, :(===), :f, (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :.^
                          ))))), (:call, :(==), (:call, :length, (:., :e, (:quote, #QuoteNode
                          :args
                        ))), 3))), (:block,
                (:line, 4455, :none),
                (:(=), :a2, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 3)),
                (:line, 4456, :none),
                (:if, (:||, (:call, :isa, :a2, :Symbol), (:||, (:call, :isa, :a2, :Slot), (:call, :isa, :a2, :SSAValue))), (:block,
                    (:line, 4457, :none),
                    (:(=), :ta2, (:call, :exprtype, :a2, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )))),
                    (:line, 4458, :none),
                    (:if, (:call, :isa, :ta2, :Const), (:block,
                        (:line, 4459, :none),
                        (:(=), :a2, (:., :ta2, (:quote, #QuoteNode
                              :val
                            )))
                      ))
                  )),
                (:line, 4463, :none),
                (:(=), :square, (:||, (:call, :(===), :a2, (:call, :Int32, 2)), (:call, :(===), :a2, (:call, :Int64, 2)))),
                (:line, 4464, :none),
                (:(=), :triple, (:||, (:call, :(===), :a2, (:call, :Int32, 3)), (:call, :(===), :a2, (:call, :Int64, 3)))),
                (:line, 4465, :none),
                (:if, (:||, :square, :triple), (:block,
                    (:line, 4466, :none),
                    (:(=), :a1, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), 2)),
                    (:line, 4467, :none),
                    (:(=), :basenumtype, (:curly, :Union, :corenumtype, (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :Complex64
                          )), (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :Complex128
                          )), (:., (:., :Main, (:quote, #QuoteNode
                              :Base
                            )), (:quote, #QuoteNode
                            :Rational
                          )))),
                    (:line, 4468, :none),
                    (:if, (:||, (:call, :isa, :a1, :basenumtype), (:&&, (:||, (:call, :isa, :a1, :Symbol), (:||, (:call, :isa, :a1, :Slot), (:call, :isa, :a1, :SSAValue))), (:call, :⊑, (:call, :exprtype, :a1, (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:., :sv, (:quote, #QuoteNode
                                  :mod
                                ))), :basenumtype))), (:block,
                        (:line, 4470, :none),
                        (:if, :square, (:block,
                            (:line, 4471, :none),
                            (:(=), (:., :e, (:quote, #QuoteNode
                                  :args
                                )), (:ref, :Any, (:call, :GlobalRef, (:., :Main, (:quote, #QuoteNode
                                      :Base
                                    )), (:quote, #QuoteNode
                                    :*
                                  )), :a1, :a1)),
                            (:line, 4472, :none),
                            (:(=), :res, (:call, :inlining_pass, :e, :sv, :stmts, :ins))
                          ), (:block,
                            (:line, 4474, :none),
                            (:(=), (:., :e, (:quote, #QuoteNode
                                  :args
                                )), (:ref, :Any, (:call, :GlobalRef, (:., :Main, (:quote, #QuoteNode
                                      :Base
                                    )), (:quote, #QuoteNode
                                    :*
                                  )), (:call, :Expr, (:quote, #QuoteNode
                                    :call
                                  ), (:call, :GlobalRef, (:., :Main, (:quote, #QuoteNode
                                        :Base
                                      )), (:quote, #QuoteNode
                                      :*
                                    )), :a1, :a1), :a1)),
                            (:line, 4475, :none),
                            (:(=), (:., (:ref, (:., :e, (:quote, #QuoteNode
                                      :args
                                    )), 2), (:quote, #QuoteNode
                                  :typ
                                )), (:., :e, (:quote, #QuoteNode
                                  :typ
                                ))),
                            (:line, 4476, :none),
                            (:(=), :res, (:call, :inlining_pass, :e, :sv, :stmts, :ins))
                          )),
                        (:line, 4478, :none),
                        (:return, :res)
                      ))
                  ))
              ))
          )),
        (:line, 4484, :none),
        (:for, (:(=), :ninline, (:(:), 1, 100)), (:block,
            (:line, 4485, :none),
            (:(=), :ata, (:call, (:curly, :Vector, :Any), (:call, :length, (:., :e, (:quote, #QuoteNode
                      :args
                    ))))),
            (:line, 4486, :none),
            (:(=), (:ref, :ata, 1), :ft),
            (:line, 4487, :none),
            (:for, (:(=), :i, (:(:), 2, (:call, :length, (:., :e, (:quote, #QuoteNode
                        :args
                      ))))), (:block,
                (:line, 4488, :none),
                (:(=), :a, (:call, :exprtype, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), :i), (:., :sv, (:quote, #QuoteNode
                        :src
                      )), (:., :sv, (:quote, #QuoteNode
                        :mod
                      )))),
                (:line, 4489, :none),
                (:&&, (:||, (:call, :(===), :a, :Bottom), (:call, :isvarargtype, :a)), (:return, :e)),
                (:line, 4490, :none),
                (:(=), (:ref, :ata, :i), :a)
              )),
            (:line, 4492, :none),
            (:(=), :res, (:call, :inlineable, :f, :ft, :e, :ata, :sv, :stmts)),
            (:line, 4493, :none),
            (:if, (:call, :isa, :res, :Tuple), (:block,
                (:line, 4494, :none),
                (:if, (:&&, (:call, :isa, (:ref, :res, 2), :Array), (:call, :!, (:call, :isempty, (:ref, :res, 2)))), (:block,
                    (:line, 4495, :none),
                    (:call, :splice!, :stmts, (:(:), :ins, (:call, :-, :ins, 1)), (:ref, :res, 2)),
                    (:line, 4496, :none),
                    (:+=, :ins, (:call, :length, (:ref, :res, 2)))
                  )),
                (:line, 4498, :none),
                (:(=), :res, (:ref, :res, 1))
              )),
            (:line, 4501, :none),
            (:if, (:call, :(!==), :res, :NF), (:block,
                (:line, 4504, :none),
                (:if, (:&&, (:call, :isa, :res, :Expr), (:call, :is_known_call, :res, :_apply, (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:., :sv, (:quote, #QuoteNode
                          :mod
                        )))), (:block,
                    (:line, 4505, :none),
                    (:(=), :e, (:(::), :res, :Expr)),
                    (:line, 4506, :none),
                    (:(=), :f, :_apply),
                    (:line, 4506, :none),
                    (:(=), :ft, (:call, :abstract_eval_constant, :f))
                  ), (:block,
                    (:line, 4508, :none),
                    (:return, :res)
                  ))
              )),
            (:line, 4512, :none),
            (:if, (:call, :(===), :f, :_apply), (:block,
                (:line, 4513, :none),
                (:(=), :na, (:call, :length, (:., :e, (:quote, #QuoteNode
                        :args
                      )))),
                (:line, 4514, :none),
                (:(=), :newargs, (:call, (:curly, :Vector, :Any), (:call, :-, :na, 2))),
                (:line, 4515, :none),
                (:(=), :newstmts, (:ref, :Any)),
                (:line, 4516, :none),
                (:(=), :effect_free_upto, 0),
                (:line, 4517, :none),
                (:for, (:(=), :i, (:(:), 3, :na)), (:block,
                    (:line, 4518, :none),
                    (:(=), :aarg, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), :i)),
                    (:line, 4519, :none),
                    (:(=), :argt, (:call, :exprtype, :aarg, (:., :sv, (:quote, #QuoteNode
                            :src
                          )), (:., :sv, (:quote, #QuoteNode
                            :mod
                          )))),
                    (:line, 4520, :none),
                    (:(=), :t, (:call, :widenconst, :argt)),
                    (:line, 4521, :none),
                    (:if, (:&&, (:call, :isa, :aarg, :Expr), (:||, (:call, :is_known_call, :aarg, :tuple, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:., :sv, (:quote, #QuoteNode
                                :mod
                              ))), (:call, :is_known_call, :aarg, :svec, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:., :sv, (:quote, #QuoteNode
                                :mod
                              ))))), (:block,
                        (:line, 4523, :none),
                        (:(=), (:ref, :newargs, (:call, :-, :i, 2)), (:ref, (:., :aarg, (:quote, #QuoteNode
                                :args
                              )), (:(:), 2, :end)))
                      ), (:block,
                        (:line, 4524, :none),
                        (:if, (:&&, (:call, :isa, :argt, :Const), (:&&, (:||, (:call, :isa, (:., :argt, (:quote, #QuoteNode
                                      :val
                                    )), :Tuple), (:call, :isa, (:., :argt, (:quote, #QuoteNode
                                      :val
                                    )), :SimpleVector)), (:call, :effect_free, :aarg, (:., :sv, (:quote, #QuoteNode
                                    :src
                                  )), (:., :sv, (:quote, #QuoteNode
                                    :mod
                                  )), true))), (:block,
                            (:line, 4526, :none),
                            (:(=), (:ref, :newargs, (:call, :-, :i, 2)), (:typed_comprehension, :Any, (:generator, (:call, :QuoteNode, :x), (:(=), :x, (:., :argt, (:quote, #QuoteNode
                                        :val
                                      ))))))
                          ), (:block,
                            (:line, 4527, :none),
                            (:if, (:||, (:call, :isa, :aarg, :Tuple), (:&&, (:call, :isa, :aarg, :QuoteNode), (:||, (:call, :isa, (:., :aarg, (:quote, #QuoteNode
                                          :value
                                        )), :Tuple), (:call, :isa, (:., :aarg, (:quote, #QuoteNode
                                          :value
                                        )), :SimpleVector)))), (:block,
                                (:line, 4528, :none),
                                (:if, (:call, :isa, :aarg, :QuoteNode), (:block,
                                    (:line, 4529, :none),
                                    (:(=), :aarg, (:., :aarg, (:quote, #QuoteNode
                                          :value
                                        )))
                                  )),
                                (:line, 4531, :none),
                                (:(=), (:ref, :newargs, (:call, :-, :i, 2)), (:typed_comprehension, :Any, (:generator, (:call, :QuoteNode, :x), (:(=), :x, :aarg))))
                              ), (:block,
                                (:line, 4532, :none),
                                (:if, (:&&, (:call, :isa, :t, :DataType), (:&&, (:call, :(===), (:., :t, (:quote, #QuoteNode
                                            :name
                                          )), (:., :Tuple, (:quote, #QuoteNode
                                            :name
                                          ))), (:&&, (:call, :!, (:call, :isvatuple, :t)), (:call, :(<=), (:call, :length, (:., :t, (:quote, #QuoteNode
                                                :parameters
                                              ))), (:., (:., :sv, (:quote, #QuoteNode
                                                :params
                                              )), (:quote, #QuoteNode
                                              :MAX_TUPLE_SPLAT
                                            )))))), (:block,
                                    (:line, 4534, :none),
                                    (:for, (:(=), :k, (:(:), (:call, :+, :effect_free_upto, 1), (:call, :-, :i, 3))), (:block,
                                        (:line, 4535, :none),
                                        (:(=), :as, (:ref, :newargs, :k)),
                                        (:line, 4536, :none),
                                        (:for, (:(=), :kk, (:(:), 1, (:call, :length, :as))), (:block,
                                            (:line, 4537, :none),
                                            (:(=), :ak, (:ref, :as, :kk)),
                                            (:line, 4538, :none),
                                            (:if, (:call, :!, (:call, :effect_free, :ak, (:., :sv, (:quote, #QuoteNode
                                                      :src
                                                    )), (:., :sv, (:quote, #QuoteNode
                                                      :mod
                                                    )), true)), (:block,
                                                (:line, 4539, :none),
                                                (:(=), :tmpv, (:call, :newvar!, :sv, (:call, :widenconst, (:call, :exprtype, :ak, (:., :sv, (:quote, #QuoteNode
                                                            :src
                                                          )), (:., :sv, (:quote, #QuoteNode
                                                            :mod
                                                          )))))),
                                                (:line, 4540, :none),
                                                (:call, :push!, :newstmts, (:call, :Expr, (:quote, #QuoteNode
                                                      :(=)
                                                    ), :tmpv, :ak)),
                                                (:line, 4541, :none),
                                                (:(=), (:ref, :as, :kk), :tmpv)
                                              ))
                                          ))
                                      )),
                                    (:line, 4545, :none),
                                    (:(=), :effect_free_upto, (:call, :-, :i, 3)),
                                    (:line, 4546, :none),
                                    (:if, (:call, :effect_free, :aarg, (:., :sv, (:quote, #QuoteNode
                                            :src
                                          )), (:., :sv, (:quote, #QuoteNode
                                            :mod
                                          )), true), (:block,
                                        (:line, 4548, :none),
                                        (:(=), :tmpv, :aarg)
                                      ), (:block,
                                        (:line, 4551, :none),
                                        (:(=), :tmpv, (:call, :newvar!, :sv, :t)),
                                        (:line, 4552, :none),
                                        (:call, :push!, :newstmts, (:call, :Expr, (:quote, #QuoteNode
                                              :(=)
                                            ), :tmpv, :aarg))
                                      )),
                                    (:line, 4554, :none),
                                    (:(=), :tp, (:., :t, (:quote, #QuoteNode
                                          :parameters
                                        ))),
                                    (:line, 4555, :none),
                                    (:(=), (:ref, :newargs, (:call, :-, :i, 2)), (:typed_comprehension, :Any, (:generator, (:call, :mk_getfield, :tmpv, :j, (:ref, :tp, :j)), (:(=), :j, (:(:), 1, (:call, :length, :tp))))))
                                  ), (:block,
                                    (:line, 4558, :none),
                                    (:return, :e)
                                  ))
                              ))
                          ))
                      ))
                  )),
                (:line, 4561, :none),
                (:call, :splice!, :stmts, (:(:), :ins, (:call, :-, :ins, 1)), :newstmts),
                (:line, 4562, :none),
                (:+=, :ins, (:call, :length, :newstmts)),
                (:line, 4563, :none),
                (:(=), (:., :e, (:quote, #QuoteNode
                      :args
                    )), (:vcat, (:ref, :Any, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), 2)), (:..., :newargs))),
                (:line, 4566, :none),
                (:(=), :ft, (:call, :exprtype, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), 1), (:., :sv, (:quote, #QuoteNode
                        :src
                      )), (:., :sv, (:quote, #QuoteNode
                        :mod
                      )))),
                (:line, 4567, :none),
                (:if, (:call, :isa, :ft, :Const), (:block,
                    (:line, 4568, :none),
                    (:(=), :f, (:., :ft, (:quote, #QuoteNode
                          :val
                        )))
                  ), (:block,
                    (:line, 4569, :none),
                    (:if, (:call, :isa, :ft, :Conditional), (:block,
                        (:line, 4570, :none),
                        (:(=), :f, :nothing),
                        (:line, 4571, :none),
                        (:(=), :ft, :Bool)
                      ), (:block,
                        (:line, 4573, :none),
                        (:(=), :f, :nothing),
                        (:line, 4574, :none),
                        (:if, (:call, :!, (:||, (:call, :isleaftype, :ft), (:<:, :ft, :Type))), (:block,
                            (:line, 4575, :none),
                            (:return, :e)
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 4579, :none),
                (:return, :e)
              ))
          )),
        (:line, 4582, :none),
        (:return, :e)
      )),
    (:line, 4585, :none),
    (:const, (:(=), :compiler_temp_sym, (:call, :Symbol, "#temp#"))),
    (:line, 4587, :none),
    (:function, (:call, :add_slot!, (:(::), :src, :CodeInfo), (:(::), :typ, :ANY), (:(::), :is_sa, :Bool), (:kw, (:(::), :name, :Symbol), :compiler_temp_sym)), (:block,
        (:line, 4588, :none),
        (:macrocall, Symbol("@assert"), (:&&, (:call, :!, (:call, :isa, :typ, :Const)), (:call, :!, (:call, :isa, :typ, :Conditional)))),
        (:line, 4589, :none),
        (:(=), :id, (:call, :+, (:call, :length, (:., :src, (:quote, #QuoteNode
                  :slotnames
                ))), 1)),
        (:line, 4590, :none),
        (:call, :push!, (:., :src, (:quote, #QuoteNode
              :slotnames
            )), :name),
        (:line, 4591, :none),
        (:call, :push!, (:., :src, (:quote, #QuoteNode
              :slottypes
            )), :typ),
        (:line, 4592, :none),
        (:call, :push!, (:., :src, (:quote, #QuoteNode
              :slotflags
            )), (:call, :+, :Slot_Assigned, (:call, :*, :is_sa, :Slot_AssignedOnce))),
        (:line, 4593, :none),
        (:return, (:call, :SlotNumber, :id))
      )),
    (:line, 4596, :none),
    (:function, (:call, :is_known_call, (:(::), :e, :Expr), (:(::), :func, :ANY), (:(::), :src, :CodeInfo), (:(::), :mod, :Module)), (:block,
        (:line, 4597, :none),
        (:if, (:call, :(!==), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :call
            )), (:block,
            (:line, 4598, :none),
            (:return, false)
          )),
        (:line, 4600, :none),
        (:(=), :f, (:call, :exprtype, (:ref, (:., :e, (:quote, #QuoteNode
                  :args
                )), 1), :src, :mod)),
        (:line, 4601, :none),
        (:return, (:&&, (:call, :isa, :f, :Const), (:call, :(===), (:., :f, (:quote, #QuoteNode
                  :val
                )), :func)))
      )),
    (:line, 4604, :none),
    (:function, (:call, :is_known_call_p, (:(::), :e, :Expr), (:(::), :pred, :ANY), (:(::), :src, :CodeInfo), (:(::), :mod, :Module)), (:block,
        (:line, 4605, :none),
        (:if, (:call, :(!==), (:., :e, (:quote, #QuoteNode
                :head
              )), (:quote, #QuoteNode
              :call
            )), (:block,
            (:line, 4606, :none),
            (:return, false)
          )),
        (:line, 4608, :none),
        (:(=), :f, (:call, :exprtype, (:ref, (:., :e, (:quote, #QuoteNode
                  :args
                )), 1), :src, :mod)),
        (:line, 4609, :none),
        (:return, (:||, (:&&, (:call, :isa, :f, :Const), (:call, :pred, (:., :f, (:quote, #QuoteNode
                    :val
                  )))), (:&&, (:call, :isType, :f), (:call, :pred, (:ref, (:., :f, (:quote, #QuoteNode
                      :parameters
                    )), 1)))))
      )),
    (:line, 4612, :none),
    (:function, (:call, :record_used, (:(::), :e, :ANY), (:(::), :T, :ANY), (:(::), :used, (:curly, :Vector, :Bool))), (:block,
        (:line, 4613, :none),
        (:if, (:call, :isa, :e, :T), (:block,
            (:line, 4614, :none),
            (:(=), (:ref, :used, (:call, :+, (:., :e, (:quote, #QuoteNode
                      :id
                    )), 1)), true)
          ), (:block,
            (:line, 4615, :none),
            (:if, (:call, :isa, :e, :Expr), (:block,
                (:line, 4616, :none),
                (:(=), :i0, (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                          :head
                        )), (:quote, #QuoteNode
                        :(=)
                      )), 2, 1)),
                (:line, 4617, :none),
                (:for, (:(=), :i, (:(:), :i0, (:call, :length, (:., :e, (:quote, #QuoteNode
                            :args
                          ))))), (:block,
                    (:line, 4618, :none),
                    (:call, :record_used, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), :i), :T, :used)
                  ))
              ))
          ))
      )),
    (:line, 4623, :none),
    (:function, (:call, :remove_unused_vars!, (:(::), :src, :CodeInfo)), (:block,
        (:line, 4624, :none),
        (:(=), :used, (:call, :fill, false, (:call, :+, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :slotnames
                  ))), 1))),
        (:line, 4625, :none),
        (:(=), :used_ssa, (:call, :fill, false, (:call, :+, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :ssavaluetypes
                  ))), 1))),
        (:line, 4626, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :code
                  ))))), (:block,
            (:line, 4627, :none),
            (:call, :record_used, (:ref, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :i), :Slot, :used),
            (:line, 4628, :none),
            (:call, :record_used, (:ref, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :i), :SSAValue, :used_ssa)
          )),
        (:line, 4630, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :code
                  ))))), (:block,
            (:line, 4631, :none),
            (:(=), :e, (:ref, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :i)),
            (:line, 4632, :none),
            (:if, (:&&, (:call, :isa, :e, :NewvarNode), (:call, :!, (:ref, :used, (:call, :+, (:., (:., :e, (:quote, #QuoteNode
                            :slot
                          )), (:quote, #QuoteNode
                          :id
                        )), 1)))), (:block,
                (:line, 4633, :none),
                (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                        :code
                      )), :i), :nothing)
              ), (:block,
                (:line, 4634, :none),
                (:if, (:&&, (:call, :isa, :e, :Expr), (:call, :(===), (:., :e, (:quote, #QuoteNode
                          :head
                        )), (:quote, #QuoteNode
                        :(=)
                      ))), (:block,
                    (:line, 4635, :none),
                    (:if, (:||, (:&&, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                                  :args
                                )), 1), :Slot), (:call, :!, (:ref, :used, (:call, :+, (:., (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), 1), (:quote, #QuoteNode
                                    :id
                                  )), 1)))), (:&&, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                                  :args
                                )), 1), :SSAValue), (:call, :!, (:ref, :used_ssa, (:call, :+, (:., (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), 1), (:quote, #QuoteNode
                                    :id
                                  )), 1))))), (:block,
                        (:line, 4637, :none),
                        (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                                :code
                              )), :i), (:ref, (:., :e, (:quote, #QuoteNode
                                :args
                              )), 2))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 4643, :none),
    (:function, (:call, :delete_vars!, (:(::), :src, :CodeInfo), (:(::), :r, :ObjectIdDict)), (:block,
        (:line, 4644, :none),
        (:call, :filter!, (:->, :x, (:block,
              (:line, 4644, :none),
              (:call, :!, (:&&, (:call, :isa, :x, :Expr), (:&&, (:||, (:call, :(===), (:., :x, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :(=)
                        )), (:call, :(===), (:., :x, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :const
                        ))), (:call, :haskey, :r, (:call, :normvar, (:ref, (:., :x, (:quote, #QuoteNode
                              :args
                            )), 1))))))
            )), (:., :src, (:quote, #QuoteNode
              :code
            ))),
        (:line, 4647, :none),
        (:return, :src)
      )),
    (:line, 4650, :none),
    (:function, (:call, :replace_vars!, (:(::), :src, :CodeInfo), (:(::), :r, :ObjectIdDict)), (:block,
        (:line, 4651, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :src, (:quote, #QuoteNode
                    :code
                  ))))), (:block,
            (:line, 4652, :none),
            (:(=), (:ref, (:., :src, (:quote, #QuoteNode
                    :code
                  )), :i), (:call, :_replace_vars!, (:ref, (:., :src, (:quote, #QuoteNode
                      :code
                    )), :i), :r))
          )),
        (:line, 4654, :none),
        (:return, :src)
      )),
    (:line, 4657, :none),
    (:function, (:call, :_replace_vars!, (:(::), :e, :ANY), (:(::), :r, :ObjectIdDict)), (:block,
        (:line, 4658, :none),
        (:if, (:||, (:call, :isa, :e, :SSAValue), (:call, :isa, :e, :Slot)), (:block,
            (:line, 4659, :none),
            (:(=), :v, (:call, :normvar, :e)),
            (:line, 4660, :none),
            (:if, (:call, :haskey, :r, :v), (:block,
                (:line, 4661, :none),
                (:return, (:ref, :r, :v))
              ))
          )),
        (:line, 4664, :none),
        (:if, (:call, :isa, :e, :Expr), (:block,
            (:line, 4665, :none),
            (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                        :args
                      ))))), (:block,
                (:line, 4666, :none),
                (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), :i), (:call, :_replace_vars!, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), :i), :r))
              ))
          )),
        (:line, 4669, :none),
        (:return, :e)
      )),
    (:line, 4672, :none),
    (:(=), (:call, :is_argument, (:(::), :nargs, :Int), (:(::), :v, :Slot)), (:block,
        (:line, 4672, :none),
        (:call, :(<=), (:call, :slot_id, :v), :nargs)
      )),
    (:line, 4674, :none),
    (:(=), (:call, :normslot, (:(::), :s, :SlotNumber)), (:block,
        (:line, 4674, :none),
        :s
      )),
    (:line, 4675, :none),
    (:(=), (:call, :normslot, (:(::), :s, :TypedSlot)), (:block,
        (:line, 4675, :none),
        (:call, :SlotNumber, (:call, :slot_id, :s))
      )),
    (:line, 4676, :none),
    (:(=), (:call, :normvar, (:(::), :s, :Slot)), (:block,
        (:line, 4676, :none),
        (:call, :normslot, :s)
      )),
    (:line, 4677, :none),
    (:(=), (:call, :normvar, (:(::), :s, :SSAValue)), (:block,
        (:line, 4677, :none),
        :s
      )),
    (:line, 4678, :none),
    (:(=), (:call, :normvar, (:(::), :s, :ANY)), (:block,
        (:line, 4678, :none),
        :s
      )),
    (:line, 4682, :none),
    (:function, (:call, :get_replacement, :table, (:(::), :var, (:curly, :Union, :SlotNumber, :SSAValue)), (:(::), :init, :ANY), :nargs, :slottypes, :ssavaluetypes), (:block,
        (:line, 4685, :none),
        (:if, (:||, (:&&, (:call, :isa, :init, :Expr), (:call, :(===), (:., :init, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :static_parameter
                ))), (:||, (:call, :isa, :init, :corenumtype), (:||, (:call, :(===), :init, (:tuple,)), (:call, :(===), :init, :nothing)))), (:block,
            (:line, 4687, :none),
            (:return, :init)
          ), (:block,
            (:line, 4688, :none),
            (:if, (:&&, (:call, :isa, :init, :Slot), (:call, :is_argument, :nargs, (:(::), :init, :Slot))), (:block,
                (:line, 4694, :none),
                (:(=), :ityp, (:if, (:call, :isa, :init, :TypedSlot), (:., :init, (:quote, #QuoteNode
                        :typ
                      )), (:ref, :slottypes, (:., (:(::), :init, :SlotNumber), (:quote, #QuoteNode
                          :id
                        ))))),
                (:line, 4695, :none),
                (:if, (:call, :⊑, :ityp, (:if, (:call, :isa, :var, :SSAValue), (:ref, :ssavaluetypes, (:call, :+, (:., :var, (:quote, #QuoteNode
                              :id
                            )), 1)), (:ref, :slottypes, (:., :var, (:quote, #QuoteNode
                            :id
                          ))))), (:block,
                    (:line, 4696, :none),
                    (:return, :init)
                  ))
              ), (:block,
                (:line, 4698, :none),
                (:if, (:call, :isa, :init, :SSAValue), (:block,
                    (:line, 4699, :none),
                    (:if, (:&&, (:call, :isa, :var, :SlotNumber), (:call, :⊑, (:ref, :slottypes, (:., :var, (:quote, #QuoteNode
                                :id
                              ))), :Tuple)), (:block,
                        (:line, 4703, :none),
                        (:return, :var)
                      )),
                    (:line, 4705, :none),
                    (:if, (:call, :haskey, :table, :init), (:block,
                        (:line, 4706, :none),
                        (:return, (:call, :get_replacement, :table, :init, (:ref, :table, :init), :nargs, :slottypes, :ssavaluetypes))
                      )),
                    (:line, 4708, :none),
                    (:return, :init)
                  ), (:block,
                    (:line, 4709, :none),
                    (:if, (:&&, (:call, :isa, :init, :SlotNumber), (:call, :haskey, :table, :init)), (:block,
                        (:line, 4710, :none),
                        (:return, (:call, :get_replacement, :table, :init, (:ref, :table, :init), :nargs, :slottypes, :ssavaluetypes))
                      ), (:block,
                        (:line, 4711, :none),
                        (:if, (:call, :isa, :init, :TypedSlot), (:block,
                            (:line, 4712, :none),
                            (:(=), :sl, (:call, :normslot, :init)),
                            (:line, 4713, :none),
                            (:if, (:call, :haskey, :table, :sl), (:block,
                                (:line, 4714, :none),
                                (:(=), :rep, (:call, :get_replacement, :table, :sl, (:ref, :table, :sl), :nargs, :slottypes, :ssavaluetypes)),
                                (:line, 4715, :none),
                                (:if, (:call, :isa, :rep, :SlotNumber), (:block,
                                    (:line, 4716, :none),
                                    (:(=), :rep, (:call, :TypedSlot, (:., :rep, (:quote, #QuoteNode
                                            :id
                                          )), (:., :init, (:quote, #QuoteNode
                                            :typ
                                          ))))
                                  )),
                                (:line, 4718, :none),
                                (:return, :rep)
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 4721, :none),
        (:return, :var)
      )),
    (:line, 4726, :none),
    (:function, (:call, :remove_redundant_temp_vars!, (:(::), :src, :CodeInfo), (:(::), :nargs, :Int), (:(::), :sa, :ObjectIdDict)), (:block,
        (:line, 4727, :none),
        (:(=), :flags, (:., :src, (:quote, #QuoteNode
              :slotflags
            ))),
        (:line, 4728, :none),
        (:(=), :slottypes, (:., :src, (:quote, #QuoteNode
              :slottypes
            ))),
        (:line, 4729, :none),
        (:(=), :ssavaluetypes, (:., :src, (:quote, #QuoteNode
              :ssavaluetypes
            ))),
        (:line, 4730, :none),
        (:(=), :repls, (:call, :ObjectIdDict)),
        (:line, 4731, :none),
        (:for, (:(=), (:tuple, :v, :init), :sa), (:block,
            (:line, 4732, :none),
            (:(=), :repl, (:call, :get_replacement, :sa, :v, :init, :nargs, :slottypes, :ssavaluetypes)),
            (:line, 4733, :none),
            (:(=), :compare, (:if, (:call, :isa, :repl, :TypedSlot), (:call, :normslot, :repl), :repl)),
            (:line, 4734, :none),
            (:if, (:call, :(!==), :compare, :v), (:block,
                (:line, 4735, :none),
                (:(=), (:ref, :repls, :v), :repl)
              ))
          )),
        (:line, 4738, :none),
        (:if, (:call, :!, (:call, :isempty, :repls)), (:block,
            (:line, 4739, :none),
            (:call, :delete_vars!, :src, :repls),
            (:line, 4740, :none),
            (:call, :replace_vars!, :src, :repls)
          )),
        (:line, 4742, :none),
        (:return, :src)
      )),
    (:line, 4746, :none),
    (:function, (:call, :find_sa_vars, (:(::), :src, :CodeInfo), (:(::), :nargs, :Int)), (:block,
        (:line, 4747, :none),
        (:(=), :body, (:., :src, (:quote, #QuoteNode
              :code
            ))),
        (:line, 4748, :none),
        (:(=), :av, (:call, :ObjectIdDict)),
        (:line, 4749, :none),
        (:(=), :av2, (:call, :ObjectIdDict)),
        (:line, 4750, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 4751, :none),
            (:(=), :e, (:ref, :body, :i)),
            (:line, 4752, :none),
            (:if, (:&&, (:call, :isa, :e, :Expr), (:call, :(===), (:., :e, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :(=)
                  ))), (:block,
                (:line, 4753, :none),
                (:(=), :lhs, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 1)),
                (:line, 4754, :none),
                (:if, (:call, :isa, :lhs, :SSAValue), (:block,
                    (:line, 4755, :none),
                    (:(=), (:ref, :av, :lhs), (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), 2))
                  ), (:block,
                    (:line, 4756, :none),
                    (:if, (:call, :isa, :lhs, :Slot), (:block,
                        (:line, 4757, :none),
                        (:(=), :lhs, (:call, :normslot, :lhs)),
                        (:line, 4758, :none),
                        (:(=), :id, (:., :lhs, (:quote, #QuoteNode
                              :id
                            ))),
                        (:line, 4763, :none),
                        (:if, (:&&, (:call, :>, :id, :nargs), (:call, :(==), (:call, :&, (:ref, (:., :src, (:quote, #QuoteNode
                                      :slotflags
                                    )), :id), :Slot_UsedUndef), 0)), (:block,
                            (:line, 4764, :none),
                            (:if, (:call, :!, (:call, :haskey, :av, :lhs)), (:block,
                                (:line, 4765, :none),
                                (:(=), (:ref, :av, :lhs), (:ref, (:., :e, (:quote, #QuoteNode
                                        :args
                                      )), 2))
                              ), (:block,
                                (:line, 4767, :none),
                                (:(=), (:ref, :av2, :lhs), true)
                              ))
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 4773, :none),
        (:call, :filter!, (:->, (:tuple, :v, :_), (:block,
              (:line, 4773, :none),
              (:call, :!, (:call, :haskey, :av2, :v))
            )), :av),
        (:line, 4774, :none),
        (:return, :av)
      )),
    (:line, 4777, :none),
    (:(=), (:call, :symequal, (:(::), :x, :SSAValue), (:(::), :y, :SSAValue)), (:block,
        (:line, 4777, :none),
        (:call, :(===), (:., :x, (:quote, #QuoteNode
              :id
            )), (:., :y, (:quote, #QuoteNode
              :id
            )))
      )),
    (:line, 4778, :none),
    (:(=), (:call, :symequal, (:(::), :x, :Slot), (:(::), :y, :Slot)), (:block,
        (:line, 4778, :none),
        (:call, :(===), (:., :x, (:quote, #QuoteNode
              :id
            )), (:., :y, (:quote, #QuoteNode
              :id
            )))
      )),
    (:line, 4779, :none),
    (:(=), (:call, :symequal, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 4779, :none),
        (:call, :(===), :x, :y)
      )),
    (:line, 4781, :none),
    (:function, (:call, :occurs_outside_getfield, (:(::), :e, :ANY), (:(::), :sym, :ANY), (:(::), :sv, :InferenceState), (:(::), :field_count, :Int), (:(::), :field_names, :ANY)), (:block,
        (:line, 4783, :none),
        (:if, (:||, (:call, :(===), :e, :sym), (:&&, (:call, :isa, :e, :Slot), (:&&, (:call, :isa, :sym, :Slot), (:call, :(==), (:call, :slot_id, :e), (:call, :slot_id, :sym))))), (:block,
            (:line, 4784, :none),
            (:return, true)
          )),
        (:line, 4786, :none),
        (:if, (:call, :isa, :e, :Expr), (:block,
            (:line, 4787, :none),
            (:(=), :e, (:(::), :e, :Expr)),
            (:line, 4788, :none),
            (:(=), :head, (:., :e, (:quote, #QuoteNode
                  :head
                ))),
            (:line, 4789, :none),
            (:&&, (:call, :is_meta_expr_head, :head), (:return, false)),
            (:line, 4790, :none),
            (:if, (:&&, (:call, :is_known_call, :e, :getfield, (:., :sv, (:quote, #QuoteNode
                      :src
                    )), (:., :sv, (:quote, #QuoteNode
                      :mod
                    ))), (:call, :symequal, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 2), :sym)), (:block,
                (:line, 4791, :none),
                (:(=), :idx, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 3)),
                (:line, 4792, :none),
                (:if, (:&&, (:call, :isa, :idx, :QuoteNode), (:call, :in, (:., :idx, (:quote, #QuoteNode
                          :value
                        )), :field_names)), (:block,
                    (:line, 4793, :none),
                    (:return, false)
                  )),
                (:line, 4795, :none),
                (:if, (:&&, (:call, :isa, :idx, :Int), (:comparison, 1, :(<=), :idx, :(<=), :field_count)), (:block,
                    (:line, 4796, :none),
                    (:return, false)
                  )),
                (:line, 4798, :none),
                (:return, true)
              )),
            (:line, 4800, :none),
            (:if, (:call, :(===), :head, (:quote, #QuoteNode
                  :(=)
                )), (:block,
                (:line, 4801, :none),
                (:return, (:call, :occurs_outside_getfield, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), 2), :sym, :sv, :field_count, :field_names))
              ), (:block,
                (:line, 4804, :none),
                (:if, (:&&, (:call, :(===), :head, (:quote, #QuoteNode
                        :block
                      )), (:&&, (:call, :isa, :sym, :Slot), (:call, :(==), (:call, :&, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:quote, #QuoteNode
                                :slotflags
                              )), (:call, :slot_id, :sym)), :Slot_UsedUndef), 0))), (:block,
                    (:line, 4806, :none),
                    (:(=), :ignore_void, true)
                  ), (:block,
                    (:line, 4808, :none),
                    (:(=), :ignore_void, false)
                  )),
                (:line, 4810, :none),
                (:for, (:(=), :a, (:., :e, (:quote, #QuoteNode
                        :args
                      ))), (:block,
                    (:line, 4811, :none),
                    (:if, (:&&, :ignore_void, (:&&, (:call, :isa, :a, :Slot), (:call, :(==), (:call, :slot_id, :a), (:call, :slot_id, :sym)))), (:block,
                        (:line, 4812, :none),
                        (:continue,)
                      )),
                    (:line, 4814, :none),
                    (:if, (:call, :occurs_outside_getfield, :a, :sym, :sv, :field_count, :field_names), (:block,
                        (:line, 4815, :none),
                        (:return, true)
                      ))
                  ))
              ))
          )),
        (:line, 4820, :none),
        (:return, false)
      )),
    (:line, 4823, :none),
    (:function, (:call, :void_use_elim_pass!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 4826, :none),
        (:(=), :not_void_use, (:function, (:tuple, (:(::), :ex, :ANY)), (:block,
              (:line, 4827, :none),
              (:if, (:call, :isa, :ex, :SSAValue), (:block,
                  (:line, 4829, :none),
                  (:return, false)
                ), (:block,
                  (:line, 4830, :none),
                  (:if, (:call, :isa, :ex, :Slot), (:block,
                      (:line, 4831, :none),
                      (:return, (:call, :(!=), (:call, :&, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                    :src
                                  )), (:quote, #QuoteNode
                                  :slotflags
                                )), (:call, :slot_id, :ex)), :Slot_UsedUndef), 0))
                    ), (:block,
                      (:line, 4832, :none),
                      (:if, (:call, :isa, :ex, :GlobalRef), (:block,
                          (:line, 4833, :none),
                          (:(=), :ex, (:(::), :ex, :GlobalRef)),
                          (:line, 4834, :none),
                          (:return, (:call, :!, (:call, :isdefined, (:., :ex, (:quote, #QuoteNode
                                    :mod
                                  )), (:., :ex, (:quote, #QuoteNode
                                    :name
                                  )))))
                        ), (:block,
                          (:line, 4835, :none),
                          (:if, (:call, :isa, :ex, :Expr), (:block,
                              (:line, 4836, :none),
                              (:(=), :h, (:., :ex, (:quote, #QuoteNode
                                    :head
                                  ))),
                              (:line, 4837, :none),
                              (:if, (:||, (:call, :(===), :h, (:quote, #QuoteNode
                                      :return
                                    )), (:||, (:call, :(===), :h, (:quote, #QuoteNode
                                        :(=)
                                      )), (:||, (:call, :(===), :h, (:quote, #QuoteNode
                                          :gotoifnot
                                        )), (:call, :is_meta_expr_head, :h)))), (:block,
                                  (:line, 4838, :none),
                                  (:return, true)
                                )),
                              (:line, 4840, :none),
                              (:return, (:call, :!, (:call, :effect_free, :ex, (:., :sv, (:quote, #QuoteNode
                                        :src
                                      )), (:., :sv, (:quote, #QuoteNode
                                        :mod
                                      )), false)))
                            ), (:block,
                              (:line, 4841, :none),
                              (:if, (:||, (:call, :isa, :ex, :GotoNode), (:||, (:call, :isa, :ex, :LineNumberNode), (:||, (:call, :isa, :ex, :NewvarNode), (:||, (:call, :isa, :ex, :Symbol), (:call, :isa, :ex, :LabelNode))))), (:block,
                                  (:line, 4844, :none),
                                  (:return, true)
                                ))
                            ))
                        ))
                    ))
                )),
              (:line, 4846, :none),
              (:return, false)
            ))),
        (:line, 4848, :none),
        (:call, :filter!, :not_void_use, (:(::), (:., (:., :sv, (:quote, #QuoteNode
                  :src
                )), (:quote, #QuoteNode
                :code
              )), (:curly, :Array, :Any, 1))),
        (:line, 4849, :none),
        :nothing
      )),
    (:line, 4852, :none),
    (:function, (:call, :meta_elim_pass!, (:(::), :code, (:curly, :Array, :Any, 1)), (:(::), :propagate_inbounds, :Bool), (:(::), :do_coverage, :Bool)), (:block,
        (:line, 4892, :none),
        (:(=), :check_bounds, (:., (:call, :JLOptions), (:quote, #QuoteNode
              :check_bounds
            ))),
        (:line, 4894, :none),
        (:(=), :inbounds_stack, (:if, :propagate_inbounds, (:ref, :Bool), (:ref, :Bool, false))),
        (:line, 4897, :none),
        (:(=), :bounds_elim_stack, (:ref, :Bool)),
        (:line, 4903, :none),
        (:(=), :bounds_push_pos_stack, (:ref, :Int, 0)),
        (:line, 4905, :none),
        (:(=), :void_boundscheck_depth, 0),
        (:line, 4906, :none),
        (:(=), :is_inbounds, (:call, :(==), :check_bounds, 2)),
        (:line, 4907, :none),
        (:(=), :enabled, true),
        (:line, 4911, :none),
        (:(=), :prev_dbg_stack, (:ref, :Int, 0)),
        (:line, 4913, :none),
        (:(=), :push_loc_pos_stack, (:ref, :Int, 0)),
        (:line, 4915, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :code))), (:block,
            (:line, 4916, :none),
            (:(=), :ex, (:ref, :code, :i)),
            (:line, 4917, :none),
            (:if, (:call, :(===), :ex, :nothing), (:block,
                (:line, 4918, :none),
                (:continue,)
              ), (:block,
                (:line, 4919, :none),
                (:if, (:call, :isa, :ex, :SSAValue), (:block,
                    (:line, 4920, :none),
                    (:(=), (:ref, :code, :i), :nothing),
                    (:line, 4921, :none),
                    (:continue,)
                  ), (:block,
                    (:line, 4922, :none),
                    (:if, (:call, :isa, :ex, :LabelNode), (:block,
                        (:line, 4923, :none),
                        (:(=), (:ref, :prev_dbg_stack, :end), 0),
                        (:line, 4924, :none),
                        (:(=), (:ref, :push_loc_pos_stack, :end), 0),
                        (:line, 4925, :none),
                        (:continue,)
                      ), (:block,
                        (:line, 4926, :none),
                        (:if, (:&&, (:call, :!, :do_coverage), (:||, (:call, :isa, :ex, :LineNumberNode), (:&&, (:call, :isa, :ex, :Expr), (:call, :(===), (:., (:(::), :ex, :Expr), (:quote, #QuoteNode
                                      :head
                                    )), (:quote, #QuoteNode
                                    :line
                                  ))))), (:block,
                            (:line, 4928, :none),
                            (:(=), :prev_label, (:ref, :prev_dbg_stack, :end)),
                            (:line, 4929, :none),
                            (:if, (:call, :(!=), :prev_label, 0), (:block,
                                (:line, 4930, :none),
                                (:(=), (:ref, :code, :prev_label), :nothing)
                              )),
                            (:line, 4932, :none),
                            (:(=), (:ref, :prev_dbg_stack, :end), :i),
                            (:line, 4933, :none),
                            (:continue,)
                          ), (:block,
                            (:line, 4934, :none),
                            (:if, (:call, :!, (:call, :isa, :ex, :Expr)), (:block,
                                (:line, 4935, :none),
                                (:if, :enabled, (:block,
                                    (:line, 4936, :none),
                                    (:(=), (:ref, :prev_dbg_stack, :end), 0),
                                    (:line, 4937, :none),
                                    (:(=), (:ref, :push_loc_pos_stack, :end), 0),
                                    (:line, 4938, :none),
                                    (:(=), (:ref, :bounds_push_pos_stack, :end), 0)
                                  ), (:block,
                                    (:line, 4940, :none),
                                    (:(=), (:ref, :code, :i), :nothing)
                                  )),
                                (:line, 4942, :none),
                                (:continue,)
                              ))
                          ))
                      ))
                  ))
              )),
            (:line, 4944, :none),
            (:(=), :ex, (:(::), :ex, :Expr)),
            (:line, 4945, :none),
            (:(=), :args, (:., :ex, (:quote, #QuoteNode
                  :args
                ))),
            (:line, 4946, :none),
            (:(=), :head, (:., :ex, (:quote, #QuoteNode
                  :head
                ))),
            (:line, 4947, :none),
            (:if, (:call, :(===), :head, (:quote, #QuoteNode
                  :boundscheck
                )), (:block,
                (:line, 4948, :none),
                (:if, (:call, :!, :enabled), (:block,
                    (:line, 4951, :none),
                    (:if, (:call, :!, (:call, :(===), (:ref, :args, 1), (:quote, #QuoteNode
                            :pop
                          ))), (:block,
                        (:line, 4952, :none),
                        (:+=, :void_boundscheck_depth, 1)
                      ), (:block,
                        (:line, 4953, :none),
                        (:if, (:call, :(==), :void_boundscheck_depth, 0), (:block,
                            (:line, 4955, :none),
                            (:call, :pop!, :bounds_elim_stack),
                            (:line, 4956, :none),
                            (:(=), :enabled, true)
                          ), (:block,
                            (:line, 4958, :none),
                            (:-=, :void_boundscheck_depth, 1)
                          ))
                      )),
                    (:line, 4960, :none),
                    (:(=), (:ref, :code, :i), :nothing)
                  ), (:block,
                    (:line, 4961, :none),
                    (:if, (:call, :(===), (:ref, :args, 1), (:quote, #QuoteNode
                          :pop
                        )), (:block,
                        (:line, 4963, :none),
                        (:if, (:if, (:call, :isempty, :bounds_elim_stack), true, (:call, :pop!, :bounds_elim_stack)), (:block,
                            (:line, 4965, :none),
                            (:(=), (:ref, :code, :i), :nothing),
                            (:line, 4966, :none),
                            (:continue,)
                          )),
                        (:line, 4968, :none),
                        (:(=), :push_idx, (:ref, :bounds_push_pos_stack, :end)),
                        (:line, 4969, :none),
                        (:if, (:call, :>, (:call, :length, :bounds_push_pos_stack), 1), (:block,
                            (:line, 4970, :none),
                            (:call, :pop!, :bounds_push_pos_stack)
                          )),
                        (:line, 4972, :none),
                        (:if, (:call, :>, :push_idx, 0), (:block,
                            (:line, 4973, :none),
                            (:(=), (:ref, :code, :push_idx), :nothing),
                            (:line, 4974, :none),
                            (:(=), (:ref, :code, :i), :nothing)
                          ), (:block,
                            (:line, 4976, :none),
                            (:(=), (:ref, :bounds_push_pos_stack, :end), 0)
                          ))
                      ), (:block,
                        (:line, 4978, :none),
                        (:if, :is_inbounds, (:block,
                            (:line, 4979, :none),
                            (:(=), (:ref, :code, :i), :nothing),
                            (:line, 4980, :none),
                            (:call, :push!, :bounds_elim_stack, true),
                            (:line, 4981, :none),
                            (:(=), :enabled, false)
                          ), (:block,
                            (:line, 4982, :none),
                            (:if, (:||, (:call, :(==), :check_bounds, 1), (:call, :(>=), (:call, :length, :inbounds_stack), 2)), (:block,
                                (:line, 4985, :none),
                                (:(=), (:ref, :code, :i), :nothing),
                                (:line, 4986, :none),
                                (:call, :push!, :bounds_elim_stack, true)
                              ), (:block,
                                (:line, 4988, :none),
                                (:call, :push!, :bounds_elim_stack, false),
                                (:line, 4989, :none),
                                (:call, :push!, :bounds_push_pos_stack, :i)
                              ))
                          ))
                      ))
                  )),
                (:line, 4991, :none),
                (:continue,)
              )),
            (:line, 4993, :none),
            (:if, (:&&, (:call, :!, :enabled), (:call, :!, (:&&, :do_coverage, (:call, :(===), :head, (:quote, #QuoteNode
                        :meta
                      ))))), (:block,
                (:line, 4994, :none),
                (:(=), (:ref, :code, :i), :nothing),
                (:line, 4995, :none),
                (:continue,)
              )),
            (:line, 4997, :none),
            (:if, (:call, :(===), :head, (:quote, #QuoteNode
                  :inbounds
                )), (:block,
                (:line, 4998, :none),
                (:if, (:call, :(!=), :check_bounds, 0), (:block,
                    (:line, 4999, :none),
                    (:(=), (:ref, :code, :i), :nothing),
                    (:line, 5000, :none),
                    (:continue,)
                  )),
                (:line, 5002, :none),
                (:(=), :arg1, (:ref, :args, 1)),
                (:line, 5003, :none),
                (:if, (:call, :(===), :arg1, true), (:block,
                    (:line, 5004, :none),
                    (:if, (:&&, (:call, :!, (:call, :isempty, :inbounds_stack)), (:ref, :inbounds_stack, :end)), (:block,
                        (:line, 5005, :none),
                        (:(=), (:ref, :code, :i), :nothing),
                        (:line, 5006, :none),
                        (:call, :push!, :bounds_elim_stack, true)
                      ), (:block,
                        (:line, 5008, :none),
                        (:(=), :is_inbounds, true),
                        (:line, 5009, :none),
                        (:call, :push!, :bounds_elim_stack, false),
                        (:line, 5010, :none),
                        (:call, :push!, :bounds_push_pos_stack, :i)
                      )),
                    (:line, 5012, :none),
                    (:call, :push!, :inbounds_stack, true)
                  ), (:block,
                    (:line, 5013, :none),
                    (:if, (:call, :(===), :arg1, false), (:block,
                        (:line, 5014, :none),
                        (:if, :is_inbounds, (:block,
                            (:line, 5017, :none),
                            (:if, (:call, :!, (:ref, :inbounds_stack, :end)), (:block,
                                (:line, 5018, :none),
                                (:(=), :is_inbounds, false)
                              )),
                            (:line, 5020, :none),
                            (:call, :push!, :bounds_elim_stack, false),
                            (:line, 5021, :none),
                            (:call, :push!, :bounds_push_pos_stack, :i)
                          ), (:block,
                            (:line, 5022, :none),
                            (:if, (:call, :(>=), (:call, :length, :inbounds_stack), 2), (:block,
                                (:line, 5023, :none),
                                (:(=), (:ref, :code, :i), :nothing),
                                (:line, 5024, :none),
                                (:call, :push!, :bounds_elim_stack, true)
                              ), (:block,
                                (:line, 5026, :none),
                                (:call, :push!, :bounds_elim_stack, false),
                                (:line, 5027, :none),
                                (:call, :push!, :bounds_push_pos_stack, :i)
                              ))
                          )),
                        (:line, 5029, :none),
                        (:call, :push!, :inbounds_stack, false)
                      ), (:block,
                        (:line, 5032, :none),
                        (:(=), :inbounds_len, (:call, :length, :inbounds_stack)),
                        (:line, 5033, :none),
                        (:if, (:call, :(!=), :inbounds_len, 0), (:block,
                            (:line, 5034, :none),
                            (:call, :pop!, :inbounds_stack),
                            (:line, 5035, :none),
                            (:-=, :inbounds_len, 1)
                          )),
                        (:line, 5038, :none),
                        (:if, (:if, (:call, :isempty, :bounds_elim_stack), true, (:call, :pop!, :bounds_elim_stack)), (:block,
                            (:line, 5041, :none),
                            (:(=), (:ref, :code, :i), :nothing),
                            (:line, 5042, :none),
                            (:continue,)
                          )),
                        (:line, 5044, :none),
                        (:if, (:call, :(>=), :inbounds_len, 2), (:block,
                            (:line, 5045, :none),
                            (:(=), :is_inbounds, (:||, (:ref, :inbounds_stack, :inbounds_len), (:ref, :inbounds_stack, (:call, :-, :inbounds_len, 1))))
                          ), (:block,
                            (:line, 5047, :none),
                            (:if, (:call, :(==), :inbounds_len, 1), (:block,
                                (:line, 5048, :none),
                                (:(=), :is_inbounds, (:ref, :inbounds_stack, :inbounds_len))
                              ), (:block,
                                (:line, 5050, :none),
                                (:(=), :is_inbounds, false)
                              ))
                          )),
                        (:line, 5052, :none),
                        (:(=), :push_idx, (:ref, :bounds_push_pos_stack, :end)),
                        (:line, 5053, :none),
                        (:if, (:call, :>, (:call, :length, :bounds_push_pos_stack), 1), (:block,
                            (:line, 5054, :none),
                            (:call, :pop!, :bounds_push_pos_stack)
                          )),
                        (:line, 5056, :none),
                        (:if, (:call, :>, :push_idx, 0), (:block,
                            (:line, 5057, :none),
                            (:(=), (:ref, :code, :push_idx), :nothing),
                            (:line, 5058, :none),
                            (:(=), (:ref, :code, :i), :nothing)
                          ), (:block,
                            (:line, 5060, :none),
                            (:(=), (:ref, :bounds_push_pos_stack, :end), 0)
                          ))
                      ))
                  )),
                (:line, 5063, :none),
                (:continue,)
              )),
            (:line, 5065, :none),
            (:if, (:call, :(!==), :head, (:quote, #QuoteNode
                  :meta
                )), (:block,
                (:line, 5066, :none),
                (:(=), (:ref, :prev_dbg_stack, :end), 0),
                (:line, 5067, :none),
                (:(=), (:ref, :push_loc_pos_stack, :end), 0),
                (:line, 5068, :none),
                (:(=), (:ref, :bounds_push_pos_stack, :end), 0),
                (:line, 5069, :none),
                (:continue,)
              )),
            (:line, 5071, :none),
            (:(=), :nargs, (:call, :length, :args)),
            (:line, 5072, :none),
            (:if, (:||, :do_coverage, (:call, :(==), :nargs, 0)), (:block,
                (:line, 5073, :none),
                (:continue,)
              )),
            (:line, 5075, :none),
            (:(=), :arg1, (:ref, :args, 1)),
            (:line, 5076, :none),
            (:if, (:call, :(===), :arg1, (:quote, #QuoteNode
                  :push_loc
                )), (:block,
                (:line, 5077, :none),
                (:call, :push!, :prev_dbg_stack, 0),
                (:line, 5078, :none),
                (:call, :push!, :push_loc_pos_stack, :i)
              ), (:block,
                (:line, 5079, :none),
                (:if, (:call, :(===), :arg1, (:quote, #QuoteNode
                      :pop_loc
                    )), (:block,
                    (:line, 5080, :none),
                    (:(=), :prev_dbg, (:if, (:call, :>, (:call, :length, :prev_dbg_stack), 1), (:block,
                          (:line, 5081, :none),
                          (:call, :pop!, :prev_dbg_stack)
                        ), (:block,
                          (:line, 5083, :none),
                          (:ref, :prev_dbg_stack, :end)
                        ))),
                    (:line, 5085, :none),
                    (:if, (:call, :>, :prev_dbg, 0), (:block,
                        (:line, 5086, :none),
                        (:(=), (:ref, :code, :prev_dbg), :nothing)
                      )),
                    (:line, 5088, :none),
                    (:(=), :push_loc, (:if, (:call, :>, (:call, :length, :push_loc_pos_stack), 1), (:block,
                          (:line, 5089, :none),
                          (:call, :pop!, :push_loc_pos_stack)
                        ), (:block,
                          (:line, 5091, :none),
                          (:ref, :push_loc_pos_stack, :end)
                        ))),
                    (:line, 5093, :none),
                    (:if, (:call, :>, :push_loc, 0), (:block,
                        (:line, 5094, :none),
                        (:(=), (:ref, :code, :push_loc), :nothing),
                        (:line, 5095, :none),
                        (:(=), (:ref, :code, :i), :nothing)
                      ), (:block,
                        (:line, 5097, :none),
                        (:(=), (:ref, :prev_dbg_stack, :end), 0),
                        (:line, 5098, :none),
                        (:(=), (:ref, :push_loc_pos_stack, :end), 0)
                      ))
                  ), (:block,
                    (:line, 5101, :none),
                    (:continue,)
                  ))
              ))
          )),
        (:line, 5104, :none),
        (:return, (:call, :filter!, (:->, :x, (:block,
                (:line, 5104, :none),
                (:call, :(!==), :x, :nothing)
              )), :code))
      )),
    (:line, 5109, :none),
    (:function, (:call, :getfield_elim_pass!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 5110, :none),
        (:(=), :body, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :code
            ))),
        (:line, 5111, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 5112, :none),
            (:(=), (:ref, :body, :i), (:call, :_getfield_elim_pass!, (:ref, :body, :i), :sv))
          ))
      )),
    (:line, 5116, :none),
    (:function, (:call, :_getfield_elim_pass!, (:(::), :e, :Expr), (:(::), :sv, :InferenceState)), (:block,
        (:line, 5117, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 5118, :none),
            (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), :i), (:call, :_getfield_elim_pass!, (:ref, (:., :e, (:quote, #QuoteNode
                      :args
                    )), :i), :sv))
          )),
        (:line, 5120, :none),
        (:if, (:&&, (:call, :is_known_call, :e, :getfield, (:., :sv, (:quote, #QuoteNode
                  :src
                )), (:., :sv, (:quote, #QuoteNode
                  :mod
                ))), (:&&, (:call, :(==), (:call, :length, (:., :e, (:quote, #QuoteNode
                      :args
                    ))), 3), (:||, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 3), :Int), (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 3), :QuoteNode)))), (:block,
            (:line, 5122, :none),
            (:(=), :e1, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), 2)),
            (:line, 5123, :none),
            (:(=), :j, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), 3)),
            (:line, 5124, :none),
            (:if, (:call, :isa, :e1, :Expr), (:block,
                (:line, 5125, :none),
                (:(=), :alloc, (:call, :is_allocation, :e1, :sv)),
                (:line, 5126, :none),
                (:if, (:call, :(!==), :alloc, false), (:block,
                    (:line, 5127, :none),
                    (:(=), (:tuple, :flen, :fnames), :alloc),
                    (:line, 5128, :none),
                    (:if, (:call, :isa, :j, :QuoteNode), (:block,
                        (:line, 5129, :none),
                        (:(=), :j, (:call, :findfirst, :fnames, (:., :j, (:quote, #QuoteNode
                                :value
                              ))))
                      )),
                    (:line, 5131, :none),
                    (:if, (:comparison, 1, :(<=), :j, :(<=), :flen), (:block,
                        (:line, 5132, :none),
                        (:(=), :ok, true),
                        (:line, 5133, :none),
                        (:for, (:(=), :k, (:(:), 2, (:call, :length, (:., :e1, (:quote, #QuoteNode
                                    :args
                                  ))))), (:block,
                            (:line, 5134, :none),
                            (:&&, (:call, :(==), :k, (:call, :+, :j, 1)), (:continue,)),
                            (:line, 5135, :none),
                            (:if, (:call, :!, (:call, :effect_free, (:ref, (:., :e1, (:quote, #QuoteNode
                                        :args
                                      )), :k), (:., :sv, (:quote, #QuoteNode
                                      :src
                                    )), (:., :sv, (:quote, #QuoteNode
                                      :mod
                                    )), true)), (:block,
                                (:line, 5136, :none),
                                (:(=), :ok, false),
                                (:line, 5136, :none),
                                (:break,)
                              ))
                          )),
                        (:line, 5139, :none),
                        (:if, :ok, (:block,
                            (:line, 5140, :none),
                            (:return, (:ref, (:., :e1, (:quote, #QuoteNode
                                    :args
                                  )), (:call, :+, :j, 1)))
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 5144, :none),
                (:if, (:||, (:call, :isa, :e1, :GlobalRef), (:||, (:call, :isa, :e1, :Symbol), (:||, (:call, :isa, :e1, :Slot), (:call, :isa, :e1, :SSAValue)))), (:block,), (:block,
                    (:line, 5147, :none),
                    (:if, (:call, :isa, :e1, :QuoteNode), (:block,
                        (:line, 5148, :none),
                        (:(=), :e1, (:., :e1, (:quote, #QuoteNode
                              :value
                            )))
                      )),
                    (:line, 5150, :none),
                    (:if, (:||, (:call, :isimmutable, :e1), (:call, :isa, :e1, :SimpleVector)), (:block,
                        (:line, 5152, :none),
                        (:if, (:call, :isa, :j, :QuoteNode), (:block,
                            (:line, 5153, :none),
                            (:(=), :j, (:., :j, (:quote, #QuoteNode
                                  :value
                                ))),
                            (:line, 5154, :none),
                            (:if, (:call, :!, (:||, (:call, :isa, :j, :Int), (:call, :isa, :j, :Symbol))), (:block,
                                (:line, 5155, :none),
                                (:return, :e)
                              ))
                          )),
                        (:line, 5158, :none),
                        (:if, (:call, :isdefined, :e1, :j), (:block,
                            (:line, 5159, :none),
                            (:(=), :e1j, (:call, :getfield, :e1, :j)),
                            (:line, 5160, :none),
                            (:if, (:call, :!, (:call, :is_self_quoting, :e1j)), (:block,
                                (:line, 5161, :none),
                                (:(=), :e1j, (:call, :QuoteNode, :e1j))
                              )),
                            (:line, 5163, :none),
                            (:return, :e1j)
                          ))
                      ))
                  ))
              ))
          )),
        (:line, 5168, :none),
        (:return, :e)
      )),
    (:line, 5171, :none),
    (:(=), (:call, :_getfield_elim_pass!, (:(::), :e, :ANY), :sv), (:block,
        (:line, 5171, :none),
        :e
      )),
    (:line, 5176, :none),
    (:function, (:call, :is_allocation, (:(::), :e, :ANY), (:(::), :sv, :InferenceState)), (:block,
        (:line, 5177, :none),
        (:||, (:call, :isa, :e, :Expr), (:return, false)),
        (:line, 5178, :none),
        (:if, (:call, :is_known_call, :e, :tuple, (:., :sv, (:quote, #QuoteNode
                :src
              )), (:., :sv, (:quote, #QuoteNode
                :mod
              ))), (:block,
            (:line, 5179, :none),
            (:return, (:tuple, (:call, :-, (:call, :length, (:., :e, (:quote, #QuoteNode
                        :args
                      ))), 1), (:tuple,)))
          ), (:block,
            (:line, 5180, :none),
            (:if, (:call, :(===), (:., :e, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :new
                )), (:block,
                (:line, 5181, :none),
                (:(=), :typ, (:call, :widenconst, (:call, :exprtype, :e, (:., :sv, (:quote, #QuoteNode
                          :src
                        )), (:., :sv, (:quote, #QuoteNode
                          :mod
                        ))))),
                (:line, 5182, :none),
                (:if, (:&&, (:call, :isa, :typ, :DataType), (:call, :isleaftype, :typ)), (:block,
                    (:line, 5183, :none),
                    (:(=), :nf, (:call, :-, (:call, :length, (:., :e, (:quote, #QuoteNode
                              :args
                            ))), 1)),
                    (:line, 5184, :none),
                    (:(=), :names, (:call, :fieldnames, :typ)),
                    (:line, 5185, :none),
                    (:macrocall, Symbol("@assert"), (:call, :(<=), :nf, (:call, :nfields, :typ))),
                    (:line, 5186, :none),
                    (:if, (:call, :<, :nf, (:call, :nfields, :typ)), (:block,
                        (:line, 5190, :none),
                        (:(=), :names, (:ref, :names, (:(:), 1, :nf)))
                      )),
                    (:line, 5192, :none),
                    (:return, (:tuple, :nf, :names))
                  ))
              ))
          )),
        (:line, 5195, :none),
        false
      )),
    (:line, 5199, :none),
    (:function, (:call, :gotoifnot_elim_pass!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 5200, :none),
        (:(=), :body, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :code
            ))),
        (:line, 5201, :none),
        (:(=), :i, 1),
        (:line, 5202, :none),
        (:while, (:call, :<, :i, (:call, :length, :body)), (:block,
            (:line, 5203, :none),
            (:(=), :expr, (:ref, :body, :i)),
            (:line, 5204, :none),
            (:+=, :i, 1),
            (:line, 5205, :none),
            (:||, (:call, :isa, :expr, :Expr), (:continue,)),
            (:line, 5206, :none),
            (:(=), :expr, (:(::), :expr, :Expr)),
            (:line, 5207, :none),
            (:||, (:call, :(===), (:., :expr, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :gotoifnot
                )), (:continue,)),
            (:line, 5208, :none),
            (:(=), :cond, (:ref, (:., :expr, (:quote, #QuoteNode
                    :args
                  )), 1)),
            (:line, 5209, :none),
            (:(=), :condt, (:call, :exprtype, :cond, (:., :sv, (:quote, #QuoteNode
                    :src
                  )), (:., :sv, (:quote, #QuoteNode
                    :mod
                  )))),
            (:line, 5210, :none),
            (:||, (:call, :isa, :condt, :Const), (:continue,)),
            (:line, 5211, :none),
            (:(=), :val, (:., (:(::), :condt, :Const), (:quote, #QuoteNode
                  :val
                ))),
            (:line, 5215, :none),
            (:if, (:call, :isa, :val, :Bool), (:block,
                (:line, 5217, :none),
                (:(=), (:ref, :body, (:call, :-, :i, 1)), :cond),
                (:line, 5218, :none),
                (:if, (:call, :(===), :val, false), (:block,
                    (:line, 5219, :none),
                    (:call, :insert!, :body, :i, (:call, :GotoNode, (:ref, (:., :expr, (:quote, #QuoteNode
                              :args
                            )), 2))),
                    (:line, 5220, :none),
                    (:+=, :i, 1)
                  ))
              ))
          ))
      )),
    (:line, 5228, :none),
    (:function, (:call, :alloc_elim_pass!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 5229, :none),
        (:(=), :body, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :code
            ))),
        (:line, 5230, :none),
        (:(=), :bexpr, (:call, :Expr, (:quote, #QuoteNode
              :block
            ))),
        (:line, 5231, :none),
        (:(=), (:., :bexpr, (:quote, #QuoteNode
              :args
            )), :body),
        (:line, 5232, :none),
        (:(=), :vs, (:call, :find_sa_vars, (:., :sv, (:quote, #QuoteNode
                :src
              )), (:., :sv, (:quote, #QuoteNode
                :nargs
              )))),
        (:line, 5233, :none),
        (:call, :remove_redundant_temp_vars!, (:., :sv, (:quote, #QuoteNode
              :src
            )), (:., :sv, (:quote, #QuoteNode
              :nargs
            )), :vs),
        (:line, 5234, :none),
        (:call, :remove_unused_vars!, (:., :sv, (:quote, #QuoteNode
              :src
            ))),
        (:line, 5235, :none),
        (:(=), :i, 1),
        (:line, 5236, :none),
        (:while, (:call, :<, :i, (:call, :length, :body)), (:block,
            (:line, 5237, :none),
            (:(=), :e, (:ref, :body, :i)),
            (:line, 5238, :none),
            (:if, (:call, :!, (:call, :isa, :e, :Expr)), (:block,
                (:line, 5239, :none),
                (:+=, :i, 1),
                (:line, 5240, :none),
                (:continue,)
              )),
            (:line, 5242, :none),
            (:(=), :e, (:(::), :e, :Expr)),
            (:line, 5243, :none),
            (:if, (:&&, (:call, :(===), (:., :e, (:quote, #QuoteNode
                      :head
                    )), (:quote, #QuoteNode
                    :(=)
                  )), (:||, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                          :args
                        )), 1), :SSAValue), (:&&, (:call, :isa, (:ref, (:., :e, (:quote, #QuoteNode
                            :args
                          )), 1), :Slot), (:call, :haskey, :vs, (:call, :normslot, (:ref, (:., :e, (:quote, #QuoteNode
                              :args
                            )), 1)))))), (:block,
                (:line, 5245, :none),
                (:(=), :var, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 1)),
                (:line, 5246, :none),
                (:(=), :rhs, (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), 2)),
                (:line, 5248, :none),
                (:(=), :is_ssa, (:||, (:call, :isa, :var, :SSAValue), (:call, :(==), (:call, :&, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:quote, #QuoteNode
                              :slotflags
                            )), (:call, :slot_id, :var)), :Slot_UsedUndef), 0)))
              ), (:block,
                (:line, 5251, :none),
                (:(=), :var, :nothing),
                (:line, 5252, :none),
                (:(=), :rhs, :e),
                (:line, 5253, :none),
                (:(=), :is_ssa, false)
              )),
            (:line, 5255, :none),
            (:(=), :alloc, (:call, :is_allocation, :rhs, :sv)),
            (:line, 5256, :none),
            (:if, (:call, :(!==), :alloc, false), (:block,
                (:line, 5257, :none),
                (:(=), (:tuple, :nv, :field_names), :alloc),
                (:line, 5258, :none),
                (:(=), :tup, (:., :rhs, (:quote, #QuoteNode
                      :args
                    ))),
                (:line, 5261, :none),
                (:if, (:&&, (:call, :(!==), :var, :nothing), (:call, :occurs_outside_getfield, :bexpr, :var, :sv, :nv, :field_names)), (:block,
                    (:line, 5263, :none),
                    (:+=, :i, 1),
                    (:line, 5264, :none),
                    (:continue,)
                  )),
                (:line, 5267, :none),
                (:call, :deleteat!, :body, :i),
                (:line, 5269, :none),
                (:(=), :n_ins, 0),
                (:line, 5270, :none),
                (:if, (:call, :(===), :var, :nothing), (:block,
                    (:line, 5271, :none),
                    (:for, (:(=), :j, (:(:), 1, :nv)), (:block,
                        (:line, 5272, :none),
                        (:(=), :tupelt, (:ref, :tup, (:call, :+, :j, 1))),
                        (:line, 5273, :none),
                        (:if, (:call, :!, (:||, (:call, :isa, :tupelt, :Number), (:||, (:call, :isa, :tupelt, :AbstractString), (:||, (:call, :isa, :tupelt, :QuoteNode), (:call, :isa, :tupelt, :SSAValue))))), (:block,
                            (:line, 5275, :none),
                            (:call, :insert!, :body, (:call, :+, :i, :n_ins), :tupelt),
                            (:line, 5276, :none),
                            (:+=, :n_ins, 1)
                          ))
                      ))
                  ), (:block,
                    (:line, 5280, :none),
                    (:(=), :vals, (:call, (:curly, :Vector, :Any), :nv)),
                    (:line, 5281, :none),
                    (:local, (:(::), :new_slots, (:curly, :Vector, :Int))),
                    (:line, 5282, :none),
                    (:if, (:call, :!, :is_ssa), (:block,
                        (:line, 5283, :none),
                        (:(=), :new_slots, (:call, (:curly, :Vector, :Int), :nv))
                      )),
                    (:line, 5285, :none),
                    (:for, (:(=), :j, (:(:), 1, :nv)), (:block,
                        (:line, 5286, :none),
                        (:(=), :tupelt, (:ref, :tup, (:call, :+, :j, 1))),
                        (:line, 5289, :none),
                        (:if, (:&&, :is_ssa, (:||, (:call, :isa, :tupelt, :Number), (:||, (:call, :isa, :tupelt, :AbstractString), (:||, (:call, :isa, :tupelt, :QuoteNode), (:call, :isa, :tupelt, :SSAValue))))), (:block,
                            (:line, 5292, :none),
                            (:(=), (:ref, :vals, :j), :tupelt)
                          ), (:block,
                            (:line, 5294, :none),
                            (:(=), :elty, (:call, :exprtype, :tupelt, (:., :sv, (:quote, #QuoteNode
                                    :src
                                  )), (:., :sv, (:quote, #QuoteNode
                                    :mod
                                  )))),
                            (:line, 5295, :none),
                            (:if, :is_ssa, (:block,
                                (:line, 5296, :none),
                                (:(=), :tmpv, (:call, :newvar!, :sv, :elty))
                              ), (:block,
                                (:line, 5298, :none),
                                (:(=), :tmpv, (:call, :add_slot!, (:., :sv, (:quote, #QuoteNode
                                        :src
                                      )), (:call, :widenconst, :elty), false, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                            :src
                                          )), (:quote, #QuoteNode
                                          :slotnames
                                        )), (:call, :slot_id, :var)))),
                                (:line, 5300, :none),
                                (:(=), :tmpv_id, (:call, :slot_id, :tmpv)),
                                (:line, 5301, :none),
                                (:(=), (:ref, :new_slots, :j), :tmpv_id),
                                (:line, 5302, :none),
                                (:|=, (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                          :src
                                        )), (:quote, #QuoteNode
                                        :slotflags
                                      )), :tmpv_id), :Slot_UsedUndef)
                              )),
                            (:line, 5304, :none),
                            (:(=), :tmp, (:call, :Expr, (:quote, #QuoteNode
                                  :(=)
                                ), :tmpv, :tupelt)),
                            (:line, 5305, :none),
                            (:call, :insert!, :body, (:call, :+, :i, :n_ins), :tmp),
                            (:line, 5306, :none),
                            (:(=), (:ref, :vals, :j), :tmpv),
                            (:line, 5307, :none),
                            (:+=, :n_ins, 1)
                          ))
                      )),
                    (:line, 5310, :none),
                    (:call, :replace_getfield!, :bexpr, :var, :vals, :field_names, :sv),
                    (:line, 5311, :none),
                    (:if, (:call, :!, :is_ssa), (:block,
                        (:line, 5312, :none),
                        (:+=, :i, (:call, :replace_newvar_node!, :body, (:call, :slot_id, :var), :new_slots, :i))
                      ), (:block,
                        (:line, 5314, :none),
                        (:if, (:call, :isa, :var, :Slot), (:block,
                            (:line, 5317, :none),
                            (:-=, :i, (:call, :delete_void_use!, :body, :var, :i))
                          ))
                      ))
                  ))
              ), (:block,
                (:line, 5325, :none),
                (:+=, :i, 1)
              ))
          ))
      )),
    (:line, 5331, :none),
    (:function, (:call, :replace_newvar_node!, :body, :orig, :new_slots, :i0), (:block,
        (:line, 5332, :none),
        (:(=), :nvars, (:call, :length, :new_slots)),
        (:line, 5333, :none),
        (:&&, (:call, :(==), :nvars, 0), (:return, 0)),
        (:line, 5334, :none),
        (:(=), :narg, (:call, :length, :body)),
        (:line, 5335, :none),
        (:(=), :i, 1),
        (:line, 5336, :none),
        (:(=), :nins, 0),
        (:line, 5337, :none),
        (:(=), :newvars, (:comprehension, (:generator, (:call, :NewvarNode, (:call, :SlotNumber, :id)), (:(=), :id, :new_slots)))),
        (:line, 5338, :none),
        (:while, (:call, :(<=), :i, :narg), (:block,
            (:line, 5339, :none),
            (:(=), :a, (:ref, :body, :i)),
            (:line, 5340, :none),
            (:if, (:&&, (:call, :isa, :a, :NewvarNode), (:call, :(==), (:call, :slot_id, (:., (:(::), :a, :NewvarNode), (:quote, #QuoteNode
                        :slot
                      ))), :orig)), (:block,
                (:line, 5341, :none),
                (:call, :splice!, :body, :i, :newvars),
                (:line, 5342, :none),
                (:if, (:call, :<, (:call, :-, :i, :nins), :i0), (:block,
                    (:line, 5343, :none),
                    (:+=, :nins, (:call, :-, :nvars, 1))
                  )),
                (:line, 5345, :none),
                (:+=, :narg, (:call, :-, :nvars, 1)),
                (:line, 5346, :none),
                (:+=, :i, :nvars)
              ), (:block,
                (:line, 5348, :none),
                (:+=, :i, 1)
              ))
          )),
        (:line, 5351, :none),
        (:return, :nins)
      )),
    (:line, 5355, :none),
    (:function, (:call, :delete_void_use!, :body, (:(::), :var, :Slot), :i0), (:block,
        (:line, 5356, :none),
        (:(=), :narg, (:call, :length, :body)),
        (:line, 5357, :none),
        (:(=), :i, 1),
        (:line, 5358, :none),
        (:(=), :ndel, 0),
        (:line, 5359, :none),
        (:while, (:call, :(<=), :i, :narg), (:block,
            (:line, 5360, :none),
            (:(=), :a, (:ref, :body, :i)),
            (:line, 5361, :none),
            (:if, (:&&, (:call, :isa, :a, :Slot), (:call, :(==), (:call, :slot_id, :a), (:call, :slot_id, :var))), (:block,
                (:line, 5362, :none),
                (:call, :deleteat!, :body, :i),
                (:line, 5363, :none),
                (:if, (:call, :<, (:call, :+, :i, :ndel), :i0), (:block,
                    (:line, 5364, :none),
                    (:+=, :ndel, 1)
                  )),
                (:line, 5366, :none),
                (:-=, :narg, 1)
              ), (:block,
                (:line, 5368, :none),
                (:+=, :i, 1)
              ))
          )),
        (:line, 5371, :none),
        (:return, :ndel)
      )),
    (:line, 5374, :none),
    (:function, (:call, :replace_getfield!, (:(::), :e, :Expr), :tupname, :vals, :field_names, (:(::), :sv, :InferenceState)), (:block,
        (:line, 5375, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, (:., :e, (:quote, #QuoteNode
                    :args
                  ))))), (:block,
            (:line, 5376, :none),
            (:(=), :a, (:ref, (:., :e, (:quote, #QuoteNode
                    :args
                  )), :i)),
            (:line, 5377, :none),
            (:if, (:&&, (:call, :isa, :a, :Expr), (:&&, (:call, :is_known_call, :a, :getfield, (:., :sv, (:quote, #QuoteNode
                        :src
                      )), (:., :sv, (:quote, #QuoteNode
                        :mod
                      ))), (:call, :symequal, (:ref, (:., :a, (:quote, #QuoteNode
                          :args
                        )), 2), :tupname))), (:block,
                (:line, 5379, :none),
                (:(=), :idx, (:if, (:call, :isa, (:ref, (:., :a, (:quote, #QuoteNode
                            :args
                          )), 3), :Int), (:block,
                      (:line, 5380, :none),
                      (:ref, (:., :a, (:quote, #QuoteNode
                            :args
                          )), 3)
                    ), (:block,
                      (:line, 5382, :none),
                      (:macrocall, Symbol("@assert"), (:call, :isa, (:ref, (:., :a, (:quote, #QuoteNode
                                :args
                              )), 3), :QuoteNode)),
                      (:line, 5383, :none),
                      (:call, :findfirst, :field_names, (:., (:ref, (:., :a, (:quote, #QuoteNode
                                :args
                              )), 3), (:quote, #QuoteNode
                            :value
                          )))
                    ))),
                (:line, 5385, :none),
                (:macrocall, Symbol("@assert"), (:call, :>, :idx, 0)),
                (:line, 5386, :none),
                (:(=), :val, (:ref, :vals, :idx)),
                (:line, 5389, :none),
                (:if, (:call, :isa, :val, :Slot), (:block,
                    (:line, 5390, :none),
                    (:(=), :val, (:(::), :val, :Slot)),
                    (:line, 5391, :none),
                    (:(=), :id, (:call, :slot_id, :val)),
                    (:line, 5392, :none),
                    (:(=), :valtyp, (:if, (:call, :isa, :val, :TypedSlot), (:., :val, (:quote, #QuoteNode
                            :typ
                          )), (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:quote, #QuoteNode
                              :slottypes
                            )), :id))),
                    (:line, 5393, :none),
                    (:if, (:&&, (:call, :⊑, (:., :a, (:quote, #QuoteNode
                              :typ
                            )), :valtyp), (:call, :!, (:call, :⊑, :valtyp, (:., :a, (:quote, #QuoteNode
                                :typ
                              ))))), (:block,
                        (:line, 5394, :none),
                        (:if, (:call, :isa, :val, :TypedSlot), (:block,
                            (:line, 5395, :none),
                            (:(=), :val, (:call, :TypedSlot, :id, (:., :a, (:quote, #QuoteNode
                                    :typ
                                  ))))
                          )),
                        (:line, 5397, :none),
                        (:(=), (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                  :src
                                )), (:quote, #QuoteNode
                                :slottypes
                              )), :id), (:call, :widenconst, (:., :a, (:quote, #QuoteNode
                                :typ
                              ))))
                      ))
                  ), (:block,
                    (:line, 5399, :none),
                    (:if, (:call, :isa, :val, :SSAValue), (:block,
                        (:line, 5400, :none),
                        (:(=), :val, (:(::), :val, :SSAValue)),
                        (:line, 5401, :none),
                        (:(=), :typ, (:call, :exprtype, :val, (:., :sv, (:quote, #QuoteNode
                                :src
                              )), (:., :sv, (:quote, #QuoteNode
                                :mod
                              )))),
                        (:line, 5402, :none),
                        (:if, (:&&, (:call, :⊑, (:., :a, (:quote, #QuoteNode
                                  :typ
                                )), :typ), (:call, :!, (:call, :⊑, :typ, (:., :a, (:quote, #QuoteNode
                                    :typ
                                  ))))), (:block,
                            (:line, 5403, :none),
                            (:(=), (:ref, (:., (:., :sv, (:quote, #QuoteNode
                                      :src
                                    )), (:quote, #QuoteNode
                                    :ssavaluetypes
                                  )), (:call, :+, (:., :val, (:quote, #QuoteNode
                                      :id
                                    )), 1)), (:., :a, (:quote, #QuoteNode
                                  :typ
                                )))
                          ))
                      ))
                  )),
                (:line, 5406, :none),
                (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                        :args
                      )), :i), :val)
              ), (:block,
                (:line, 5407, :none),
                (:if, (:call, :isa, :a, :Expr), (:block,
                    (:line, 5408, :none),
                    (:call, :replace_getfield!, (:(::), :a, :Expr), :tupname, :vals, :field_names, :sv)
                  ))
              ))
          ))
      )),
    (:line, 5414, :none),
    (:function, (:call, :reindex_labels!, (:(::), :sv, :InferenceState)), (:block,
        (:line, 5415, :none),
        (:(=), :body, (:., (:., :sv, (:quote, #QuoteNode
                :src
              )), (:quote, #QuoteNode
              :code
            ))),
        (:line, 5416, :none),
        (:(=), :mapping, (:call, :zeros, :Int, (:., :sv, (:quote, #QuoteNode
                :label_counter
              )))),
        (:line, 5417, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 5418, :none),
            (:(=), :el, (:ref, :body, :i)),
            (:line, 5419, :none),
            (:if, (:call, :isa, :el, :LabelNode), (:block,
                (:line, 5420, :none),
                (:(=), (:ref, :mapping, (:., :el, (:quote, #QuoteNode
                        :label
                      ))), :i),
                (:line, 5421, :none),
                (:(=), (:ref, :body, :i), (:call, :LabelNode, :i))
              ))
          )),
        (:line, 5424, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :body))), (:block,
            (:line, 5425, :none),
            (:(=), :el, (:ref, :body, :i)),
            (:line, 5431, :none),
            (:if, (:call, :isa, :el, :GotoNode), (:block,
                (:line, 5432, :none),
                (:(=), :labelnum, (:ref, :mapping, (:., :el, (:quote, #QuoteNode
                        :label
                      )))),
                (:line, 5433, :none),
                (:macrocall, Symbol("@assert"), (:call, :(!==), :labelnum, 0)),
                (:line, 5434, :none),
                (:(=), (:ref, :body, :i), (:call, :GotoNode, :labelnum))
              ), (:block,
                (:line, 5435, :none),
                (:if, (:call, :isa, :el, :Expr), (:block,
                    (:line, 5436, :none),
                    (:(=), :el, (:(::), :el, :Expr)),
                    (:line, 5437, :none),
                    (:if, (:call, :(===), (:., :el, (:quote, #QuoteNode
                            :head
                          )), (:quote, #QuoteNode
                          :gotoifnot
                        )), (:block,
                        (:line, 5438, :none),
                        (:(=), :labelnum, (:ref, :mapping, (:ref, (:., :el, (:quote, #QuoteNode
                                  :args
                                )), 2))),
                        (:line, 5439, :none),
                        (:if, (:call, :(!==), :labelnum, 0), (:block,
                            (:line, 5440, :none),
                            (:(=), (:ref, (:., :el, (:quote, #QuoteNode
                                    :args
                                  )), 2), (:ref, :mapping, (:ref, (:., :el, (:quote, #QuoteNode
                                      :args
                                    )), 2)))
                          ), (:block,
                            (:line, 5443, :none),
                            (:(=), (:ref, :body, :i), (:ref, (:., :el, (:quote, #QuoteNode
                                    :args
                                  )), 1))
                          ))
                      ), (:block,
                        (:line, 5445, :none),
                        (:if, (:call, :(===), (:., :el, (:quote, #QuoteNode
                                :head
                              )), (:quote, #QuoteNode
                              :enter
                            )), (:block,
                            (:line, 5446, :none),
                            (:(=), :labelnum, (:ref, :mapping, (:ref, (:., :el, (:quote, #QuoteNode
                                      :args
                                    )), 1))),
                            (:line, 5447, :none),
                            (:macrocall, Symbol("@assert"), (:call, :(!==), :labelnum, 0)),
                            (:line, 5448, :none),
                            (:(=), (:ref, (:., :el, (:quote, #QuoteNode
                                    :args
                                  )), 1), :labelnum)
                          ))
                      ))
                  ))
              ))
          ))
      )),
    (:line, 5454, :none),
    (:function, (:call, :return_type, (:(::), :f, :ANY), (:(::), :t, :ANY)), (:block,
        (:line, 5455, :none),
        (:(=), :params, (:call, :InferenceParams, (:call, :ccall, (:quote, #QuoteNode
                :jl_get_tls_world_age
              ), :UInt, (:tuple,)))),
        (:line, 5456, :none),
        (:(=), :rt, (:curly, :Union)),
        (:line, 5457, :none),
        (:if, (:call, :isa, :f, :Builtin), (:block,
            (:line, 5458, :none),
            (:(=), :rt, (:call, :builtin_tfunction, :f, (:ref, :Any, (:..., (:., :t, (:quote, #QuoteNode
                        :parameters
                      )))), :nothing, :params)),
            (:line, 5459, :none),
            (:if, (:call, :isa, :rt, :TypeVar), (:block,
                (:line, 5460, :none),
                (:(=), :rt, (:., :rt, (:quote, #QuoteNode
                      :ub
                    )))
              ), (:block,
                (:line, 5462, :none),
                (:(=), :rt, (:call, :widenconst, :rt))
              ))
          ), (:block,
            (:line, 5465, :none),
            (:for, (:(=), :m, (:call, :_methods, :f, :t, -1, (:., :params, (:quote, #QuoteNode
                      :world
                    )))), (:block,
                (:line, 5466, :none),
                (:(=), :ty, (:call, :typeinf_type, (:ref, :m, 3), (:ref, :m, 1), (:ref, :m, 2), true, :params)),
                (:line, 5467, :none),
                (:&&, (:call, :(===), :ty, :nothing), (:return, :Any)),
                (:line, 5468, :none),
                (:(=), :rt, (:call, :tmerge, :rt, :ty)),
                (:line, 5469, :none),
                (:&&, (:call, :(===), :rt, :Any), (:break,))
              ))
          )),
        (:line, 5472, :none),
        (:return, :rt)
      )),
    (:line, 5482, :none),
    (:let, (:block,
        (:line, 5484, :none),
        (:for, (:(=), :x, :t_ffunc_val), (:block,
            (:line, 5485, :none),
            (:call, :push!, :fs, (:ref, :x, 3))
          )),
        (:line, 5487, :none),
        (:for, (:(=), :i, (:(:), 1, (:call, :length, :t_ifunc))), (:block,
            (:line, 5488, :none),
            (:if, (:call, :isassigned, :t_ifunc, :i), (:block,
                (:line, 5489, :none),
                (:(=), :x, (:ref, :t_ifunc, :i)),
                (:line, 5490, :none),
                (:call, :push!, :fs, (:ref, :x, 3))
              ))
          )),
        (:line, 5493, :none),
        (:for, (:(=), :f, :fs), (:block,
            (:line, 5494, :none),
            (:for, (:(=), :m, (:call, :_methods_by_ftype, (:curly, :Tuple, (:call, :typeof, :f), (:curly, :Vararg, :Any)), 10, (:call, :typemax, :UInt))), (:block,
                (:line, 5496, :none),
                (:(=), :typ, (:ref, :Any, (:..., (:., (:ref, :m, 1), (:quote, #QuoteNode
                          :parameters
                        ))))),
                (:line, 5497, :none),
                (:for, (:(=), :i, (:(:), 1, (:call, :length, :typ))), (:block,
                    (:line, 5498, :none),
                    (:if, (:call, :isa, (:ref, :typ, :i), :TypeVar), (:block,
                        (:line, 5499, :none),
                        (:(=), (:ref, :typ, :i), (:., (:ref, :typ, :i), (:quote, #QuoteNode
                              :ub
                            )))
                      ))
                  )),
                (:line, 5502, :none),
                (:call, :typeinf_type, (:ref, :m, 3), (:curly, :Tuple, (:..., :typ)), (:ref, :m, 2), true, (:call, :InferenceParams, :world))
              ))
          ))
      ), (:(=), :fs, (:ref, :Any, :typeinf_ext, :typeinf_loop, :typeinf_edge, :occurs_outside_getfield, :pure_eval_call)), (:(=), :world, (:call, :ccall, (:quote, #QuoteNode
            :jl_get_world_counter
          ), :UInt, (:tuple,))))
  ))