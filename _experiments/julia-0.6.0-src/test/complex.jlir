(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reim, (:call, :+, 2, (:call, :*, 3, :im))), (:tuple, 2, 3))),
    (:line, 5, :none),
    (:for, (:(=), :T, (:tuple, :Int64, :Float64)), (:block,
        (:line, 6, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :real, :T), :T)),
        (:line, 7, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :real, (:curly, :Complex, :T)), :T)),
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :complex, :T), (:curly, :Complex, :T))),
        (:line, 9, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :complex, (:curly, :Complex, :T)), (:curly, :Complex, :T)))
      )),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :showcompact, (:call, :complex, 1, 0)), "1+0im")),
    (:line, 14, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, (:call, :complex, true, true)), "Complex(true,true)")),
    (:line, 16, :none),
    (:macrocall, Symbol("@testset"), "arithmetic", (:block,
        (:line, 17, :none),
        (:macrocall, Symbol("@testset"), (:for, (:(=), :T, (:tuple, :Float16, :Float32, :Float64, :BigFloat)), (:block,
              (:line, 18, :none),
              (:(=), :t, true),
              (:line, 19, :none),
              (:(=), :f, false),
              (:line, 21, :none),
              (:macrocall, Symbol("@testset"), "add and subtract", (:block,
                  (:line, 22, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, 0.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 23, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, -0.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, 1.0)))),
                  (:line, 24, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, 0.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, -1.0)))),
                  (:line, 25, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, -0.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, -1.0)))),
                  (:line, 26, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, 1.0), :im), (:call, :Complex, (:call, :T, 1.0), (:call, :T, 1.0)))),
                  (:line, 27, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, -1.0), :im), (:call, :Complex, (:call, :T, -1.0), (:call, :T, 1.0)))),
                  (:line, 28, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, 1.0), :im), (:call, :Complex, (:call, :T, 1.0), (:call, :T, -1.0)))),
                  (:line, 29, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, -1.0), :im), (:call, :Complex, (:call, :T, -1.0), (:call, :T, -1.0)))),
                  (:line, 30, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, 0.0)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 31, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, -0.0)), (:call, :Complex, (:call, :T, -0.0), (:call, :T, 1.0)))),
                  (:line, 32, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, 0.0)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 33, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, -0.0)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 34, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, 1.0)), (:call, :Complex, (:call, :T, 1.0), (:call, :T, 1.0)))),
                  (:line, 35, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, -1.0)), (:call, :Complex, (:call, :T, -1.0), (:call, :T, 1.0)))),
                  (:line, 36, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, 1.0)), (:call, :Complex, (:call, :T, -1.0), (:call, :T, 1.0)))),
                  (:line, 37, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, -1.0)), (:call, :Complex, (:call, :T, 1.0), (:call, :T, 1.0)))),
                  (:line, 38, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, :f), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 39, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :T, :t), :im), (:call, :Complex, (:call, :T, 1.0), (:call, :T, 1.0)))),
                  (:line, 40, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, :f), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, -1.0)))),
                  (:line, 41, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :T, :t), :im), (:call, :Complex, (:call, :T, 1.0), (:call, :T, -1.0)))),
                  (:line, 42, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, :f)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 43, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, :im, (:call, :T, :t)), (:call, :Complex, (:call, :T, 1.0), (:call, :T, 1.0)))),
                  (:line, 44, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, :f)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 45, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, :im, (:call, :T, :t)), (:call, :Complex, (:call, :T, -1.0), (:call, :T, 1.0))))
                )),
              (:line, 48, :none),
              (:macrocall, Symbol("@testset"), "multiply", (:block,
                  (:line, 49, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, (:call, :T, 0.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 0.0)))),
                  (:line, 50, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, (:call, :T, -0.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, -0.0)))),
                  (:line, 51, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, (:call, :T, 1.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 52, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, (:call, :T, -1.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, -1.0)))),
                  (:line, 53, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, :im, (:call, :T, 0.0)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 0.0)))),
                  (:line, 54, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, :im, (:call, :T, -0.0)), (:call, :Complex, (:call, :T, -0.0), (:call, :T, -0.0)))),
                  (:line, 55, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, :im, (:call, :T, 1.0)), (:call, :Complex, (:call, :T, 0.0), (:call, :T, 1.0)))),
                  (:line, 56, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, :im, (:call, :T, -1.0)), (:call, :Complex, (:call, :T, -0.0), (:call, :T, -1.0))))
                )),
              (:line, 59, :none),
              (:macrocall, Symbol("@testset"), "divide", (:block,
                  (:line, 60, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :/, (:call, :T, 0.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, -0.0)))),
                  (:line, 61, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :/, (:call, :T, -0.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, 0.0)))),
                  (:line, 62, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :/, (:call, :T, 1.0), :im), (:call, :Complex, (:call, :T, 0.0), (:call, :T, -1.0)))),
                  (:line, 63, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :/, (:call, :T, -1.0), :im), (:call, :Complex, (:call, :T, -0.0), (:call, :T, 1.0))))
                ))
            ))),
        (:line, 66, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, true, (:call, :complex, true, false)), (:call, :+, (:call, :complex, true, false), (:call, :complex, true, false)))),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :+, (:call, :complex, true, false), true), (:call, :+, (:call, :complex, true, false), (:call, :complex, true, false)))),
        (:line, 68, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, true, (:call, :complex, true, false)), (:call, :-, (:call, :complex, true, false), (:call, :complex, true, false)))),
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :-, (:call, :complex, true, false), true), (:call, :-, (:call, :complex, true, false), (:call, :complex, true, false)))),
        (:line, 70, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, true, (:call, :complex, true, false)), (:call, :*, (:call, :complex, true, false), (:call, :complex, true, false)))),
        (:line, 71, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :*, (:call, :complex, true, false), true), (:call, :*, (:call, :complex, true, false), (:call, :complex, true, false))))
      )),
    (:line, 74, :none),
    (:macrocall, Symbol("@testset"), "basic math functions", (:block,
        (:line, 78, :none),
        (:macrocall, Symbol("@testset"), (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
              (:line, 79, :none),
              (:(=), :x, (:call, (:curly, :Complex, :T), (:call, :+, (:call, ://, 1, 3), (:call, :*, (:call, ://, 1, 4), :im)))),
              (:line, 80, :none),
              (:(=), :y, (:call, (:curly, :Complex, :T), (:call, :+, (:call, ://, 1, 2), (:call, :*, (:call, ://, 1, 5), :im)))),
              (:line, 81, :none),
              (:(=), :yi, 4),
              (:line, 82, :none),
              (:macrocall, Symbol("@testset"), "Random values", (:block,
                  (:line, 83, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, :y), (:call, :^, (:call, :big, :x), (:call, :big, :y)))),
                  (:line, 84, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, :yi), (:call, :^, (:call, :big, :x), :yi))),
                  (:line, 85, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, true), (:call, :^, (:call, :big, :x), true))),
                  (:line, 86, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, false), (:call, :^, (:call, :big, :x), false))),
                  (:line, 87, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, :x, 1), (:call, :^, (:call, :big, :x), 1))),
                  (:line, 88, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :abs, :x), (:call, :abs, (:call, :big, :x)))),
                  (:line, 89, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :abs2, :x), (:call, :abs2, (:call, :big, :x)))),
                  (:line, 90, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acos, :x), (:call, :acos, (:call, :big, :x)))),
                  (:line, 91, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acosh, (:call, :+, 1, :x)), (:call, :acosh, (:call, :+, 1, (:call, :big, :x))))),
                  (:line, 92, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :angle, :x), (:call, :angle, (:call, :big, :x)))),
                  (:line, 93, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asin, :x), (:call, :asin, (:call, :big, :x)))),
                  (:line, 94, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asinh, :x), (:call, :asinh, (:call, :big, :x)))),
                  (:line, 95, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan, :x), (:call, :atan, (:call, :big, :x)))),
                  (:line, 96, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atanh, :x), (:call, :atanh, (:call, :big, :x)))),
                  (:line, 97, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, (:call, :real, :x)), (:call, :cis, (:call, :real, (:call, :big, :x))))),
                  (:line, 98, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, :x), (:call, :cis, (:call, :big, :x)))),
                  (:line, 99, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cos, :x), (:call, :cos, (:call, :big, :x)))),
                  (:line, 100, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, :x), (:call, :cosh, (:call, :big, :x)))),
                  (:line, 101, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp, :x), (:call, :exp, (:call, :big, :x)))),
                  (:line, 102, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, :x), (:call, :exp10, (:call, :big, :x)))),
                  (:line, 103, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, :x), (:call, :exp2, (:call, :big, :x)))),
                  (:line, 104, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, :x), (:call, :expm1, (:call, :big, :x))), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 105, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log, :x), (:call, :log, (:call, :big, :x)))),
                  (:line, 106, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log10, :x), (:call, :log10, (:call, :big, :x)))),
                  (:line, 107, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, :x), (:call, :log1p, (:call, :big, :x)))),
                  (:line, 108, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log2, :x), (:call, :log2, (:call, :big, :x)))),
                  (:line, 109, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sin, :x), (:call, :sin, (:call, :big, :x)))),
                  (:line, 110, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, :x), (:call, :sinh, (:call, :big, :x)))),
                  (:line, 111, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sqrt, :x), (:call, :sqrt, (:call, :big, :x)))),
                  (:line, 112, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, :x), (:call, :tan, (:call, :big, :x)))),
                  (:line, 113, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, :x), (:call, :tanh, (:call, :big, :x))))
                )),
              (:line, 115, :none),
              (:macrocall, Symbol("@testset"), "Inverses", (:block,
                  (:line, 116, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acos, (:call, :cos, :x)), :x)),
                  (:line, 117, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :acosh, (:call, :cosh, :x)), :x)),
                  (:line, 118, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asin, (:call, :sin, :x)), :x)),
                  (:line, 119, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :asinh, (:call, :sinh, :x)), :x)),
                  (:line, 120, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atan, (:call, :tan, :x)), :x)),
                  (:line, 121, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :atanh, (:call, :tanh, :x)), :x)),
                  (:line, 122, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cos, (:call, :acos, :x)), :x)),
                  (:line, 123, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, (:call, :acosh, (:call, :+, 1, :x))), (:call, :+, 1, :x))),
                  (:line, 124, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp, (:call, :log, :x)), :x)),
                  (:line, 125, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, (:call, :log10, :x)), :x)),
                  (:line, 126, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, (:call, :log2, :x)), :x)),
                  (:line, 127, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :log1p, :x)), :x)),
                  (:line, 128, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log, (:call, :exp, :x)), :x)),
                  (:line, 129, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log10, (:call, :exp10, :x)), :x)),
                  (:line, 130, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, (:call, :expm1, :x)), :x)),
                  (:line, 131, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log2, (:call, :exp2, :x)), :x)),
                  (:line, 132, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sin, (:call, :asin, :x)), :x)),
                  (:line, 133, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, (:call, :asinh, :x)), :x)),
                  (:line, 134, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, (:call, :sqrt, :x), 2), :x)),
                  (:line, 135, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sqrt, (:call, :^, :x, 2)), :x)),
                  (:line, 136, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, (:call, :atan, :x)), :x)),
                  (:line, 137, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, (:call, :atanh, :x)), :x))
                )),
              (:line, 139, :none),
              (:macrocall, Symbol("@testset"), "Relations between functions", (:block,
                  (:line, 140, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cosh, :x), (:call, :/, (:call, :+, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
                  (:line, 141, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :-, (:call, :^, (:call, :cosh, :x), 2), (:call, :^, (:call, :sinh, :x), 2)), 1)),
                  (:line, 142, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :+, (:call, :^, (:call, :sin, :x), 2), (:call, :^, (:call, :cos, :x), 2)), 1)),
                  (:line, 143, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sinh, :x), (:call, :/, (:call, :-, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
                  (:line, 144, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tan, :x), (:call, :/, (:call, :sin, :x), (:call, :cos, :x)))),
                  (:line, 145, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tanh, :x), (:call, :/, (:call, :sinh, :x), (:call, :cosh, :x))))
                ))
            )))
      )),
    (:line, 150, :none),
    (:macrocall, Symbol("@testset"), "isinf", (:block,
        (:line, 151, :none),
        (:macrocall, Symbol("@test"), (:call, :iszero, (:call, :real, (:call, :complex, 0.0, 1.0)))),
        (:line, 152, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :iszero, (:call, :real, (:call, :complex, 1.0, 1.0))))),
        (:line, 153, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :complex, :Inf, 0))),
        (:line, 154, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :complex, (:call, :-, :Inf), 0))),
        (:line, 155, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :complex, 0, :Inf))),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :complex, 0, (:call, :-, :Inf)))),
        (:line, 157, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isinf, (:call, :complex, 0, 0))))
      )),
    (:line, 160, :none),
    (:macrocall, Symbol("@testset"), "flipsign", (:block,
        (:line, 161, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, 0.0, 0.0), (:call, :flipsign, (:call, :complex, 0.0, 0.0), 1))),
        (:line, 162, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, -0.0, -0.0), (:call, :flipsign, (:call, :complex, 0.0, 0.0), -1))),
        (:line, 163, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, :Inf, 0.0), (:call, :flipsign, (:call, :complex, :Inf, 0.0), 1))),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, (:call, :-, :Inf), -0.0), (:call, :flipsign, (:call, :complex, :Inf, 0.0), -1))),
        (:line, 165, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, 0.0, :NaN), (:call, :flipsign, (:call, :complex, 0.0, :NaN), 1.0))),
        (:line, 166, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, -0.0, :NaN), (:call, :flipsign, (:call, :complex, 0.0, :NaN), -1.0))),
        (:line, 168, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, 5.0, 4.0), (:call, :flipsign, (:call, :complex, -5.0, -4.0), -1))),
        (:line, 169, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :complex, 0.5, -0.5), (:call, :flipsign, (:call, :complex, -0.5, 0.5), -2)))
      )),
    (:line, 172, :none),
    (:macrocall, Symbol("@testset"), "sqrt", (:block,
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 176, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 0.0, :Inf)), (:call, :complex, :Inf, :Inf))),
        (:line, 178, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :-, :Inf)))),
        (:line, 179, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, -0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 181, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, -0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 183, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 5.0, 0.0)), (:call, :complex, (:call, :sqrt, 5.0), 0.0))),
        (:line, 184, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, 5.0, -0.0)), (:call, :complex, (:call, :sqrt, 5.0), -0.0))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, -5.0, 0.0)), (:call, :complex, 0.0, (:call, :sqrt, 5.0)))),
        (:line, 186, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, -5.0, -0.0)), (:call, :complex, 0.0, (:call, :-, (:call, :sqrt, 5.0))))),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, 0.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 189, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, -0.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 190, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, 5.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 191, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, -5.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, :Inf)), (:call, :complex, :Inf, :Inf))),
        (:line, 193, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :-, :Inf)))),
        (:line, 194, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :Inf, :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 196, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, 0.0, :Inf))),
        (:line, 197, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, 0.0, (:call, :-, :Inf)))),
        (:line, 198, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, 0.0, :Inf))),
        (:line, 199, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, 0.0, (:call, :-, :Inf)))),
        (:line, 200, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, :Inf, :Inf))),
        (:line, 201, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :-, :Inf)))),
        (:line, 202, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, :NaN, :Inf))),
        (:line, 204, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 205, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 206, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :NaN, :Inf)), (:call, :complex, :Inf, :Inf))),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :-, :Inf))))
      )),
    (:line, 210, :none),
    (:macrocall, Symbol("@testset"), "log(conj(z)) == conj(log(z))", (:block,
        (:line, 211, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, 0.0)), (:call, :complex, (:call, :-, :Inf), 0.0))),
        (:line, 212, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, -0.0)), (:call, :complex, (:call, :-, :Inf), -0.0))),
        (:line, 213, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, 1.0)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, -1.0)), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 215, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 216, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 217, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 218, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, -0.0, 0.0)), (:call, :complex, (:call, :-, :Inf), :pi))),
        (:line, 219, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, -0.0, -0.0)), (:call, :complex, (:call, :-, :Inf), (:call, :-, :pi)))),
        (:line, 221, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 5.0, 0.0)), (:call, :complex, (:call, :log, 5.0), 0.0))),
        (:line, 222, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, 5.0, -0.0)), (:call, :complex, (:call, :log, 5.0), -0.0))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :Inf, 5.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :Inf, -5.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :Inf, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 4)))),
        (:line, 227, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 4)))),
        (:line, 228, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :Inf, :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 230, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, :Inf, :pi))),
        (:line, 231, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, :Inf, (:call, :-, :pi)))),
        (:line, 232, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, :Inf, (:call, :/, (:call, :*, 3, :pi), 4)))),
        (:line, 233, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :*, -3, :pi), 4)))),
        (:line, 234, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 236, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 237, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :NaN, :Inf)), (:call, :complex, :Inf, :NaN))),
        (:line, 238, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :Inf, :NaN))),
        (:line, 239, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 242, :none),
    (:macrocall, Symbol("@testset"), "exp(conj(z)) == conj(exp(z))", (:block,
        (:line, 243, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 244, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 245, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 0.0, :Inf)), (:call, :complex, :NaN, :NaN))),
        (:line, 246, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :NaN, :NaN))),
        (:line, 247, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 249, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, -0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 250, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, -0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 252, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, 5.0, :Inf)), (:call, :complex, :NaN, :NaN))),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, 0.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 255, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, -0.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, 5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), :Inf), (:call, :*, (:call, :sin, 5.0), :Inf)))),
        (:line, 257, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, -5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), :Inf), (:call, :*, (:call, :sin, 5.0), (:call, :-, :Inf))))),
        (:line, 258, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, :NaN)), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 259, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, :Inf)), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 262, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 264, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), 0.0), (:call, :*, (:call, :sin, 5.0), 0.0)))),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), 0.0), (:call, :*, (:call, :sin, 5.0), -0.0)))),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, -0.0, 0.0))),
        (:line, 267, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, -0.0, -0.0))),
        (:line, 268, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, -0.0, 0.0))),
        (:line, 270, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, 0.0))),
        (:line, 271, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, -0.0))),
        (:line, 272, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 276, :none),
    (:macrocall, Symbol("@testset"), "expm1(conj(z)) == conj(expm1(z))", (:block,
        (:line, 277, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 0.0, :Inf)), (:call, :complex, :NaN, :NaN))),
        (:line, 280, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :NaN, :NaN))),
        (:line, 281, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 283, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 284, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 286, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 5.0, :Inf)), (:call, :complex, :NaN, :NaN))),
        (:line, 288, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, 0.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 289, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, -0.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 290, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, 5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), :Inf), (:call, :*, (:call, :sin, 5.0), :Inf)))),
        (:line, 291, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, -5.0)), (:call, :complex, (:call, :*, (:call, :cos, 5.0), :Inf), (:call, :*, (:call, :sin, 5.0), (:call, :-, :Inf))))),
        (:line, 292, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, :NaN)), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 293, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, :Inf)), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 294, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 296, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, -1.0, 0.0))),
        (:line, 297, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, -1.0, -0.0))),
        (:line, 298, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, -1.0, (:call, :*, (:call, :sin, 5.0), 0.0)))),
        (:line, 299, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, -1.0, (:call, :*, (:call, :sin, 5.0), -0.0)))),
        (:line, 300, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, -1.0, 0.0))),
        (:line, 301, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, -1.0, -0.0))),
        (:line, 302, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, -1.0, 0.0))),
        (:line, 304, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, 0.0))),
        (:line, 305, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, -0.0))),
        (:line, 306, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 307, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 309, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, 1.0e-20, 0.0)), (:call, :complex, (:call, :expm1, 1.0e-20), 0.0))),
        (:line, 310, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :complex, -1.0e-20, 0.0)), (:call, :complex, (:call, :expm1, -1.0e-20), 0.0))),
        (:line, 312, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, 1.0e-20, 1.0e-10)), (:call, :complex, 5.0e-21, 1.0e-10))),
        (:line, 313, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, 1.0e-20, -1.0e-10)), (:call, :complex, 5.0e-21, -1.0e-10))),
        (:line, 314, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, -1.0e-20, 1.0e-10)), (:call, :complex, -1.5e-20, 1.0e-10))),
        (:line, 315, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, -1.0e-20, -1.0e-10)), (:call, :complex, -1.5e-20, -1.0e-10))),
        (:line, 317, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, 10.0, 10.0)), (:call, :-, (:call, :exp, (:call, :complex, 10.0, 10.0)), 1))),
        (:line, 318, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, 10.0, -10.0)), (:call, :-, (:call, :exp, (:call, :complex, 10.0, -10.0)), 1))),
        (:line, 319, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, -10.0, 10.0)), (:call, :-, (:call, :exp, (:call, :complex, -10.0, 10.0)), 1))),
        (:line, 320, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :expm1, (:call, :complex, -10.0, -10.0)), (:call, :-, (:call, :exp, (:call, :complex, -10.0, -10.0)), 1)))
      )),
    (:line, 323, :none),
    (:import, :Base, :Math, Symbol("@horner")),
    (:line, 324, :none),
    (:macrocall, Symbol("@testset"), "log1p", (:block,
        (:line, 325, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, :Inf, 3)), (:call, :complex, :Inf, 0.0))),
        (:line, 326, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, :Inf, -3)), (:call, :complex, :Inf, -0.0))),
        (:line, 327, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, (:call, :-, :Inf), 3)), (:call, :complex, :Inf, (:call, :+, :pi)))),
        (:line, 328, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, (:call, :-, :Inf), -3)), (:call, :complex, :Inf, (:call, :-, :pi)))),
        (:line, 329, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, :Inf, :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 330, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, :NaN, 0)), (:call, :complex, :NaN, :NaN))),
        (:line, 331, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, 0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 332, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, -1, 0.0)), (:call, :complex, (:call, :-, :Inf), 0.0))),
        (:line, 333, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, -1, -0.0)), (:call, :complex, (:call, :-, :Inf), -0.0))),
        (:line, 334, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, -2, 1.0e-10)), (:call, :log, (:call, :+, 1, (:call, :complex, -2, 1.0e-10))))),
        (:line, 335, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, 1, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 336, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :complex, 1, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 338, :none),
        (:for, (:(=), :z, (:tuple, (:call, :+, 1.0e-10, (:call, :*, 1.0e-9, :im)), (:call, :-, 1.0e-10, (:call, :*, 1.0e-9, :im)), (:call, :+, -1.0e-10, (:call, :*, 1.0e-9, :im)), (:call, :-, -1.0e-10, (:call, :*, 1.0e-9, :im)))), (:block,
            (:line, 339, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, :z), (:macrocall, Symbol("@horner"), :z, 0, 1, -0.5, (:call, :/, 1, 3), -0.25, 0.2)))
          )),
        (:line, 341, :none),
        (:for, (:(=), :z, (:tuple, (:call, :+, 15, (:call, :*, 4, :im)), (:call, :+, 0.2, (:call, :*, 3, :im)), (:call, :-, 0.08, (:call, :*, 0.9, :im)))), (:block,
            (:line, 342, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :log1p, :z), (:call, :log, (:call, :+, 1, :z))))
          ))
      )),
    (:line, 347, :none),
    (:macrocall, Symbol("@testset"), "^ (cpow)", (:block,
        (:line, 351, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), (:call, :complex, 0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 352, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), (:call, :complex, 0.0, -0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 353, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), (:call, :complex, -0.0, 0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 354, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), (:call, :complex, -0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 356, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, -0.0), (:call, :complex, 0.0, 0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 357, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, -0.0), (:call, :complex, 0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 358, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, -0.0), (:call, :complex, -0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 359, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, -0.0), (:call, :complex, -0.0, -0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 361, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, 0.0), (:call, :complex, 0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 362, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, 0.0), (:call, :complex, 0.0, -0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 363, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, 0.0), (:call, :complex, -0.0, 0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 364, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, 0.0), (:call, :complex, -0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 366, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, -0.0), (:call, :complex, 0.0, 0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 367, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, -0.0), (:call, :complex, 0.0, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 368, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, -0.0), (:call, :complex, -0.0, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 369, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, -0.0, -0.0), (:call, :complex, -0.0, -0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 371, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, (:call, :complex, 0.0, 1.0), (:call, :complex, 2.0, 0)), (:call, :complex, -1.0, 0.0))),
        (:line, 372, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :^, (:call, :complex, 1.0, 2.0), (:call, :complex, 3.0, 0)), (:call, :complex, -11.0, -2.0))),
        (:line, 374, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), false), (:call, :complex, 1.0, 0.0))),
        (:line, 375, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :complex, 0.0, 0.0), 0), (:call, :complex, 1.0, 0.0)))
      )),
    (:line, 378, :none),
    (:macrocall, Symbol("@testset"), "sinh and sin", (:block,
        (:line, 392, :none),
        (:for, (:(=), (:tuple, :x, :y), (:vect, (:tuple, (:call, :complex, 0.0, 0.0), (:call, :complex, 0.0, 0.0)), (:tuple, (:call, :complex, 0.0, :Inf), (:call, :complex, 0.0, :NaN)), (:tuple, (:call, :complex, 0.0, :NaN), (:call, :complex, 0.0, :NaN)), (:tuple, (:call, :complex, 7.2, :Inf), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, 7.2, :NaN), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, 7.2, 0.0), (:call, :complex, (:call, :sinh, 7.2), 0.0)), (:tuple, (:call, :complex, 100000.0, 0.0), (:call, :complex, (:call, :sinh, 100000.0), 0.0)), (:tuple, (:call, :complex, :Inf, 0.0), (:call, :complex, :Inf, 0.0)), (:tuple, (:call, :complex, :Inf, 7.2), (:call, :*, :Inf, (:call, :cis, 7.2))), (:tuple, (:call, :complex, :Inf, :Inf), (:call, :complex, :Inf, :NaN)), (:tuple, (:call, :complex, :Inf, :NaN), (:call, :complex, :Inf, :NaN)), (:tuple, (:call, :complex, :NaN, 0.0), (:call, :complex, :NaN, 0.0)), (:tuple, (:call, :complex, :NaN, 7.2), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, :NaN, :NaN), (:call, :complex, :NaN, :NaN)))), (:block,
            (:line, 407, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinh, :x), :y)),
            (:line, 408, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinh, (:call, :conj, :x)), (:call, :conj, :y))),
            (:line, 409, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinh, (:call, :-, :x)), (:call, :-, :y))),
            (:line, 410, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinh, (:call, :-, (:call, :conj, :x))), (:call, :-, (:call, :conj, :y)))),
            (:line, 412, :none),
            (:(=), :xx, (:call, :complex, (:call, :imag, :x), (:call, :-, (:call, :real, :x)))),
            (:line, 413, :none),
            (:(=), :yy, (:call, :complex, (:call, :imag, :y), (:call, :-, (:call, :real, :y)))),
            (:line, 415, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, :xx), :yy)),
            (:line, 416, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :conj, :xx)), (:call, :conj, :yy))),
            (:line, 417, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :-, :xx)), (:call, :-, :yy))),
            (:line, 418, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :-, (:call, :conj, :xx))), (:call, :-, (:call, :conj, :yy)))),
            (:line, 420, :none),
            (:(=), :yyy, (:call, :sin, (:call, :*, :pi, :xx))),
            (:line, 421, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinpi, :xx), :yyy)),
            (:line, 422, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinpi, (:call, :conj, :xx)), (:call, :conj, :yyy))),
            (:line, 423, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinpi, (:call, :-, :xx)), (:call, :-, :yyy))),
            (:line, 424, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sinpi, (:call, :-, (:call, :conj, :xx))), (:call, :-, (:call, :conj, :yyy))))
          ))
      )),
    (:line, 428, :none),
    (:macrocall, Symbol("@testset"), "cosh and cos", (:block,
        (:line, 439, :none),
        (:for, (:(=), (:tuple, :x, :y), (:vect, (:tuple, (:call, :complex, 0.0, 0.0), (:call, :complex, 1.0, 0.0)), (:tuple, (:call, :complex, 0.0, :Inf), (:call, :complex, :NaN, 0.0)), (:tuple, (:call, :complex, 0.0, :NaN), (:call, :complex, :NaN, 0.0)), (:tuple, (:call, :complex, 7.2, :Inf), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, 7.2, :NaN), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, 7.2, 0.0), (:call, :complex, (:call, :cosh, 7.2), 0.0)), (:tuple, (:call, :complex, 100000.0, 0.0), (:call, :complex, :Inf, 0.0)), (:tuple, (:call, :complex, :Inf, 0.0), (:call, :complex, :Inf, 0.0)), (:tuple, (:call, :complex, :Inf, 7.2), (:call, :*, :Inf, (:call, :cis, 7.2))), (:tuple, (:call, :complex, :Inf, :Inf), (:call, :complex, :Inf, :NaN)), (:tuple, (:call, :complex, :Inf, :NaN), (:call, :complex, :Inf, :NaN)), (:tuple, (:call, :complex, :NaN, 0.0), (:call, :complex, :NaN, 0.0)), (:tuple, (:call, :complex, :NaN, 7.2), (:call, :complex, :NaN, :NaN)), (:tuple, (:call, :complex, :NaN, :NaN), (:call, :complex, :NaN, :NaN)))), (:block,
            (:line, 454, :none),
            (:(=), :undef_sign, (:||, (:call, :isequal, :x, (:call, :complex, :NaN, 0.0)), (:call, :isequal, :x, (:call, :complex, 0.0, :NaN)))),
            (:line, 456, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cosh, :x), :y)),
            (:line, 457, :none),
            (:if, (:call, :!, :undef_sign), (:block,
                (:line, 458, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cosh, (:call, :conj, :x)), (:call, :conj, :y))),
                (:line, 459, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cosh, (:call, :-, :x)), :y)),
                (:line, 460, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cosh, (:call, :-, (:call, :conj, :x))), (:call, :conj, :y)))
              )),
            (:line, 463, :none),
            (:(=), :xx, (:call, :complex, (:call, :imag, :x), (:call, :-, (:call, :real, :x)))),
            (:line, 464, :none),
            (:(=), :yy, :y),
            (:line, 465, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, :xx), :yy)),
            (:line, 466, :none),
            (:if, (:call, :!, :undef_sign), (:block,
                (:line, 467, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :conj, :xx)), (:call, :conj, :yy))),
                (:line, 468, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :-, :xx)), :yy)),
                (:line, 469, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :-, (:call, :conj, :xx))), (:call, :conj, :yy)))
              )),
            (:line, 472, :none),
            (:(=), :yyy, (:call, :cos, (:call, :*, :pi, :xx))),
            (:line, 473, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cospi, :xx), :yyy)),
            (:line, 474, :none),
            (:if, (:call, :!, :undef_sign), (:block,
                (:line, 475, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cospi, (:call, :conj, :xx)), (:call, :conj, :yyy))),
                (:line, 476, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cospi, (:call, :-, :xx)), :yyy)),
                (:line, 477, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cospi, (:call, :-, (:call, :conj, :xx))), (:call, :conj, :yyy)))
              ))
          ))
      )),
    (:line, 482, :none),
    (:macrocall, Symbol("@testset"), "tanh(op(z)) == op(tanh(z)) for op in (conj, -)", (:block,
        (:line, 483, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, 0, 0)), (:call, :complex, 0.0, 0.0))),
        (:line, 484, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 485, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 486, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :tanh, (:call, :complex, 0.0, :Inf))),
        (:line, 487, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :tanh, (:call, :complex, 0.0, (:call, :-, :Inf)))),
        (:line, 488, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 490, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 491, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 493, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :tanh, (:call, :complex, 5.0, :Inf))),
        (:line, 494, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 496, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, 0.0)), (:call, :complex, 1.0, 0.0))),
        (:line, 497, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, -0.0)), (:call, :complex, 1.0, -0.0))),
        (:line, 498, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, 5.0)), (:call, :complex, 1.0, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), 0.0)))),
        (:line, 499, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, -5.0)), (:call, :complex, 1.0, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), -0.0)))),
        (:line, 500, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, :Inf)), (:call, :complex, 1.0, 0.0))),
        (:line, 501, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, 1.0, -0.0))),
        (:line, 502, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :Inf, :NaN)), (:call, :complex, 1.0, 0.0))),
        (:line, 504, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, -1.0, 0.0))),
        (:line, 505, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, -1.0, -0.0))),
        (:line, 506, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, -1.0, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), 0.0)))),
        (:line, 507, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, -1.0, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), -0.0)))),
        (:line, 508, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, -1.0, 0.0))),
        (:line, 509, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, -1.0, -0.0))),
        (:line, 510, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, -1.0, 0.0))),
        (:line, 512, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, 0.0))),
        (:line, 513, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, -0.0))),
        (:line, 514, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 515, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :NaN, -5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 516, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tanh, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 519, :none),
    (:macrocall, Symbol("@testset"), "tan(z) == -i tanh(iz)", (:block,
        (:line, 520, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 0.0, :Inf)), (:call, :complex, 0.0, 1.0))),
        (:line, 521, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, 0.0, -1.0))),
        (:line, 522, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 0.0, :NaN)), (:call, :complex, 0.0, :NaN))),
        (:line, 523, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -0.0, (:call, :-, :Inf))), (:call, :complex, -0.0, -1.0))),
        (:line, 524, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -0.0, :Inf)), (:call, :complex, -0.0, 1.0))),
        (:line, 525, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -0.0, :NaN)), (:call, :complex, -0.0, :NaN))),
        (:line, 527, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 5.0, :Inf)), (:call, :complex, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), 0.0), 1.0))),
        (:line, 528, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), 0.0), -1.0))),
        (:line, 529, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 530, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -5.0, :Inf)), (:call, :complex, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), -0.0), 1.0))),
        (:line, 531, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :*, (:call, :sin, (:call, :*, 2, 5.0)), -0.0), -1.0))),
        (:line, 532, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, -5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 534, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :tan, (:call, :complex, :Inf, 5.0))),
        (:line, 535, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :Inf, :Inf)), (:call, :complex, 0.0, 1.0))),
        (:line, 536, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, 0.0, -1.0))),
        (:line, 537, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, -0.0, 1.0))),
        (:line, 538, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, -0.0, -1.0))),
        (:line, 540, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 541, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :NaN, :Inf)), (:call, :complex, 0.0, 1.0))),
        (:line, 542, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, 0.0, -1.0))),
        (:line, 543, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 546, :none),
    (:macrocall, Symbol("@testset"), "acosh(conj(z)) == conj(acosh(z))", (:block,
        (:line, 547, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 548, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 549, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 0.0, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 550, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 551, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, -0.0, 0.0)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 552, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, -0.0, -0.0)), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 553, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 5.0, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 554, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 555, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 557, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, 0.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 558, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, -0.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 559, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, 5.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 560, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, -5.0)), (:call, :complex, :Inf, -0.0))),
        (:line, 561, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 4)))),
        (:line, 562, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 4)))),
        (:line, 563, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :Inf, :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 565, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, :Inf, :pi))),
        (:line, 566, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, :Inf, (:call, :-, :pi)))),
        (:line, 567, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, :Inf, :pi))),
        (:line, 568, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, :Inf, (:call, :-, :pi)))),
        (:line, 569, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, :Inf, (:call, :/, (:call, :*, 3, :pi), 4)))),
        (:line, 570, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :*, -3, :pi), 4)))),
        (:line, 571, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 573, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :NaN, :Inf)), (:call, :complex, :Inf, :NaN))),
        (:line, 574, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :Inf, :NaN))),
        (:line, 575, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 578, :none),
    (:macrocall, Symbol("@testset"), "acos(conj(z)) == conj(acos(z))", (:block,
        (:line, 579, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0, 0)), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 580, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0.0, 0.0)), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 581, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0.0, -0.0)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 582, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0.0, :Inf)), (:call, :complex, (:call, :/, :pi, 2), (:call, :-, :Inf)))),
        (:line, 583, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 2), :Inf))),
        (:line, 584, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 0.0, :NaN)), (:call, :complex, (:call, :/, :pi, 2), :NaN))),
        (:line, 586, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, -0.0, 0.0)), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 587, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, -0.0, -0.0)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 588, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, -0.0, :NaN)), (:call, :complex, (:call, :/, :pi, 2), :NaN))),
        (:line, 590, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 5.0, :Inf)), (:call, :complex, (:call, :/, :pi, 2), (:call, :-, :Inf)))),
        (:line, 591, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 2), :Inf))),
        (:line, 592, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 594, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, 0.0)), (:call, :complex, 0.0, (:call, :-, :Inf)))),
        (:line, 595, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, -0.0)), (:call, :complex, 0.0, :Inf))),
        (:line, 596, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, 5.0)), (:call, :complex, 0.0, (:call, :-, :Inf)))),
        (:line, 597, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, -5.0)), (:call, :complex, 0.0, :Inf))),
        (:line, 598, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, :Inf)), (:call, :complex, (:call, :/, :pi, 4), (:call, :-, :Inf)))),
        (:line, 599, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 4), :Inf))),
        (:line, 600, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :Inf, :NaN)), (:call, :complex, :NaN, :Inf))),
        (:line, 602, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, :pi, (:call, :-, :Inf)))),
        (:line, 603, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, :pi, :Inf))),
        (:line, 604, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, :pi, (:call, :-, :Inf)))),
        (:line, 605, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, :pi, :Inf))),
        (:line, 606, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, (:call, :/, (:call, :*, 3, :pi), 4), (:call, :-, :Inf)))),
        (:line, 607, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, (:call, :/, (:call, :*, 3, :pi), 4), :Inf))),
        (:line, 608, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, :NaN, :Inf))),
        (:line, 610, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 611, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 612, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :NaN, :Inf)), (:call, :complex, :NaN, (:call, :-, :Inf)))),
        (:line, 613, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :NaN, :Inf))),
        (:line, 614, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 617, :none),
    (:macrocall, Symbol("@testset"), "asinh(op(z)) == op(asinh(z)) for op in (conj, -)", (:block,
        (:line, 618, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 619, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 620, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 0.0, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 621, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 622, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 624, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 625, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 626, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -0.0, :Inf)), (:call, :complex, (:call, :-, :Inf), (:call, :/, :pi, 2)))),
        (:line, 627, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -0.0, (:call, :-, :Inf))), (:call, :complex, (:call, :-, :Inf), (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 629, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 5.0, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 2)))),
        (:line, 630, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 631, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 632, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -5.0, :Inf)), (:call, :complex, (:call, :-, :Inf), (:call, :/, :pi, 2)))),
        (:line, 633, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, -5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :-, :Inf), (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 635, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :Inf, :Inf)), (:call, :complex, :Inf, (:call, :/, :pi, 4)))),
        (:line, 636, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, :Inf, (:call, :/, (:call, :-, :pi), 4)))),
        (:line, 637, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :Inf, :NaN)), (:call, :complex, :Inf, :NaN))),
        (:line, 638, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, (:call, :-, :Inf), (:call, :/, :pi, 4)))),
        (:line, 639, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, (:call, :-, :Inf), (:call, :/, (:call, :-, :pi), 4)))),
        (:line, 640, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, (:call, :-, :Inf), :NaN))),
        (:line, 642, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, 0.0))),
        (:line, 643, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, -0.0))),
        (:line, 644, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 645, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, :Inf)), (:call, :complex, :Inf, :NaN))),
        (:line, 646, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :Inf, :NaN))),
        (:line, 647, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asinh, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 650, :none),
    (:macrocall, Symbol("@testset"), "asin(z) == -i*asinh(iz)", (:block,
        (:line, 651, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 652, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 653, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 654, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, 0.0, :NaN)), (:call, :complex, 0.0, :NaN))),
        (:line, 655, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 656, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, -0.0, :NaN)), (:call, :complex, -0.0, :NaN))),
        (:line, 657, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 659, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, 0.0)), (:call, :complex, (:call, :/, :pi, 2), :Inf))),
        (:line, 660, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, -0.0)), (:call, :complex, (:call, :/, :pi, 2), (:call, :-, :Inf)))),
        (:line, 661, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, 5.0)), (:call, :complex, (:call, :/, :pi, 2), :Inf))),
        (:line, 662, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, -5.0)), (:call, :complex, (:call, :/, :pi, 2), (:call, :-, :Inf)))),
        (:line, 663, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, :Inf)), (:call, :complex, (:call, :/, :pi, 4), :Inf))),
        (:line, 664, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 4), (:call, :-, :Inf)))),
        (:line, 665, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :Inf, :NaN)), (:call, :complex, :NaN, :Inf))),
        (:line, 667, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), :Inf))),
        (:line, 668, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), (:call, :-, :Inf)))),
        (:line, 669, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), :Inf))),
        (:line, 670, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), (:call, :-, :Inf)))),
        (:line, 671, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, (:call, :/, (:call, :-, :pi), 4), :Inf))),
        (:line, 672, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, (:call, :/, (:call, :-, :pi), 4), (:call, :-, :Inf)))),
        (:line, 673, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, :NaN, :Inf))),
        (:line, 675, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 676, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 677, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :NaN, :Inf)), (:call, :complex, :NaN, :Inf))),
        (:line, 678, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :NaN, (:call, :-, :Inf)))),
        (:line, 679, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :asin, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 682, :none),
    (:macrocall, Symbol("@testset"), "atanh(op(z)) == op(atanh(z)) for op in (conj, -)", (:block,
        (:line, 683, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0, 0)), (:call, :complex, 0.0, 0.0))),
        (:line, 684, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 685, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 686, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0.0, :NaN)), (:call, :complex, 0.0, :NaN))),
        (:line, 687, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0.0, :Inf)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 688, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 690, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -0.0, :NaN)), (:call, :complex, -0.0, :NaN))),
        (:line, 691, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 692, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 693, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -0.0, :Inf)), (:call, :complex, -0.0, (:call, :/, :pi, 2)))),
        (:line, 694, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -0.0, (:call, :-, :Inf))), (:call, :complex, -0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 696, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 1.0, 0.0)), (:call, :complex, :Inf, 0.0))),
        (:line, 697, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -1.0, 0.0)), (:call, :complex, (:call, :-, :Inf), 0.0))),
        (:line, 698, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 5.0, :Inf)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 699, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 700, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 701, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -5.0, :Inf)), (:call, :complex, -0.0, (:call, :/, :pi, 2)))),
        (:line, 702, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -5.0, (:call, :-, :Inf))), (:call, :complex, -0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 703, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, -5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 705, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, 0.0)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 706, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, -0.0)), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 707, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, 5.0)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 708, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, -5.0)), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 709, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, :Inf)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 710, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 711, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :Inf, :NaN)), (:call, :complex, 0.0, :NaN))),
        (:line, 713, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, -0.0, (:call, :/, :pi, 2)))),
        (:line, 714, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, -0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 715, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, -0.0, (:call, :/, :pi, 2)))),
        (:line, 716, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, -0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 717, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, -0.0, (:call, :/, :pi, 2)))),
        (:line, 718, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, -0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 719, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, -0.0, :NaN))),
        (:line, 721, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 722, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 723, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 724, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, -5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 725, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, :Inf)), (:call, :complex, 0.0, (:call, :/, :pi, 2)))),
        (:line, 726, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, 0.0, (:call, :/, (:call, :-, :pi), 2)))),
        (:line, 727, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atanh, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 730, :none),
    (:macrocall, Symbol("@testset"), "atan(z) == -i*atanh(iz)", (:block,
        (:line, 731, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, 0.0)), (:call, :complex, 0.0, 0.0))),
        (:line, 732, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, -0.0)), (:call, :complex, 0.0, -0.0))),
        (:line, 733, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, 1.0)), (:call, :complex, 0.0, :Inf))),
        (:line, 734, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, :Inf)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 735, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 736, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 738, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -0.0, 0.0)), (:call, :complex, -0.0, 0.0))),
        (:line, 739, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -0.0, -0.0)), (:call, :complex, -0.0, -0.0))),
        (:line, 740, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -0.0, :Inf)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 741, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -0.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), -0.0))),
        (:line, 742, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -0.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 744, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 5.0, :Inf)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 745, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 746, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, 5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 748, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -5.0, :Inf)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 749, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -5.0, (:call, :-, :Inf))), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), -0.0))),
        (:line, 750, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, -5.0, :NaN)), (:call, :complex, :NaN, :NaN))),
        (:line, 752, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, 0.0)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 753, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, -0.0)), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 754, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, 5.0)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 755, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, -5.0)), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 756, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, :Inf)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 757, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, (:call, :-, :Inf))), (:call, :complex, (:call, :/, :pi, 2), -0.0))),
        (:line, 758, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :Inf, :NaN)), (:call, :complex, (:call, :/, :pi, 2), 0.0))),
        (:line, 760, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), 0.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 761, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), -0.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), -0.0))),
        (:line, 762, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), 5.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 763, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), -5.0)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), -0.0))),
        (:line, 764, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), :Inf)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 765, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), (:call, :-, :Inf))), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), -0.0))),
        (:line, 766, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, (:call, :-, :Inf), :NaN)), (:call, :complex, (:call, :/, (:call, :-, :pi), 2), 0.0))),
        (:line, 768, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, 0.0)), (:call, :complex, :NaN, 0.0))),
        (:line, 769, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, -0.0)), (:call, :complex, :NaN, -0.0))),
        (:line, 770, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, 5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 771, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, -5.0)), (:call, :complex, :NaN, :NaN))),
        (:line, 772, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, :Inf)), (:call, :complex, :NaN, 0.0))),
        (:line, 773, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, (:call, :-, :Inf))), (:call, :complex, :NaN, -0.0))),
        (:line, 774, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :atan, (:call, :complex, :NaN, :NaN)), (:call, :complex, :NaN, :NaN)))
      )),
    (:line, 777, :none),
    (:macrocall, Symbol("@testset"), "lexcmp", (:block,
        (:line, 778, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lexcmp, (:call, :-, 1.0, (:call, :*, 1.0, :im)), (:call, :+, 1.0, (:call, :*, 0.0, :im))), -1)),
        (:line, 779, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lexcmp, (:call, :+, 0.0, (:call, :*, 0.0, :im)), (:call, :+, 0.0, (:call, :*, 0.0, :im))), 0)),
        (:line, 780, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lexcmp, (:call, :-, 1.0, (:call, :*, 1.0, :im)), (:call, :+, 0.0, (:call, :*, 0.0, :im))), 1))
      )),
    (:line, 785, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, (:call, :complex, (:call, ://, 1, 2), (:call, ://, 1, 3)), 2), (:call, :complex, (:call, ://, 5, 36), (:call, ://, 1, 3)))),
    (:line, 786, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, (:call, :complex, 2, 2), 2), (:call, :complex, 0, 8))),
    (:line, 787, :none),
    (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, (:call, :complex, 2, 2), -2)),
    (:line, 788, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, (:call, :complex, 2.0, 2.0), -2), (:call, :complex, 0.0, -0.125))),
    (:line, 790, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :complex, (:tuple, 1.0, (:vect, 1.0, 1.0))), (:vect, (:call, :complex, 1.0, 1.0), (:call, :complex, 1.0, 1.0)))),
    (:line, 791, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:., :complex, (:tuple, (:vect, 1.0, 1.0), 1.0)), (:vect, (:call, :complex, 1.0, 1.0), (:call, :complex, 1.0, 1.0)))),
    (:line, 794, :none),
    (:(=), :z7, (:call, (:curly, :Complex, :Float64), 3.8981256045591133e289, 8.174961907852354e295)),
    (:line, 795, :none),
    (:(=), :z9, (:call, (:curly, :Complex, :Float64), 0.001953125, -0.001953125)),
    (:line, 796, :none),
    (:(=), :z10, (:call, (:curly, :Complex, :Float64), 1.0295115178936058e-84, 6.971459875150762e-220)),
    (:line, 797, :none),
    (:(=), :harddivs, (:tuple, (:tuple, (:call, :+, 1.0, (:call, :*, :im, 1.0)), (:call, :+, 1.0, (:call, :*, :im, (:call, :^, 2, 1023.0))), (:call, :-, (:call, :^, 2, -1023.0), (:call, :*, :im, (:call, :^, 2, -1023.0)))), (:tuple, (:call, :+, 1.0, (:call, :*, :im, 1.0)), (:call, :+, (:call, :^, 2, -1023.0), (:call, :*, :im, (:call, :^, 2, -1023.0))), (:call, :+, (:call, :^, 2, 1023.0), (:call, :*, :im, 0.0))), (:tuple, (:call, :+, (:call, :^, 2, 1023.0), (:call, :*, :im, (:call, :^, 2, -1023.0))), (:call, :+, (:call, :^, 2, 677.0), (:call, :*, :im, (:call, :^, 2, -677.0))), (:call, :-, (:call, :^, 2, 346.0), (:call, :*, :im, (:call, :^, 2, -1008.0)))), (:tuple, (:call, :+, (:call, :^, 2, 1023.0), (:call, :*, :im, (:call, :^, 2, 1023.0))), (:call, :+, 1.0, (:call, :*, :im, 1.0)), (:call, :+, (:call, :^, 2, 1023.0), (:call, :*, :im, 0.0))), (:tuple, (:call, :+, (:call, :^, 2, 1020.0), (:call, :*, :im, (:call, :^, 2, -844.0))), (:call, :+, (:call, :^, 2, 656.0), (:call, :*, :im, (:call, :^, 2, -780.0))), (:call, :-, (:call, :^, 2, 364.0), (:call, :*, :im, (:call, :^, 2, -1072.0)))), (:tuple, (:call, :+, (:call, :^, 2, -71.0), (:call, :*, :im, (:call, :^, 2, 1021.0))), (:call, :+, (:call, :^, 2, 1001.0), (:call, :*, :im, (:call, :^, 2, -323.0))), (:call, :+, (:call, :^, 2, -1072.0), (:call, :*, :im, (:call, :^, 2, 20.0)))), (:tuple, (:call, :+, (:call, :^, 2, -347.0), (:call, :*, :im, (:call, :^, 2, -54.0))), (:call, :+, (:call, :^, 2, -1037.0), (:call, :*, :im, (:call, :^, 2, -1058.0))), :z7), (:tuple, (:call, :+, (:call, :^, 2, -1074.0), (:call, :*, :im, (:call, :^, 2, -1074.0))), (:call, :+, (:call, :^, 2, -1073.0), (:call, :*, :im, (:call, :^, 2, -1074.0))), (:call, :+, 0.6, (:call, :*, :im, 0.2))), (:tuple, (:call, :+, (:call, :^, 2, 1015.0), (:call, :*, :im, (:call, :^, 2, -989.0))), (:call, :+, (:call, :^, 2, 1023.0), (:call, :*, :im, (:call, :^, 2, 1023.0))), :z9), (:tuple, (:call, :+, (:call, :^, 2, -622.0), (:call, :*, :im, (:call, :^, 2, -1071.0))), (:call, :+, (:call, :^, 2, -343.0), (:call, :*, :im, (:call, :^, 2, -798.0))), :z10))),
    (:line, 810, :none),
    (:function, (:call, :sb_accuracy, :x, :expected), (:block,
        (:line, 811, :none),
        (:call, :min, (:call, :logacc, (:call, :real, :x), (:call, :real, :expected)), (:call, :logacc, (:call, :imag, :x), (:call, :imag, :expected)))
      )),
    (:line, 814, :none),
    (:(=), (:call, :relacc, :x, :expected), (:block,
        (:line, 814, :none),
        (:call, :/, (:call, :abs, (:call, :-, :x, :expected)), (:call, :abs, :expected))
      )),
    (:line, 815, :none),
    (:function, (:call, :logacc, (:(::), :x, :Float64), (:(::), :expected, :Float64)), (:block,
        (:line, 816, :none),
        (:&&, (:call, :(==), :x, :expected), (:return, 53)),
        (:line, 817, :none),
        (:&&, (:call, :(==), :expected, 0), (:return, 0)),
        (:line, 818, :none),
        (:&&, (:||, (:call, :(==), :x, :Inf), (:call, :(==), :x, (:call, :-, :Inf))), (:return, 0)),
        (:line, 819, :none),
        (:&&, (:call, :isnan, :x), (:return, 0)),
        (:line, 820, :none),
        (:(=), :ra, (:call, :relacc, (:call, :BigFloat, :x), (:call, :BigFloat, :expected))),
        (:line, 821, :none),
        (:call, :max, (:call, :floor, :Int, (:call, :-, (:call, :log2, :ra))), 0)
      )),
    (:line, 825, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), 52, (:call, :minimum, (:comprehension, (:generator, (:call, :sb_accuracy, (:call, :/, (:ref, :h, 1), (:ref, :h, 2)), (:ref, :h, 3)), (:(=), :h, :harddivs)))))),
    (:line, 828, :none),
    (:function, (:call, :cdiv_test, :a, :b), (:block,
        (:line, 829, :none),
        (:(=), :c, (:call, :/, (:call, :convert, (:curly, :Complex, :Float64), :a), (:call, :convert, (:curly, :Complex, :Float64), :b))),
        (:line, 830, :none),
        (:call, :(<=), 50, (:call, :sb_accuracy, :c, (:call, :convert, (:curly, :Complex, :Float64), (:call, :/, :a, :b))))
      )),
    (:line, 832, :none),
    (:macrocall, Symbol("@test"), (:call, :cdiv_test, (:call, :complex, (:call, ://, 1, 2), (:call, ://, 3, 4)), (:call, :complex, (:call, ://, 17, 13), (:call, ://, 4, 5)))),
    (:line, 833, :none),
    (:macrocall, Symbol("@test"), (:call, :cdiv_test, (:call, :complex, 1, 2), (:call, :complex, 8997, 2432))),
    (:line, 835, :none),
    (:macrocall, Symbol("@testset"), "inv", (:block,
        (:line, 836, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :inv, (:call, :+, 1.0e300, (:call, :*, 0, :im))), (:call, :-, 1.0e-300, (:call, :*, 0.0, :im)))),
        (:line, 837, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :inv, (:call, :+, 0, (:call, :*, 1.0e300, :im))), (:call, :-, 0.0, (:call, :*, 1.0e-300, :im))))
      )),
    (:line, 840, :none),
    (:macrocall, Symbol("@testset"), "issue #7904", (:block,
        (:line, 841, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :log10, (:call, :+, 10, (:call, :*, 0, :im))), (:call, :+, 1.0, (:call, :*, 0.0, :im)))),
        (:line, 842, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :log2, (:call, :+, 2, (:call, :*, 0, :im))), (:call, :+, 1.0, (:call, :*, 0.0, :im))))
      )),
    (:line, 845, :none),
    (:macrocall, Symbol("@testset"), "sign", (:block,
        (:line, 846, :none),
        (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
            (:line, 847, :none),
            (:(=), :z, (:call, (:curly, :Complex, :T), 1)),
            (:line, 848, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :sign, :z)), (:call, :typeof, :z))),
            (:line, 849, :none),
            (:(=), :z, (:call, (:curly, :Complex, :T), 0)),
            (:line, 850, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :sign, :z)), (:call, :typeof, :z)))
          )),
        (:line, 852, :none),
        (:for, (:(=), :T, (:tuple, :Int32, :Int64)), (:block,
            (:line, 853, :none),
            (:(=), :z, (:call, (:curly, :Complex, :T), 1)),
            (:line, 854, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :sign, :z)), (:call, :typeof, (:call, :float, :z)))),
            (:line, 855, :none),
            (:(=), :z, (:call, (:curly, :Complex, :T), 0)),
            (:line, 856, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :sign, :z)), (:call, :typeof, (:call, :float, :z))))
          )),
        (:line, 859, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sign, (:call, :+, 0, (:call, :*, 0, :im))), 0)),
        (:line, 860, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sign, (:call, :+, 2, (:call, :*, 0, :im))), 1)),
        (:line, 861, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sign, (:call, :+, -2, (:call, :*, 0, :im))), -1)),
        (:line, 862, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sign, (:call, :+, 1, :im)), (:call, :/, (:call, :+, 1, :im), (:call, :sqrt, 2)))),
        (:line, 863, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :sign, (:call, :-, 1, :im)), (:call, :/, (:call, :-, 1, :im), (:call, :sqrt, 2)))),
        (:line, 865, :none),
        (:for, (:(=), :T, (:tuple, :Float16, :Float32, :Float64)), (:block,
            (:line, 866, :none),
            (:(=), :z, (:call, :Complex, (:call, :zero, :T), (:call, :zero, :T))),
            (:line, 867, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sign, :z), :z)),
            (:line, 868, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sign, (:call, :-, :z)), (:call, :-, :z))),
            (:line, 869, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sign, (:call, :conj, :z)), (:call, :conj, :z))),
            (:line, 870, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sign, (:call, :-, (:call, :conj, :z))), (:call, :-, (:call, :conj, :z))))
          ))
      )),
    (:line, 874, :none),
    (:macrocall, Symbol("@testset"), "cis", (:block,
        (:line, 875, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, (:call, :+, 0.0, (:call, :*, 1.0, :im))), (:call, :+, 0.36787944117144233, (:call, :*, 0.0, :im)))),
        (:line, 876, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, (:call, :+, 1.0, (:call, :*, 0.0, :im))), (:call, :+, 0.5403023058681398, (:call, :*, 0.8414709848078965, :im)))),
        (:line, 877, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, :pi), (:call, :+, -1.0, (:call, :*, 0.0, :im)))),
        (:line, 878, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cis, (:call, :/, :pi, 2)), (:call, :+, 0.0, (:call, :*, 1.0, :im))))
      )),
    (:line, 881, :none),
    (:macrocall, Symbol("@testset"), "exp2", (:block,
        (:line, 882, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :+, 0.0, (:call, :*, 0.0, :im))), (:call, :+, 1.0, (:call, :*, 0.0, :im)))),
        (:line, 883, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :+, 1.0, (:call, :*, 0.0, :im))), (:call, :+, 2.0, (:call, :*, 0.0, :im)))),
        (:line, 885, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, (:call, :+, 1.0, (:call, :*, 3.0, :im))), (:call, :+, -0.9739888359315628, (:call, :*, 1.7468101635497428, :im)))),
        (:line, 886, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, :im), (:call, :+, 0.7692389013639721, (:call, :*, 0.6389612763136348, :im))))
      )),
    (:line, 889, :none),
    (:macrocall, Symbol("@testset"), "exp10", (:block,
        (:line, 890, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp10, (:call, :+, 0.0, (:call, :*, 0.0, :im))), (:call, :+, 1.0, (:call, :*, 0.0, :im)))),
        (:line, 891, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp10, (:call, :+, 1.0, (:call, :*, 0.0, :im))), (:call, :+, 10.0, (:call, :*, 0.0, :im)))),
        (:line, 893, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, (:call, :+, 1.0, (:call, :*, 2.0, :im))), (:call, :-, -1.070134835587702, (:call, :*, 9.942575694137897, :im)))),
        (:line, 894, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, :im), (:call, :+, -0.6682015101903132, (:call, :*, 0.7439803369574931, :im))))
      )),
    (:line, 897, :none),
    (:macrocall, Symbol("@testset"), "round and float, PR #8291", (:block,
        (:line, 898, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :round, (:call, :Complex, 1.125, 0.875), 2), (:call, :Complex, 1.12, 0.88))),
        (:line, 899, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :round, (:call, :Complex, 1.5, 0.5), :RoundDown, :RoundUp), (:call, :Complex, 1.0, 1.0))),
        (:line, 900, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :round, (:tuple, (:call, :+, (:vcat, (:(:), 1, 5)), :im))), (:call, :+, (:vcat, (:(:), 1, 5)), :im))),
        (:line, 901, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :round, (:tuple, (:call, :+, (:vcat, (:(:), 1, 5)), (:call, :*, 0.5, :im)))), (:vcat, (:(:), 1.0, 5.0)))),
        (:line, 903, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :float, (:call, :Complex, 1, 2)), (:call, :Complex, 1.0, 2.0))),
        (:line, 904, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :round, (:call, :float, (:call, :Complex, :π, :e)), 3), (:call, :Complex, 3.142, 2.718)))
      )),
    (:line, 907, :none),
    (:macrocall, Symbol("@testset"), "Complex32 arithmetic, PR #10003", (:block,
        (:line, 908, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, (:call, :Float16, 1), (:call, :*, (:call, :Float16, 1), :im)), (:call, :Complex32, 1, 1))),
        (:line, 909, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :-, (:call, :Float16, 1), (:call, :*, (:call, :Float16, 1), :im)), :(===), (:call, :+, (:call, :Float16, 1), (:call, :*, (:call, :Float16, -1), :im)), :(===), (:call, :Complex32, 1, -1))),
        (:line, 910, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :*, (:call, :Float16, 1), :im), (:call, :Complex32, :im))),
        (:line, 911, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :/, (:call, :Float16, 1), :im), (:call, :Complex32, 0, -1))),
        (:line, 912, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :^, (:call, :Float16, 1), :im), :(===), (:call, :Complex32, 1), :(===), (:call, :+, (:call, :Float16, 1), (:call, :*, (:call, :Float16, 0), :im))))
      )),
    (:line, 916, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :-, (:call, :Int8, 1), :im)), (:curly, :Complex, :Int8))),
    (:line, 919, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :-, :π, (:call, :*, 1, :im))), (:curly, :Complex, :Float64))),
    (:line, 921, :none),
    (:macrocall, Symbol("@testset"), "issue #15969", (:block,
        (:line, 923, :none),
        (:for, (:block,
            (:(=), :x, (:tuple, 3, (:call, :+, 3, (:call, :*, 13, :im)))),
            (:(=), :y, (:tuple, 2, (:call, :+, 2, (:call, :*, 7, :im)))),
            (:(=), :z, (:tuple, 5, (:call, :+, 5, (:call, :*, 11, :im))))
          ), (:block,
            (:line, 924, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :muladd, :x, :y, :z), (:call, :+, (:call, :*, :x, :y), :z)))
          ))
      )),
    (:line, 928, :none),
    (:macrocall, Symbol("@testset"), "issue #11839", (:block,
        (:line, 930, :none),
        (:let, (:block,
            (:line, 931, :none),
            (:macrocall, Symbol("@inferred"), (:call, :sin, :x)),
            (:line, 932, :none),
            (:macrocall, Symbol("@inferred"), (:call, :cos, :x)),
            (:line, 933, :none),
            (:macrocall, Symbol("@inferred"), (:call, :norm, :x)),
            (:line, 934, :none),
            (:macrocall, Symbol("@inferred"), (:call, :vecnorm, :x))
          ), (:(=), :x, (:call, :+, 1, :im)))
      )),
    (:line, 938, :none),
    (:macrocall, Symbol("@testset"), "issue #18785", (:block,
        (:line, 940, :none),
        (:let, (:block,
            (:line, 941, :none),
            (:macrocall, Symbol("@inferred"), (:call, :exp, :x)),
            (:line, 942, :none),
            (:macrocall, Symbol("@inferred"), (:call, :expm1, :x))
          ), (:(=), :x, (:call, :*, 2, :im)))
      )),
    (:line, 947, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :/, (:call, :big, 1), (:call, :+, 10, (:call, :*, 10, :im))), :≈, (:call, :/, (:call, :-, 5, (:call, :*, 5, :im)), (:call, :big, 100)), :≈, (:call, :-, (:macrocall, Symbol("@big_str"), "0.05"), (:call, :*, (:macrocall, Symbol("@big_str"), "0.05"), :im)))),
    (:line, 949, :none),
    (:macrocall, Symbol("@testset"), "Complex Irrationals, issue #21204", (:block,
        (:line, 950, :none),
        (:for, (:(=), :x, (:tuple, :pi, :e, :catalan)), (:block,
            (:line, 951, :none),
            (:(=), :z, (:call, :Complex, :x, :x)),
            (:line, 952, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :z), (:curly, :Complex, (:call, :typeof, :x)))),
            (:line, 953, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp, :z), (:call, :*, (:call, :exp, :x), (:call, :cis, :x)))),
            (:line, 954, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp2, :z), (:call, :exp, (:call, :*, :z, (:call, :log, 2))))),
            (:line, 955, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :exp10, :z), (:call, :exp, (:call, :*, :z, (:call, :log, 10)))))
          ))
      )),
    (:line, 959, :none),
    (:macrocall, Symbol("@testset"), "expm1 type stability", (:block,
        (:line, 960, :none),
        (:(=), :x, (:macrocall, Symbol("@inferred"), (:call, :expm1, (:call, :*, 0.1, :im)))),
        (:line, 961, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :x, :Complex128)),
        (:line, 962, :none),
        (:(=), :x, (:macrocall, Symbol("@inferred"), (:call, :expm1, (:call, :*, 0.1f0, :im)))),
        (:line, 963, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :x, :Complex64))
      )),
    (:line, 966, :none),
    (:macrocall, Symbol("@testset"), "array printing with exponent format", (:block,
        (:line, 967, :none),
        (:(=), :a, (:vect, (:call, :+, 1.0, (:call, :*, 1.0e-10, :im)), (:call, :-, 2.0e-15, (:call, :*, 2.0e-5, :im)), (:call, :+, 1.0e-15, (:call, :*, 2, :im)), (:call, :+, 1.0, (:call, :*, 2.0e-15, :im)))),
        (:line, 968, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, (:->, (:tuple, :io, :x), (:block,
                  (:line, 968, :none),
                  (:call, :show, :io, (:call, :MIME, "text/plain"), :x)
                )), :a), (:call, :join, (:vect, "4-element Array{Complex{Float64},1}:", "     1.0+1.0e-10im", " 2.0e-15-2.0e-5im ", " 1.0e-15+2.0im    ", "     1.0+2.0e-15im"), "\n")))
      ))
  ))