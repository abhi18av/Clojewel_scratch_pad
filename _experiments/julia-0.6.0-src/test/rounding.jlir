(:quote, (:block,
    (:line, 4, :none),
    (:using, :Base, :Test),
    (:line, 9, :none),
    (:(=), :a, (:call, :prevfloat, 0.5)),
    (:line, 10, :none),
    (:(=), :b, 0.5),
    (:line, 11, :none),
    (:(=), :c, 5.551115123125783e-17),
    (:line, 12, :none),
    (:(=), :d, (:call, :prevfloat, 1.0)),
    (:line, 15, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a, :b), 1.0)),
    (:line, 16, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a), :b), -1.0)),
    (:line, 17, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a, :b), (:call, :-, :c))),
    (:line, 18, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b, :a), :c)),
    (:line, 21, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 22, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a, :b), :d)),
          (:line, 23, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a), :b), (:call, :-, :d))),
          (:line, 24, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a, :b), (:call, :-, :c))),
          (:line, 25, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b, :a), :c))
        )), :Float64, :RoundToZero),
    (:line, 29, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a, :b), 1.0)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a), :b), -1.0)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :a, :b), (:call, :-, :c))),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :b, :a), :c)),
    (:line, 35, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 36, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a, :b), 1.0)),
          (:line, 37, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a), :b), (:call, :-, :d))),
          (:line, 38, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a, :b), (:call, :-, :c))),
          (:line, 39, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b, :a), :c))
        )), :Float64, :RoundUp),
    (:line, 43, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 44, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a, :b), :d)),
          (:line, 45, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a), :b), -1.0)),
          (:line, 46, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a, :b), (:call, :-, :c))),
          (:line, 47, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b, :a), :c))
        )), :Float64, :RoundDown),
    (:line, 52, :none),
    (:(=), :a32, (:call, :prevfloat, 0.5f0)),
    (:line, 53, :none),
    (:(=), :b32, 0.5f0),
    (:line, 54, :none),
    (:(=), :c32, (:call, :/, (:call, :-, 1.0f0, (:call, :prevfloat, 1.0f0)), 2)),
    (:line, 55, :none),
    (:(=), :d32, (:call, :prevfloat, 1.0f0)),
    (:line, 58, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a32, :b32), 1.0f0)),
    (:line, 59, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a32), :b32), -1.0f0)),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a32, :b32), (:call, :-, :c32))),
    (:line, 61, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b32, :a32), :c32)),
    (:line, 64, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 65, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a32, :b32), :d32)),
          (:line, 66, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a32), :b32), (:call, :-, :d32))),
          (:line, 67, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a32, :b32), (:call, :-, :c32))),
          (:line, 68, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b32, :a32), :c32))
        )), :Float32, :RoundToZero),
    (:line, 72, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a32, :b32), 1.0f0)),
    (:line, 73, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a32), :b32), -1.0f0)),
    (:line, 74, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :a32, :b32), (:call, :-, :c32))),
    (:line, 75, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :b32, :a32), :c32)),
    (:line, 78, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 79, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a32, :b32), 1.0f0)),
          (:line, 80, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a32), :b32), (:call, :-, :d32))),
          (:line, 81, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a32, :b32), (:call, :-, :c32))),
          (:line, 82, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b32, :a32), :c32))
        )), :Float32, :RoundUp),
    (:line, 86, :none),
    (:call, :setrounding, (:->, (:tuple,), (:block,
          (:line, 87, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :a32, :b32), :d32)),
          (:line, 88, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, (:call, :-, :a32), :b32), -1.0f0)),
          (:line, 89, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :a32, :b32), (:call, :-, :c32))),
          (:line, 90, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :-, :b32, :a32), :c32))
        )), :Float32, :RoundDown),
    (:line, 94, :none),
    (:for, (:(=), :v, (:vect, (:call, :sqrt, 2), (:call, :/, -1, 3), (:call, :nextfloat, 1.0), (:call, :prevfloat, 1.0), (:call, :nextfloat, -1.0), (:call, :prevfloat, -1.0), (:call, :nextfloat, 0.0), (:call, :prevfloat, 0.0))), (:block,
        (:line, 96, :none),
        (:(=), :pn, (:call, :Float32, :v, :RoundNearest)),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :pn, (:call, :convert, :Float32, :v))),
        (:line, 98, :none),
        (:(=), :pz, (:call, :Float32, :v, :RoundToZero)),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :pz, (:call, :setrounding, (:->, (:tuple,), (:block,
                  (:line, 99, :none),
                  (:call, :convert, :Float32, :v)
                )), :Float64, :RoundToZero))),
        (:line, 100, :none),
        (:(=), :pd, (:call, :Float32, :v, :RoundDown)),
        (:line, 101, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :pd, (:call, :setrounding, (:->, (:tuple,), (:block,
                  (:line, 101, :none),
                  (:call, :convert, :Float32, :v)
                )), :Float64, :RoundDown))),
        (:line, 102, :none),
        (:(=), :pu, (:call, :Float32, :v, :RoundUp)),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :pu, (:call, :setrounding, (:->, (:tuple,), (:block,
                  (:line, 103, :none),
                  (:call, :convert, :Float32, :v)
                )), :Float64, :RoundUp))),
        (:line, 105, :none),
        (:macrocall, Symbol("@test"), (:||, (:call, :(==), :pn, :pd), (:call, :(==), :pn, :pu))),
        (:line, 106, :none),
        (:macrocall, Symbol("@test"), (:if, (:call, :>, :v, 0), (:call, :(==), :pz, :pd), (:call, :(==), :pz, :pu))),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :pu, :pd), (:call, :eps, :pz)))
      )),
    (:line, 110, :none),
    (:for, (:(=), :T, (:vect, :Float32, :Float64)), (:block,
        (:line, 111, :none),
        (:for, (:(=), :v, (:vect, (:call, :sqrt, (:call, :big, 2.0)), (:call, :/, (:call, :-, (:call, :big, 1.0)), (:call, :big, 3.0)), (:call, :nextfloat, (:call, :big, 1.0)), (:call, :prevfloat, (:call, :big, 1.0)), (:call, :nextfloat, (:call, :big, 0.0)), (:call, :prevfloat, (:call, :big, 0.0)), :pi, :e, :eulergamma, :catalan, :golden, (:call, :typemax, :Int64), (:call, :typemax, :UInt64), (:call, :typemax, :Int128), (:call, :typemax, :UInt128), 0xa2f30f6001bb2ec6)), (:block,
            (:line, 115, :none),
            (:(=), :pn, (:call, :T, :v, :RoundNearest)),
            (:line, 116, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :pn, (:call, :convert, :T, (:call, :BigFloat, :v)))),
            (:line, 117, :none),
            (:(=), :pz, (:call, :T, :v, :RoundToZero)),
            (:line, 118, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :pz, (:call, :setrounding, (:->, (:tuple,), (:block,
                      (:line, 118, :none),
                      (:call, :convert, :T, (:call, :BigFloat, :v))
                    )), :BigFloat, :RoundToZero))),
            (:line, 119, :none),
            (:(=), :pd, (:call, :T, :v, :RoundDown)),
            (:line, 120, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :pd, (:call, :setrounding, (:->, (:tuple,), (:block,
                      (:line, 120, :none),
                      (:call, :convert, :T, (:call, :BigFloat, :v))
                    )), :BigFloat, :RoundDown))),
            (:line, 121, :none),
            (:(=), :pu, (:call, :T, :v, :RoundUp)),
            (:line, 122, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :pu, (:call, :setrounding, (:->, (:tuple,), (:block,
                      (:line, 122, :none),
                      (:call, :convert, :T, (:call, :BigFloat, :v))
                    )), :BigFloat, :RoundUp))),
            (:line, 124, :none),
            (:macrocall, Symbol("@test"), (:||, (:call, :(==), :pn, :pd), (:call, :(==), :pn, :pu))),
            (:line, 125, :none),
            (:macrocall, Symbol("@test"), (:if, (:call, :>, :v, 0), (:call, :(==), :pz, :pd), (:call, :(==), :pz, :pu))),
            (:line, 126, :none),
            (:macrocall, Symbol("@test"), (:||, (:call, :isinf, :pu), (:call, :(==), (:call, :-, :pu, :pd), (:call, :eps, :pz))))
          ))
      )),
    (:line, 131, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Rounding
              )), (:quote, #QuoteNode
              :from_fenv
            )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                  :Rounding
                )), (:quote, #QuoteNode
                :to_fenv
              )), :RoundNearest)), :RoundNearest)),
    (:line, 132, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Rounding
              )), (:quote, #QuoteNode
              :from_fenv
            )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                  :Rounding
                )), (:quote, #QuoteNode
                :to_fenv
              )), :RoundToZero)), :RoundToZero)),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Rounding
              )), (:quote, #QuoteNode
              :from_fenv
            )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                  :Rounding
                )), (:quote, #QuoteNode
                :to_fenv
              )), :RoundUp)), :RoundUp)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., (:., :Base, (:quote, #QuoteNode
                :Rounding
              )), (:quote, #QuoteNode
              :from_fenv
            )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                  :Rounding
                )), (:quote, #QuoteNode
                :to_fenv
              )), :RoundDown)), :RoundDown)),
    (:line, 135, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., (:., :Base, (:quote, #QuoteNode
              :Rounding
            )), (:quote, #QuoteNode
            :from_fenv
          )), -99)),
    (:line, 137, :none),
    (:(=), :badness, (:call, ://, 1, 0)),
    (:line, 138, :none),
    (:macrocall, Symbol("@test_throws"), :DivideError, (:call, :round, :Int64, :badness, :RoundNearestTiesAway)),
    (:line, 139, :none),
    (:macrocall, Symbol("@test_throws"), :DivideError, (:call, :round, :Int64, :badness, :RoundNearestTiesUp))
  ))