(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, :Tuple, (:tuple, 1, 2)), (:tuple, 1, 2))),
    (:line, 4, :none),
    (:macrocall, Symbol("@testset"), "indexing", (:block,
        (:line, 5, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:tuple,)), 0)),
        (:line, 6, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, (:tuple, 1)), 1)),
        (:line, 7, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, (:tuple, 1, 2)), 2)),
        (:line, 9, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
                :front
              )), (:tuple,))),
        (:line, 10, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :first, (:tuple,))),
        (:line, 12, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple,)), 0)),
        (:line, 13, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple, 1)), 1)),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :endof, (:tuple, 1, 2)), 2)),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple,), 1), 0)),
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple, 1), 1), 1)),
        (:line, 18, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :size, (:tuple, 1, 2), 1), 2))
      )),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1), 1), 1)),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1, 2), 2), 2)),
    (:line, 26, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple,), 1)),
    (:line, 27, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), 0)),
    (:line, 28, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), -1)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1), 1.0), 1)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 1, 2), 2.0), 2)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple,), 1.0)),
    (:line, 33, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), 0.0)),
    (:line, 34, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), -1.0)),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, 1, 2, 3)), (:tuple, 5, 6, 7))),
    (:line, 37, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 1, 2), (:vect, 3, 4))),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, true, false, false, true)), (:tuple, 5, 8))),
    (:line, 40, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect, true, false, false, true, true))),
    (:line, 42, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :getindex, (:tuple, 5, 6, 7, 8), (:vect,)), (:tuple,))),
    (:line, 45, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, (:., :Base, (:quote, #QuoteNode
                :fill_to_length
              )), (:tuple, 1, 2, 3), -1, (:curly, :Val, 5))), (:tuple, 1, 2, 3, -1, -1))),
    (:line, 46, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Base, (:quote, #QuoteNode
            :fill_to_length
          )), (:tuple, 1, 2, 3), -1, (:curly, :Val, 2))),
    (:line, 49, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :start, (:tuple, 1, 2, 3)), 1)),
    (:line, 51, :none),
    (:macrocall, Symbol("@test"), (:call, :done, (:tuple,), 1)),
    (:line, 52, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :done, (:tuple, 1, 2, 3), 3))),
    (:line, 53, :none),
    (:macrocall, Symbol("@test"), (:call, :done, (:tuple, 1, 2, 3), 4)),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :next, (:tuple, 5, 6, 7), 1), (:tuple, 5, 2))),
    (:line, 56, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :next, (:tuple, 5, 6, 7), 3), (:tuple, 7, 4))),
    (:line, 57, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :next, (:tuple, 5, 6, 7), 0)),
    (:line, 58, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :next, (:tuple,), 1)),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachindex, (:tuple, 2, 5, "foo"))), (:call, :collect, (:(:), 1, 3)))),
    (:line, 61, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachindex, (:tuple, 2, 5, "foo"), (:tuple, 1, 2, 5, 7))), (:call, :collect, (:(:), 1, 4)))),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, 1, 2, 3)), :Int)),
    (:line, 66, :none),
    (:macrocall, Symbol("@test"), (:<:, (:call, :eltype, (:tuple, 1.0, 2.0, 3.0)), :AbstractFloat)),
    (:line, 67, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, true, false)), :Bool)),
    (:line, 68, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple, 1, 2.0, false)), (:call, :typejoin, :Int, :Float64, :Bool))),
    (:line, 69, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:tuple,)), (:curly, :Union))),
    (:line, 70, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:curly, :Tuple, :Int, :Float64, (:curly, :Vararg, :Bool))), (:call, :typejoin, :Int, :Float64, :Bool))),
    (:line, 71, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:where, (:curly, :Tuple, :Int, :T, (:curly, :Vararg, :Bool)), (:<:, :T, :AbstractFloat))), (:call, :typejoin, :Int, :AbstractFloat, :Bool))),
    (:line, 73, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:where, (:curly, :Tuple, :Int, :Bool, (:curly, :Vararg, :T)), (:<:, :T, :AbstractFloat))), (:call, :typejoin, :Int, :AbstractFloat, :Bool))),
    (:line, 75, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:curly, :Union, (:curly, :Tuple, :Int, :Float64), (:curly, :Tuple, (:curly, :Vararg, :Bool)))), (:call, :typejoin, :Int, :Float64, :Bool))),
    (:line, 77, :none),
    (:block,
      (:line, 78, :none),
      (:local, :foo),
      (:line, 80, :none),
      (:(=), (:call, :foo), (:block,
          (:line, 80, :none),
          2
        )),
      (:line, 81, :none),
      (:(=), (:call, :foo, :x), (:block,
          (:line, 81, :none),
          (:call, :*, 2, :x)
        )),
      (:line, 82, :none),
      (:(=), (:call, :foo, :x, :y), (:block,
          (:line, 82, :none),
          (:call, :+, :x, :y)
        )),
      (:line, 83, :none),
      (:(=), (:call, :foo, :x, :y, :z), (:block,
          (:line, 83, :none),
          (:call, :+, :x, :y, :z)
        )),
      (:line, 84, :none),
      (:(=), :longtuple, (:call, :ntuple, :identity, 20)),
      (:line, 87, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,)), (:tuple,))),
      (:line, 88, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1)), (:tuple, 2))),
      (:line, 89, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2)), (:tuple, 2, 4))),
      (:line, 90, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4)), (:tuple, 2, 4, 6, 8))),
      (:line, 91, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 91, :none),
                (:call, :*, 2, :i)
              )), 20))),
      (:line, 94, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,), (:tuple,)), (:tuple,))),
      (:line, 95, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1), (:tuple, 1)), (:tuple, 2))),
      (:line, 96, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2), (:tuple, 1, 2)), (:tuple, 2, 4))),
      (:line, 97, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4)), (:tuple, 2, 4, 6, 8))),
      (:line, 98, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 98, :none),
                (:call, :*, 2, :i)
              )), 20))),
      (:line, 99, :none),
      (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :map, :foo, (:tuple,), (:tuple, 1))),
      (:line, 100, :none),
      (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :map, :foo, (:tuple, 1), (:tuple,))),
      (:line, 103, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple,), (:tuple,), (:tuple,)), (:tuple,))),
      (:line, 104, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1), (:tuple, 1), (:tuple, 1)), (:tuple, 3))),
      (:line, 105, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2), (:tuple, 1, 2), (:tuple, 1, 2)), (:tuple, 3, 6))),
      (:line, 106, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4), (:tuple, 1, 2, 3, 4)), (:tuple, 3, 6, 9, 12))),
      (:line, 107, :none),
      (:macrocall, Symbol("@test"), (:call, :(===), (:call, :map, :foo, :longtuple, :longtuple, :longtuple), (:call, :ntuple, (:->, :i, (:block,
                (:line, 107, :none),
                (:call, :*, 3, :i)
              )), 20))),
      (:line, 108, :none),
      (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :map, :foo, (:tuple,), (:tuple, 1), (:tuple, 1))),
      (:line, 109, :none),
      (:macrocall, Symbol("@test_throws"), :BoundsError, (:call, :map, :foo, (:tuple, 1), (:tuple, 1), (:tuple,)))
    ),
    (:line, 113, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:tuple,), (:tuple,))),
    (:line, 114, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2, 3))),
    (:line, 115, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2, 4)))),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal, (:tuple, 1, 2, 3), (:tuple, 1, 2)))),
    (:line, 118, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:tuple,), (:tuple,))),
    (:line, 119, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:tuple, 1, 2, 3), (:tuple, 1, 2, 3))),
    (:line, 120, :none),
    (:macrocall, Symbol("@test"), (:call, :(!==), (:tuple, 1, 2, 3), (:tuple, 1, 2, 4))),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :(!==), (:tuple, 1, 2, 3), (:tuple, 1, 2))),
    (:line, 123, :none),
    (:macrocall, Symbol("@test"), (:call, :isless, (:tuple, 1, 2), (:tuple, 1, 3))),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :isless, (:tuple, 1), (:tuple, 1, 2))),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isless, (:tuple, 1, 2), (:tuple, 1, 2)))),
    (:line, 126, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isless, (:tuple, 2, 1), (:tuple, 1, 2)))),
    (:line, 130, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:tuple,))),
    (:line, 131, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isempty, (:tuple, 1)))),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reverse, (:tuple,)), (:tuple,))),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reverse, (:tuple, 1, 2, 3)), (:tuple, 3, 2, 1))),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:tuple, 1, 2, 3)), 6)),
    (:line, 140, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:tuple,)), 1)),
    (:line, 141, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:tuple, 1, 2, 3)), 6)),
    (:line, 143, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple,)), true)),
    (:line, 144, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, false)), false)),
    (:line, 145, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true)), true)),
    (:line, 146, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true, true)), true)),
    (:line, 147, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, true, false)), false)),
    (:line, 148, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :all, (:tuple, false, false)), false)),
    (:line, 150, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple,)), false)),
    (:line, 151, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true)), true)),
    (:line, 152, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false)), false)),
    (:line, 153, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true)), true)),
    (:line, 154, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false)), true)),
    (:line, 155, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false)), false)),
    (:line, 156, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false, false)), false)),
    (:line, 157, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false, false)), true)),
    (:line, 158, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, true, false)), true)),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, false, false, true)), true)),
    (:line, 160, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, false)), true)),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, false, true)), true)),
    (:line, 162, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, false)), true)),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :any, (:tuple, true, true, true)), true)),
    (:line, 165, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 0))), (:tuple,))),
    (:line, 166, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 2))), (:tuple, 1, 4))),
    (:line, 167, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 3))), (:tuple, 1, 4, 9))),
    (:line, 168, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 4))), (:tuple, 1, 4, 9, 16))),
    (:line, 169, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 5))), (:tuple, 1, 4, 9, 16, 25))),
    (:line, 170, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :ntuple, :abs2, (:curly, :Val, 6))), (:tuple, 1, 4, 9, 16, 25, 36))),
    (:line, 172, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :ntuple, :abs2, (:curly, :Val, -1))),
    (:line, 175, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :ntuple, :identity, (:curly, :Val, (:(:), 1, 2)))),
    (:line, 177, :none),
    (:for, (:(=), :n, (:(:), 0, 20)), (:block,
        (:line, 178, :none),
        (:(=), :t, (:call, :ntuple, :identity, :n)),
        (:line, 179, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :t), :n)),
        (:line, 180, :none),
        (:for, (:(=), :i, (:(:), 1, :n)), (:block,
            (:line, 181, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :t, :i), :i))
          ))
      )),
    (:line, 186, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple, 1, 2, 3), (:call, :falses, 4))),
    (:line, 187, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple, 1, 2, 3), (:vect, false, false, true, true))),
    (:line, 188, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple, 1, 2, 3), (:call, :trues, 2))),
    (:line, 189, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple, 1, 2, 3), (:call, :falses, 2))),
    (:line, 190, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple,), (:vect, false))),
    (:line, 191, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:tuple,), (:vect, true))),
    (:line, 193, :none),
    (:type, false, :BitPerm_19352, (:block,
        (:line, 194, :none),
        (:(::), :p, (:curly, :NTuple, 8, :UInt8)),
        (:line, 195, :none),
        (:function, (:call, :BitPerm, (:(::), :p, (:curly, :NTuple, 8, :UInt8))), (:block,
            (:line, 196, :none),
            (:&&, (:call, :(!=), (:call, :sort, (:call, :collect, :p)), (:call, :collect, (:(:), 0, 7))), (:call, :error, (:string, :p, " is not a permutation of 0:7"))),
            (:line, 197, :none),
            (:call, :new, :p)
          )),
        (:line, 199, :none),
        (:(=), (:call, :BitPerm_19352, :b0, :b1, :b2, :b3, :b4, :b5, :b6, :b7), (:block,
            (:line, 199, :none),
            (:call, :BitPerm, (:tuple, (:call, :UInt8, :b0), (:call, :UInt8, :b1), (:call, :UInt8, :b2), (:call, :UInt8, :b3), (:call, :UInt8, :b4), (:call, :UInt8, :b5), (:call, :UInt8, :b6), (:call, :UInt8, :b7)))
          ))
      )),
    (:line, 203, :none),
    (:macrocall, Symbol("@testset"), "side effect in tuple constructor #19352", (:block,
        (:line, 204, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:., (:call, :BitPerm_19352, 0, 2, 4, 6, 1, 3, 5, 7), (:quote, #QuoteNode
                  :p
                )), 2), 0x02))
      )),
    (:line, 208, :none),
    (:let, (:block,
        (:line, 209, :none),
        (:type, false, (:curly, :A_15703, :N), (:block,
            (:line, 210, :none),
            (:(::), :keys, (:curly, :NTuple, :N, :Int))
          )),
        (:line, 213, :none),
        (:type, false, :B_15703, (:block,
            (:line, 214, :none),
            (:(::), :x, :A_15703)
          )),
        (:line, 217, :none),
        (:function, (:call, :bug_15703, (:..., :xs)), (:block,
            (:line, 218, :none),
            (:comprehension, (:generator, :x, (:(=), :x, :xs)))
          )),
        (:line, 221, :none),
        (:function, (:call, :test_15703), (:block,
            (:line, 222, :none),
            (:(=), :s, (:tuple, 1)),
            (:line, 223, :none),
            (:(=), :a, (:call, :A_15703, :s)),
            (:line, 224, :none),
            (:(=), :ss, (:., (:., (:call, :B_15703, :a), (:quote, #QuoteNode
                    :x
                  )), (:quote, #QuoteNode
                  :keys
                ))),
            (:line, 225, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), :ss, :s)),
            (:line, 226, :none),
            (:call, :bug_15703, (:..., :ss))
          )),
        (:line, 229, :none),
        (:call, :test_15703)
      )),
    (:line, 233, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :Tuple, :Char, :Char), "za"), (:tuple, 'z', 'a'))),
    (:line, 234, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:curly, :Tuple, :Char, :Char), "z")),
    (:line, 236, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :NTuple, 20, :Int), (:call, (:., :Iterators, (:quote, #QuoteNode
                :countfrom
              )), 2)), (:tuple, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))),
    (:line, 237, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :NTuple, 20, :Float64), (:call, (:., :Iterators, (:quote, #QuoteNode
                :countfrom
              )), 2)), (:tuple, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0))),
    (:line, 238, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:curly, :NTuple, 20, :Int), (:vect, 1, 2))),
    (:line, 240, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :Tuple, (:curly, :Vararg, :Float32)), (:ref, :Float64, 1, 2, 3)), (:tuple, 1.0f0, 2.0f0, 3.0f0))),
    (:line, 241, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :Tuple, :Int, (:curly, :Vararg, :Float32)), (:ref, :Float64, 1, 2, 3)), (:tuple, 1, 2.0f0, 3.0f0))),
    (:line, 242, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:curly, :Tuple, :Int, (:curly, :Vararg, :Any)), (:ref, :Float64, 1, 2, 3)), (:tuple, 1, 2.0, 3.0))),
    (:line, 243, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :Tuple, (:call, :ones, 5)), (:tuple, 1.0, 1.0, 1.0, 1.0, 1.0))),
    (:line, 244, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :convert, :Tuple, (:call, :ones, 5))),
    (:line, 246, :none),
    (:macrocall, Symbol("@testset"), "Multidimensional indexing (issue #20453)", (:block,
        (:line, 247, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:ref, (:tuple, 1))),
        (:line, 248, :none),
        (:macrocall, Symbol("@test_throws"), :MethodError, (:ref, (:tuple, 1, 1, 1), 1, 1))
      )),
    (:line, 251, :none),
    (:macrocall, Symbol("@testset"), "ambiguity between tuple constructors #20990", (:block,
        (:line, 252, :none),
        (:(=), :Tuple16Int, (:curly, :Tuple, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int, :Int)),
        (:line, 253, :none),
        (:(=), :tuple16int, (:tuple, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :Tuple16Int, :tuple16int), :Tuple16Int))
      )),
    (:line, 258, :none),
    (:for, (:(=), :n, (:(:), 0, 15)), (:block,
        (:line, 259, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ntuple, :identity, (:curly, :Val, :n)), (:call, :ntuple, :identity, :n)))
      ))
  ))