(:quote, (:block,
    (:line, 3, :none),
    (:using, :Base, :Test),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, 3), 3.0)),
    (:line, 8, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, 2, 3), 2.5)),
    (:line, 9, :none),
    (:let, (:block,
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, :x, :x), :x))
      ), (:(=), :x, (:call, :*, (:call, :/, (:call, :realmax, 1.0), 4), 3))),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, (:(:), 1, 8)), 4.5)),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, (:vcat, (:(:), 1, 8))), 4.5)),
    (:line, 16, :none),
    (:for, (:(=), :T, (:vect, :Bool, :Int8, :Int16, :Int32, :Int64, :Int128, :UInt8, :UInt16, :UInt32, :UInt64, :UInt128, :Float16, :Float32, :Float64)), (:block,
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :middle, (:call, :one, :T)), (:call, :middle, (:call, :one, :T), (:call, :one, :T))))
      )),
    (:line, 22, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :median, (:vect, 1.0)), 1.0)),
    (:line, 23, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :median, (:vect, 1.0, 3)), 2.0)),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :median, (:vect, 1.0, 3, 2)), 2.0)),
    (:line, 26, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :median, (:vect, 1, 3, 2)), 2.0)),
    (:line, 27, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :median, (:vect, 1, 3, 2, 4)), 2.5)),
    (:line, 29, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median, (:vect, 0.0, :Inf)), :Inf)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median, (:vect, 0.0, (:call, :-, :Inf))), (:call, :-, :Inf))),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median, (:vect, 0.0, :Inf, (:call, :-, :Inf))), 0.0)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median, (:vect, 1.0, -1.0, :Inf, (:call, :-, :Inf))), 0.0)),
    (:line, 33, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :median, (:vect, (:call, :-, :Inf), :Inf)))),
    (:line, 35, :none),
    (:(=), :X, (:vcat, (:row, 2, 3, 1, -1), (:row, 7, 4, 5, -4))),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :median, :X, 2), (:vect, 1.5, 4.5)))),
    (:line, 37, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :median, :X, 1), (:hcat, 4.5, 3.5, 3.0, -2.5)))),
    (:line, 38, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :X, (:vcat, (:row, 2, 3, 1, -1), (:row, 7, 4, 5, -4)))),
    (:line, 40, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :median, (:vect,))),
    (:line, 41, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :median, (:vect, :NaN)))),
    (:line, 42, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :median, (:vect, 0.0, :NaN)))),
    (:line, 43, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :median, (:vect, :NaN, 0.0)))),
    (:line, 44, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :median, (:vcat, (:row, :NaN, 0.0), (:row, 1.2, 4.5)), 2), (:call, :reshape, (:vcat, :NaN, 2.85), 2, 1))),
    (:line, 46, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median!, (:hcat, 1, 2, 3, 4)), 2.5)),
    (:line, 47, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :median!, (:vcat, (:row, 1, 2), (:row, 3, 4))), 2.5)),
    (:line, 50, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :invoke, :median, (:curly, :Tuple, :AbstractVector), (:(:), 1, 10)), :(==), (:call, :median, (:(:), 1, 10)), :(==), 5.5)),
    (:line, 53, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :mean, (:tuple,))),
    (:line, 54, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, (:tuple, 1, 2, 3)), 2.0)),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, (:vect, 0)), 0.0)),
    (:line, 56, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, (:vect, 1.0)), 1.0)),
    (:line, 57, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mean, (:vect, 1.0, 3)), 2.0)),
    (:line, 58, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mean, (:vect, 1, 2, 3)), 2.0)),
    (:line, 59, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mean, (:vcat, (:row, 0, 1, 2), (:row, 4, 5, 6)), 1), (:hcat, 2.0, 3.0, 4.0))),
    (:line, 60, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mean, (:vcat, (:row, 1, 2, 3), (:row, 4, 5, 6)), 1), (:hcat, 2.5, 3.5, 4.5))),
    (:line, 61, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, (:->, :i, (:block,
              (:line, 61, :none),
              (:call, :+, :i, 1)
            )), (:(:), 0, 2)), 2.0)),
    (:line, 62, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, :isodd, (:vect, 3)), 1.0)),
    (:line, 63, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :mean, (:->, :x, (:block,
              (:line, 63, :none),
              (:call, :*, 3, :x)
            )), (:tuple, 1, 1)), 3.0)),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, :NaN)))),
    (:line, 66, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, 0.0, :NaN)))),
    (:line, 67, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, :NaN, 0.0)))),
    (:line, 69, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, 0.0, :Inf, (:call, :-, :Inf))))),
    (:line, 70, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, 1.0, -1.0, :Inf, (:call, :-, :Inf))))),
    (:line, 71, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :mean, (:vect, (:call, :-, :Inf), :Inf)))),
    (:line, 72, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :mean, (:vcat, (:row, :NaN, 0.0), (:row, 1.2, 4.5)), 2), (:call, :reshape, (:vcat, :NaN, 2.85), 2, 1))),
    (:line, 78, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :var, (:tuple,))),
    (:line, 79, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :var, (:parameters, (:kw, :corrected, false)), (:tuple,))),
    (:line, 80, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :var, (:parameters, (:kw, :mean, 2)), (:tuple,))),
    (:line, 81, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :var, (:parameters, (:kw, :mean, 2), (:kw, :corrected, false)), (:tuple,))),
    (:line, 83, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:ref, :Int)))),
    (:line, 84, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:parameters, (:kw, :corrected, false)), (:ref, :Int)))),
    (:line, 85, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:parameters, (:kw, :mean, 2)), (:ref, :Int)))),
    (:line, 86, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:parameters, (:kw, :mean, 2), (:kw, :corrected, false)), (:ref, :Int)))),
    (:line, 88, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :var, (:ref, :Int), 1), (:vect, :NaN))),
    (:line, 89, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :var, (:parameters, (:kw, :corrected, false)), (:ref, :Int), 1), (:vect, :NaN))),
    (:line, 90, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :var, (:parameters, (:kw, :mean, (:vect, 2))), (:ref, :Int), 1), (:vect, :NaN))),
    (:line, 91, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :var, (:parameters, (:kw, :mean, (:vect, 2)), (:kw, :corrected, false)), (:ref, :Int), 1), (:vect, :NaN))),
    (:line, 95, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:macrocall, Symbol("@inferred"), (:call, :var, (:tuple, 1))))),
    (:line, 96, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :corrected, false)), (:tuple, 1)), 0.0)),
    (:line, 97, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :mean, 2)), (:tuple, 1)), :Inf)),
    (:line, 98, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :mean, 2), (:kw, :corrected, false)), (:tuple, 1)), 1.0)),
    (:line, 100, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:macrocall, Symbol("@inferred"), (:call, :var, (:vect, 1))))),
    (:line, 101, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :corrected, false)), (:vect, 1)), 0.0)),
    (:line, 102, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :mean, 2)), (:vect, 1)), :Inf)),
    (:line, 103, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :var, (:parameters, (:kw, :mean, 2), (:kw, :corrected, false)), (:vect, 1)), 1.0)),
    (:line, 105, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:macrocall, Symbol("@inferred"), (:call, :var, (:vect, 1), 1)), (:vect, :NaN))),
    (:line, 106, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :corrected, false)), (:vect, 1), 1), (:vect, 0.0))),
    (:line, 107, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, (:vect, 2))), (:vect, 1), 1), (:vect, :Inf))),
    (:line, 108, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, (:vect, 2)), (:kw, :corrected, false)), (:vect, 1), 1), (:vect, 1.0))),
    (:line, 110, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :var, (:(:), 1, 8)), 6.0)),
    (:line, 111, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :varm, (:(:), 1, 8), 1), (:call, :varm, (:call, :collect, (:(:), 1, 8)), 1))),
    (:line, 112, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :varm, (:(:), 1, 1), 1))),
    (:line, 113, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:(:), 1, 1)))),
    (:line, 114, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :var, (:(:), 1, -1)))),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :varm, (:vect, 1, 2, 3), 2), 1.0)),
    (:line, 117, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:vect, 1, 2, 3)), 1.0)),
    (:line, 118, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :corrected, false)), (:vect, 1, 2, 3)), (:call, :/, 2.0, 3))),
    (:line, 119, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, 0)), (:vect, 1, 2, 3)), 7.0)),
    (:line, 120, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, 0), (:kw, :corrected, false)), (:vect, 1, 2, 3)), (:call, :/, 14.0, 3))),
    (:line, 122, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :varm, (:tuple, 1, 2, 3), 2), 1.0)),
    (:line, 123, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:tuple, 1, 2, 3)), 1.0)),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :corrected, false)), (:tuple, 1, 2, 3)), (:call, :/, 2.0, 3))),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, 0)), (:tuple, 1, 2, 3)), 7.0)),
    (:line, 126, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :mean, 0), (:kw, :corrected, false)), (:tuple, 1, 2, 3)), (:call, :/, 14.0, 3))),
    (:line, 127, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :var, (:parameters, (:kw, :mean, (:tuple,))), (:tuple, 1, 2, 3))),
    (:line, 129, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:vcat, (:row, 1, 2, 3, 4, 5), (:row, 6, 7, 8, 9, 10)), 2), (:', (:hcat, 2.5, 2.5)))),
    (:line, 130, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :var, (:parameters, (:kw, :corrected, false)), (:vcat, (:row, 1, 2, 3, 4, 5), (:row, 6, 7, 8, 9, 10)), 2), (:', (:hcat, 2.0, 2.0)))),
    (:line, 132, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :stdm, (:vect, 1, 2, 3), 2), 1.0)),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:vect, 1, 2, 3)), 1.0)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :corrected, false)), (:vect, 1, 2, 3)), (:call, :sqrt, (:call, :/, 2.0, 3)))),
    (:line, 135, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :mean, 0)), (:vect, 1, 2, 3)), (:call, :sqrt, 7.0))),
    (:line, 136, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :mean, 0), (:kw, :corrected, false)), (:vect, 1, 2, 3)), (:call, :sqrt, (:call, :/, 14.0, 3)))),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :stdm, (:tuple, 1, 2, 3), 2), 1.0)),
    (:line, 139, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:tuple, 1, 2, 3)), 1.0)),
    (:line, 140, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :corrected, false)), (:tuple, 1, 2, 3)), (:call, :sqrt, (:call, :/, 2.0, 3)))),
    (:line, 141, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :mean, 0)), (:tuple, 1, 2, 3)), (:call, :sqrt, 7.0))),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :mean, 0), (:kw, :corrected, false)), (:tuple, 1, 2, 3)), (:call, :sqrt, (:call, :/, 14.0, 3)))),
    (:line, 144, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:vcat, (:row, 1, 2, 3, 4, 5), (:row, 6, 7, 8, 9, 10)), 2), (:., :sqrt, (:tuple, (:', (:hcat, 2.5, 2.5)))))),
    (:line, 145, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :std, (:parameters, (:kw, :corrected, false)), (:vcat, (:row, 1, 2, 3, 4, 5), (:row, 6, 7, 8, 9, 10)), 2), (:., :sqrt, (:tuple, (:', (:hcat, 2.0, 2.0)))))),
    (:line, 147, :none),
    (:(=), :A, (:typed_comprehension, :Complex128, (:generator, (:call, :exp, (:call, :*, :i, :im)), (:(=), :i, (:(:), 1, (:call, :^, 10, 4)))))),
    (:line, 148, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :varm, :A, 0.0), (:call, :/, (:call, :sum, (:call, :map, :abs2, :A)), (:call, :-, (:call, :length, :A), 1)))),
    (:line, 149, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :varm, :A, (:call, :mean, :A)), (:call, :var, :A))),
    (:line, 153, :none),
    (:function, (:call, :safe_cov, :x, :y, (:(::), :zm, :Bool), (:(::), :cr, :Bool)), (:block,
        (:line, 154, :none),
        (:(=), :n, (:call, :length, :x)),
        (:line, 155, :none),
        (:if, (:call, :!, :zm), (:block,
            (:line, 156, :none),
            (:(=), :x, (:call, :.-, :x, (:call, :mean, :x))),
            (:line, 157, :none),
            (:(=), :y, (:call, :.-, :y, (:call, :mean, :y)))
          )),
        (:line, 159, :none),
        (:call, :/, (:call, :dot, (:call, :vec, :x), (:call, :vec, :y)), (:call, :-, :n, (:call, :Int, :cr)))
      )),
    (:line, 162, :none),
    (:(=), :X, (:', (:vcat, (:row, 1.0, 2.0, 3.0, 4.0, 5.0), (:row, 5.0, 4.0, 6.0, 2.0, 1.0)))),
    (:line, 163, :none),
    (:(=), :Y, (:', (:vcat, (:row, 6.0, 1.0, 5.0, 3.0, 2.0), (:row, 2.0, 7.0, 8.0, 4.0, 3.0)))),
    (:line, 165, :none),
    (:for, (:block,
        (:(=), :vd, (:vect, 1, 2)),
        (:(=), :zm, (:vect, true, false)),
        (:(=), :cr, (:vect, true, false))
      ), (:block,
        (:line, 167, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 168, :none),
            (:(=), :k, (:call, :size, :X, 2)),
            (:line, 169, :none),
            (:(=), :Cxx, (:call, :zeros, :k, :k)),
            (:line, 170, :none),
            (:(=), :Cxy, (:call, :zeros, :k, :k)),
            (:line, 171, :none),
            (:for, (:block,
                (:(=), :i, (:(:), 1, :k)),
                (:(=), :j, (:(:), 1, :k))
              ), (:block,
                (:line, 172, :none),
                (:(=), (:ref, :Cxx, :i, :j), (:call, :safe_cov, (:ref, :X, :(:), :i), (:ref, :X, :(:), :j), :zm, :cr)),
                (:line, 173, :none),
                (:(=), (:ref, :Cxy, :i, :j), (:call, :safe_cov, (:ref, :X, :(:), :i), (:ref, :Y, :(:), :j), :zm, :cr))
              )),
            (:line, 175, :none),
            (:(=), :x1, (:call, :vec, (:ref, :X, :(:), 1))),
            (:line, 176, :none),
            (:(=), :y1, (:call, :vec, (:ref, :Y, :(:), 1)))
          ), (:block,
            (:line, 178, :none),
            (:(=), :k, (:call, :size, :X, 1)),
            (:line, 179, :none),
            (:(=), :Cxx, (:call, :zeros, :k, :k)),
            (:line, 180, :none),
            (:(=), :Cxy, (:call, :zeros, :k, :k)),
            (:line, 181, :none),
            (:for, (:block,
                (:(=), :i, (:(:), 1, :k)),
                (:(=), :j, (:(:), 1, :k))
              ), (:block,
                (:line, 182, :none),
                (:(=), (:ref, :Cxx, :i, :j), (:call, :safe_cov, (:ref, :X, :i, :(:)), (:ref, :X, :j, :(:)), :zm, :cr)),
                (:line, 183, :none),
                (:(=), (:ref, :Cxy, :i, :j), (:call, :safe_cov, (:ref, :X, :i, :(:)), (:ref, :Y, :j, :(:)), :zm, :cr))
              )),
            (:line, 185, :none),
            (:(=), :x1, (:call, :vec, (:ref, :X, 1, :(:)))),
            (:line, 186, :none),
            (:(=), :y1, (:call, :vec, (:ref, :Y, 1, :(:))))
          )),
        (:line, 189, :none),
        (:(=), :c, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :x1, 0, :cr), (:call, :cov, :x1, :cr))),
        (:line, 191, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :c, :Float64)),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :c, (:ref, :Cxx, 1, 1))),
        (:line, 193, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :x1, :cr)),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cov, :X), (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :X, (:call, :mean, :X, 1)))),
        (:line, 196, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :X, 0, :vd, :cr), (:call, :cov, :X, :vd, :cr))),
        (:line, 198, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, :k))),
        (:line, 199, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :C, :Cxx)),
        (:line, 200, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :X, :vd, :cr)),
        (:line, 202, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cov, :x1, :y1), (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :x1, (:call, :mean, :x1), :y1, (:call, :mean, :y1)))),
        (:line, 203, :none),
        (:(=), :c, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :x1, 0, :y1, 0, :cr), (:call, :cov, :x1, :y1, :cr))),
        (:line, 205, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :c, :Float64)),
        (:line, 206, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :c, (:ref, :Cxy, 1, 1))),
        (:line, 207, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :x1, :y1, :cr)),
        (:line, 209, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 210, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cov, :x1, :Y), (:call, (:., :Base, (:quote, #QuoteNode
                      :covm
                    )), :x1, (:call, :mean, :x1), :Y, (:call, :mean, :Y, 1))))
          )),
        (:line, 212, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :x1, 0, :Y, 0, :vd, :cr), (:call, :cov, :x1, :Y, :vd, :cr))),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, 1, :k))),
        (:line, 215, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :vec, :C), (:ref, :Cxy, 1, :(:)))),
        (:line, 216, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :x1, :Y, :vd, :cr)),
        (:line, 218, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 219, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cov, :X, :y1), (:call, (:., :Base, (:quote, #QuoteNode
                      :covm
                    )), :X, (:call, :mean, :X, 1), :y1, (:call, :mean, :y1))))
          )),
        (:line, 221, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :X, 0, :y1, 0, :vd, :cr), (:call, :cov, :X, :y1, :vd, :cr))),
        (:line, 223, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, 1))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :vec, :C), (:ref, :Cxy, :(:), 1))),
        (:line, 225, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :X, :y1, :vd, :cr)),
        (:line, 227, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cov, :X, :Y), (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :X, (:call, :mean, :X, 1), :Y, (:call, :mean, :Y, 1)))),
        (:line, 228, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :covm
                )), :X, 0, :Y, 0, :vd, :cr), (:call, :cov, :X, :Y, :vd, :cr))),
        (:line, 230, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, :k))),
        (:line, 231, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :C, :Cxy)),
        (:line, 232, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cov, :X, :Y, :vd, :cr))
      )),
    (:line, 237, :none),
    (:function, (:call, :safe_cor, :x, :y, (:(::), :zm, :Bool)), (:block,
        (:line, 238, :none),
        (:if, (:call, :!, :zm), (:block,
            (:line, 239, :none),
            (:(=), :x, (:call, :.-, :x, (:call, :mean, :x))),
            (:line, 240, :none),
            (:(=), :y, (:call, :.-, :y, (:call, :mean, :y)))
          )),
        (:line, 242, :none),
        (:(=), :x, (:call, :vec, :x)),
        (:line, 243, :none),
        (:(=), :y, (:call, :vec, :y)),
        (:line, 244, :none),
        (:call, :/, (:call, :dot, :x, :y), (:call, :*, (:call, :sqrt, (:call, :dot, :x, :x)), (:call, :sqrt, (:call, :dot, :y, :y))))
      )),
    (:line, 247, :none),
    (:for, (:block,
        (:(=), :vd, (:vect, 1, 2)),
        (:(=), :zm, (:vect, true, false))
      ), (:block,
        (:line, 249, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 250, :none),
            (:(=), :k, (:call, :size, :X, 2)),
            (:line, 251, :none),
            (:(=), :Cxx, (:call, :zeros, :k, :k)),
            (:line, 252, :none),
            (:(=), :Cxy, (:call, :zeros, :k, :k)),
            (:line, 253, :none),
            (:for, (:block,
                (:(=), :i, (:(:), 1, :k)),
                (:(=), :j, (:(:), 1, :k))
              ), (:block,
                (:line, 254, :none),
                (:(=), (:ref, :Cxx, :i, :j), (:call, :safe_cor, (:ref, :X, :(:), :i), (:ref, :X, :(:), :j), :zm)),
                (:line, 255, :none),
                (:(=), (:ref, :Cxy, :i, :j), (:call, :safe_cor, (:ref, :X, :(:), :i), (:ref, :Y, :(:), :j), :zm))
              )),
            (:line, 257, :none),
            (:(=), :x1, (:call, :vec, (:ref, :X, :(:), 1))),
            (:line, 258, :none),
            (:(=), :y1, (:call, :vec, (:ref, :Y, :(:), 1)))
          ), (:block,
            (:line, 260, :none),
            (:(=), :k, (:call, :size, :X, 1)),
            (:line, 261, :none),
            (:(=), :Cxx, (:call, :zeros, :k, :k)),
            (:line, 262, :none),
            (:(=), :Cxy, (:call, :zeros, :k, :k)),
            (:line, 263, :none),
            (:for, (:block,
                (:(=), :i, (:(:), 1, :k)),
                (:(=), :j, (:(:), 1, :k))
              ), (:block,
                (:line, 264, :none),
                (:(=), (:ref, :Cxx, :i, :j), (:call, :safe_cor, (:ref, :X, :i, :(:)), (:ref, :X, :j, :(:)), :zm)),
                (:line, 265, :none),
                (:(=), (:ref, :Cxy, :i, :j), (:call, :safe_cor, (:ref, :X, :i, :(:)), (:ref, :Y, :j, :(:)), :zm))
              )),
            (:line, 267, :none),
            (:(=), :x1, (:call, :vec, (:ref, :X, 1, :(:)))),
            (:line, 268, :none),
            (:(=), :y1, (:call, :vec, (:ref, :Y, 1, :(:))))
          )),
        (:line, 271, :none),
        (:(=), :c, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :x1, 0), (:call, :cor, :x1))),
        (:line, 272, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :c, :Float64)),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :c, (:ref, :Cxx, 1, 1))),
        (:line, 274, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :x1)),
        (:line, 276, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cor, :X), (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :X, (:call, :mean, :X, 1)))),
        (:line, 277, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :X, 0, :vd), (:call, :cor, :X, :vd))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, :k))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :C, :Cxx)),
        (:line, 280, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :X, :vd)),
        (:line, 282, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cor, :x1, :y1), (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :x1, (:call, :mean, :x1), :y1, (:call, :mean, :y1)))),
        (:line, 283, :none),
        (:(=), :c, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :x1, 0, :y1, 0), (:call, :cor, :x1, :y1))),
        (:line, 284, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :c, :Float64)),
        (:line, 285, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :c, (:ref, :Cxy, 1, 1))),
        (:line, 286, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :x1, :y1)),
        (:line, 288, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 289, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cor, :x1, :Y), (:call, (:., :Base, (:quote, #QuoteNode
                      :corm
                    )), :x1, (:call, :mean, :x1), :Y, (:call, :mean, :Y, 1))))
          )),
        (:line, 291, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :x1, 0, :Y, 0, :vd), (:call, :cor, :x1, :Y, :vd))),
        (:line, 292, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, 1, :k))),
        (:line, 293, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :vec, :C), (:ref, :Cxy, 1, :(:)))),
        (:line, 294, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :x1, :Y, :vd)),
        (:line, 296, :none),
        (:if, (:call, :(==), :vd, 1), (:block,
            (:line, 297, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cor, :X, :y1), (:call, (:., :Base, (:quote, #QuoteNode
                      :corm
                    )), :X, (:call, :mean, :X, 1), :y1, (:call, :mean, :y1))))
          )),
        (:line, 299, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :X, 0, :y1, 0, :vd), (:call, :cor, :X, :y1, :vd))),
        (:line, 300, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, 1))),
        (:line, 301, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :vec, :C), (:ref, :Cxy, :(:), 1))),
        (:line, 302, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :X, :y1, :vd)),
        (:line, 304, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cor, :X, :Y), (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :X, (:call, :mean, :X, 1), :Y, (:call, :mean, :Y, 1)))),
        (:line, 305, :none),
        (:(=), :C, (:if, :zm, (:call, (:., :Base, (:quote, #QuoteNode
                  :corm
                )), :X, 0, :Y, 0, :vd), (:call, :cor, :X, :Y, :vd))),
        (:line, 306, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :C), (:tuple, :k, :k))),
        (:line, 307, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :C, :Cxy)),
        (:line, 308, :none),
        (:macrocall, Symbol("@inferred"), (:call, :cor, :X, :Y, :vd))
      )),
    (:line, 311, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), (:ref, (:call, :cor, (:call, :repmat, (:(:), 1, 17), 1, 17)), 2), 1.0)),
    (:line, 312, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :cor, (:(:), 1, 17), (:(:), 1, 17)), 1.0)),
    (:line, 313, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :cor, (:(:), 1, 17), (:(:), 18, 34)), 1.0)),
    (:line, 314, :none),
    (:let, (:block,
        (:line, 315, :none),
        (:(=), :tmp2, (:call, :collect, :tmp)),
        (:line, 316, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :cor, :tmp, :tmp), 1.0)),
        (:line, 317, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :cor, :tmp, :tmp2), 1.0))
      ), (:(=), :tmp, (:call, :linspace, 1, 85, 100))),
    (:line, 320, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:vect, 1, 2, 3, 4), 0.5), 2.5)),
    (:line, 321, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:vect, 1, 2, 3, 4), (:vect, 0.5)), (:vect, 2.5))),
    (:line, 322, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:call, :quantile, (:vect, 1.0, 3), (:vect, 0.25, 0.5, 0.75)), 2), (:call, :median, (:vect, 1.0, 3)))),
    (:line, 323, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:(:), 100.0, -1.0, 0.0), (:(:), 0.0, 0.1, 1.0)), (:call, :collect, (:(:), 0.0, 10.0, 100.0)))),
    (:line, 324, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:(:), 0.0, 100.0), (:(:), 0.0, 0.1, 1.0), (:kw, :sorted, true)), (:call, :collect, (:(:), 0.0, 10.0, 100.0)))),
    (:line, 325, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:(:), 100.0f0, -1.0f0, 0.0), (:(:), 0.0, 0.1, 1.0)), (:call, :collect, (:(:), 0.0f0, 10.0f0, 100.0f0)))),
    (:line, 326, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:vect, :Inf, :Inf), 0.5), :Inf)),
    (:line, 327, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:vect, (:call, :-, :Inf), 1), 0.5), (:call, :-, :Inf))),
    (:line, 328, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :quantile, (:vect, 0, 1), 1.0e-18), 1.0e-18)),
    (:line, 331, :none),
    (:(=), :y, (:vect, 0.40003674665581906, 0.4085630862624367, 0.41662034698690303, 0.41662034698690303, 0.42189053966652057, 0.42189053966652057, 0.42553514344518345, 0.43985732442991354)),
    (:line, 332, :none),
    (:macrocall, Symbol("@test"), (:call, :issorted, (:call, :quantile, :y, (:call, :linspace, 0.01, 0.99, 17)))),
    (:line, 335, :none),
    (:let, (:block,
        (:line, 336, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :var, :z), :≈, (:call, :invoke, :var, (:curly, :Tuple, :Any), :z), :≈, (:call, :cov, :z), :≈, (:ref, (:call, :var, :z, 1), 1), :≈, (:call, :/, (:call, :sum, :abs2, (:call, :-, :z, (:call, :mean, :z))), 9))),
        (:line, 337, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :var, :z), :Float64)),
        (:line, 338, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :invoke, :var, (:curly, :Tuple, :Any), :z), :Float64)),
        (:line, 339, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :cov, :z), :Float64)),
        (:line, 340, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :var, :z, 1), (:curly, :Vector, :Float64))),
        (:line, 341, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :varm, :z, 0.0), :≈, (:call, :invoke, :varm, (:curly, :Tuple, :Any, :Float64), :z, 0.0), :≈, (:call, :/, (:call, :sum, :abs2, :z), 9))),
        (:line, 342, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :varm, :z, 0.0), :Float64)),
        (:line, 343, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :invoke, :varm, (:curly, :Tuple, :Any, :Float64), :z, 0.0), :Float64)),
        (:line, 344, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :cor, :z), 1.0))
      ), (:(=), :z, (:call, :rand, :Complex128, 10))),
    (:line, 346, :none),
    (:let, (:block,
        (:line, 347, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, :v, 5)),
        (:line, 348, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :v, :Float64))
      ), (:(=), :v, (:call, :varm, (:parameters, (:kw, :corrected, false)), (:vect, (:call, :+, 1.0, (:call, :*, 2.0, :im))), 0))),
    (:line, 352, :none),
    (:(=), :x, (:vect, (:call, :-, 2.7, (:call, :*, 3.3, :im)), (:call, :+, 0.9, (:call, :*, 5.4, :im)), (:call, :+, 0.1, (:call, :*, 0.2, :im)), (:call, :-, -1.7, (:call, :*, 5.8, :im)), (:call, :+, 1.1, (:call, :*, 1.9, :im)))),
    (:line, 353, :none),
    (:(=), :y, (:vect, (:call, :-, -1.7, (:call, :*, 1.6, :im)), (:call, :+, -0.2, (:call, :*, 6.5, :im)), (:call, :-, 0.8, (:call, :*, 10.0, :im)), (:call, :-, 9.1, (:call, :*, 3.4, :im)), (:call, :-, 2.7, (:call, :*, 5.5, :im)))),
    (:line, 354, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, :x, :y), (:call, :-, 4.8365, (:call, :*, 12.119, :im)))),
    (:line, 355, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, :y, :x), (:call, :+, 4.8365, (:call, :*, 12.119, :im)))),
    (:line, 356, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, :x, (:call, :reshape, :y, :(:), 1)), (:call, :reshape, (:vect, (:call, :-, 4.8365, (:call, :*, 12.119, :im))), 1, 1))),
    (:line, 357, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, (:call, :reshape, :x, :(:), 1), :y), (:call, :reshape, (:vect, (:call, :-, 4.8365, (:call, :*, 12.119, :im))), 1, 1))),
    (:line, 358, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, (:call, :reshape, :x, :(:), 1), (:call, :reshape, :y, :(:), 1)), (:call, :reshape, (:vect, (:call, :-, 4.8365, (:call, :*, 12.119, :im))), 1, 1))),
    (:line, 359, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cov, (:hcat, :x, :y)), (:vcat, (:row, 21.779, (:call, :-, 4.8365, (:call, :*, 12.119, :im))), (:row, (:call, :+, 4.8365, (:call, :*, 12.119, :im)), 54.548)))),
    (:line, 361, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, :x, :y), (:call, :-, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im)))),
    (:line, 362, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, :y, :x), (:call, :+, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im)))),
    (:line, 363, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, :x, (:call, :reshape, :y, :(:), 1)), (:call, :reshape, (:vect, (:call, :-, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im))), 1, 1))),
    (:line, 364, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, (:call, :reshape, :x, :(:), 1), :y), (:call, :reshape, (:vect, (:call, :-, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im))), 1, 1))),
    (:line, 365, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, (:call, :reshape, :x, :(:), 1), (:call, :reshape, :y, :(:), 1)), (:call, :reshape, (:vect, (:call, :-, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im))), 1, 1))),
    (:line, 366, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :cor, (:hcat, :x, :y)), (:vcat, (:row, 1.0, (:call, :-, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im))), (:row, (:call, :+, 0.14032104449218274, (:call, :*, 0.35160772008699703, :im)), 1.0)))),
    (:line, 370, :none),
    (:let, (:block,
        (:line, 371, :none),
        (:(=), :b, (:call, :deepcopy, :a)),
        (:line, 372, :none),
        (:(=), :x, (:call, :median, :a, 1)),
        (:line, 373, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 374, :none),
        (:(=), :x, (:call, :median, :a, 2)),
        (:line, 375, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 376, :none),
        (:(=), :x, (:call, :mean, :a, 1)),
        (:line, 377, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 378, :none),
        (:(=), :x, (:call, :mean, :a, 2)),
        (:line, 379, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 380, :none),
        (:(=), :x, (:call, :var, :a, 1)),
        (:line, 381, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 382, :none),
        (:(=), :x, (:call, :var, :a, 2)),
        (:line, 383, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 384, :none),
        (:(=), :x, (:call, :std, :a, 1)),
        (:line, 385, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a)),
        (:line, 386, :none),
        (:(=), :x, (:call, :std, :a, 2)),
        (:line, 387, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :b, :a))
      ), (:(=), :a, (:call, :rand, 10, 10))),
    (:line, 391, :none),
    (:||, (:call, :isdefined, :Main, (:quote, #QuoteNode
          :TestHelpers
        )), (:macrocall, Symbol("@eval"), :Main, (:call, :include, "TestHelpers.jl"))),
    (:line, 392, :none),
    (:using, :TestHelpers, :Furlong),
    (:line, 393, :none),
    (:let, (:block,
        (:line, 394, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :sum, :r), :(==), (:call, :sum, :a), :(==), (:call, :Furlong, 3))),
        (:line, 395, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cumsum, :r), (:., :Furlong, (:tuple, (:vect, 1, 3))))),
        (:line, 396, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :mean, :r), :(==), (:call, :mean, :a), :(==), (:call, :median, :a), :(==), (:call, :median, :r), :(==), (:call, :Furlong, 1.5))),
        (:line, 397, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :var, :r), :(==), (:call, :var, :a), :(==), (:call, (:curly, :Furlong, 2), 0.5))),
        (:line, 398, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :std, :r), :(==), (:call, :std, :a), :(==), (:call, (:curly, :Furlong, 1), (:call, :sqrt, 0.5))))
      ), (:(=), :r, (:(:), (:call, :Furlong, 1), (:call, :Furlong, 1), (:call, :Furlong, 2))), (:(=), :a, (:call, :collect, :r)))
  ))