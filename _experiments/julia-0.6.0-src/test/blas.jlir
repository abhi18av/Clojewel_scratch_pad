(:quote, (:block,
    (:line, 3, :none),
    (:toplevel, (:import, :Base, :LinAlg), (:import, :Base, :LinAlg, :BlasReal), (:import, :Base, :LinAlg, :BlasComplex)),
    (:line, 5, :none),
    (:call, :srand, 100),
    (:line, 7, :none),
    (:macrocall, Symbol("@testset"), (:for, (:(=), :elty, (:vect, :Float32, :Float64, :Complex64, :Complex128)), (:block,
          (:line, 8, :none),
          (:macrocall, Symbol("@testset"), "syr2k!", (:block,
              (:line, 9, :none),
              (:(=), :U, (:call, :randn, 5, 2)),
              (:line, 10, :none),
              (:(=), :V, (:call, :randn, 5, 2)),
              (:line, 11, :none),
              (:if, (:||, (:call, :(==), :elty, :Complex64), (:call, :(==), :elty, :Complex128)), (:block,
                  (:line, 12, :none),
                  (:(=), :U, (:., :complex, (:tuple, :U, :U))),
                  (:line, 13, :none),
                  (:(=), :V, (:., :complex, (:tuple, :V, :V)))
                )),
              (:line, 15, :none),
              (:(=), :U, (:call, :convert, (:curly, :Array, :elty, 2), :U)),
              (:line, 16, :none),
              (:(=), :V, (:call, :convert, (:curly, :Array, :elty, 2), :V)),
              (:line, 17, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                            :BLAS
                          )), (:quote, #QuoteNode
                          :syr2k
                        )), 'L', 'N', :U, :V)), (:call, :tril, (:call, :+, (:call, :*, :U, (:.', :V)), (:call, :*, :V, (:.', :U)))))),
              (:line, 18, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                            :BLAS
                          )), (:quote, #QuoteNode
                          :syr2k
                        )), 'U', 'N', :U, :V)), (:call, :triu, (:call, :+, (:call, :*, :U, (:.', :V)), (:call, :*, :V, (:.', :U)))))),
              (:line, 19, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                            :BLAS
                          )), (:quote, #QuoteNode
                          :syr2k
                        )), 'L', 'T', :U, :V)), (:call, :tril, (:call, :+, (:call, :*, (:.', :U), :V), (:call, :*, (:.', :V), :U))))),
              (:line, 20, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                            :BLAS
                          )), (:quote, #QuoteNode
                          :syr2k
                        )), 'U', 'T', :U, :V)), (:call, :triu, (:call, :+, (:call, :*, (:.', :U), :V), (:call, :*, (:.', :V), :U)))))
            )),
          (:line, 23, :none),
          (:if, (:call, :in, :elty, (:tuple, :Complex64, :Complex128)), (:block,
              (:line, 24, :none),
              (:macrocall, Symbol("@testset"), "her2k!", (:block,
                  (:line, 25, :none),
                  (:(=), :U, (:call, :randn, 5, 2)),
                  (:line, 26, :none),
                  (:(=), :V, (:call, :randn, 5, 2)),
                  (:line, 27, :none),
                  (:(=), :U, (:., :complex, (:tuple, :U, :U))),
                  (:line, 28, :none),
                  (:(=), :V, (:., :complex, (:tuple, :V, :V))),
                  (:line, 29, :none),
                  (:(=), :U, (:call, :convert, (:curly, :Array, :elty, 2), :U)),
                  (:line, 30, :none),
                  (:(=), :V, (:call, :convert, (:curly, :Array, :elty, 2), :V)),
                  (:line, 31, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                                :BLAS
                              )), (:quote, #QuoteNode
                              :her2k
                            )), 'L', 'N', :U, :V)), (:call, :tril, (:call, :+, (:call, :*, :U, (:', :V)), (:call, :*, :V, (:', :U)))))),
                  (:line, 32, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                                :BLAS
                              )), (:quote, #QuoteNode
                              :her2k
                            )), 'U', 'N', :U, :V)), (:call, :triu, (:call, :+, (:call, :*, :U, (:', :V)), (:call, :*, :V, (:', :U)))))),
                  (:line, 33, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                                :BLAS
                              )), (:quote, #QuoteNode
                              :her2k
                            )), 'L', 'C', :U, :V)), (:call, :tril, (:call, :+, (:call, :*, (:', :U), :V), (:call, :*, (:', :V), :U))))),
                  (:line, 34, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                                :BLAS
                              )), (:quote, #QuoteNode
                              :her2k
                            )), 'U', 'C', :U, :V)), (:call, :triu, (:call, :+, (:call, :*, (:', :U), :V), (:call, :*, (:', :V), :U)))))
                ))
            )),
          (:line, 38, :none),
          (:(=), :o4, (:call, :ones, :elty, 4)),
          (:line, 39, :none),
          (:(=), :z4, (:call, :zeros, :elty, 4)),
          (:line, 41, :none),
          (:(=), :I4, (:call, :eye, :elty, 4)),
          (:line, 42, :none),
          (:(=), :I43, (:call, :eye, :elty, 4, 3)),
          (:line, 43, :none),
          (:(=), :L4, (:call, :tril, (:call, :ones, :elty, (:tuple, 4, 4)))),
          (:line, 44, :none),
          (:(=), :U4, (:call, :triu, (:call, :ones, :elty, (:tuple, 4, 4)))),
          (:line, 45, :none),
          (:(=), :Z4, (:call, :zeros, :elty, (:tuple, 4, 4))),
          (:line, 47, :none),
          (:(=), :elm1, (:call, :convert, :elty, -1)),
          (:line, 48, :none),
          (:(=), :el2, (:call, :convert, :elty, 2)),
          (:line, 49, :none),
          (:(=), :v14, (:call, :convert, (:curly, :Vector, :elty), (:vcat, (:(:), 1, 4)))),
          (:line, 50, :none),
          (:(=), :v41, (:call, :convert, (:curly, :Vector, :elty), (:vcat, (:(:), 4, -1, 1)))),
          (:line, 52, :none),
          (:let, (:block,
              (:line, 53, :none),
              (:macrocall, Symbol("@testset"), "dot products", (:block,
                  (:line, 54, :none),
                  (:if, (:<:, :elty, :Real), (:block,
                      (:line, 55, :none),
                      (:(=), :x1, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                      (:line, 56, :none),
                      (:(=), :x2, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                      (:line, 57, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :dot
                              )), :x1, :x2), (:call, :sum, (:call, :.*, :x1, :x2)))),
                      (:line, 58, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :dot
                            )), :x1, (:call, :rand, :elty, (:call, :+, :n, 1))))
                    ), (:block,
                      (:line, 60, :none),
                      (:(=), :z1, (:call, :convert, (:curly, :Vector, :elty), (:., :complex, (:tuple, (:call, :randn, :n), (:call, :randn, :n))))),
                      (:line, 61, :none),
                      (:(=), :z2, (:call, :convert, (:curly, :Vector, :elty), (:., :complex, (:tuple, (:call, :randn, :n), (:call, :randn, :n))))),
                      (:line, 62, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :dotc
                              )), :z1, :z2), (:call, :sum, (:call, :.*, (:call, :conj, :z1), :z2)))),
                      (:line, 63, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :dotu
                              )), :z1, :z2), (:call, :sum, (:call, :.*, :z1, :z2)))),
                      (:line, 64, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :dotc
                            )), :z1, (:call, :rand, :elty, (:call, :+, :n, 1)))),
                      (:line, 65, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :dotu
                            )), :z1, (:call, :rand, :elty, (:call, :+, :n, 1))))
                    ))
                )),
              (:line, 68, :none),
              (:macrocall, Symbol("@testset"), "iamax", (:block,
                  (:line, 69, :none),
                  (:if, (:<:, :elty, :Real), (:block,
                      (:line, 70, :none),
                      (:(=), :x, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                      (:line, 71, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :BLAS, (:quote, #QuoteNode
                                :iamax
                              )), :x), (:call, :indmax, (:., :abs, (:tuple, :x)))))
                    ), (:block,
                      (:line, 73, :none),
                      (:(=), :z, (:call, :convert, (:curly, :Vector, :elty), (:., :complex, (:tuple, (:call, :randn, :n), (:call, :randn, :n))))),
                      (:line, 74, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :BLAS, (:quote, #QuoteNode
                                :iamax
                              )), :z), (:call, :indmax, (:call, :map, (:->, :x, (:block,
                                  (:line, 74, :none),
                                  (:call, :+, (:call, :abs, (:call, :real, :x)), (:call, :abs, (:call, :imag, :x)))
                                )), :z))))
                    ))
                )),
              (:line, 77, :none),
              (:macrocall, Symbol("@testset"), "axpy", (:block,
                  (:line, 78, :none),
                  (:if, (:<:, :elty, :Real), (:block,
                      (:line, 79, :none),
                      (:(=), :x1, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                      (:line, 80, :none),
                      (:(=), :x2, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                      (:line, 81, :none),
                      (:(=), :α, (:call, :rand, :elty)),
                      (:line, 82, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :axpy!
                              )), :α, (:call, :copy, :x1), (:call, :copy, :x2)), (:call, :+, :x2, (:call, :*, :α, :x1)))),
                      (:line, 83, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :x1), (:call, :rand, :elty, (:call, :+, :n, 1)))),
                      (:line, 84, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :x1), (:(:), 1, (:call, :div, :n, 2)), (:call, :copy, :x2), (:(:), 1, :n))),
                      (:line, 85, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :x1), (:(:), 0, (:call, :div, :n, 2)), (:call, :copy, :x2), (:(:), 1, (:call, :+, (:call, :div, :n, 2), 1)))),
                      (:line, 86, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :x1), (:(:), 1, (:call, :div, :n, 2)), (:call, :copy, :x2), (:(:), 0, (:call, :-, (:call, :div, :n, 2), 1)))),
                      (:line, 87, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :axpy!
                              )), :α, (:call, :copy, :x1), (:(:), 1, :n), (:call, :copy, :x2), (:(:), 1, :n)), (:call, :+, :x2, (:call, :*, :α, :x1))))
                    ), (:block,
                      (:line, 89, :none),
                      (:(=), :z1, (:call, :convert, (:curly, :Vector, :elty), (:., :complex, (:tuple, (:call, :randn, :n), (:call, :randn, :n))))),
                      (:line, 90, :none),
                      (:(=), :z2, (:call, :convert, (:curly, :Vector, :elty), (:., :complex, (:tuple, (:call, :randn, :n), (:call, :randn, :n))))),
                      (:line, 91, :none),
                      (:(=), :α, (:call, :rand, :elty)),
                      (:line, 92, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :axpy!
                              )), :α, (:call, :copy, :z1), (:call, :copy, :z2)), (:call, :+, :z2, (:call, :*, :α, :z1)))),
                      (:line, 93, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :z1), (:call, :rand, :elty, (:call, :+, :n, 1)))),
                      (:line, 94, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :z1), (:(:), 1, (:call, :div, :n, 2)), (:call, :copy, :z2), (:(:), 1, (:call, :+, (:call, :div, :n, 2), 1)))),
                      (:line, 95, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :z1), (:(:), 0, (:call, :div, :n, 2)), (:call, :copy, :z2), (:(:), 1, (:call, :+, (:call, :div, :n, 2), 1)))),
                      (:line, 96, :none),
                      (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :axpy!
                            )), :α, (:call, :copy, :z1), (:(:), 1, (:call, :div, :n, 2)), (:call, :copy, :z2), (:(:), 0, (:call, :-, (:call, :div, :n, 2), 1)))),
                      (:line, 97, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :axpy!
                              )), :α, (:call, :copy, :z1), (:(:), 1, :n), (:call, :copy, :z2), (:(:), 1, :n)), (:call, :+, :z2, (:call, :*, :α, :z1))))
                    ))
                )),
              (:line, 100, :none),
              (:macrocall, Symbol("@testset"), "nrm2, iamax, and asum for StridedVectors", (:block,
                  (:line, 101, :none),
                  (:(=), :a, (:call, :rand, :elty, :n)),
                  (:line, 102, :none),
                  (:(=), :b, (:call, :view, :a, (:(:), 2, 2, :n), 1)),
                  (:line, 103, :none),
                  (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                            :nrm2
                          )), :b), (:call, :norm, :b))),
                  (:line, 104, :none),
                  (:if, (:<:, :elty, :Real), (:block,
                      (:line, 105, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :asum
                              )), :b), (:call, :sum, (:., :abs, (:tuple, :b))))),
                      (:line, 106, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :iamax
                              )), :b), (:call, :indmax, (:., :abs, (:tuple, :b)))))
                    ), (:block,
                      (:line, 108, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :asum
                              )), :b), (:call, :+, (:call, :sum, (:., :abs, (:tuple, (:call, :real, :b)))), (:call, :sum, (:., :abs, (:tuple, (:call, :imag, :b))))))),
                      (:line, 109, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :BLAS, (:quote, #QuoteNode
                                :iamax
                              )), :b), (:call, :indmax, (:call, :map, (:->, :x, (:block,
                                  (:line, 109, :none),
                                  (:call, :+, (:call, :abs, (:call, :real, :x)), (:call, :abs, (:call, :imag, :x)))
                                )), :b))))
                    ))
                )),
              (:line, 113, :none),
              (:(=), :α, (:call, :rand, :elty)),
              (:line, 114, :none),
              (:(=), :a, (:call, :rand, :elty, :n)),
              (:line, 115, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                        :scal
                      )), :n, :α, :a, 1), (:call, :*, :α, :a))),
              (:line, 117, :none),
              (:macrocall, Symbol("@testset"), "trsv", (:block,
                  (:line, 118, :none),
                  (:(=), :A, (:call, :triu, (:call, :rand, :elty, :n, :n))),
                  (:line, 119, :none),
                  (:macrocall, Symbol("@testset"), "Vector and SubVector", (:for, (:(=), :x, (:tuple, (:call, :rand, :elty, :n), (:call, :view, (:call, :rand, :elty, (:call, :*, 2, :n)), (:(:), 1, 2, (:call, :*, 2, :n))))), (:block,
                        (:line, 120, :none),
                        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :\, :A, :x), (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :trsv
                                )), 'U', 'N', 'N', :A, :x))),
                        (:line, 121, :none),
                        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :trsv
                              )), 'U', 'N', 'N', :A, (:call, :ones, :elty, (:call, :+, :n, 1))))
                      )))
                )),
              (:line, 124, :none),
              (:macrocall, Symbol("@testset"), "ger, her, syr", (:for, (:block,
                    (:(=), :x, (:tuple, (:call, :rand, :elty, :n), (:call, :view, (:call, :rand, :elty, (:call, :*, 2, :n)), (:(:), 1, 2, (:call, :*, 2, :n))))),
                    (:(=), :y, (:tuple, (:call, :rand, :elty, :n), (:call, :view, (:call, :rand, :elty, (:call, :*, 3, :n)), (:(:), 1, 3, (:call, :*, 3, :n)))))
                  ), (:block,
                    (:line, 127, :none),
                    (:(=), :A, (:call, :rand, :elty, :n, :n)),
                    (:line, 128, :none),
                    (:(=), :α, (:call, :rand, :elty)),
                    (:line, 130, :none),
                    (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :ger!
                            )), :α, :x, :y, (:call, :copy, :A)), (:call, :+, :A, (:call, :*, :α, :x, (:', :y))))),
                    (:line, 131, :none),
                    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                            :ger!
                          )), :α, (:call, :ones, :elty, (:call, :+, :n, 1)), :y, (:call, :copy, :A))),
                    (:line, 133, :none),
                    (:(=), :A, (:call, :rand, :elty, :n, :n)),
                    (:line, 134, :none),
                    (:(=), :A, (:call, :+, :A, (:.', :A))),
                    (:line, 135, :none),
                    (:macrocall, Symbol("@test"), (:call, :issymmetric, :A)),
                    (:line, 136, :none),
                    (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syr!
                              )), 'U', :α, :x, (:call, :copy, :A))), (:call, :triu, (:call, :+, :A, (:call, :*, :α, :x, (:.', :x)))))),
                    (:line, 137, :none),
                    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                            :syr!
                          )), 'U', :α, (:call, :ones, :elty, (:call, :+, :n, 1)), (:call, :copy, :A))),
                    (:line, 139, :none),
                    (:if, (:<:, :elty, :Complex), (:block,
                        (:line, 140, :none),
                        (:(=), :A, (:call, :rand, :elty, :n, :n)),
                        (:line, 141, :none),
                        (:(=), :A, (:call, :+, :A, (:', :A))),
                        (:line, 142, :none),
                        (:(=), :α, (:call, :real, :α)),
                        (:line, 143, :none),
                        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                    :her!
                                  )), 'U', :α, :x, (:call, :copy, :A))), (:call, :triu, (:call, :+, :A, (:call, :*, :α, :x, (:', :x)))))),
                        (:line, 144, :none),
                        (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :her!
                              )), 'U', :α, (:call, :ones, :elty, (:call, :+, :n, 1)), (:call, :copy, :A)))
                      ))
                  ))),
              (:line, 147, :none),
              (:macrocall, Symbol("@testset"), "copy", (:block,
                  (:line, 148, :none),
                  (:(=), :x1, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                  (:line, 149, :none),
                  (:(=), :x2, (:call, :convert, (:curly, :Vector, :elty), (:call, :randn, :n))),
                  (:line, 150, :none),
                  (:call, (:., :BLAS, (:quote, #QuoteNode
                        :copy!
                      )), :x2, (:(:), 1, :n), :x1, (:(:), 1, :n)),
                  (:line, 151, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), :x2, :x1)),
                  (:line, 152, :none),
                  (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :copy!
                        )), :x2, (:(:), 1, :n), :x1, (:(:), 1, (:call, :-, :n, 1)))),
                  (:line, 153, :none),
                  (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :copy!
                        )), :x1, (:(:), 0, (:call, :div, :n, 2)), :x2, (:(:), 1, (:call, :+, (:call, :div, :n, 2), 1)))),
                  (:line, 154, :none),
                  (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :copy!
                        )), :x1, (:(:), 1, (:call, :+, (:call, :div, :n, 2), 1)), :x2, (:(:), 0, (:call, :div, :n, 2))))
                )),
              (:line, 157, :none),
              (:(=), :A, (:call, :triu, (:call, :rand, :elty, :n, :n))),
              (:line, 158, :none),
              (:(=), :x, (:call, :rand, :elty, :n)),
              (:line, 159, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                        :trmv
                      )), 'U', 'N', 'N', :A, :x), (:call, :*, :A, :x))),
              (:line, 160, :none),
              (:macrocall, Symbol("@testset"), "symmetric/Hermitian multiplication", (:block,
                  (:line, 161, :none),
                  (:(=), :x, (:call, :rand, :elty, :n)),
                  (:line, 162, :none),
                  (:(=), :A, (:call, :rand, :elty, :n, :n)),
                  (:line, 163, :none),
                  (:(=), :Aherm, (:call, :+, :A, (:', :A))),
                  (:line, 164, :none),
                  (:(=), :Asymm, (:call, :+, :A, (:.', :A))),
                  (:line, 165, :none),
                  (:macrocall, Symbol("@testset"), "symv and hemv", (:block,
                      (:line, 166, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :symv
                              )), 'U', :Asymm, :x), (:call, :*, :Asymm, :x))),
                      (:line, 167, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symv!
                            )), 'U', (:call, :one, :elty), :Asymm, :x, (:call, :one, :elty), (:call, :ones, :elty, (:call, :+, :n, 1)))),
                      (:line, 168, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symv
                            )), 'U', (:call, :ones, :elty, :n, (:call, :+, :n, 1)), :x)),
                      (:line, 169, :none),
                      (:if, (:<:, :elty, :BlasComplex), (:block,
                          (:line, 170, :none),
                          (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                    :hemv
                                  )), 'U', :Aherm, :x), (:call, :*, :Aherm, :x))),
                          (:line, 171, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemv
                                )), 'U', (:call, :ones, :elty, :n, (:call, :+, :n, 1)), :x)),
                          (:line, 172, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemv!
                                )), 'U', (:call, :one, :elty), :Aherm, :x, (:call, :one, :elty), (:call, :ones, :elty, (:call, :+, :n, 1))))
                        ))
                    )),
                  (:line, 176, :none),
                  (:macrocall, Symbol("@testset"), "symm error throwing", (:block,
                      (:line, 177, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symm
                            )), 'L', 'U', (:call, :ones, :elty, :n, (:call, :-, :n, 1)), (:call, :rand, :elty, :n, :n))),
                      (:line, 178, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symm
                            )), 'R', 'U', (:call, :ones, :elty, (:call, :-, :n, 1), :n), (:call, :rand, :elty, :n, :n))),
                      (:line, 179, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symm!
                            )), 'L', 'U', (:call, :one, :elty), :Asymm, (:call, :ones, :elty, :n, :n), (:call, :one, :elty), (:call, :rand, :elty, (:call, :-, :n, 1), :n))),
                      (:line, 180, :none),
                      (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                              :symm!
                            )), 'L', 'U', (:call, :one, :elty), :Asymm, (:call, :ones, :elty, :n, :n), (:call, :one, :elty), (:call, :rand, :elty, :n, (:call, :-, :n, 1)))),
                      (:line, 181, :none),
                      (:if, (:<:, :elty, :BlasComplex), (:block,
                          (:line, 182, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemm
                                )), 'L', 'U', (:call, :ones, :elty, :n, (:call, :-, :n, 1)), (:call, :rand, :elty, :n, :n))),
                          (:line, 183, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemm
                                )), 'R', 'U', (:call, :ones, :elty, (:call, :-, :n, 1), :n), (:call, :rand, :elty, :n, :n))),
                          (:line, 184, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemm!
                                )), 'L', 'U', (:call, :one, :elty), :Aherm, (:call, :ones, :elty, :n, :n), (:call, :one, :elty), (:call, :rand, :elty, (:call, :-, :n, 1), :n))),
                          (:line, 185, :none),
                          (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                                  :hemm!
                                )), 'L', 'U', (:call, :one, :elty), :Aherm, (:call, :ones, :elty, :n, :n), (:call, :one, :elty), (:call, :rand, :elty, :n, (:call, :-, :n, 1))))
                        ))
                    ))
                )),
              (:line, 189, :none),
              (:macrocall, Symbol("@testset"), "trmm error throwing", (:block,
                  (:line, 190, :none),
                  (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :trmm
                        )), 'L', 'U', 'N', 'N', (:call, :one, :elty), (:call, :triu, (:call, :rand, :elty, :n, :n)), (:call, :ones, :elty, (:call, :+, :n, 1), :n))),
                  (:line, 191, :none),
                  (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :trmm
                        )), 'R', 'U', 'N', 'N', (:call, :one, :elty), (:call, :triu, (:call, :rand, :elty, :n, :n)), (:call, :ones, :elty, :n, (:call, :+, :n, 1))))
                )),
              (:line, 195, :none),
              (:(=), :A, (:call, :triu, (:call, :rand, :elty, :n, :n))),
              (:line, 196, :none),
              (:(=), :B, (:call, :rand, :elty, (:tuple, :n, :n))),
              (:line, 197, :none),
              (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                        :trsm
                      )), 'L', 'U', 'N', 'N', (:call, :one, :elty), :A, :B), (:call, :\, :A, :B))),
              (:line, 200, :none),
              (:macrocall, Symbol("@testset"), "banded matrix mv", (:block,
                  (:line, 201, :none),
                  (:macrocall, Symbol("@testset"), "gbmv", (:block,
                      (:line, 202, :none),
                      (:(=), :TD, (:call, :Tridiagonal, (:call, :rand, :elty, (:call, :-, :n, 1)), (:call, :rand, :elty, :n), (:call, :rand, :elty, (:call, :-, :n, 1)))),
                      (:line, 203, :none),
                      (:(=), :x, (:call, :rand, :elty, :n)),
                      (:line, 205, :none),
                      (:(=), :fTD, (:call, :zeros, :elty, 3, :n)),
                      (:line, 206, :none),
                      (:(=), (:ref, :fTD, 1, (:(:), 2, :n)), (:., :TD, (:quote, #QuoteNode
                            :du
                          ))),
                      (:line, 207, :none),
                      (:(=), (:ref, :fTD, 2, :(:)), (:., :TD, (:quote, #QuoteNode
                            :d
                          ))),
                      (:line, 208, :none),
                      (:(=), (:ref, :fTD, 3, (:(:), 1, (:call, :-, :n, 1))), (:., :TD, (:quote, #QuoteNode
                            :dl
                          ))),
                      (:line, 209, :none),
                      (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gbmv
                              )), 'N', :n, 1, 1, :fTD, :x), (:call, :*, :TD, :x)))
                    )),
                  (:line, 212, :none),
                  (:macrocall, Symbol("@testset"), "sbmv", (:block,
                      (:line, 213, :none),
                      (:if, (:<:, :elty, :BlasReal), (:block,
                          (:line, 214, :none),
                          (:(=), :ST, (:call, :SymTridiagonal, (:call, :rand, :elty, :n), (:call, :rand, :elty, (:call, :-, :n, 1)))),
                          (:line, 215, :none),
                          (:(=), :x, (:call, :rand, :elty, :n)),
                          (:line, 217, :none),
                          (:(=), :fST, (:call, :zeros, :elty, 2, :n)),
                          (:line, 218, :none),
                          (:(=), (:ref, :fST, 1, (:(:), 2, :n)), (:., :ST, (:quote, #QuoteNode
                                :ev
                              ))),
                          (:line, 219, :none),
                          (:(=), (:ref, :fST, 2, :(:)), (:., :ST, (:quote, #QuoteNode
                                :dv
                              ))),
                          (:line, 220, :none),
                          (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                    :sbmv
                                  )), 'U', 1, :fST, :x), (:call, :*, :ST, :x)))
                        ), (:block,
                          (:line, 222, :none),
                          (:(=), :dv, (:call, :real, (:call, :rand, :elty, :n))),
                          (:line, 223, :none),
                          (:(=), :ev, (:call, :rand, :elty, (:call, :-, :n, 1))),
                          (:line, 224, :none),
                          (:(=), :bH, (:call, :zeros, :elty, 2, :n)),
                          (:line, 225, :none),
                          (:(=), (:ref, :bH, 1, (:(:), 2, :n)), :ev),
                          (:line, 226, :none),
                          (:(=), (:ref, :bH, 2, :(:)), :dv),
                          (:line, 227, :none),
                          (:(=), :fullH, (:call, :+, (:call, :diagm, :dv), (:call, :diagm, (:call, :conj, :ev), -1), (:call, :diagm, :ev, 1))),
                          (:line, 228, :none),
                          (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :BLAS, (:quote, #QuoteNode
                                    :hbmv
                                  )), 'U', 1, :bH, :x), (:call, :*, :fullH, :x)))
                        ))
                    ))
                ))
            ), (:(=), :n, 10)),
          (:line, 234, :none),
          (:macrocall, Symbol("@testset"), "gemv", (:block,
              (:line, 235, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'N', :I4, :o4), :o4))),
              (:line, 236, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'T', :I4, :o4), :o4))),
              (:line, 237, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'N', :el2, :I4, :o4), (:call, :*, :el2, :o4)))),
              (:line, 238, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'T', :el2, :I4, :o4), (:call, :*, :el2, :o4)))),
              (:line, 239, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemv
                    )), 'N', :I43, :o4)),
              (:line, 240, :none),
              (:(=), :o4cp, (:call, :copy, :o4)),
              (:line, 241, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemv!
                    )), 'T', (:call, :one, :elty), :I43, :o4, (:call, :one, :elty), :o4cp)),
              (:line, 242, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemv!
                    )), 'C', (:call, :one, :elty), :I43, :o4, (:call, :one, :elty), :o4cp)),
              (:line, 243, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv!
                        )), 'N', (:call, :one, :elty), :I4, :o4, :elm1, :o4cp), :z4))),
              (:line, 244, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :o4cp, :z4))),
              (:line, 245, :none),
              (:(=), (:ref, :o4cp, :(:)), :o4),
              (:line, 246, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv!
                        )), 'T', (:call, :one, :elty), :I4, :o4, :elm1, :o4cp), :z4))),
              (:line, 247, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :o4cp, :z4))),
              (:line, 248, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'N', :U4, :o4), :v41))),
              (:line, 249, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemv
                        )), 'N', :U4, :o4), :v41)))
            )),
          (:line, 251, :none),
          (:macrocall, Symbol("@testset"), "gemm", (:block,
              (:line, 252, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'N', :I4, :I4), :I4))),
              (:line, 253, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'T', :I4, :I4), :I4))),
              (:line, 254, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'T', 'N', :I4, :I4), :I4))),
              (:line, 255, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'T', 'T', :I4, :I4), :I4))),
              (:line, 256, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'N', :el2, :I4, :I4), (:call, :*, :el2, :I4)))),
              (:line, 257, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'T', :el2, :I4, :I4), (:call, :*, :el2, :I4)))),
              (:line, 258, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'T', 'N', :el2, :I4, :I4), (:call, :*, :el2, :I4)))),
              (:line, 259, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                            :BLAS
                          )), (:quote, #QuoteNode
                          :gemm
                        )), 'T', 'T', :el2, :I4, :I4), (:call, :*, :el2, :I4)))),
              (:line, 260, :none),
              (:(=), :I4cp, (:call, :copy, :I4)),
              (:line, 261, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm!
                        )), 'N', 'N', (:call, :one, :elty), :I4, :I4, :elm1, :I4cp), :Z4))),
              (:line, 262, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :I4cp, :Z4))),
              (:line, 263, :none),
              (:(=), (:ref, :I4cp, :(:)), :I4),
              (:line, 264, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm!
                        )), 'N', 'T', (:call, :one, :elty), :I4, :I4, :elm1, :I4cp), :Z4))),
              (:line, 265, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :I4cp, :Z4))),
              (:line, 266, :none),
              (:(=), (:ref, :I4cp, :(:)), :I4),
              (:line, 267, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm!
                        )), 'T', 'N', (:call, :one, :elty), :I4, :I4, :elm1, :I4cp), :Z4))),
              (:line, 268, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :I4cp, :Z4))),
              (:line, 269, :none),
              (:(=), (:ref, :I4cp, :(:)), :I4),
              (:line, 270, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm!
                        )), 'T', 'T', (:call, :one, :elty), :I4, :I4, :elm1, :I4cp), :Z4))),
              (:line, 271, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, :I4cp, :Z4))),
              (:line, 272, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'N', :I4, :U4), :U4))),
              (:line, 273, :none),
              (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :gemm
                        )), 'N', 'T', :I4, :U4), :L4))),
              (:line, 274, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemm!
                    )), 'N', 'N', (:call, :one, :elty), :I4, :I4, :elm1, (:call, :eye, :elty, 5))),
              (:line, 275, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemm!
                    )), 'N', 'N', (:call, :one, :elty), :I43, :I4, :elm1, :I4)),
              (:line, 276, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemm!
                    )), 'T', 'N', (:call, :one, :elty), :I43, :I4, :elm1, :I43)),
              (:line, 277, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemm!
                    )), 'N', 'T', (:call, :one, :elty), :I43, :I43, :elm1, :I43)),
              (:line, 278, :none),
              (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                      :gemm!
                    )), 'T', 'T', (:call, :one, :elty), :I43, :I43, :elm1, (:', :I43)))
            )),
          (:line, 280, :none),
          (:macrocall, Symbol("@testset"), "gemm compared to (sy)(he)rk", (:block,
              (:line, 281, :none),
              (:if, (:<:, (:call, :eltype, :elm1), :Complex), (:block,
                  (:line, 282, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'U', 'N', :U4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :U4, :U4))))),
                  (:line, 283, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'L', 'N', :U4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :U4, :U4))))),
                  (:line, 284, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'U', 'N', :L4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :L4, :L4))))),
                  (:line, 285, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'L', 'N', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :L4, :L4))))),
                  (:line, 286, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'U', 'C', :U4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :U4, :U4))))),
                  (:line, 287, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'L', 'C', :U4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :U4, :U4))))),
                  (:line, 288, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'U', 'C', :L4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :L4, :L4))))),
                  (:line, 289, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'L', 'C', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :L4, :L4))))),
                  (:line, 290, :none),
                  (:(=), :ans, (:call, :similar, :L4)),
                  (:line, 291, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk
                              )), 'L', 'C', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :herk!
                              )), 'L', 'C', (:call, :real, (:call, :one, :elty)), :L4, (:call, :real, (:call, :zero, :elty)), :ans))))),
                  (:line, 292, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., (:., :Base, (:quote, #QuoteNode
                                :LinAlg
                              )), (:quote, #QuoteNode
                              :copytri!
                            )), :ans, 'L'), (:call, (:., (:., :LinAlg, (:quote, #QuoteNode
                                :BLAS
                              )), (:quote, #QuoteNode
                              :gemm
                            )), 'T', 'N', :L4, :L4)))),
                  (:line, 293, :none),
                  (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :herk!
                        )), 'L', 'N', (:call, :real, (:call, :one, :elty)), (:call, :eye, :elty, 5), (:call, :real, (:call, :one, :elty)), (:call, :eye, :elty, 6)))
                ), (:block,
                  (:line, 295, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'U', 'N', :U4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :U4, :U4))))),
                  (:line, 296, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'L', 'N', :U4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :U4, :U4))))),
                  (:line, 297, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'U', 'N', :L4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :L4, :L4))))),
                  (:line, 298, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'L', 'N', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'N', 'T', :L4, :L4))))),
                  (:line, 299, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'U', 'T', :U4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :U4, :U4))))),
                  (:line, 300, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'L', 'T', :U4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :U4, :U4))))),
                  (:line, 301, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'U', 'T', :L4)), (:call, :triu, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :L4, :L4))))),
                  (:line, 302, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'L', 'T', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :gemm
                              )), 'T', 'N', :L4, :L4))))),
                  (:line, 303, :none),
                  (:(=), :ans, (:call, :similar, :L4)),
                  (:line, 304, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk
                              )), 'L', 'T', :L4)), (:call, :tril, (:call, (:., :BLAS, (:quote, #QuoteNode
                                :syrk!
                              )), 'L', 'T', (:call, :one, :elty), :L4, (:call, :zero, :elty), :ans))))),
                  (:line, 305, :none),
                  (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, (:., (:., :Base, (:quote, #QuoteNode
                                :LinAlg
                              )), (:quote, #QuoteNode
                              :copytri!
                            )), :ans, 'L'), (:call, (:., :BLAS, (:quote, #QuoteNode
                              :gemm
                            )), 'T', 'N', :L4, :L4)))),
                  (:line, 306, :none),
                  (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, (:., :BLAS, (:quote, #QuoteNode
                          :syrk!
                        )), 'L', 'N', (:call, :one, :elty), (:call, :eye, :elty, 5), (:call, :one, :elty), (:call, :eye, :elty, 6)))
                ))
            ))
        ))),
    (:line, 311, :none),
    (:macrocall, Symbol("@testset"), (:string, "syr for eltype ", :elty), (:for, (:(=), :elty, (:tuple, :Float32, :Float64, (:curly, :Complex, :Float32), (:curly, :Complex, :Float64))), (:block,
          (:line, 312, :none),
          (:(=), :A, (:call, :rand, :elty, 5, 5)),
          (:line, 313, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, :*, (:ref, :A, 1, :(:)), (:.', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :syr!
                  )), 'U', (:call, :one, :elty), (:ref, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 314, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, :*, (:ref, :A, 1, :(:)), (:.', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :syr!
                  )), 'L', (:call, :one, :elty), (:ref, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 315, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, :*, (:ref, :A, 1, :(:)), (:.', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :syr!
                  )), 'U', (:call, :one, :elty), (:call, :view, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 316, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, :*, (:ref, :A, 1, :(:)), (:.', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :syr!
                  )), 'L', (:call, :one, :elty), (:call, :view, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5))))
        ))),
    (:line, 319, :none),
    (:macrocall, Symbol("@testset"), (:string, "her for eltype ", :elty), (:for, (:(=), :elty, (:tuple, (:curly, :Complex, :Float32), (:curly, :Complex, :Float64))), (:block,
          (:line, 320, :none),
          (:(=), :A, (:call, :rand, :elty, 5, 5)),
          (:line, 321, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, :*, (:ref, :A, 1, :(:)), (:', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :her!
                  )), 'U', (:call, :one, (:call, :real, :elty)), (:ref, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 322, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, :*, (:ref, :A, 1, :(:)), (:', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :her!
                  )), 'L', (:call, :one, (:call, :real, :elty)), (:ref, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 323, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :triu, (:call, :*, (:ref, :A, 1, :(:)), (:', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :her!
                  )), 'U', (:call, :one, (:call, :real, :elty)), (:call, :view, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5)))),
          (:line, 324, :none),
          (:macrocall, Symbol("@test"), (:call, :≈, (:call, :tril, (:call, :*, (:ref, :A, 1, :(:)), (:', (:ref, :A, 1, :(:))))), (:call, (:., :BLAS, (:quote, #QuoteNode
                    :her!
                  )), 'L', (:call, :one, (:call, :real, :elty)), (:call, :view, :A, 1, :(:)), (:call, :zeros, :elty, 5, 5))))
        )))
  ))