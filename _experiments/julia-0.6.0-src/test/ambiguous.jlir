(:quote, (:block,
    (:line, 4, :none),
    (:const, (:(=), :lineoffset, (:call, :+, 4, 0))),
    (:line, 5, :none),
    (:(=), (:call, :ambig, :x, :y), (:block,
        (:line, 5, :none),
        1
      )),
    (:line, 6, :none),
    (:(=), (:call, :ambig, (:(::), :x, :Integer), :y), (:block,
        (:line, 6, :none),
        2
      )),
    (:line, 7, :none),
    (:(=), (:call, :ambig, :x, (:(::), :y, :Integer)), (:block,
        (:line, 7, :none),
        3
      )),
    (:line, 8, :none),
    (:(=), (:call, :ambig, (:(::), :x, :Int), (:(::), :y, :Int)), (:block,
        (:line, 8, :none),
        4
      )),
    (:line, 9, :none),
    (:(=), (:call, :ambig, (:(::), :x, :Number), :y), (:block,
        (:line, 9, :none),
        5
      )),
    (:line, 13, :none),
    (:call, :include, "testenv.jl"),
    (:line, 15, :none),
    (:(=), :ambigs, (:ref, :Any, (:vect,), (:vect, 3), (:vect, 2, 5), (:vect,), (:vect, 3))),
    (:line, 17, :none),
    (:(=), :mt, (:call, :methods, :ambig)),
    (:line, 19, :none),
    (:(=), (:call, :getline, (:(::), :m, :Method)), (:block,
        (:line, 19, :none),
        (:call, :-, (:., :m, (:quote, #QuoteNode
              :line
            )), :lineoffset)
      )),
    (:line, 21, :none),
    (:for, (:(=), :m, :mt), (:block,
        (:line, 22, :none),
        (:(=), :ln, (:call, :getline, :m)),
        (:line, 23, :none),
        (:(=), :atarget, (:ref, :ambigs, :ln)),
        (:line, 24, :none),
        (:if, (:call, :isempty, :atarget), (:block,
            (:line, 25, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:., :m, (:quote, #QuoteNode
                    :ambig
                  )), :nothing))
          ), (:block,
            (:line, 27, :none),
            (:(=), :aln, (:typed_comprehension, :Int, (:generator, (:call, :getline, :a), (:(=), :a, (:., :m, (:quote, #QuoteNode
                        :ambig
                      )))))),
            (:line, 28, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, :aln), :atarget))
          ))
      )),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :ambig)), 5)),
    (:line, 33, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, (:., :Base, (:quote, #QuoteNode
                :methods_including_ambiguous
              )), :ambig, :Tuple)), 5)),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :ambig, (:tuple, :Int, :Int))), 1)),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :ambig, (:tuple, :UInt8, :Int))), 0)),
    (:line, 37, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, (:., :Base, (:quote, #QuoteNode
                :methods_including_ambiguous
              )), :ambig, (:tuple, :UInt8, :Int))), 2)),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ambig, "hi", "there"), 1)),
    (:line, 40, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ambig, 3.1, 3.2), 5)),
    (:line, 41, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ambig, 3, 4), 4)),
    (:line, 42, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :ambig, 0x03, 4)),
    (:line, 43, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :ambig, 0x03, 4)),
    (:line, 46, :none),
    (:(=), (:call, :callambig, :x, :y), (:block,
        (:line, 46, :none),
        (:call, :ambig, :x, :y)
      )),
    (:line, 47, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :callambig, 0x03, 4)),
    (:line, 50, :none),
    (:let, (:block,
        (:line, 55, :none),
        (:(=), :io, (:call, :IOBuffer)),
        (:line, 56, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :showerror
            )), :io, :err),
        (:line, 57, :none),
        (:(=), :lines, (:call, :split, (:call, :String, (:call, :take!, :io)), '\n')),
        (:line, 58, :none),
        (:(=), (:call, :ambig_checkline, :str), (:block,
            (:line, 58, :none),
            (:||, (:call, :startswith, :str, (:string, "  ambig(x, y::Integer) in ", :curmod_str, " at")), (:call, :startswith, :str, (:string, "  ambig(x::Integer, y) in ", :curmod_str, " at")))
          )),
        (:line, 60, :none),
        (:macrocall, Symbol("@test"), (:call, :ambig_checkline, (:ref, :lines, 2))),
        (:line, 61, :none),
        (:macrocall, Symbol("@test"), (:call, :ambig_checkline, (:ref, :lines, 3))),
        (:line, 62, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :lines, 4), "Possible fix, define")),
        (:line, 63, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :lines, 5), "  ambig(::Integer, ::Integer)"))
      ), (:(=), :err, (:try, (:block,
            (:line, 51, :none),
            (:call, :ambig, 0x03, 4)
          ), :_e_, (:block,
            (:line, 53, :none),
            :_e_
          )))),
    (:line, 68, :none),
    (:(=), :io, (:call, :IOBuffer)),
    (:line, 69, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :precompile, :ambig, (:tuple, :Int, :Int)), true)),
    (:line, 70, :none),
    (:call, :cfunction, :ambig, :Int, (:tuple, :Int, :Int)),
    (:line, 71, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :code_lowered, :ambig, (:tuple, :Int, :Int))), 1)),
    (:line, 72, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :code_typed, :ambig, (:tuple, :Int, :Int))), 1)),
    (:line, 73, :none),
    (:call, :code_llvm, :io, :ambig, (:tuple, :Int, :Int)),
    (:line, 74, :none),
    (:call, :code_native, :io, :ambig, (:tuple, :Int, :Int)),
    (:line, 77, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :precompile, :ambig, (:tuple, :UInt8, :Int)), false)),
    (:line, 78, :none),
    (:call, :cfunction, :ambig, :Int, (:tuple, :UInt8, :Int)),
    (:line, 79, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :which, :ambig, (:tuple, :UInt8, :Int))),
    (:line, 80, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :code_llvm, :io, :ambig, (:tuple, :UInt8, :Int))),
    (:line, 81, :none),
    (:macrocall, Symbol("@test_throws"), :ErrorException, (:call, :code_native, :io, :ambig, (:tuple, :UInt8, :Int))),
    (:line, 84, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :ambig, 2, 0x03)),
    (:line, 85, :none),
    (:(=), (:call, :ambig, :x, (:(::), :y, :Integer)), (:block,
        (:line, 85, :none),
        3
      )),
    (:line, 86, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :ambig, 2, 0x03)),
    (:line, 89, :none),
    (:module, true, :Ambig1, (:block,
        (:line, 89, :none),
        (:line, 90, :none),
        (:(=), (:call, :ambig, :x, :y), (:block,
            (:line, 90, :none),
            1
          )),
        (:line, 91, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Integer), :y), (:block,
            (:line, 91, :none),
            2
          )),
        (:line, 92, :none),
        (:(=), (:call, :ambig, :x, (:(::), :y, :Integer)), (:block,
            (:line, 92, :none),
            3
          ))
      )),
    (:line, 95, :none),
    (:(=), :ambs, (:call, :detect_ambiguities, :Ambig1)),
    (:line, 96, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ambs), 1)),
    (:line, 98, :none),
    (:module, true, :Ambig2, (:block,
        (:line, 98, :none),
        (:line, 99, :none),
        (:(=), (:call, :ambig, :x, :y), (:block,
            (:line, 99, :none),
            1
          )),
        (:line, 100, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Integer), :y), (:block,
            (:line, 100, :none),
            2
          )),
        (:line, 101, :none),
        (:(=), (:call, :ambig, :x, (:(::), :y, :Integer)), (:block,
            (:line, 101, :none),
            3
          )),
        (:line, 102, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Number), :y), (:block,
            (:line, 102, :none),
            4
          ))
      )),
    (:line, 105, :none),
    (:(=), :ambs, (:call, :detect_ambiguities, :Ambig2)),
    (:line, 106, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ambs), 2)),
    (:line, 108, :none),
    (:module, true, :Ambig3, (:block,
        (:line, 108, :none),
        (:line, 109, :none),
        (:(=), (:call, :ambig, :x, :y), (:block,
            (:line, 109, :none),
            1
          )),
        (:line, 110, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Integer), :y), (:block,
            (:line, 110, :none),
            2
          )),
        (:line, 111, :none),
        (:(=), (:call, :ambig, :x, (:(::), :y, :Integer)), (:block,
            (:line, 111, :none),
            3
          )),
        (:line, 112, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Int), (:(::), :y, :Int)), (:block,
            (:line, 112, :none),
            4
          ))
      )),
    (:line, 115, :none),
    (:(=), :ambs, (:call, :detect_ambiguities, :Ambig3)),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ambs), 1)),
    (:line, 118, :none),
    (:module, true, :Ambig4, (:block,
        (:line, 118, :none),
        (:line, 119, :none),
        (:(=), (:call, :ambig, :x, :y), (:block,
            (:line, 119, :none),
            1
          )),
        (:line, 120, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Int), :y), (:block,
            (:line, 120, :none),
            2
          )),
        (:line, 121, :none),
        (:(=), (:call, :ambig, :x, (:(::), :y, :Int)), (:block,
            (:line, 121, :none),
            3
          )),
        (:line, 122, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Int), (:(::), :y, :Int)), (:block,
            (:line, 122, :none),
            4
          ))
      )),
    (:line, 124, :none),
    (:(=), :ambs, (:call, :detect_ambiguities, :Ambig4)),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ambs), 0)),
    (:line, 127, :none),
    (:module, true, :Ambig5, (:block,
        (:line, 127, :none),
        (:line, 128, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Int8), :y), (:block,
            (:line, 128, :none),
            1
          )),
        (:line, 129, :none),
        (:(=), (:call, :ambig, (:(::), :x, :Integer), :y), (:block,
            (:line, 129, :none),
            2
          )),
        (:line, 130, :none),
        (:(=), (:call, :ambig, :x, (:(::), :y, :Int)), (:block,
            (:line, 130, :none),
            3
          ))
      )),
    (:line, 133, :none),
    (:(=), :ambs, (:call, :detect_ambiguities, :Ambig5)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ambs), 2)),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :detect_ambiguities, (:parameters, (:kw, :imported, true), (:kw, :ambiguous_bottom, false)), :Core, :Base), (:vect,))),
    (:line, 140, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isempty, (:call, :detect_ambiguities, (:parameters, (:kw, :imported, true), (:kw, :ambiguous_bottom, true)), :Core, :Base)))),
    (:line, 142, :none),
    (:(=), (:call, :amb_1, (:(::), :Int8), (:(::), :Int)), (:block,
        (:line, 142, :none),
        1
      )),
    (:line, 143, :none),
    (:(=), (:call, :amb_1, (:(::), :Integer), :x), (:block,
        (:line, 143, :none),
        2
      )),
    (:line, 144, :none),
    (:(=), (:call, :amb_1, :x, (:(::), :Int)), (:block,
        (:line, 144, :none),
        3
      )),
    (:line, 148, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :amb_1, (:curly, :Tuple, :Integer, :Int))), 1)),
    (:line, 150, :none),
    (:(=), (:call, :amb_2, (:(::), :Int), :y), (:block,
        (:line, 150, :none),
        1
      )),
    (:line, 151, :none),
    (:(=), (:call, :amb_2, :x, (:(::), :Int)), (:block,
        (:line, 151, :none),
        2
      )),
    (:line, 152, :none),
    (:(=), (:call, :amb_2, (:(::), :Int8), :y), (:block,
        (:line, 152, :none),
        3
      )),
    (:line, 153, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :amb_2)), 3)),
    (:line, 155, :none),
    (:(=), (:call, :amb_3, (:(::), :Int8), (:(::), :Int8)), (:block,
        (:line, 155, :none),
        1
      )),
    (:line, 156, :none),
    (:(=), (:call, :amb_3, (:(::), :Int16), (:(::), :Int16)), (:block,
        (:line, 156, :none),
        2
      )),
    (:line, 157, :none),
    (:(=), (:call, :amb_3, (:(::), :Integer), (:(::), :Integer)), (:block,
        (:line, 157, :none),
        3
      )),
    (:line, 158, :none),
    (:(=), (:call, :amb_3, (:(::), :Integer), :x), (:block,
        (:line, 158, :none),
        4
      )),
    (:line, 159, :none),
    (:(=), (:call, :amb_3, :x, (:(::), :Integer)), (:block,
        (:line, 159, :none),
        5
      )),
    (:line, 161, :none),
    (:let, (:block,
        (:line, 162, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, (:., :Base, (:quote, #QuoteNode
                  :isambiguous
                )), (:ref, :ms, 4), (:ref, :ms, 5))))
      ), (:(=), :ms, (:., (:call, :methods, :amb_3), (:quote, #QuoteNode
            :ms
          )))),
    (:line, 165, :none),
    (:(=), (:call, :amb_4, (:(::), :Int8), (:(::), :Int8)), (:block,
        (:line, 165, :none),
        1
      )),
    (:line, 166, :none),
    (:(=), (:call, :amb_4, (:(::), :Int16), (:(::), :Int16)), (:block,
        (:line, 166, :none),
        2
      )),
    (:line, 167, :none),
    (:(=), (:call, :amb_4, (:(::), :Integer), :x), (:block,
        (:line, 167, :none),
        4
      )),
    (:line, 168, :none),
    (:(=), (:call, :amb_4, :x, (:(::), :Integer)), (:block,
        (:line, 168, :none),
        5
      )),
    (:line, 170, :none),
    (:let, (:block,
        (:line, 171, :none),
        (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
                :isambiguous
              )), (:ref, :ms, 3), (:ref, :ms, 4)))
      ), (:(=), :ms, (:., (:call, :methods, :amb_4), (:quote, #QuoteNode
            :ms
          )))),
    (:line, 174, :none),
    (:(=), (:call, (:curly, :g16493, (:<:, :T, :Number)), (:(::), :x, :T), (:(::), :y, :Integer)), (:block,
        (:line, 174, :none),
        0
      )),
    (:line, 175, :none),
    (:(=), (:call, (:curly, :g16493, :T), (:(::), :x, (:curly, :Complex, :T)), :y), (:block,
        (:line, 175, :none),
        1
      )),
    (:line, 176, :none),
    (:let, (:block,
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ms), 1)),
        (:line, 178, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., (:call, :first, :ms), (:quote, #QuoteNode
                :sig
              )), (:where, (:curly, :Tuple, (:call, :typeof, :g16493), (:curly, :Complex, :T), :Any), :T)))
      ), (:(=), :ms, (:call, :methods, :g16493, (:tuple, :Complex, :Any)))),
    (:line, 182, :none),
    (:module, true, :Ambig6, (:block,
        (:line, 182, :none),
        (:line, 183, :none),
        (:type, false, (:curly, :ScaleMinMax, :To, :From), (:block,
            (:line, 183, :none)
          )),
        (:line, 184, :none),
        (:(=), (:call, (:curly, :map1, (:<:, :To, (:curly, :Union, :Float32, :Float64)), (:<:, :From, :Real)), (:(::), :mapi, (:curly, :ScaleMinMax, :To, :From)), (:(::), :val, :From)), (:block,
            (:line, 184, :none),
            1
          )),
        (:line, 185, :none),
        (:(=), (:call, (:curly, :map1, (:<:, :To, (:curly, :Union, :Float32, :Float64)), (:<:, :From, :Real)), (:(::), :mapi, (:curly, :ScaleMinMax, :To, :From)), (:(::), :val, (:curly, :Union, :Real, :Complex))), (:block,
            (:line, 185, :none),
            2
          ))
      )),
    (:line, 188, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :detect_ambiguities, :Ambig6))),
    (:line, 190, :none),
    (:module, true, :Ambig7, (:block,
        (:line, 190, :none),
        (:line, 191, :none),
        (:type, false, :T, (:block,
            (:line, 191, :none)
          )),
        (:line, 192, :none),
        (:(=), (:call, (:(::), :T), (:(::), :x, :Int8), :y), (:block,
            (:line, 192, :none),
            1
          )),
        (:line, 193, :none),
        (:(=), (:call, (:(::), :T), :x, (:(::), :y, :Int8)), (:block,
            (:line, 193, :none),
            2
          ))
      )),
    (:line, 195, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :detect_ambiguities, :Ambig7)), 1)),
    (:line, 197, :none),
    (:module, true, :Ambig17648, (:block,
        (:line, 197, :none),
        (:line, 198, :none),
        (:type, false, (:<:, (:curly, :MyArray, :T, :N), (:curly, :AbstractArray, :T, :N)), (:block,
            (:line, 199, :none),
            (:(::), :data, (:curly, :Array, :T, :N))
          )),
        (:line, 202, :none),
        (:(=), (:call, (:curly, :foo, :T, :N), (:(::), (:curly, :Type, (:curly, :Array, :T, :N))), (:(::), :A, (:curly, :MyArray, :T, :N))), (:block,
            (:line, 202, :none),
            (:., :A, (:quote, #QuoteNode
                :data
              ))
          )),
        (:line, 203, :none),
        (:(=), (:call, (:curly, :foo, (:<:, :T, :AbstractFloat), :N), (:(::), (:curly, :Type, (:curly, :Array, :T, :N))), (:(::), :A, (:curly, :MyArray, :T, :N))), (:block,
            (:line, 203, :none),
            (:., :A, (:quote, #QuoteNode
                :data
              ))
          )),
        (:line, 204, :none),
        (:(=), (:call, (:curly, :foo, (:<:, :S, :AbstractFloat), :N, (:<:, :T, :AbstractFloat)), (:(::), (:curly, :Type, (:curly, :Array, :S, :N))), (:(::), :A, (:curly, :AbstractArray, :T, :N))), (:block,
            (:line, 204, :none),
            (:call, :copy!, (:call, (:curly, :Array, :S), (:call, :size, :A)), :A)
          )),
        (:line, 205, :none),
        (:(=), (:call, (:curly, :foo, (:<:, :S, :AbstractFloat), :N, (:<:, :T, :AbstractFloat)), (:(::), (:curly, :Type, (:curly, :Array, :S, :N))), (:(::), :A, (:curly, :MyArray, :T, :N))), (:block,
            (:line, 205, :none),
            (:call, :copy!, (:call, (:curly, :Array, :S), (:call, :size, :A)), (:., :A, (:quote, #QuoteNode
                  :data
                )))
          ))
      )),
    (:line, 208, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :detect_ambiguities, :Ambig17648))),
    (:line, 210, :none),
    (:module, true, :Ambig8, (:block,
        (:line, 210, :none),
        (:line, 211, :none),
        (:toplevel, (:using, :Base, :DimsInteger), (:using, :Base, :Indices)),
        (:line, 212, :none),
        (:(=), (:call, (:curly, :g18307, (:<:, :T, :Integer)), (:(::), (:curly, :Union, :Indices, :Dims)), (:..., (:(::), :I, (:curly, :AbstractVector, :T)))), (:block,
            (:line, 212, :none),
            1
          )),
        (:line, 213, :none),
        (:(=), (:call, :g18307, (:(::), :DimsInteger)), (:block,
            (:line, 213, :none),
            2
          )),
        (:line, 214, :none),
        (:(=), (:call, :g18307, (:(::), :DimsInteger), (:..., (:(::), :I, :Integer))), (:block,
            (:line, 214, :none),
            3
          ))
      )),
    (:line, 216, :none),
    (:try, (:block,
        (:line, 218, :none),
        (:call, (:., :Ambig8, (:quote, #QuoteNode
              :g18307
            )), (:tuple, 1))
      ), :err, (:block,
        (:line, 220, :none),
        (:if, (:call, :isa, :err, :MethodError), (:block,
            (:line, 221, :none),
            (:call, :error, "Test correctly returned a MethodError, please change to @test_throws MethodError")
          ), (:block,
            (:line, 223, :none),
            (:call, :rethrow, :err)
          ))
      )),
    (:line, 227, :none),
    (:module, true, :Ambig9, (:block,
        (:line, 227, :none),
        (:line, 228, :none),
        (:(=), (:call, :f, (:(::), :x, (:curly, :Complex, (:<:, :Integer)))), (:block,
            (:line, 228, :none),
            1
          )),
        (:line, 229, :none),
        (:(=), (:call, :f, (:(::), :x, (:curly, :Complex, (:<:, :Rational)))), (:block,
            (:line, 229, :none),
            2
          ))
      )),
    (:line, 231, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, (:., :Base, (:quote, #QuoteNode
              :isambiguous
            )), (:..., (:call, :methods, (:., :Ambig9, (:quote, #QuoteNode
                  :f
                )))), (:kw, :ambiguous_bottom, false)))),
    (:line, 232, :none),
    (:macrocall, Symbol("@test"), (:call, (:., :Base, (:quote, #QuoteNode
            :isambiguous
          )), (:..., (:call, :methods, (:., :Ambig9, (:quote, #QuoteNode
                :f
              )))), (:kw, :ambiguous_bottom, true))),
    (:line, 233, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, (:., :Base, (:quote, #QuoteNode
              :isambiguous
            )), (:..., (:call, :methods, (:., :Ambig9, (:quote, #QuoteNode
                  :f
                ))))))),
    (:line, 234, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :detect_ambiguities, :Ambig9, (:kw, :ambiguous_bottom, false))), 0)),
    (:line, 235, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :detect_ambiguities, :Ambig9, (:kw, :ambiguous_bottom, true))), 1)),
    (:line, 236, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :detect_ambiguities, :Ambig9)), 0)),
    (:line, 238, :none),
    :nothing
  ))