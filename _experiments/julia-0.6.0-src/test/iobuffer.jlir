(:quote, (:block,
    (:line, 3, :none),
    (:(=), (:call, :ioslength, (:(::), :io, :IOBuffer)), (:block,
        (:line, 3, :none),
        (:if, (:., :io, (:quote, #QuoteNode
              :seekable
            )), (:., :io, (:quote, #QuoteNode
              :size
            )), (:call, :nb_available, :io))
      )),
    (:line, 5, :none),
    (:let, (:block,
        (:line, 6, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :io)),
        (:line, 7, :none),
        (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :io, :UInt8)),
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, "abc"), 3)),
        (:line, 9, :none),
        (:macrocall, Symbol("@test"), (:call, :isreadable, :io)),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :iswritable, :io)),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :isopen, :io)),
        (:line, 12, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 3)),
        (:line, 13, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 3)),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :io)),
        (:line, 15, :none),
        (:call, :seek, :io, 0),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io, :UInt8), (:call, :convert, :UInt8, 'a'))),
        (:line, 17, :none),
        (:(=), :a, (:call, (:curly, :Array, :UInt8), 2)),
        (:line, 18, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read!, :io, :a), :a)),
        (:line, 19, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :a, (:ref, :UInt8, 'b', 'c'))),
        (:line, 20, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, :io), "abc")),
        (:line, 21, :none),
        (:call, :seek, :io, 1),
        (:line, 22, :none),
        (:call, :truncate, :io, 2),
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 1)),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :io))),
        (:line, 25, :none),
        (:call, :seekend, :io),
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 2)),
        (:line, 27, :none),
        (:call, :truncate, :io, 0),
        (:line, 28, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 29, :none),
        (:call, :truncate, :io, 10),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:., :io, (:quote, #QuoteNode
                  :data
                )), 0))),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, (:ref, :Int16, 1, 2, 3, 4, 5, 6)), 12)),
        (:line, 33, :none),
        (:call, :seek, :io, 2),
        (:line, 34, :none),
        (:call, :truncate, :io, 10),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 10)),
        (:line, 36, :none),
        (:(=), (:., :io, (:quote, #QuoteNode
              :readable
            )), false),
        (:line, 37, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :read!, :io, (:ref, :UInt8, 0))),
        (:line, 38, :none),
        (:call, :truncate, :io, 0),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "boston\ncambridge\n"), 0)),
        (:line, 40, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "boston\ncambridge\n")),
        (:line, 41, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "")),
        (:line, 42, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, (:call, (:curly, :Complex, :Float64), 0)), 16)),
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, (:call, (:curly, :Rational, :Int64), (:call, ://, 1, 2))), 16)),
        (:line, 44, :none),
        (:call, :close, :io),
        (:line, 45, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, (:ref, :UInt8, 0))),
        (:line, 46, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :seek, :io, 0)),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :io))
      ), (:(=), :io, (:call, :IOBuffer))),
    (:line, 50, :none),
    (:let, (:block,
        (:line, 51, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :io), "hamster")),
        (:line, 53, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io), "guinea pig\nturtle")),
        (:line, 54, :none),
        (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :io, :UInt8)),
        (:line, 55, :none),
        (:call, :seek, :io, 0),
        (:line, 56, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io, :UInt8), (:call, :convert, :UInt8, 'h'))),
        (:line, 57, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :truncate, :io, 0)),
        (:line, 58, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, (:call, :UInt8, 0))),
        (:line, 59, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, (:ref, :UInt8, 0))),
        (:line, 60, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "hamster\nguinea pig\nturtle")),
        (:line, 61, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "hamster\nguinea pig\nturtle")),
        (:line, 62, :none),
        (:call, :close, :io)
      ), (:(=), :io, (:call, :IOBuffer, "hamster\nguinea pig\nturtle"))),
    (:line, 65, :none),
    (:let, (:block,
        (:line, 66, :none),
        (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :io, :UInt8)),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "pancakes\nwaffles\nblueberries\n"), 0)),
        (:line, 68, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :io), "pancakes")),
        (:line, 70, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :compact
            )), :io),
        (:line, 71, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :io), "waffles")),
        (:line, 72, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "whipped cream\n"), 0)),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :io), "blueberries")),
        (:line, 74, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :seek, :io, 0)),
        (:line, 75, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :truncate, :io, 0)),
        (:line, 76, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, :io), "whipped cream")),
        (:line, 77, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "pancakes\nwaffles\nblueberries\n"), 0)),
        (:line, 78, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, :io), (:ref, :String, "pancakes", "waffles", "blueberries"))),
        (:line, 79, :none),
        (:call, :>, (:call, :write, :io, "\n\r\n\n\r \n"), 0),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, :io, (:kw, :chomp, false)), (:ref, :String, "\n", "\r\n", "\n", "\r \n"))),
        (:line, 81, :none),
        (:call, :>, (:call, :write, :io, "\n\r\n\n\r \n"), 0),
        (:line, 82, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, :io, (:kw, :chomp, true)), (:ref, :String, "", "", "", "\r "))),
        (:line, 83, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "α\nβ\nγ\nδ"), 0)),
        (:line, 84, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, :io, (:kw, :chomp, false)), (:ref, :String, "α\n", "β\n", "γ\n", "δ"))),
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :>, (:call, :write, :io, "α\nβ\nγ\nδ"), 0)),
        (:line, 86, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, :io, (:kw, :chomp, true)), (:ref, :String, "α", "β", "γ", "δ"))),
        (:line, 87, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :IOBuffer, ""), (:kw, :chomp, false)), (:vect,))),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :IOBuffer, ""), (:kw, :chomp, true)), (:vect,))),
        (:line, 89, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :IOBuffer, "first\nsecond"), (:kw, :chomp, false)), (:ref, :String, "first\n", "second"))),
        (:line, 90, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :IOBuffer, "first\nsecond"), (:kw, :chomp, true)), (:ref, :String, "first", "second"))),
        (:line, 91, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :compact
            )), :io),
        (:line, 92, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 93, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 0)),
        (:line, 94, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :ensureroom
            )), :io, 50),
        (:line, 95, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 0)),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 50)),
        (:line, 98, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :ensureroom
            )), :io, 10),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 0)),
        (:line, 100, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 50)),
        (:line, 101, :none),
        (:(=), (:., :io, (:quote, #QuoteNode
              :maxsize
            )), 75),
        (:line, 102, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :ensureroom
            )), :io, 100),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 0)),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 75)),
        (:line, 105, :none),
        (:call, :seekend, :io),
        (:line, 106, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 0)),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 108, :none),
        (:call, :write, :io, (:call, :zeros, :UInt8, 200)),
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 75)),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 75)),
        (:line, 111, :none),
        (:call, :write, :io, 1),
        (:line, 112, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 75)),
        (:line, 113, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 75)),
        (:line, 114, :none),
        (:call, :write, :io, (:vect, 1, 2, 3)),
        (:line, 115, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 75)),
        (:line, 116, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 75)),
        (:line, 117, :none),
        (:call, :skip, :io, 1),
        (:line, 118, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, (:call, :UInt8, 104)), 1)),
        (:line, 119, :none),
        (:call, :skip, :io, 3),
        (:line, 120, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, (:macrocall, Symbol("@b_str"), "apples")), 3)),
        (:line, 121, :none),
        (:call, :skip, :io, 71),
        (:line, 122, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :io, 'y'), 1)),
        (:line, 123, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io), "happy")),
        (:line, 124, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :io)),
        (:line, 125, :none),
        (:call, :write, :io, (:call, :zeros, :UInt8, 73)),
        (:line, 126, :none),
        (:call, :write, :io, 'a'),
        (:line, 127, :none),
        (:call, :write, :io, 'b'),
        (:line, 128, :none),
        (:call, :write, :io, 'c'),
        (:line, 129, :none),
        (:call, :write, :io, 'd'),
        (:line, 130, :none),
        (:call, :write, :io, 'e'),
        (:line, 131, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ioslength, :io), 75)),
        (:line, 132, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:., :io, (:quote, #QuoteNode
                  :data
                ))), 75)),
        (:line, 133, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :io), 0)),
        (:line, 134, :none),
        (:call, :skip, :io, 72),
        (:line, 135, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "\0ab")),
        (:line, 136, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "")),
        (:line, 139, :none),
        (:call, :print, :io, true),
        (:line, 140, :none),
        (:call, :close, :io)
      ), (:(=), :io, (:call, :PipeBuffer))),
    (:line, 144, :none),
    (:let, (:block,
        (:line, 145, :none),
        (:(=), :a, (:call, (:curly, :Array, :UInt8), 1024)),
        (:line, 146, :none),
        (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :io, :a)),
        (:line, 147, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :io))
      ), (:(=), :io, (:call, :IOBuffer, "abcdef"))),
    (:line, 150, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :readlines, (:call, :IOBuffer), (:kw, :chomp, false)))),
    (:line, 153, :none),
    (:let, (:block,
        (:line, 154, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, -1)), 0)),
        (:line, 155, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, 6)), 4)),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :seek, :io, -1)), 0)),
        (:line, 157, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :seek, :io, 6)), 4))
      ), (:(=), :io, (:call, :IOBuffer, "asdf"))),
    (:line, 161, :none),
    (:let, (:block,
        (:line, 162, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, 4)), 4)),
        (:line, 163, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, 10)), 5)),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, -2)), 3)),
        (:line, 165, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, -3)), 0)),
        (:line, 166, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, (:call, :skip, :io, -3)), 0))
      ), (:(=), :io, (:call, :IOBuffer, "hello"))),
    (:line, 170, :none),
    (:let, (:block,
        (:line, 171, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io, :Char), 'α')),
        (:line, 172, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, "!")),
        (:line, 173, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, 'β')),
        (:line, 174, :none),
        (:(=), :a, (:call, (:curly, :Array, :UInt8), 10)),
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :read!, :io, :a), :a)),
        (:line, 176, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, :a), "helloworld")),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :io, :Char), 'ω')),
        (:line, 178, :none),
        (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :io, :UInt8)),
        (:line, 179, :none),
        (:call, :skip, :io, -3),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io), "dω")),
        (:line, 181, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, :io), "αhelloworldω")),
        (:line, 182, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :io, "!")),
        (:line, 183, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :take!, :io), (:macrocall, Symbol("@b_str"), "αhelloworldω"))),
        (:line, 184, :none),
        (:call, :seek, :io, 2),
        (:line, 185, :none),
        (:call, :seekend, :io2),
        (:line, 186, :none),
        (:call, :write, :io2, :io),
        (:line, 187, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io), "")),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io2), "")),
        (:line, 189, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :io)), "αhelloworldω")),
        (:line, 190, :none),
        (:call, :seek, :io2, 0),
        (:line, 191, :none),
        (:call, :truncate, :io2, (:call, :-, (:., :io2, (:quote, #QuoteNode
                :size
              )), 2)),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io2), "goodnightmoonhelloworld")),
        (:line, 193, :none),
        (:call, :seek, :io2, 0),
        (:line, 194, :none),
        (:call, :write, :io2, :io2),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, :io2), "")),
        (:line, 196, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, :io2), "goodnightmoonhelloworld"))
      ), (:(=), :io, (:call, :IOBuffer, (:call, :SubString, "***αhelloworldω***", 4, 16))), (:(=), :io2, (:call, :IOBuffer, (:macrocall, Symbol("@b_str"), "goodnightmoon"), true, true))),
    (:line, 201, :none),
    (:let, (:block,
        (:line, 202, :none),
        (:call, :write, :io, (:call, :ones, :UInt8, 1048577))
      ), (:(=), :io, (:call, :IOBuffer, 0))),
    (:line, 205, :none),
    (:let, (:block,
        (:line, 206, :none),
        (:macrocall, Symbol("@test"), (:call, :isopen, :bstream)),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :isreadable, :bstream)),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :iswritable, :bstream)),
        (:line, 209, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :nb_available, :bstream), 0)),
        (:line, 210, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, :bstream), (:string, "BufferStream() bytes waiting:", (:call, :nb_available, (:., :bstream, (:quote, #QuoteNode
                    :buffer
                  ))), ", isopen:true"))),
        (:line, 211, :none),
        (:(=), :a, (:call, :rand, :UInt8, 10)),
        (:line, 212, :none),
        (:call, :write, :bstream, :a),
        (:line, 213, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :bstream))),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :flush, :bstream), :nothing)),
        (:line, 215, :none),
        (:(=), :b, (:call, :read, :bstream, :UInt8)),
        (:line, 216, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, 1), :b)),
        (:line, 217, :none),
        (:(=), :b, (:call, :read, :bstream, :UInt8)),
        (:line, 218, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a, 2), :b)),
        (:line, 219, :none),
        (:(=), :c, (:call, :zeros, :UInt8, 8)),
        (:line, 220, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :nb_available, :bstream), 8)),
        (:line, 221, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :bstream))),
        (:line, 222, :none),
        (:call, :read!, :bstream, :c),
        (:line, 223, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :c, (:ref, :a, (:(:), 3, 10)))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :close, :bstream), :nothing)),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :eof, :bstream)),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :nb_available, :bstream), 0))
      ), (:(=), :bstream, (:call, :BufferStream))),
    (:line, 229, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :flush, (:call, :IOBuffer)), :nothing)),
    (:line, 232, :none),
    (:let, (:block,
        (:line, 233, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, (:., :Base, (:quote, #QuoteNode
                  :buffer_writes
                )), :io), :io))
      ), (:(=), :io, (:call, :IOBuffer)))
  ))