(:quote, (:block,
    (:line, 3, :none),
    (:for, (:(=), :S, (:tuple, :String, :GenericString)), (:block,
        (:line, 4, :none),
        (:(=), :dir, (:call, :pwd)),
        (:line, 5, :none),
        (:(=), :sep, (:., (:., :Base, (:quote, #QuoteNode
                :Filesystem
              )), (:quote, #QuoteNode
              :path_separator
            ))),
        (:line, 7, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :abspath, (:call, :S, "foo")), (:string, :dir, :sep, "foo"))),
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :abspath, (:call, :S, "foo"), (:call, :S, "bar")), (:string, :dir, :sep, "foo", :sep, "bar"))),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :basename, (:call, :S, (:string, "foo", :sep, "bar"))), "bar")),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :dirname, (:call, :S, (:string, "foo", :sep, "bar"))), "foo")),
        (:line, 13, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :expanduser, (:call, :S, "x")), "x")),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :expanduser, (:call, :S, "~")), (:if, (:call, :is_windows), "~", (:call, :homedir)))),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :isabspath, (:call, :S, (:call, :homedir)))),
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isabspath, (:call, :S, "foo")))),
        (:line, 19, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isdirpath, (:call, :S, "foo")))),
        (:line, 20, :none),
        (:macrocall, Symbol("@test"), (:call, :isdirpath, (:call, :S, (:string, "foo", :sep)))),
        (:line, 21, :none),
        (:macrocall, Symbol("@test"), (:call, :isdirpath, (:call, :S, ""))),
        (:line, 22, :none),
        (:macrocall, Symbol("@test"), (:call, :isdirpath, (:call, :S, "."))),
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:call, :isdirpath, (:call, :S, ".."))),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :joinpath, (:call, :S, "foo")), "foo")),
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :joinpath, (:call, :S, "foo"), (:call, :S, "bar")), (:string, "foo", :sep, "bar"))),
        (:line, 27, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :joinpath, (:call, :S, "foo"), (:call, :S, (:call, :homedir))), (:call, :homedir))),
        (:line, 28, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :joinpath, (:call, :S, (:call, :abspath, "foo")), (:call, :S, (:call, :homedir))), (:call, :homedir))),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "."))), ".")),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".."))), "..")),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", "."))), "..")),
        (:line, 33, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".", ".."))), "..")),
        (:line, 34, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", ".."))), (:string, "..", :sep, ".."))),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".", "..", ".."))), (:string, "..", :sep, ".."))),
        (:line, 36, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", ".", ".."))), (:string, "..", :sep, ".."))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", "..", "."))), (:string, "..", :sep, ".."))),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "."))), (:string, "foo", :sep))),
        (:line, 40, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".."))), ".")),
        (:line, 41, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", "."))), ".")),
        (:line, 42, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".", ".."))), ".")),
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", ".."))), "..")),
        (:line, 44, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".", "..", ".."))), "..")),
        (:line, 45, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", ".", ".."))), "..")),
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", "..", "."))), "..")),
        (:line, 48, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".", "bar"))), "bar")),
        (:line, 49, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 50, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", ".", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 51, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".", "..", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", "..", "bar"))), (:string, "..", :sep, "..", :sep, "bar"))),
        (:line, 53, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, ".", "..", "..", "bar"))), (:string, "..", :sep, "..", :sep, "bar"))),
        (:line, 54, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", ".", "..", "bar"))), (:string, "..", :sep, "..", :sep, "bar"))),
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "..", "..", ".", "bar"))), (:string, "..", :sep, "..", :sep, "bar"))),
        (:line, 57, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".", "bar"))), (:string, "foo", :sep, "bar"))),
        (:line, 58, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", "bar"))), "bar")),
        (:line, 59, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", ".", "bar"))), "bar")),
        (:line, 60, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".", "..", "bar"))), "bar")),
        (:line, 61, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", "..", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 62, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", ".", "..", "..", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 63, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", ".", "..", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 64, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :normpath, (:call, :S, (:call, :joinpath, "foo", "..", "..", ".", "bar"))), (:string, "..", :sep, "bar"))),
        (:line, 66, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :relpath, (:call, :S, (:call, :joinpath, "foo", "bar")), (:call, :S, "foo")), "bar")),
        (:line, 68, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :joinpath, (:..., (:call, :splitdir, (:call, :S, (:call, :homedir))))), (:call, :homedir))),
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :string, (:..., (:call, :splitdrive, (:call, :S, (:call, :homedir))))), (:call, :homedir))),
        (:line, 71, :none),
        (:if, (:call, :is_windows), (:block,
            (:line, 72, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitdrive, (:call, :S, "\\\\servername\\hello.world\\filename.ext")), (:tuple, "\\\\servername\\hello.world", "\\filename.ext"))),
            (:line, 74, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitdrive, (:call, :S, "\\\\servername.com\\hello.world\\filename.ext")), (:tuple, "\\\\servername.com\\hello.world", "\\filename.ext"))),
            (:line, 76, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitdrive, (:call, :S, "C:\\foo\\bar")), (:tuple, "C:", "\\foo\\bar")))
          )),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, "")), (:tuple, "", ""))),
        (:line, 81, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, ".")), (:tuple, ".", ""))),
        (:line, 82, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, "..")), (:tuple, "..", ""))),
        (:line, 83, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, "...")), (:tuple, "...", ""))),
        (:line, 84, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, "foo")), (:tuple, "foo", ""))),
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, "foo.")), (:tuple, "foo", "."))),
        (:line, 86, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, "foo..")), (:tuple, "foo", ".."))),
        (:line, 87, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, "foo...")), (:tuple, "foo", "..."))),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, "foo.bar")), (:tuple, "foo", ".bar"))),
        (:line, 89, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, ".foo")), (:tuple, ".foo", ""))),
        (:line, 90, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, ".foo.")), (:tuple, ".foo", "."))),
        (:line, 91, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, ".foo..")), (:tuple, ".foo", ".."))),
        (:line, 92, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :splitext, (:call, :S, ".foo...")), (:tuple, ".foo", "..."))),
        (:line, 93, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :splitext, (:call, :S, ".foo.bar")), (:tuple, ".foo", ".bar")))
      )),
    (:line, 96, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "~"), false)),
    (:line, 97, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "/"), true)),
    (:line, 98, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "A:/"), (:call, :is_windows))),
    (:line, 99, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "B:\\"), (:call, :is_windows))),
    (:line, 100, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "./"), false)),
    (:line, 101, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "C:"), false)),
    (:line, 102, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "C:."), false)),
    (:line, 103, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "α:/"), false)),
    (:line, 104, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, ".:/"), false)),
    (:line, 107, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, "\\\\"), (:call, :is_windows))),
    (:line, 108, :none),
    (:if, (:call, :is_unix), (:block,
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isabspath, (:call, :expanduser, "~")), true)),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :startswith, (:call, :expanduser, "~"), (:call, :homedir)))
      ), (:block,
        (:line, 112, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :expanduser, "~"), "~"))
      )),
    (:line, 118, :none),
    (:function, (:call, :test_relpath), (:block,
        (:line, 119, :none),
        (:(=), :sep, (:., (:., :Base, (:quote, #QuoteNode
                :Filesystem
              )), (:quote, #QuoteNode
              :path_separator
            ))),
        (:line, 120, :none),
        (:(=), :filepaths, (:vect, (:string, :sep, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, :sep, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, :sep, "home", :sep, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, :sep, "home", :sep, "user", :sep, "dir_withendsep", :sep), (:string, :sep, "home", :sep, "dir2_withendsep", :sep), (:string, :sep, "home", :sep, "test.md"), (:string, :sep, "home"), (:string, :sep), (:string, :sep, "home", :sep, :sep, :sep))),
        (:line, 132, :none),
        (:(=), :startpaths, (:vect, (:string, :sep, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "genindex.md"), (:string, :sep, "multi_docs", :sep, "genindex.md"), (:string, :sep, "home", :sep, "user", :sep, "dir_withendsep", :sep), (:string, :sep, "home", :sep, "dir2_withendsep", :sep), (:string, :sep, "home", :sep, "test.md"), (:string, :sep, "home"), (:string, :sep), (:string, :sep, "home", :sep, :sep, :sep))),
        (:line, 143, :none),
        (:(=), :relpath_expected_results, (:vect, (:string, "..", :sep, "Test1.md"), (:string, "..", :sep, "..", :sep, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "..", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "Test1.md"), (:string, "..", :sep, "lib", :sep, "file1.md"), (:string, "..", :sep, "..", :sep, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "..", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "home", :sep, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "user", :sep, ".julia", :sep, "Test1", :sep, "docs", :sep, "api", :sep, "lib", :sep, "file1.md"), (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "..", :sep, "..", :sep, "home", :sep, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "..", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "..", :sep, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "home", :sep, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "user", :sep, ".julia", :sep, "测试2", :sep, "docs", :sep, "api", :sep, "测试2.md"), (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "dir_withendsep"), (:string, "..", :sep, "..", :sep, "home", :sep, "user", :sep, "dir_withendsep"), ".", (:string, "..", :sep, "user", :sep, "dir_withendsep"), (:string, "..", :sep, "user", :sep, "dir_withendsep"), (:string, "user", :sep, "dir_withendsep"), (:string, "home", :sep, "user", :sep, "dir_withendsep"), (:string, "user", :sep, "dir_withendsep"), (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "dir2_withendsep"), (:string, "..", :sep, "..", :sep, "home", :sep, "dir2_withendsep"), (:string, "..", :sep, "..", :sep, "dir2_withendsep"), ".", (:string, "..", :sep, "dir2_withendsep"), "dir2_withendsep", (:string, "home", :sep, "dir2_withendsep"), "dir2_withendsep", (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "test.md"), (:string, "..", :sep, "..", :sep, "home", :sep, "test.md"), (:string, "..", :sep, "..", :sep, "test.md"), (:string, "..", :sep, "test.md"), ".", "test.md", (:string, "home", :sep, "test.md"), "test.md", (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, ".."), (:string, "..", :sep, "..", :sep, "home"), (:string, "..", :sep, ".."), "..", "..", ".", "home", ".", (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, ".."), (:string, "..", :sep, ".."), (:string, "..", :sep, "..", :sep, ".."), (:string, "..", :sep, ".."), (:string, "..", :sep, ".."), "..", ".", "..", (:string, "..", :sep, "..", :sep, "..", :sep, "..", :sep, "..", :sep, ".."), (:string, "..", :sep, "..", :sep, "home"), (:string, "..", :sep, ".."), "..", "..", ".", "home", ".")),
        (:line, 183, :none),
        (:(=), :idx, 0),
        (:line, 184, :none),
        (:for, (:(=), :filep, :filepaths), (:block,
            (:line, 185, :none),
            (:for, (:(=), :startp, :startpaths), (:block,
                (:line, 186, :none),
                (:(=), :res, (:call, :relpath, :filep, :startp)),
                (:line, 187, :none),
                (:+=, :idx, 1),
                (:line, 188, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :res, (:ref, :relpath_expected_results, :idx)))
              ))
          )),
        (:line, 192, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :relpath, (:string, :sep, "home", :sep, "user", :sep, "dir_withendsep", :sep), "")),
        (:line, 193, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :relpath, "", (:string, :sep, "home", :sep, "user", :sep, "dir_withendsep", :sep)))
      )),
    (:line, 195, :none),
    (:call, :test_relpath),
    (:line, 198, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :joinpath, "a", "b"), :String)),
    (:line, 199, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :joinpath, (:call, :abspath, "a"), "b"), :String))
  ))