(:quote, (:block,
    (:line, 4, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :foldl, :+, (:ref, :Int64)), (:call, :Int64, 0))),
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :foldl, :+, (:ref, :Int16)), (:call, :Int32, 0))),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldl, :-, (:(:), 1, 5)), -13)),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldl, :-, 10, (:(:), 1, 5)), -5)),
    (:line, 9, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), :abs2, :-, (:(:), 2, 5)), -46)),
    (:line, 10, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), :abs2, :-, 10, (:(:), 2, 5)), -44)),
    (:line, 12, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), :abs2, :/, (:(:), 2, 5)), (:call, :/, 1, 900))),
    (:line, 13, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), :abs2, :/, 10, (:(:), 2, 5)), (:call, :/, 1, 1440))),
    (:line, 15, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), (:->, :x, (:block,
              (:line, 15, :none),
              (:call, :⊻, :x, true)
            )), :&, true, (:hcat, true, false, true, false, false)), false)),
    (:line, 16, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), (:->, :x, (:block,
              (:line, 16, :none),
              (:call, :⊻, :x, true)
            )), :&, (:hcat, true, false, true, false, false)), false)),
    (:line, 18, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), (:->, :x, (:block,
              (:line, 18, :none),
              (:call, :⊻, :x, true)
            )), :|, (:hcat, true, false, true, false, false)), true)),
    (:line, 19, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldl
            )), (:->, :x, (:block,
              (:line, 19, :none),
              (:call, :⊻, :x, true)
            )), :|, false, (:hcat, true, false, true, false, false)), true)),
    (:line, 21, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :foldr, :+, (:ref, :Int64)), (:call, :Int64, 0))),
    (:line, 22, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :foldr, :+, (:ref, :Int16)), (:call, :Int32, 0))),
    (:line, 23, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldr, :-, (:(:), 1, 5)), 3)),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldr, :-, 10, (:(:), 1, 5)), -7)),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldr, :+, (:vect, 1)), 1)),
    (:line, 27, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldr
            )), :abs2, :-, (:(:), 2, 5)), -14)),
    (:line, 28, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :mapfoldr
            )), :abs2, :-, 10, (:(:), 2, 5)), -4)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reduce, :+, (:ref, :Int64)), (:call, :Int64, 0))),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :reduce, :+, (:ref, :Int16)), (:call, :Int32, 0))),
    (:line, 33, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, (:->, (:tuple, :x, :y), (:block,
              (:line, 33, :none),
              (:string, "(", :x, "+", :y, ")")
            )), (:(:), 9, 11)), "((9+10)+11)")),
    (:line, 34, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, :max, (:hcat, 8, 6, 7, 5, 3, 0, 9)), 9)),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, :+, 1000, (:(:), 1, 5)), (:call, :+, 1000, 1, 2, 3, 4, 5))),
    (:line, 36, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, :+, 1), 1)),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, :-, :+, (:hcat, -10, -9, -3)), (:call, :+, (:call, :+, 10, 9), 3))),
    (:line, 40, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, (:->, :x, (:block,
              (:line, 40, :none),
              (:ref, :x, (:(:), 1, 3))
            )), (:->, (:tuple, :x, :y), (:block,
              (:line, 40, :none),
              (:string, "(", :x, "+", :y, ")")
            )), (:vect, "abcd", "efgh", "01234")), "((abc+efg)+012)")),
    (:line, 43, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, :-, :+, (:vect, -10)), 10)),
    (:line, 44, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, :abs2, :+, (:vect, -9, -3)), (:call, :+, 81, 9))),
    (:line, 45, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, :-, :+, (:vect, -9, -3, -4, 8, -2)), (:call, :+, (:call, :-, (:call, :+, 9, 3, 4), 8), 2))),
    (:line, 46, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :mapreduce, :-, :+, (:call, :collect, (:call, :linspace, 1.0, 10000.0, 10000))), -5.0005e7)),
    (:line, 48, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Int8, 10))), :(===), (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Int8, 10, 11))), :(===), (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Int8, 10, 11, 12, 13))))),
    (:line, 51, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Float32, 10.0))), :(===), (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Float32, 10, 11))), :(===), (:call, :typeof, (:call, :mapreduce, :*, :+, (:ref, :Float32, 10, 11, 12, 13))))),
    (:line, 55, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Int8))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Int8, 10))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Int8, 10, 11))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Int8, 10, 11, 12, 13))))),
    (:line, 59, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Float32))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Float32, 10))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Float32, 10, 11))), :(===), (:call, :typeof, (:call, :mapreduce, :abs, :+, (:ref, :Float32, 10, 11, 12, 13))))),
    (:line, 66, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:ref, :Int8)), (:call, :Int32, 0))),
    (:line, 67, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:ref, :Int)), (:call, :Int, 0))),
    (:line, 68, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:ref, :Float64)), 0.0)),
    (:line, 70, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:call, :Int8, 3)), (:call, :Int8, 3))),
    (:line, 71, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, 3), 3)),
    (:line, 72, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, 3.0), 3.0)),
    (:line, 74, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:vect, (:call, :Int8, 3))), (:call, :Int32, 3))),
    (:line, 75, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:vect, 3)), 3)),
    (:line, 76, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:vect, 3.0)), 3.0)),
    (:line, 78, :none),
    (:(=), :z, (:call, :reshape, (:(:), 1, 16), (:tuple, 2, 2, 2, 2))),
    (:line, 79, :none),
    (:(=), :fz, (:call, :float, :z)),
    (:line, 80, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, :z), 136)),
    (:line, 81, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, :fz), 136.0)),
    (:line, 83, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :sum, :sin, (:ref, :Int))),
    (:line, 84, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, :sin, 3), (:call, :sin, 3.0))),
    (:line, 85, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, :sin, (:vect, 3)), (:call, :sin, 3.0))),
    (:line, 86, :none),
    (:(=), :a, (:call, :sum, :sin, :z)),
    (:line, 87, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, :a, (:call, :sum, :sin, :fz))),
    (:line, 88, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, :a, (:call, :sum, (:., :sin, (:tuple, :fz))))),
    (:line, 90, :none),
    (:(=), :z, (:vect, -4, -3, 2, 5)),
    (:line, 91, :none),
    (:(=), :fz, (:call, :float, :z)),
    (:line, 92, :none),
    (:(=), :a, (:call, :randn, 32)),
    (:line, 93, :none),
    (:(=), :b, (:., :complex, (:tuple, (:call, :randn, 32), (:call, :randn, 32)))),
    (:line, 96, :none),
    (:(=), (:call, :sum2, :itr), (:block,
        (:line, 96, :none),
        (:call, :invoke, :sum, (:curly, :Tuple, :Any), :itr)
      )),
    (:line, 97, :none),
    (:(=), (:call, :plus, :x, :y), (:block,
        (:line, 97, :none),
        (:call, :+, :x, :y)
      )),
    (:line, 98, :none),
    (:(=), (:call, :sum3, :A), (:block,
        (:line, 98, :none),
        (:call, :reduce, :plus, :A)
      )),
    (:line, 99, :none),
    (:(=), (:call, :sum4, :itr), (:block,
        (:line, 99, :none),
        (:call, :invoke, :reduce, (:curly, :Tuple, :Function, :Any), :plus, :itr)
      )),
    (:line, 100, :none),
    (:(=), (:call, :sum5, :A), (:block,
        (:line, 100, :none),
        (:call, :reduce, :plus, 0, :A)
      )),
    (:line, 101, :none),
    (:(=), (:call, :sum6, :itr), (:block,
        (:line, 101, :none),
        (:call, :invoke, :reduce, (:curly, :Tuple, :Function, :Int, :Any), :plus, 0, :itr)
      )),
    (:line, 102, :none),
    (:(=), (:call, :sum7, :A), (:block,
        (:line, 102, :none),
        (:call, :mapreduce, (:->, :x, (:block,
              (:line, 102, :none),
              :x
            )), :plus, :A)
      )),
    (:line, 103, :none),
    (:(=), (:call, :sum8, :itr), (:block,
        (:line, 103, :none),
        (:call, :invoke, :mapreduce, (:curly, :Tuple, :Function, :Function, :Any), (:->, :x, (:block,
              (:line, 103, :none),
              :x
            )), :plus, :itr)
      )),
    (:line, 104, :none),
    (:(=), (:call, :sum9, :A), (:block,
        (:line, 104, :none),
        (:call, :mapreduce, (:->, :x, (:block,
              (:line, 104, :none),
              :x
            )), :plus, 0, :A)
      )),
    (:line, 105, :none),
    (:(=), (:call, :sum10, :itr), (:block,
        (:line, 105, :none),
        (:call, :invoke, :mapreduce, (:curly, :Tuple, :Function, :Function, :Int, :Any), (:->, :x, (:block,
              (:line, 105, :none),
              :x
            )), :plus, 0, :itr)
      )),
    (:line, 106, :none),
    (:for, (:(=), :f, (:tuple, :sum2, :sum5, :sum6, :sum9, :sum10)), (:block,
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, :z), (:call, :f, :z))),
        (:line, 108, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :sum, (:ref, :Int)), :(==), (:call, :f, (:ref, :Int)), :(==), 0)),
        (:line, 109, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :sum, (:ref, :Int, 7)), :(==), (:call, :f, (:ref, :Int, 7)), :(==), 7)),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :f, (:ref, :Int8))), :(==), (:call, :typeof, (:call, :f, (:ref, :Int8, 1))), :(==), (:call, :typeof, (:call, :f, (:typed_hcat, :Int8, 1, 7)))))
      )),
    (:line, 112, :none),
    (:for, (:(=), :f, (:tuple, :sum3, :sum4, :sum7, :sum8)), (:block,
        (:line, 113, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, :z), (:call, :f, :z))),
        (:line, 114, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :f, (:ref, :Int))),
        (:line, 115, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :sum, (:ref, :Int, 7)), :(==), (:call, :f, (:ref, :Int, 7)), :(==), 7))
      )),
    (:line, 117, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :sum, (:ref, :Int8))), :(==), (:call, :typeof, (:call, :sum, (:ref, :Int8, 1))), :(==), (:call, :typeof, (:call, :sum, (:typed_hcat, :Int8, 1, 7))))),
    (:line, 119, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:vect, 1, 1.0e100, 1, -1.0e100)), 2.0)),
    (:line, 120, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:ref, :Float64)), 0.0)),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:generator, :i, (:(=), :i, (:(:), 1.0, 1.0, 10.0)))), 55.0)),
    (:line, 122, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:generator, :i, (:(=), :i, (:(:), 1, 1, 10)))), 55)),
    (:line, 123, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:hcat, 1, 2, 3)), 6)),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:hcat, (:call, :+, 2, :im), (:call, :-, 3, :im))), (:call, :+, 5, (:call, :*, 0, :im)))),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:hcat, (:call, :+, 1, :im), (:call, :+, 2, (:call, :*, 3, :im)))), (:call, :+, 3, (:call, :*, 4, :im)))),
    (:line, 126, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:hcat, 7, 8, 9)), (:call, :sum_kbn, (:hcat, 8, 9, 7)))),
    (:line, 127, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:generator, :i, (:(=), :i, (:(:), 1, 1, 10)))), (:call, :sum_kbn, (:generator, :i, (:(=), :i, (:(:), 10, -1, 1)))))),
    (:line, 128, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:vect, -0.0)), -0.0)),
    (:line, 129, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum_kbn, (:vect, -0.0, -0.0)), -0.0)),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:ref, :Int)), 1)),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:ref, :Int8)), (:call, :Int32, 1))),
    (:line, 135, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:ref, :Float64)), 1.0)),
    (:line, 137, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:vect, 3)), 3)),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:vect, (:call, :Int8, 3))), (:call, :Int32, 3))),
    (:line, 139, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:vect, 3.0)), 3.0)),
    (:line, 141, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, :z), 120)),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, :fz), 120.0)),
    (:line, 144, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :prod, (:(:), 1, (:call, :big, 16))), (:call, :big, 20922789888000))),
    (:line, 145, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :prod, (:(:), (:call, :big, (:call, :typemax, :Int64)), (:call, :+, (:call, :big, (:call, :typemax, :Int64)), 16))), (:call, :parse, :BigInt, "25300281663413827620486300433089141956148633919452440329174083959168114253708467653081909888307573358090001734956158476311046124934597861626299416732205795533726326734482449215730132757595422510465791525610410023802664753402501982524443370512346073948799084936298007821432734720004795146875180123558814648586972474376192000"))),
    (:line, 147, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :prod, (:call, :Array, (:call, :trues, 10)))), :Bool)),
    (:line, 150, :none),
    (:(=), (:call, :prod2, :itr), (:block,
        (:line, 150, :none),
        (:call, :invoke, :prod, (:curly, :Tuple, :Any), :itr)
      )),
    (:line, 151, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :prod, (:ref, :Int)), :(===), (:call, :prod2, (:ref, :Int)), :(===), 1)),
    (:line, 152, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :prod, (:ref, :Int, 7)), :(===), (:call, :prod2, (:ref, :Int, 7)), :(===), 7)),
    (:line, 153, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :prod, (:ref, :Int8))), :(==), (:call, :typeof, (:call, :prod, (:ref, :Int8, 1))), :(==), (:call, :typeof, (:call, :prod, (:ref, :Int8, 1, 7))), :(==), :Int32)),
    (:line, 154, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :typeof, (:call, :prod2, (:ref, :Int8))), :(==), (:call, :typeof, (:call, :prod2, (:ref, :Int8, 1))), :(==), (:call, :typeof, (:call, :prod2, (:typed_hcat, :Int8, 1, 7))), :(==), :Int32)),
    (:line, 158, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :maximum, (:ref, :Int))),
    (:line, 159, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :minimum, (:ref, :Int))),
    (:line, 161, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, 5), 5)),
    (:line, 162, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :minimum, 5), 5)),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, 5), (:tuple, 5, 5))),
    (:line, 165, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, (:vect, 4, 3, 5, 2)), 5)),
    (:line, 166, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :minimum, (:vect, 4, 3, 5, 2)), 2)),
    (:line, 167, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, (:vect, 4, 3, 5, 2)), (:tuple, 2, 5))),
    (:line, 169, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vect, :NaN)))),
    (:line, 170, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vect, :NaN)))),
    (:line, 171, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vect, :NaN)), (:tuple, :NaN, :NaN))),
    (:line, 173, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vect, :NaN, 2.0)))),
    (:line, 174, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vect, :NaN, 2.0)))),
    (:line, 175, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vect, :NaN, 2.0)), (:tuple, :NaN, :NaN))),
    (:line, 177, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vect, :NaN, 2.0, 3.0)))),
    (:line, 178, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vect, :NaN, 2.0, 3.0)))),
    (:line, 179, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vect, :NaN, 2.0, 3.0)), (:tuple, :NaN, :NaN))),
    (:line, 181, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vect, 4.0, 3.0, :NaN, 5.0, 2.0)))),
    (:line, 182, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vect, 4.0, 3.0, :NaN, 5.0, 2.0)))),
    (:line, 183, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vect, 4.0, 3.0, :NaN, 5.0, 2.0)), (:tuple, :NaN, :NaN))),
    (:line, 186, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vcat, :NaN, (:(:), 1.0, 10000.0))))),
    (:line, 187, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :maximum, (:vcat, (:(:), 1.0, 10000.0), :NaN)))),
    (:line, 188, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vcat, :NaN, (:(:), 1.0, 10000.0))))),
    (:line, 189, :none),
    (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :minimum, (:vcat, (:(:), 1.0, 10000.0), :NaN)))),
    (:line, 190, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vcat, (:(:), 1.0, 10000.0), :NaN)), (:tuple, :NaN, :NaN))),
    (:line, 191, :none),
    (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :extrema, (:vcat, :NaN, (:(:), 1.0, 10000.0))), (:tuple, :NaN, :NaN))),
    (:line, 193, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :abs2, (:(:), 3, 7)), 49)),
    (:line, 194, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :minimum, :abs2, (:(:), 3, 7)), 9)),
    (:line, 196, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :maximum, (:ref, :Int16, 1)), (:call, :Int16, 1))),
    (:line, 197, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :maximum, (:call, :collect, (:(:), (:call, :Int16, 1), (:call, :Int16, 100)))), (:call, :Int16, 100))),
    (:line, 198, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :maximum, (:ref, :Int32, 1, 2)), (:call, :Int32, 2))),
    (:line, 200, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, (:call, :reshape, (:(:), 1, 24), 2, 3, 4), 1), (:call, :reshape, (:vect, (:tuple, 1, 2), (:tuple, 3, 4), (:tuple, 5, 6), (:tuple, 7, 8), (:tuple, 9, 10), (:tuple, 11, 12), (:tuple, 13, 14), (:tuple, 15, 16), (:tuple, 17, 18), (:tuple, 19, 20), (:tuple, 21, 22), (:tuple, 23, 24)), 1, 3, 4))),
    (:line, 201, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, (:call, :reshape, (:(:), 1, 24), 2, 3, 4), 2), (:call, :reshape, (:vect, (:tuple, 1, 5), (:tuple, 2, 6), (:tuple, 7, 11), (:tuple, 8, 12), (:tuple, 13, 17), (:tuple, 14, 18), (:tuple, 19, 23), (:tuple, 20, 24)), 2, 1, 4))),
    (:line, 202, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :extrema, (:call, :reshape, (:(:), 1, 24), 2, 3, 4), 3), (:call, :reshape, (:vect, (:tuple, 1, 19), (:tuple, 2, 20), (:tuple, 3, 21), (:tuple, 4, 22), (:tuple, 5, 23), (:tuple, 6, 24)), 2, 3, 1))),
    (:line, 206, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect,)), false)),
    (:line, 207, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:ref, :Bool)), false)),
    (:line, 208, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, true)), true)),
    (:line, 209, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, false, false)), false)),
    (:line, 210, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, false, true)), true)),
    (:line, 211, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, true, false)), true)),
    (:line, 212, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, true, true)), true)),
    (:line, 213, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, true, true, true)), true)),
    (:line, 214, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, true, false, true)), true)),
    (:line, 215, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:vect, false, false, false)), false)),
    (:line, 217, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect,)), true)),
    (:line, 218, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:ref, :Bool)), true)),
    (:line, 219, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, true)), true)),
    (:line, 220, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, false, false)), false)),
    (:line, 221, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, false, true)), false)),
    (:line, 222, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, true, false)), false)),
    (:line, 223, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, true, true)), true)),
    (:line, 224, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, true, true, true)), true)),
    (:line, 225, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, true, false, true)), false)),
    (:line, 226, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:vect, false, false, false)), false)),
    (:line, 228, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:->, :x, (:block,
              (:line, 228, :none),
              (:call, :>, :x, 0)
            )), (:vect,)), false)),
    (:line, 229, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:->, :x, (:block,
              (:line, 229, :none),
              (:call, :>, :x, 0)
            )), (:ref, :Int)), false)),
    (:line, 230, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:->, :x, (:block,
              (:line, 230, :none),
              (:call, :>, :x, 0)
            )), (:vect, -3)), false)),
    (:line, 231, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:->, :x, (:block,
              (:line, 231, :none),
              (:call, :>, :x, 0)
            )), (:vect, 4)), true)),
    (:line, 232, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :any, (:->, :x, (:block,
              (:line, 232, :none),
              (:call, :>, :x, 0)
            )), (:vect, -3, 4, 5)), true)),
    (:line, 234, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:->, :x, (:block,
              (:line, 234, :none),
              (:call, :>, :x, 0)
            )), (:vect,)), true)),
    (:line, 235, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:->, :x, (:block,
              (:line, 235, :none),
              (:call, :>, :x, 0)
            )), (:ref, :Int)), true)),
    (:line, 236, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:->, :x, (:block,
              (:line, 236, :none),
              (:call, :>, :x, 0)
            )), (:vect, -3)), false)),
    (:line, 237, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:->, :x, (:block,
              (:line, 237, :none),
              (:call, :>, :x, 0)
            )), (:vect, 4)), true)),
    (:line, 238, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :all, (:->, :x, (:block,
              (:line, 238, :none),
              (:call, :>, :x, 0)
            )), (:vect, -3, 4, 5)), false)),
    (:line, 240, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, (:->, (:tuple, :a, :b), (:block,
              (:line, 240, :none),
              (:call, :.|, :a, :b)
            )), (:call, :fill, (:call, :trues, 5), 24)), (:call, :trues, 5))),
    (:line, 241, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, (:->, (:tuple, :a, :b), (:block,
              (:line, 241, :none),
              (:call, :.|, :a, :b)
            )), (:call, :fill, (:call, :falses, 5), 24)), (:call, :falses, 5))),
    (:line, 242, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, (:->, (:tuple, :a, :b), (:block,
              (:line, 242, :none),
              (:call, :.&, :a, :b)
            )), (:call, :fill, (:call, :trues, 5), 24)), (:call, :trues, 5))),
    (:line, 243, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reduce, (:->, (:tuple, :a, :b), (:block,
              (:line, 243, :none),
              (:call, :.&, :a, :b)
            )), (:call, :fill, (:call, :falses, 5), 24)), (:call, :falses, 5))),
    (:line, 245, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :any, (:->, :x, (:block,
            (:line, 245, :none),
            0
          )), (:vect, false))),
    (:line, 246, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :all, (:->, :x, (:block,
            (:line, 246, :none),
            0
          )), (:vect, false))),
    (:line, 250, :none),
    (:let, (:block,
        (:line, 251, :none),
        (:call, :any, (:->, :x, (:block,
              (:line, 251, :none),
              (:block,
                (:(=), (:ref, :c, 1), :x),
                (:call, :(==), :x, 10)
              )
            )), :A),
        (:line, 252, :none),
        (:call, :all, (:->, :x, (:block,
              (:line, 252, :none),
              (:block,
                (:(=), (:ref, :c, 2), :x),
                (:call, :(!=), :x, 10)
              )
            )), :A),
        (:line, 254, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :c, (:vect, 10, 10)))
      ), (:(=), :c, (:vect, 0, 0)), (:(=), :A, (:(:), 1, 1000))),
    (:line, 258, :none),
    (:let, (:block,
        (:line, 259, :none),
        (:call, :all, (:generator, (:block,
              (:call, :push!, :c, :x),
              (:call, :<, :x, 5)
            ), (:(=), :x, :A))),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :c, (:call, :collect, (:(:), 1, 5)))),
        (:line, 262, :none),
        (:call, :any, (:generator, (:block,
              (:call, :push!, :d, :x),
              (:call, :>, :x, 4)
            ), (:(=), :x, :A))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :d, (:call, :collect, (:(:), 1, 5))))
      ), (:(=), :c, (:ref, :Int)), (:(=), :d, (:ref, :Int)), (:(=), :A, (:(:), 1, 9))),
    (:line, 268, :none),
    (:let, (:block,
        (:line, 269, :none),
        (:macrocall, Symbol("@test"), (:call, :any, (:ref, :Any, false, true, false))),
        (:line, 270, :none),
        (:macrocall, Symbol("@test"), (:call, :any, (:call, :map, :f, (:vect, 2, 1, 2)))),
        (:line, 271, :none),
        (:macrocall, Symbol("@test"), (:call, :any, (:comprehension, (:generator, (:call, :f, :x), (:(=), :x, (:vect, 2, 1, 2)))))),
        (:line, 273, :none),
        (:macrocall, Symbol("@test"), (:call, :all, (:ref, :Any, true, true, true))),
        (:line, 274, :none),
        (:macrocall, Symbol("@test"), (:call, :all, (:call, :map, :f, (:vect, 1, 1, 1)))),
        (:line, 275, :none),
        (:macrocall, Symbol("@test"), (:call, :all, (:comprehension, (:generator, (:call, :f, :x), (:(=), :x, (:vect, 1, 1, 1)))))),
        (:line, 277, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :any, (:vect, 1, true))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :all, (:vect, true, 1))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :any, (:call, :map, :f, (:vect, 3, 1)))),
        (:line, 280, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :all, (:call, :map, :f, (:vect, 1, 3))))
      ), (:(=), (:call, :f, :x), (:block,
          (:line, 268, :none),
          (:if, (:call, :(==), :x, 1), true, (:if, (:call, :(==), :x, 2), false, 1))
        ))),
    (:line, 285, :none),
    (:type, false, :SomeFunctor, (:block,
        (:line, 285, :none)
      )),
    (:line, 286, :none),
    (:(=), (:call, (:(::), :SomeFunctor), :x), (:block,
        (:line, 286, :none),
        true
      )),
    (:line, 288, :none),
    (:macrocall, Symbol("@test"), (:call, :any, (:call, :SomeFunctor), (:(:), 1, 10))),
    (:line, 289, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :SomeFunctor), (:(:), 1, 10))),
    (:line, 294, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 1, (:ref, :Int)), false)),
    (:line, 295, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 1, (:ref, :Int, 1)), true)),
    (:line, 296, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 1, (:ref, :Int, 2)), false)),
    (:line, 297, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 0, (:(:), 1, 3)), false)),
    (:line, 298, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 1, (:(:), 1, 3)), true)),
    (:line, 299, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :in, 2, (:(:), 1, 3)), true)),
    (:line, 303, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :contains, "quick fox", "fox"), true)),
    (:line, 304, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :contains, "quick fox", "lazy dog"), false)),
    (:line, 308, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :count, (:->, :x, (:block,
              (:line, 308, :none),
              (:call, :>, :x, 0)
            )), (:ref, :Int)), :(==), (:call, :count, (:ref, :Bool)), :(==), 0)),
    (:line, 309, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :count, (:->, :x, (:block,
              (:line, 309, :none),
              (:call, :>, :x, 0)
            )), (:(:), -3, 5)), :(==), (:call, :count, (:call, :.>, (:(:), -3, 5), 0)), :(==), 5)),
    (:line, 310, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :count, (:vect, true, true, false, true)), :(==), (:call, :count, (:call, :BitVector, (:vect, true, true, false, true))), :(==), 3)),
    (:line, 311, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :count, :sqrt, (:vect, 1))),
    (:line, 312, :none),
    (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :count, (:vect, 1))),
    (:line, 313, :none),
    (:let, (:block,
        (:line, 314, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :count, :iseven, :itr), 3)),
        (:line, 315, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :count, :itr)),
        (:line, 316, :none),
        (:macrocall, Symbol("@test_throws"), :TypeError, (:call, :count, :sqrt, :itr))
      ), (:(=), :itr, (:generator, :x, (:filter, (:call, :<, :x, 7), (:(=), :x, (:(:), 1, 10)))))),
    (:line, 318, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :count, (:generator, (:call, :iseven, :x), (:filter, (:call, :<, :x, 7), (:(=), :x, (:(:), 1, 10))))), 3)),
    (:line, 319, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :count, (:generator, (:call, :iseven, :x), (:filter, (:call, :<, :x, -7), (:(=), :x, (:(:), 1, 10))))), 0)),
    (:line, 321, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :countnz, (:ref, :Int)), 0)),
    (:line, 322, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :countnz, (:ref, :Int, 0)), 0)),
    (:line, 323, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :countnz, (:ref, :Int, 1)), 1)),
    (:line, 324, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :countnz, (:vect, 1, 0, 2, 0, 3, 0, 4)), 4)),
    (:line, 329, :none),
    (:(=), :z, (:call, :rand, (:call, :^, 10, 6))),
    (:line, 330, :none),
    (:let, (:block,
        (:line, 331, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :-, :es, (:call, :sum, :z)), (:call, :*, :es, 1.0e-13))),
        (:line, 332, :none),
        (:(=), :cs, (:call, :cumsum, :z)),
        (:line, 333, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :-, :es, (:ref, :cs, :end)), (:call, :*, :es, 1.0e-13))),
        (:line, 334, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :-, :es2, (:ref, :cs, (:call, :^, 10, 5))), (:call, :*, :es2, 1.0e-13)))
      ), (:(=), :es, (:call, :sum_kbn, :z)), (:(=), :es2, (:call, :sum_kbn, (:ref, :z, (:(:), 1, (:call, :^, 10, 5)))))),
    (:line, 338, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:call, :collect, (:call, :map, :UInt8, (:(:), 0, 255)))), 32640)),
    (:line, 339, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:call, :collect, (:call, :map, :UInt8, (:(:), 254, 255)))), 509)),
    (:line, 341, :none),
    (:(=), :A, (:call, :reshape, (:call, :map, :UInt8, (:(:), 101, 109)), (:tuple, 3, 3))),
    (:line, 342, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :sum, :A)), 945)),
    (:line, 343, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :sum, (:call, :view, :A, (:(:), 1, 3), (:(:), 1, 3)))), 945)),
    (:line, 345, :none),
    (:(=), :A, (:call, :reshape, (:call, :map, :UInt8, (:(:), 1, 100)), (:tuple, 10, 10))),
    (:line, 346, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :sum, :A)), 5050)),
    (:line, 347, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :sum, (:call, :view, :A, (:(:), 1, 10), (:(:), 1, 10)))), 5050)),
    (:line, 350, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:vect, -0.0)), -0.0)),
    (:line, 351, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :sum, (:vect, -0.0, -0.0)), -0.0)),
    (:line, 352, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :prod, (:vect, -0.0, -0.0)), 0.0)),
    (:line, 355, :none),
    (:let, (:block,
        (:line, 356, :none),
        (:macrocall, Symbol("@test"), (:call, :∋, :A, 5)),
        (:line, 357, :none),
        (:macrocall, Symbol("@test"), (:call, :∌, :A, 11)),
        (:line, 358, :none),
        (:macrocall, Symbol("@test"), (:call, :contains, :(==), :A, 6))
      ), (:(=), :A, (:call, :collect, (:(:), 1, 10)))),
    (:line, 362, :none),
    (:(=), (:call, :test18695, :r), (:block,
        (:line, 362, :none),
        (:call, :sum, (:generator, (:call, :^, :t, 2), (:(=), :t, :r)))
      )),
    (:line, 363, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@inferred"), (:call, :test18695, (:vect, 1.0, 2.0, 3.0, 4.0))), 30.0)),
    (:line, 364, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :test18695, (:ref, :Any))),
    (:line, 367, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :foldr, :-, (:(:), 2, 2)), 2))
  ))