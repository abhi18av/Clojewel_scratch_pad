(:quote, (:block,
    (:line, 5, :none),
    (:macrocall, Symbol("@testset"), "Construction, collect", (:block,
        (:line, 6, :none),
        (:(=), :data_in, (:tuple, 1, 5, 100)),
        (:line, 7, :none),
        (:(=), :s, (:call, :IntSet, :data_in)),
        (:line, 8, :none),
        (:(=), :data_out, (:call, :collect, :s)),
        (:line, 9, :none),
        (:macrocall, Symbol("@test"), (:call, :all, (:call, :map, (:->, :d, (:block,
                  (:line, 9, :none),
                  (:call, :in, :d, :data_out)
                )), :data_in))),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :data_out), (:call, :length, :data_in)))
      )),
    (:line, 13, :none),
    (:macrocall, Symbol("@testset"), "eltype, similar", (:block,
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, (:call, :IntSet)), :Int)),
        (:line, 15, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :IntSet), :Int)),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :similar, (:call, :IntSet, (:vect, 1, 2, 3))), (:call, :IntSet)))
      )),
    (:line, 19, :none),
    (:macrocall, Symbol("@testset"), "show", (:block,
        (:line, 20, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, (:call, :IntSet)), "IntSet([])")),
        (:line, 21, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, (:call, :IntSet, (:vect, 1, 2, 3))), "IntSet([1, 2, 3])")),
        (:line, 22, :none),
        (:call, :show, (:call, :IOBuffer), (:call, :IntSet))
      )),
    (:line, 25, :none),
    (:macrocall, Symbol("@testset"), "in, hashing", (:block,
        (:line, 26, :none),
        (:(=), :s, (:call, :IntSet, (:vect, 1, 2, 10, 20, 200, 300, 1000, 10000, 10002))),
        (:line, 27, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :last, :s), 10002)),
        (:line, 28, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :first, :s), 1)),
        (:line, 29, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :s), 9)),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s), 10002)),
        (:line, 31, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :s, -1)),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :s), 8)),
        (:line, 33, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :shift!, :s), 1)),
        (:line, 34, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :s), 7)),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 0, :s))),
        (:line, 36, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 1, :s))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 2, :s)),
        (:line, 38, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 10002, :s))),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 10000, :s)),
        (:line, 40, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 10000.0, :s)),
        (:line, 41, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 10002.0, :s))),
        (:line, 42, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :first, (:call, :IntSet))),
        (:line, 43, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :last, (:call, :IntSet))),
        (:line, 44, :none),
        (:(=), :t, (:call, :copy, :s)),
        (:line, 45, :none),
        (:call, :sizehint!, :t, 20000),
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hash, :s), (:call, :hash, :t))),
        (:line, 47, :none),
        (:call, :push!, :t, 20000),
        (:line, 48, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 20000, :t)),
        (:line, 49, :none),
        (:call, :sizehint!, :t, 200),
        (:line, 50, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 20000, :t)),
        (:line, 51, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :t, 20000), 20000)),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hash, :s), (:call, :hash, :t))),
        (:line, 54, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, (:call, :IntSet, (:vect, 1))), (:call, :hash, (:call, :IntSet, (:vect, 17))))),
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, (:call, :IntSet, (:vect, 1))), (:call, :hash, (:call, :IntSet, (:vect, 33))))),
        (:line, 56, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, (:call, :IntSet, (:vect, 1))), (:call, :hash, (:call, :IntSet, (:vect, 65))))),
        (:line, 57, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), (:call, :hash, (:call, :IntSet, (:vect, 1))), (:call, :hash, (:call, :IntSet, (:vect, 129))))),
        (:line, 60, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :IntSet, -1)),
        (:line, 61, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, -1, (:call, :IntSet, (:(:), 1, 10)))))
      )),
    (:line, 70, :none),
    (:macrocall, Symbol("@testset"), "union!, symdiff!", (:block,
        (:line, 71, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 72, :none),
        (:call, :union!, :i, (:vect, 1, 2)),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :i), 3)),
        (:line, 74, :none),
        (:call, :union!, :i, (:vect, 3, 4, 5)),
        (:line, 75, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :i), 5)),
        (:line, 77, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :i, 10)),
        (:line, 79, :none),
        (:call, :empty!, :i),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :i), 0)),
        (:line, 82, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :symdiff!, :i, -3)),
        (:line, 83, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :symdiff!, :i, 3), (:call, :IntSet, (:vect, 3)))),
        (:line, 84, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :symdiff!, :i, 257), (:call, :IntSet, (:vect, 3, 257)))),
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :symdiff!, :i, (:vect, 3, 6)), (:call, :IntSet, (:vect, 6, 257)))),
        (:line, 87, :none),
        (:(=), :i, (:call, :IntSet, (:(:), 1, 6))),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :symdiff!, :i, (:call, :IntSet, (:vect, 6, 513))), (:call, :IntSet, (:vcat, (:(:), 1, 5), 513))))
      )),
    (:line, 91, :none),
    (:macrocall, Symbol("@testset"), "copy, copy!, similar", (:block,
        (:line, 92, :none),
        (:(=), :s1, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 93, :none),
        (:(=), :s2, (:call, :similar, :s1)),
        (:line, 94, :none),
        (:call, :copy!, :s2, :s1),
        (:line, 95, :none),
        (:(=), :s3, (:call, :copy, :s2)),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:comparison, :s3, :(==), :s2, :(==), :s1)),
        (:line, 97, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :collect, :s3), :(==), (:call, :collect, :s2), :(==), (:vect, 1, 2, 3)))
      )),
    (:line, 100, :none),
    (:macrocall, Symbol("@testset"), "push!, union", (:block,
        (:line, 101, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 102, :none),
        (:(=), :j, (:call, :union, :i)),
        (:line, 103, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :j, :i)),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :(===), :j, :i))),
        (:line, 106, :none),
        (:(=), :j, (:call, :IntSet, (:vect, 4, 5, 6))),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :union, :i, :j), (:call, :IntSet, (:(:), 1, 6)))),
        (:line, 109, :none),
        (:(=), :k, (:call, :IntSet, (:vect, 7, 8, 9))),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :union, :i, :j, :k), (:call, :IntSet, (:(:), 1, 9)))),
        (:line, 111, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 112, :none),
        (:(=), :j, (:call, :union, :i)),
        (:line, 113, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :j, :i)),
        (:line, 114, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :(===), :j, :i))),
        (:line, 116, :none),
        (:(=), :j, (:call, :IntSet, (:vect, 4, 5, 6))),
        (:line, 117, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :union, :i, :j), (:call, :IntSet, (:(:), 1, 6)))),
        (:line, 119, :none),
        (:(=), :k, (:call, :IntSet, (:vect, 7, 8, 9))),
        (:line, 120, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :union, :i, :j, :k), (:call, :IntSet, (:(:), 1, 9)))),
        (:line, 122, :none),
        (:(=), :s1, (:call, :IntSet)),
        (:line, 123, :none),
        (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :push!, :s1, -1)),
        (:line, 124, :none),
        (:call, :push!, :s1, 1, 10, 100, 1000),
        (:line, 125, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s1), (:vect, 1, 10, 100, 1000))),
        (:line, 126, :none),
        (:call, :push!, :s1, 606),
        (:line, 127, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s1), (:vect, 1, 10, 100, 606, 1000))),
        (:line, 128, :none),
        (:(=), :s2, (:call, :IntSet)),
        (:line, 129, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), :s2, (:call, :union!, :s2, :s1))),
        (:line, 130, :none),
        (:(=), :s3, (:call, :IntSet, (:vect, 1, 10, 100))),
        (:line, 131, :none),
        (:call, :union!, :s3, (:vect, 1, 606, 1000)),
        (:line, 132, :none),
        (:(=), :s4, (:call, :union, (:call, :IntSet, (:vect, 1, 100, 1000)), (:call, :IntSet, (:vect, 10, 100, 606)))),
        (:line, 133, :none),
        (:macrocall, Symbol("@test"), (:comparison, :s1, :(==), :s2, :(==), :s3, :(==), :s4))
      )),
    (:line, 136, :none),
    (:macrocall, Symbol("@testset"), "pop!, delete!", (:block,
        (:line, 137, :none),
        (:(=), :s, (:call, :IntSet, (:(:), 1, 2, 10))),
        (:line, 138, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, 1), 1)),
        (:line, 139, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 1, :s))),
        (:line, 140, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :s, 1)),
        (:line, 141, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :s, -1)),
        (:line, 142, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, -1, 1), 1)),
        (:line, 143, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, 1, 0), 0)),
        (:line, 144, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), :s, (:call, :delete!, :s, 1))),
        (:line, 145, :none),
        (:for, (:(=), :i, :s), (:block,
            (:line, 145, :none),
            (:call, :pop!, :s, :i)
          )),
        (:line, 146, :none),
        (:macrocall, Symbol("@test"), (:call, :isempty, :s)),
        (:line, 147, :none),
        (:call, :push!, :s, 100),
        (:line, 148, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :pop!, :s, 100), 100)),
        (:line, 149, :none),
        (:call, :push!, :s, (:..., (:(:), 1, 2, 10))),
        (:line, 150, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s), 9)),
        (:line, 151, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s), 7)),
        (:line, 152, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :shift!, :s), 1)),
        (:line, 153, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :shift!, :s), 3)),
        (:line, 154, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s), (:vect, 5))),
        (:line, 155, :none),
        (:call, :empty!, :s),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :isempty, :s))
      )),
    (:line, 159, :none),
    (:macrocall, Symbol("@testset"), "intersect", (:block,
        (:line, 160, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 161, :none),
        (:(=), :j, (:call, :IntSet, (:vect, 4, 5, 6))),
        (:line, 163, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :i), :i)),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :(===), (:call, :intersect, :i), :i))),
        (:line, 165, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :i, :j), (:call, :IntSet, (:vect,)))),
        (:line, 166, :none),
        (:call, :push!, :j, 257),
        (:line, 167, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :i, :j), (:call, :IntSet, (:vect,)))),
        (:line, 168, :none),
        (:call, :push!, :j, 2, 3, 17),
        (:line, 169, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :i, :j), (:call, :IntSet, (:vect, 2, 3)))),
        (:line, 170, :none),
        (:(=), :k, (:call, :IntSet, (:vect, 1, 2, 3, 4, 5, 6, 7))),
        (:line, 171, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :i, :j, :k), (:call, :IntSet, (:vect, 2, 3)))),
        (:line, 173, :none),
        (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:call, :IntSet)))),
        (:line, 174, :none),
        (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:call, :IntSet, (:(:), 1, 10)), (:call, :IntSet)))),
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:call, :IntSet), (:call, :IntSet, (:(:), 1, 10))))),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:call, :IntSet, (:vect, 1, 2, 3))), (:call, :IntSet, (:vect, 1, 2, 3)))),
        (:line, 178, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :intersect, (:call, :IntSet, (:(:), 1, 7)), (:call, :IntSet, (:(:), 3, 10))), :(==), (:call, :intersect, (:call, :IntSet, (:(:), 3, 10)), (:call, :IntSet, (:(:), 1, 7))), :(==), (:call, :IntSet, (:(:), 3, 7)))),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:call, :IntSet, (:(:), 1, 10)), (:call, :IntSet, (:(:), 1, 4)), (:(:), 1, 5), (:vect, 2, 3, 10)), (:vect, 2, 3)))
      )),
    (:line, 183, :none),
    (:macrocall, Symbol("@testset"), "setdiff, symdiff", (:block,
        (:line, 184, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :setdiff, (:call, :IntSet, (:vect, 1, 2, 3, 4)), (:call, :IntSet, (:vect, 2, 4, 5, 6))), (:call, :IntSet, (:vect, 1, 3)))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :symdiff, (:call, :IntSet, (:vect, 1, 2, 3, 4)), (:call, :IntSet, (:vect, 2, 4, 5, 6))), (:call, :IntSet, (:vect, 1, 3, 5, 6)))),
        (:line, 187, :none),
        (:(=), :s2, (:call, :IntSet, (:vect, 1, 2, 3, 4))),
        (:line, 188, :none),
        (:call, :setdiff!, :s2, (:call, :IntSet, (:vect, 2, 4, 5, 6))),
        (:line, 189, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s2, (:call, :IntSet, (:vect, 1, 3)))),
        (:line, 191, :none),
        (:(=), :s1, (:call, :IntSet, (:(:), 1, 100))),
        (:line, 192, :none),
        (:call, :setdiff!, :s1, (:call, :IntSet, (:(:), 1, 2, 100))),
        (:line, 193, :none),
        (:(=), :s2, (:call, :setdiff, (:call, :IntSet, (:(:), 1, 100)), (:call, :IntSet, (:(:), 1, 2, 100)))),
        (:line, 194, :none),
        (:macrocall, Symbol("@test"), (:comparison, :s1, :(==), :s2, :(==), (:call, :IntSet, (:(:), 2, 2, 100)))),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s1), (:call, :collect, (:(:), 2, 2, 100)))),
        (:line, 197, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :symdiff, (:call, :IntSet, (:vect, 1, 2, 3, 4)), (:call, :IntSet, (:vect, 2, 4, 5, 6))), :(==), (:call, :symdiff, (:call, :IntSet, (:vect, 2, 4, 5, 6)), (:call, :IntSet, (:vect, 1, 2, 3, 4))), :(==), (:call, :symdiff, (:call, :IntSet, (:vect, 1, 2, 3, 4)), (:vect, 2, 4, 5, 6)), :(==), (:call, :symdiff, (:call, :IntSet, (:vect, 2, 4, 5, 6)), (:vect, 1, 2, 3, 4)), :(==), (:call, :IntSet, (:vect, 1, 3, 5, 6))))
      )),
    (:line, 203, :none),
    (:macrocall, Symbol("@testset"), "subsets, equality", (:block,
        (:line, 204, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 205, :none),
        (:(=), :k, (:call, :IntSet, (:vect, 4, 5))),
        (:line, 206, :none),
        (:call, :copy!, :k, :i),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :k, :i)),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :(===), :k, :i))),
        (:line, 209, :none),
        (:call, :copy!, :k, :k),
        (:line, 210, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :k, :i)),
        (:line, 212, :none),
        (:(=), :i, (:call, :IntSet, (:vect, 1, 2, 3))),
        (:line, 213, :none),
        (:(=), :j, (:call, :IntSet, (:vect, 1, 2, 4))),
        (:line, 214, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :i, :j)),
        (:line, 216, :none),
        (:call, :push!, :j, 257),
        (:line, 217, :none),
        (:call, :pop!, :j, 257),
        (:line, 218, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :i, :j)),
        (:line, 219, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :j, :i)),
        (:line, 221, :none),
        (:macrocall, Symbol("@test"), (:call, :issubset, (:call, :IntSet, (:vect, 1, 2, 4)), (:call, :IntSet, (:(:), 1, 10)))),
        (:line, 222, :none),
        (:macrocall, Symbol("@test"), (:call, :issubset, (:call, :IntSet, (:vect,)), (:call, :IntSet, (:vect,)))),
        (:line, 223, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :IntSet, (:vect, 1, 2, 4)), (:call, :IntSet, (:(:), 1, 10)))),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :<, (:call, :IntSet, (:vect,)), (:call, :IntSet, (:vect,))))),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :IntSet, (:vect, 1, 2, 4)), (:call, :IntSet, (:(:), 1, 10)))),
        (:line, 226, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :IntSet, (:vect, 1, 2, 4)), (:call, :IntSet, (:vect, 1, 2, 4)))),
        (:line, 227, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :IntSet, (:vect,)), (:call, :IntSet, (:vect,)))),
        (:line, 229, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :IntSet, (:(:), 2, 2, 10)), (:call, :IntSet, (:(:), 1, 10)))),
        (:line, 230, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :<, (:call, :IntSet, (:(:), 2, 2, 10)), (:call, :IntSet, (:(:), 2, 2, 10))))),
        (:line, 231, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :IntSet, (:(:), 2, 2, 10)), (:call, :IntSet, (:(:), 2, 10)))),
        (:line, 232, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :IntSet, (:(:), 2, 2, 10)), (:call, :IntSet, (:(:), 2, 2, 10)))),
        (:line, 235, :none),
        (:(=), :s, (:call, :IntSet, 255)),
        (:line, 236, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, :s))
      )),
    (:line, 239, :none),
    (:macrocall, Symbol("@testset"), "setlike", (:block,
        (:line, 240, :none),
        (:(=), :p, (:call, :IntSet, (:vect, 1, 2, 5, 6))),
        (:line, 241, :none),
        (:call, :resize!, (:., :p, (:quote, #QuoteNode
              :bits
            )), 6),
        (:line, 242, :none),
        (:(=), :q, (:call, :IntSet, (:vect, 1, 3, 5, 7))),
        (:line, 243, :none),
        (:call, :resize!, (:., :q, (:quote, #QuoteNode
              :bits
            )), 8),
        (:line, 244, :none),
        (:(=), :a, (:call, :Set, :p)),
        (:line, 245, :none),
        (:(=), :b, (:call, :Set, :q)),
        (:line, 246, :none),
        (:for, (:(=), :f, (:tuple, :union, :intersect, :setdiff, :symdiff)), (:block,
            (:line, 247, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :f, :p, :p)), (:call, :sort, (:call, :collect, (:call, :f, :a, :a))))),
            (:line, 248, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :f, :q, :q)), (:call, :sort, (:call, :collect, (:call, :f, :b, :b))))),
            (:line, 249, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :f, :p, :q)), (:call, :sort, (:call, :collect, (:call, :f, :a, :b))))),
            (:line, 250, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :f, :q, :p)), (:call, :sort, (:call, :collect, (:call, :f, :b, :a)))))
          ))
      )),
    (:line, 254, :none),
    (:macrocall, Symbol("@testset"), "misc", (:block,
        (:line, 255, :none),
        (:(=), :s, (:call, :IntSet)),
        (:line, 256, :none),
        (:call, :push!, :s, 1, 2, 100),
        (:line, 257, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 0, :s))),
        (:line, 258, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 1, :s)),
        (:line, 259, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 2, :s)),
        (:line, 260, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 3, :s))),
        (:line, 261, :none),
        (:macrocall, Symbol("@test"), (:call, :in, 100, :s)),
        (:line, 262, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 101, :s))),
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 1000, :s))),
        (:line, 264, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :first, :s), 1)),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :last, :s), 100)),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, (:call, :IntSet, (:vect, 1, 2, 100)))),
        (:line, 267, :none),
        (:call, :push!, :s, 1000),
        (:line, 268, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:comprehension, (:generator, :i, (:(=), :i, :s))), (:vect, 1, 2, 100, 1000))),
        (:line, 269, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s), 1000)),
        (:line, 270, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, (:call, :IntSet, (:vect, 1, 2, 100)))),
        (:line, 271, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hash, :s), (:call, :hash, (:call, :IntSet, (:vect, 1, 2, 100))))),
        (:line, 273, :none),
        (:(=), :b, (:(:), 1, 1000)),
        (:line, 274, :none),
        (:(=), :s, (:call, :IntSet, :b)),
        (:line, 275, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s), (:call, :collect, :b))),
        (:line, 276, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :length, :s), (:call, :length, :b))),
        (:line, 277, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, 100), 100)),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, :s), (:vcat, (:(:), 1, 99), (:(:), 101, 1000)))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :s, 100)),
        (:line, 280, :none),
        (:macrocall, Symbol("@test_throws"), :KeyError, (:call, :pop!, :s, 0)),
        (:line, 281, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, 100, 0), 0)),
        (:line, 282, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :pop!, :s, 99, 0), 99))
      ))
  ))