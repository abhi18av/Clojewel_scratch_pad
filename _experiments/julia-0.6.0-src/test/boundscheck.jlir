(:quote, (:block,
    (:line, 5, :none),
    (:(=), :cmd, (:macrocall, Symbol("@cmd"), "\$(Base.julia_cmd()) --depwarn=error --startup-file=no boundscheck_exec.jl")),
    (:line, 6, :none),
    (:if, (:call, :!, (:call, :success, (:call, :pipeline, (:parameters, (:kw, :stdout, :STDOUT), (:kw, :stderr, :STDERR)), :cmd))), (:block,
        (:line, 7, :none),
        (:call, :error, (:string, "boundscheck test failed, cmd : ", :cmd))
      )),
    (:line, 10, :none),
    (:(=), :cmd, (:macrocall, Symbol("@cmd"), "\$(Base.julia_cmd()) --check-bounds=yes --startup-file=no --depwarn=error boundscheck_exec.jl")),
    (:line, 11, :none),
    (:if, (:call, :!, (:call, :success, (:call, :pipeline, (:parameters, (:kw, :stdout, :STDOUT), (:kw, :stderr, :STDERR)), :cmd))), (:block,
        (:line, 12, :none),
        (:call, :error, (:string, "boundscheck test failed, cmd : ", :cmd))
      )),
    (:line, 15, :none),
    (:(=), :cmd, (:macrocall, Symbol("@cmd"), "\$(Base.julia_cmd()) --check-bounds=no --startup-file=no --depwarn=error boundscheck_exec.jl")),
    (:line, 16, :none),
    (:if, (:call, :!, (:call, :success, (:call, :pipeline, (:parameters, (:kw, :stdout, :STDOUT), (:kw, :stderr, :STDERR)), :cmd))), (:block,
        (:line, 17, :none),
        (:call, :error, (:string, "boundscheck test failed, cmd : ", :cmd))
      ))
  ))