(:quote, (:block,
    (:line, 3, :none),
    (:using, :Base, :Bottom),
    (:line, 4, :none),
    (:using, :Base, :Test),
    (:line, 6, :none),
    (:macro, (:call, :UnionAll, :var, :expr), (:block,
        (:line, 7, :none),
        (:call, :Expr, (:quote, #QuoteNode
            :where
          ), (:call, :esc, :expr), (:call, :esc, :var))
      )),
    (:line, 10, :none),
    (:const, (:(=), :issub, :issubtype)),
    (:line, 11, :none),
    (:(=), (:call, :issub_strict, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 11, :none),
        (:&&, (:call, :issub, :x, :y), (:call, :!, (:call, :issub, :y, :x)))
      )),
    (:line, 12, :none),
    (:(=), (:call, :isequal_type, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 12, :none),
        (:&&, (:call, :issub, :x, :y), (:call, :issub, :y, :x))
      )),
    (:line, 13, :none),
    (:(=), (:call, :notequal_type, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 13, :none),
        (:call, :!, (:call, :isequal_type, :x, :y))
      )),
    (:line, 15, :none),
    (:(=), (:call, :_type_intersect, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 15, :none),
        (:call, :ccall, (:quote, #QuoteNode
            :jl_intersect_types
          ), :Any, (:tuple, :Any, :Any), :x, :y)
      )),
    (:line, 17, :none),
    (:(=), (:call, :intersection_env, (:(::), :x, :ANY), (:(::), :y, :ANY)), (:block,
        (:line, 17, :none),
        (:call, :ccall, (:quote, #QuoteNode
            :jl_env_from_type_intersection
          ), :Any, (:tuple, :Any, :Any), :x, :y)
      )),
    (:line, 20, :none),
    (:function, (:call, :test_1), (:block,
        (:line, 21, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :Int, :Integer)),
        (:line, 22, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Array, :Int, 1), (:curly, :AbstractArray, :Int, 1))),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :Int, :Int)),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :Integer, :Integer)),
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Array, :Int, 1), (:curly, :Array, :Int, 1))),
        (:line, 27, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :AbstractArray, :Int, 1), (:curly, :AbstractArray, :Int, 1))),
        (:line, 29, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Integer, :Integer))),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, (:curly, :Array, :Int, 1)), (:curly, :Tuple, (:curly, :AbstractArray, :Int, 1)))),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Tuple, :Integer, :Integer), (:curly, :Tuple, :Integer, :Integer))),
        (:line, 34, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int)))),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int), (:curly, :Tuple, :Integer, :Integer)))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Array, :Int, 1), (:curly, :Array, :Integer, 1))))
      )),
    (:line, 41, :none),
    (:function, (:call, :test_2), (:block,
        (:line, 42, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, (:curly, :Vararg, :Int)))),
        (:line, 43, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)))),
        (:line, 44, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int, (:curly, :Vararg, :Integer)))),
        (:line, 45, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int, :Int, (:curly, :Vararg, :Integer)))),
        (:line, 46, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)), (:curly, :Tuple, (:curly, :Vararg, :Int)))),
        (:line, 47, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int, :Int), (:curly, :Tuple, (:curly, :Vararg, :Int)))),
        (:line, 48, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int, :Int), (:curly, :Tuple, :Integer, (:curly, :Vararg, :Int)))),
        (:line, 49, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int), (:curly, :Tuple, :Any))),
        (:line, 50, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple), (:curly, :Tuple, (:curly, :Vararg, :Any)))),
        (:line, 52, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Tuple, :Int), (:curly, :Tuple, :Int))),
        (:line, 53, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Tuple, (:curly, :Vararg, :Integer)), (:curly, :Tuple, (:curly, :Vararg, :Integer)))),
        (:line, 55, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int))))),
        (:line, 56, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int), (:curly, :Tuple, :Int, :Int, (:curly, :Vararg, :Int))))),
        (:line, 58, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int, (:curly, :Tuple, :Real, :Integer)), (:curly, :Tuple, (:curly, :Vararg, :Int))))),
        (:line, 60, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, (:curly, :Vararg, :Int, 2)))),
        (:line, 62, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, 2)), (:curly, :Tuple, :Int, :Int, :Int))),
        (:line, 63, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, 2)), (:curly, :Tuple, :Int, :Int, :Int))),
        (:line, 64, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:curly, :Tuple, :Any, :Any), (:curly, :Tuple, (:curly, :Vararg, :Any, 2)))),
        (:line, 65, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, 2)), (:curly, :Tuple, :Int, :Int, (:curly, :Vararg, :Int, 1)))),
        (:line, 66, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, 2)), (:curly, :Tuple, :Int, :Int, :Int, (:curly, :Vararg, :Int, 0)))),
        (:line, 67, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, 2)), (:curly, :Tuple, :Int, :Int, :Int, (:curly, :Vararg, :Int, 1))))),
        (:line, 68, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)))),
        (:line, 69, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, :N))), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, :Int, (:curly, :Vararg, :Int, :N))))),
        (:line, 71, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int, :Int)), (:where, (:curly, :Tuple, (:curly, :NTuple, :N, :Int), (:curly, :NTuple, :N, :Int)), :N))),
        (:line, 72, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Int)), (:where, (:curly, :Tuple, (:curly, :NTuple, :N, :Int), (:curly, :NTuple, :N, :Int)), :N)))),
        (:line, 73, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:curly, :NTuple, 0), (:curly, :Tuple))),
        (:line, 75, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:where, (:curly, :Tuple, :Int, :Int, (:curly, :Vararg, :Int, :N)), :N))),
        (:line, 76, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:where, (:where, (:curly, :Tuple, :E, :E, (:curly, :Vararg, :E, :N)), :E), :N))),
        (:line, 78, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Type, (:curly, :Tuple, (:curly, :VecElement, :Bool))), (:where, (:where, (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, (:curly, :VecElement, :T), :N))), :T), :N))),
        (:line, 80, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Type, (:where, (:curly, :Tuple, (:curly, :Vararg, :Int, :N)), :N)), (:curly, :Type, (:curly, :Tuple, (:where, (:curly, :Vararg, :Int, :N), :N))))),
        (:line, 81, :none),
        (:macrocall, Symbol("@test"), (:call, :(!==), (:curly, :Type, (:where, (:curly, :Tuple, (:curly, :Vararg, :Int, :N)), :N)), (:curly, :Type, (:curly, :Tuple, (:where, (:curly, :Vararg, :Int, :N), :N)))))
      )),
    (:line, 84, :none),
    (:function, (:call, :test_diagonal), (:block,
        (:line, 85, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Integer, :Integer), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T))))),
        (:line, 86, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Integer, :Int), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 87, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Integer, :Int), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :S, :<:, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 88, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Integer, :Int, :Int), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :S, :<:, :T), (:curly, :Tuple, :T, :S, :S)))))),
        (:line, 90, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :R, (:curly, :Tuple, :R, :R)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :T, :S))))),
        (:line, 92, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :R, (:curly, :Tuple, :R, :R)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 94, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :R, (:curly, :Tuple, :R, :R)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :S, :<:, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 96, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :R, (:curly, :Tuple, :R, :R)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 99, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Real, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Tuple, :T, :T))))),
        (:line, 101, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :R, :AbstractString), (:curly, :Tuple, :S, :R, (:curly, :Vector, :Any)))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1))))),
        (:line, 104, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :String, :Real, (:curly, :Ref, :Number)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :T, :String), :T, (:curly, :Ref, :T))))),
        (:line, 107, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :String, :Real), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :T, :String), :T)))),
        (:line, 110, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Real, :Real), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :T, :String), :T))))),
        (:line, 113, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :T, :String), :T)))),
        (:line, 117, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:where, (:curly, :Tuple, (:curly, :Vararg, :A)), (:>:, :A, :Integer)), (:where, (:curly, :Tuple, (:curly, :Vararg, :A)), (:>:, :A, :Integer))))
      )),
    (:line, 122, :none),
    (:function, (:call, :test_3), (:block,
        (:line, 123, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Array, :Int, 1), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Vector, :T)))),
        (:line, 124, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T)), :Pair)),
        (:line, 125, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Pair, :Int, :Int8), :Pair)),
        (:line, 126, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Pair, :Int, :Int8), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, :Int, :S)))),
        (:line, 128, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), :T), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), :T)))),
        (:line, 130, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:macrocall, Symbol("@UnionAll"), :R, (:curly, :Tuple, :R, :R)))),
        (:line, 132, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Tuple, :T, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Tuple, :S, :T)))))),
        (:line, 135, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T), (:curly, :Array, :T))), (:curly, :Tuple, :Array, :Array))),
        (:line, 138, :none),
        (:(=), :AUA, (:curly, :Array, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Array, :T, 1)), 1)),
        (:line, 139, :none),
        (:(=), :UAA, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Array, (:curly, :Array, :T, 1), 1))),
        (:line, 141, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :AUA, :UAA))),
        (:line, 142, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :UAA, :AUA))),
        (:line, 143, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal_type, :AUA, :UAA))),
        (:line, 145, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), :Integer))),
        (:line, 147, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :T, (:curly, :Tuple, :S)))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :S)))))),
        (:line, 150, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T)), (:curly, :Pair, :Int, :Int8)))),
        (:line, 151, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T)), (:curly, :Pair, :Int, :Int)))),
        (:line, 153, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T)), (:curly, :Tuple, :Any))),
        (:line, 154, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Tuple, :T)), (:curly, :Tuple, :Real))),
        (:line, 156, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Array, :Integer, 1), :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, (:curly, :Array, :T, 1), :S))))),
        (:line, 159, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Array, :Integer, 1), :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Tuple, (:curly, :Array, :T, 1), :T))))),
        (:line, 162, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int, :String, (:curly, :Vector, :Integer)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1)))))),
        (:line, 164, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :String, :Int, (:curly, :Vector, :Integer)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1)))))),
        (:line, 166, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Int, :String, (:curly, :Vector, (:curly, :Tuple, :Integer))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, (:curly, :Tuple, :T), 1)))))),
        (:line, 169, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Int, :String, (:curly, :Vector, :Any)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1))))),
        (:line, 172, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Array, :Int, 1), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), :T), 1))),
        (:line, 173, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Array, (:curly, :Tuple, :Any), 1), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T)), 1))),
        (:line, 175, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Array, (:curly, :Tuple, :Int, :Int), 1), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), (:curly, :Tuple, :T, :T)), 1))),
        (:line, 177, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Array, (:curly, :Tuple, :Int, :Integer), 1), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Tuple, :T, :T)), 1)))),
        (:line, 180, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Pair, :Int, :Int8), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T))))),
        (:line, 182, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Array, :Int, 1), :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Tuple, (:curly, :Array, :T, 1), :T))))),
        (:line, 185, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Integer, (:curly, :Array, :Int, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Tuple, :T, (:curly, :Array, :T, 1)))))),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Pair, (:curly, :Array, :Int, 1), :Integer), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, (:curly, :Array, :T, 1), :T))))),
        (:line, 189, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Pair, (:curly, :Array, :Int, 1), :Int), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, (:curly, :Array, :T, 1), :T)))),
        (:line, 191, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Integer, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :T, :S))))),
        (:line, 192, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Integer, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :T, :S)))))),
        (:line, 193, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Integer, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :String), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :T, :S)))))),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Float32, (:curly, :Array, :Float32, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S))))),
        (:line, 198, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Float32, (:curly, :Array, :Float64, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S)))))),
        (:line, 201, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :Float32, (:curly, :Array, :Real, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S))))),
        (:line, 204, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Number, (:curly, :Array, :Real, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S)))))),
        (:line, 207, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :Integer), :T), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), :T))),
        (:line, 208, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :Integer), (:curly, :Array, :T, 1)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Array, :T, 1)))),
        (:line, 211, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :Integer), :T), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Real), :T))),
        (:line, 212, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :Integer), (:curly, :Array, :T, 1)), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Real), (:curly, :Array, :T, 1))))),
        (:line, 214, :none),
        (:(=), :X, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S)))),
        (:line, 215, :none),
        (:(=), :Y, (:macrocall, Symbol("@UnionAll"), (:<:, :A, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :B, (:curly, :AbstractArray, :A, 1)), (:curly, :Tuple, :A, :B)))),
        (:line, 216, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :X, :Y)),
        (:line, 217, :none),
        (:(=), :Z, (:macrocall, Symbol("@UnionAll"), (:<:, :A, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :B, (:curly, :AbstractArray, :A, 1)), (:curly, :Tuple, :Real, :B)))),
        (:line, 218, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :X, :Z)),
        (:line, 220, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Pair, :T, :S))), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, :T, :S))))),
        (:line, 222, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Pair, :T, :S))), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, :T, :S))))),
        (:line, 232, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Ref, :T), :T)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :S, :<:, :T), (:curly, :Tuple, (:curly, :Ref, :T), :S))))),
        (:line, 234, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Ref, :T), :T)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, (:curly, :Ref, :T), :S))))),
        (:line, 237, :none),
        (:(=), :A, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Ptr, :T)))),
        (:line, 238, :none),
        (:(=), :B, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Ptr, :T), :T))),
        (:line, 240, :none),
        (:(=), :C, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, :Ptr), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S))))),
        (:line, 241, :none),
        (:(=), :D, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, (:curly, :Ptr, :T)), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S))))),
        (:line, 242, :none),
        (:(=), :E, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, (:curly, :Ptr, :T)), (:curly, :Tuple, (:curly, :Ptr, :S), (:curly, :Ptr, :T))))),
        (:line, 244, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :A, :B))),
        (:line, 245, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :B, :A))),
        (:line, 246, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :C, :A)),
        (:line, 247, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :C, :B)),
        (:line, 248, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :C, :D)),
        (:line, 249, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Union, :D, :E), :A)),
        (:line, 250, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Union, :D, :E), :B)),
        (:line, 251, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:comparison, :Ptr, :<:, :S, :<:, :Ptr), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, (:curly, :Ptr, :T)), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))))),
        (:line, 253, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, :Ptr), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:comparison, (:curly, :Ptr, :T), :<:, :S, :<:, :Ptr), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S))))))),
        (:line, 256, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:>:, :S, :Ptr), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))), :B))),
        (:line, 258, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, :Integer), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))), :B))
      )),
    (:line, 262, :none),
    (:function, (:call, :test_4), (:block,
        (:line, 263, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, :Bottom, :Bottom), :Bottom)),
        (:line, 265, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :Int, (:curly, :Union, :Int, :String))),
        (:line, 266, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Union, :Int, :Int8), :Integer)),
        (:line, 268, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, :Int, :Int8), (:curly, :Union, :Int, :Int8))),
        (:line, 270, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, :Int, :Integer), :Integer)),
        (:line, 272, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Tuple, (:curly, :Union, :Int, :Int8), :Int16), (:curly, :Union, (:curly, :Tuple, :Int, :Int16), (:curly, :Tuple, :Int8, :Int16)))),
        (:line, 274, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int8, :Int), (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, :Int, :Int8))))),
        (:line, 275, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Int, :Int8, :Int), (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, :Int, :Int8, :Int16))))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Union, :Int, (:curly, :Ref, (:curly, :Union, :Int, :Int8))), (:curly, :Union, :Int, (:curly, :Ref, (:curly, :Union, :Int8, :Int16)))))),
        (:line, 280, :none),
        (:(=), :A, :Int64),
        (:line, 280, :none),
        (:(=), :B, :Int8),
        (:line, 281, :none),
        (:(=), :C, :Int16),
        (:line, 281, :none),
        (:(=), :D, :Int32),
        (:line, 282, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Union, (:curly, :Union, :A, (:curly, :Union, :A, (:curly, :Union, :B, :C))), (:curly, :Union, :D, :Bottom)), (:curly, :Union, (:curly, :Union, :A, :B), (:curly, :Union, :C, (:curly, :Union, :B, :D))))),
        (:line, 284, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Union, (:curly, :Union, :A, (:curly, :Union, :A, (:curly, :Union, :B, :C))), (:curly, :Union, :D, :Bottom)), (:curly, :Union, (:curly, :Union, :A, :B), (:curly, :Union, :C, (:curly, :Union, :B, :A)))))),
        (:line, 287, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, (:curly, :Union, :A, :B, :C), (:curly, :Union, :D)), (:curly, :Union, :A, :B, :C, :D))),
        (:line, 288, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, (:curly, :Union, :A, :B, :C), (:curly, :Union, :D)), (:curly, :Union, :A, (:curly, :Union, :B, :C), :D))),
        (:line, 289, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Union, (:curly, :Union, (:curly, :Union, (:curly, :Union, :A)), :B, :C), (:curly, :Union, :D)), (:curly, :Union, :A, (:curly, :Union, :B, :C), :D))),
        (:line, 292, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Union, (:curly, :Union, :A, :C), (:curly, :Union, :D)), (:curly, :Union, :A, :B, :C, :D))),
        (:line, 294, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Union, (:curly, :Union, :A, :B, :C), (:curly, :Union, :D)), (:curly, :Union, :A, :C, :D)))),
        (:line, 297, :none),
        (:(=), :X, (:curly, :Union, (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C), (:curly, :Union, :A, :B, :C))),
        (:line, 299, :none),
        (:(=), :Y, (:curly, :Union, (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :D, :B, :C), (:curly, :Union, :A, :B, :C))),
        (:line, 301, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :X, :Y))
      )),
    (:line, 305, :none),
    (:function, (:call, :test_5), (:block,
        (:line, 306, :none),
        (:(=), :u, (:curly, :Union, :Int8, :Int)),
        (:line, 308, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, :String, (:curly, :Array, :Int, 1)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Union, (:curly, :Tuple, :T, (:curly, :Array, :T, 1)), (:curly, :Tuple, :T, (:curly, :Array, :Int, 1)))))),
        (:line, 311, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Union, (:curly, :Vector, :Int), (:curly, :Vector, :Int8))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T, 1))))),
        (:line, 314, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Union, (:curly, :Vector, :Int), (:curly, :Vector, :Int8)), (:curly, :Vector, :Int)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T, 1), (:curly, :Array, :T, 1)))))),
        (:line, 317, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Union, (:curly, :Vector, :Int), (:curly, :Vector, :Int8)), (:curly, :Vector, :Int8)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T, 1), (:curly, :Array, :T, 1)))))),
        (:line, 320, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Vector, :Int), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :u), (:curly, :Array, :T, 1))))),
        (:line, 321, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Vector, :Integer), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :u), (:curly, :Array, :T, 1)))),
        (:line, 322, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Vector, (:curly, :Union, :Int, :Int8)), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :u), (:curly, :Array, :T, 1)))),
        (:line, 324, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :u), (:curly, :Array, :T, 1)), (:macrocall, Symbol("@UnionAll"), (:comparison, :Int, :<:, :T, :<:, :u), (:curly, :Array, :T, 1)))),
        (:line, 327, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Array, (:curly, :Tuple, (:curly, :Array, :Int), (:curly, :Array, (:curly, :Vector, :Int16)), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, :Int))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, (:curly, :Array, :S), (:curly, :Array, (:curly, :Array, :S, 1))))))), (:curly, :Array, :T))))),
        (:line, 330, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Array, (:curly, :Tuple, (:curly, :Array, :Int), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, :Int))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, (:curly, :Array, :S), (:curly, :Array, (:curly, :Array, :S, 1))))))), (:curly, :Array, :T)))),
        (:line, 333, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Array, :Int), (:curly, :Array, (:curly, :Vector, :Int16)), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, :Int)), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, (:curly, :Array, :S), (:curly, :Array, (:curly, :Array, :S, 1))))))))),
        (:line, 336, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Array, :Int), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, (:curly, :Vector, :Int)), (:curly, :Array, :Int)), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, (:curly, :Array, :S), (:curly, :Array, (:curly, :Array, :S, 1)))))))),
        (:line, 339, :none),
        (:(=), :B, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :u), (:curly, :Tuple, :S, (:curly, :Tuple, :Any, :Any, :Any), (:curly, :Ref, :S)))),
        (:line, 341, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :B), (:curly, :Tuple, :Int8, :T, (:curly, :Ref, :Int8))), :B)),
        (:line, 342, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :B), (:curly, :Tuple, :Int8, :T, (:curly, :Ref, :T))), :B))),
        (:line, 346, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Array, :u, 1), :Int), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T, 1), :T)))),
        (:line, 347, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Array, :u, 1), :Int), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, (:curly, :Array, :T, 1), :S))))),
        (:line, 349, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Ref, (:curly, :Union, (:curly, :Ref, :Int), (:curly, :Ref, :Int8))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Ref, (:curly, :Ref, :T)))))),
        (:line, 350, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Union, (:curly, :Ref, :Int), (:curly, :Ref, :Int8))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Ref, :T))))),
        (:line, 351, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Ref, (:curly, :Union, (:curly, :Ref, :Int), (:curly, :Ref, :Int8))), (:curly, :Union, (:curly, :Ref, (:curly, :Ref, :Int)), (:curly, :Ref, (:curly, :Ref, :Int8)))))),
        (:line, 353, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Ref, (:curly, :Tuple, (:curly, :Union, :Int, :Int8), :Int16)), (:curly, :Ref, (:curly, :Union, (:curly, :Tuple, :Int, :Int16), (:curly, :Tuple, :Int8, :Int16))))),
        (:line, 354, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:where, (:curly, :Ref, :T), (:<:, :T, (:curly, :Tuple, (:curly, :Union, :Int, :Int8), :Int16))), (:where, (:curly, :Ref, :T), (:<:, :T, (:curly, :Union, (:curly, :Tuple, :Int, :Int16), (:curly, :Tuple, :Int8, :Int16)))))),
        (:line, 357, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:where, (:curly, :Ref, (:curly, :Tuple, (:curly, :Union, :Int, :Int8), :Int16, :T)), :T), (:where, (:curly, :Ref, (:curly, :Union, (:curly, :Tuple, :Int, :Int16, :S), (:curly, :Tuple, :Int8, :Int16, :S))), :S)))
      )),
    (:line, 362, :none),
    (:function, (:call, :test_6), (:block,
        (:line, 363, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :R, :String), (:curly, :Tuple, :S, :R, (:curly, :Vector, :Any)))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1))))),
        (:line, 366, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :R, :String), (:curly, :Tuple, :S, :R, (:curly, :Vector, :Integer)))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Array, :T, 1)))))),
        (:line, 369, :none),
        (:(=), :t, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Ref, :T)))),
        (:line, 370, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :t, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :S, :S, (:curly, :Ref, :S))))),
        (:line, 372, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :String, (:curly, :Ref, :T))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T, (:curly, :Ref, :T)))))),
        (:line, 374, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Ref, :T), :String)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Ref, :T), :T))))),
        (:line, 376, :none),
        (:(=), :i, :Int),
        (:line, 376, :none),
        (:(=), :ai, :Integer),
        (:line, 377, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, :T)), (:curly, :Ref, :i))),
        (:line, 378, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), (:comparison, :ai, :<:, :T, :<:, :ai), (:curly, :Ref, :T)), (:curly, :Ref, :ai))),
        (:line, 381, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :S, :<:, :i), (:curly, :Pair, :T, :S))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T)))),
        (:line, 384, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :i, (:curly, :Ref, :i)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :S, (:curly, :Ref, :T)))))),
        (:line, 387, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, :Real, (:curly, :Ref, :i)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Tuple, :S, (:curly, :Ref, :T))))))),
        (:line, 391, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Real, (:curly, :Ref, :i)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, :S, (:curly, :Ref, :T)))))),
        (:line, 394, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Ref, :i), (:curly, :Ref, :ai)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, (:curly, :Ref, :S), (:curly, :Ref, :T))))))),
        (:line, 397, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, (:curly, :Ref, :Real), (:curly, :Ref, :ai)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, (:curly, :Ref, :S), (:curly, :Ref, :T)))))),
        (:line, 400, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, :Real, (:curly, :Ref, (:curly, :Tuple, :i))), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, :S, (:curly, :Ref, (:curly, :Tuple, :T))))))),
        (:line, 403, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Ref, (:curly, :Tuple, :i)), (:curly, :Ref, (:curly, :Tuple, :ai))), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, (:curly, :Ref, (:curly, :Tuple, :S)), (:curly, :Ref, (:curly, :Tuple, :T)))))))),
        (:line, 406, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Tuple, (:curly, :Ref, (:curly, :Tuple, :Real)), (:curly, :Ref, (:curly, :Tuple, :ai))), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), (:>:, :S, :T), (:curly, :Tuple, (:curly, :Ref, (:curly, :Tuple, :S)), (:curly, :Ref, (:curly, :Tuple, :T))))))),
        (:line, 410, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Ref, (:curly, :Ref, :i)), (:curly, :Ref, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, :T))))),
        (:line, 411, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Ref, (:curly, :Ref, :i)), (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, (:curly, :Ref, :T))))),
        (:line, 412, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, (:curly, :Ref, :T))), (:curly, :Ref, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, :T))))),
        (:line, 413, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:comparison, :i, :<:, :T, :<:, :i), (:curly, :Ref, (:curly, :Ref, :T))), (:curly, :Ref, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :i), (:curly, :Ref, :T)))))),
        (:line, 415, :none),
        (:(=), :u, (:curly, :Union, :Int8, :Int64)),
        (:line, 416, :none),
        (:(=), :A, (:curly, :Ref, :Bottom)),
        (:line, 417, :none),
        (:(=), :B, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :u), (:curly, :Ref, :S))),
        (:line, 418, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Ref, :B), (:macrocall, Symbol("@UnionAll"), (:comparison, :A, :<:, :T, :<:, :B), (:curly, :Ref, :T)))),
        (:line, 420, :none),
        (:(=), :C, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :u), :S)),
        (:line, 421, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Ref, :C), (:macrocall, Symbol("@UnionAll"), (:comparison, :u, :<:, :T, :<:, :u), (:curly, :Ref, :T)))),
        (:line, 423, :none),
        (:(=), :BB, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Bottom), :S)),
        (:line, 424, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Ref, :B), (:macrocall, Symbol("@UnionAll"), (:comparison, :BB, :<:, :U, :<:, :B), (:curly, :Ref, :U))))
      )),
    (:line, 428, :none),
    (:function, (:call, :test_7), (:block,
        (:line, 429, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:where, (:curly, :Ref, (:curly, :Union, :Int16, :T)), :T), (:where, (:curly, :Ref, (:curly, :Union, :Int16, :S)), :S))),
        (:line, 430, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:where, (:curly, :Pair, (:curly, :Union, :Int16, :T), :T), :T), (:where, (:curly, :Pair, (:curly, :Union, :Int16, :S), :S), :S)))
      )),
    (:line, 433, :none),
    (:function, (:call, :test_Type), (:block,
        (:line, 434, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :DataType, :Type)),
        (:line, 435, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :Union, :Type)),
        (:line, 436, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :UnionAll, :Type)),
        (:line, 437, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:call, :typeof, :Bottom), :Type)),
        (:line, 438, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :TypeVar, :Type))),
        (:line, 439, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :Type, :TypeVar))),
        (:line, 440, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, :DataType, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Type, :T))))),
        (:line, 441, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, (:curly, :Type, :Int), :DataType)),
        (:line, 442, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Type, :T)), :DataType))),
        (:line, 443, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Type, :AbstractArray), (:curly, :Type, :AbstractArray))),
        (:line, 444, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Type, :Int), (:curly, :Type, :Integer)))),
        (:line, 445, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Type, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Type, :T)))),
        (:line, 446, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :Int, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Type, :T)))),
        (:line, 447, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, :DataType, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Type, :T))))),
        (:line, 449, :none),
        (:macrocall, Symbol("@test"), (:<:, :DataType, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Type), (:curly, :Type, :T)))),
        (:line, 450, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:curly, :Tuple), (:curly, :Type, (:curly, :Tuple)))),
        (:line, 451, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Tuple, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Tuple), (:curly, :Type, :T))))),
        (:line, 452, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:curly, :Tuple, :Int), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Tuple), (:curly, :Type, :T)))),
        (:line, 455, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Type, :Int), (:curly, :Type, :Int8)), (:where, (:curly, :Tuple, :T, :T), :T))),
        (:line, 456, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issub, (:curly, :Tuple, (:curly, :Type, :Int), (:curly, :Type, (:curly, :Union))), (:where, (:curly, :Tuple, :T, :T), :T)))),
        (:line, 459, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Tuple, (:curly, :Type, (:curly, :Union, (:curly, :Type, :UInt32), (:curly, :Type, :UInt64))), (:curly, :Type, :UInt32)), (:where, (:curly, :Tuple, (:curly, :Type, :T), :T), :T))),
        (:line, 461, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, (:., :Core, (:quote, #QuoteNode
                :TypeofBottom
              )), (:curly, :Type, (:curly, :Union)))),
        (:line, 462, :none),
        (:macrocall, Symbol("@test"), (:call, :issub, (:., :Core, (:quote, #QuoteNode
                :TypeofBottom
              )), (:where, (:curly, :Type, :T), (:<:, :T, :Real))))
      )),
    (:line, 466, :none),
    (:function, (:call, :test_old), (:block,
        (:line, 467, :none),
        (:macrocall, Symbol("@test"), (:<:, :Int8, :Integer)),
        (:line, 468, :none),
        (:macrocall, Symbol("@test"), (:<:, :Int32, :Integer)),
        (:line, 469, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Int8, :Int8), (:curly, :Tuple, :Integer, :Integer))),
        (:line, 470, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :AbstractArray, :Float64, 2), (:curly, :AbstractArray, :Number, 2)))),
        (:line, 471, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :AbstractArray, :Float64, 1), (:curly, :AbstractArray, :Float64, 2)))),
        (:line, 472, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Integer, (:curly, :Vararg, :Integer)), (:curly, :Tuple, :Integer, (:curly, :Vararg, :Real)))),
        (:line, 473, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Integer, :Float64, (:curly, :Vararg, :Integer)), (:curly, :Tuple, :Integer, (:curly, :Vararg, :Number)))),
        (:line, 474, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Integer, :Float64), (:curly, :Tuple, :Integer, (:curly, :Vararg, :Number)))),
        (:line, 475, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Int32), (:curly, :Tuple, (:curly, :Vararg, :Number)))),
        (:line, 476, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple), (:curly, :Tuple, (:curly, :Vararg, :Number)))),
        (:line, 477, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Tuple, (:curly, :Vararg, :Int32)), (:curly, :Tuple, :Int32)))),
        (:line, 478, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Tuple, (:curly, :Vararg, :Int32)), (:curly, :Tuple, :Number, :Integer)))),
        (:line, 479, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Tuple, (:curly, :Vararg, :Integer)), (:curly, :Tuple, :Integer, :Integer, (:curly, :Vararg, :Integer))))),
        (:line, 480, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Array, :Int8, 1), (:curly, :Array, :Any, 1)))),
        (:line, 481, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Array, :Any, 1), (:curly, :Array, :Int8, 1)))),
        (:line, 482, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Array, :Int8, 1), (:curly, :Array, :Int8, 1))),
        (:line, 483, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, :Bottom), (:curly, :Type, :Int32)))),
        (:line, 484, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Vector, :Float64), (:curly, :Vector, (:curly, :Union, :Float64, :Float32))))),
        (:line, 486, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, :Array, (:curly, :Type, :Any)))),
        (:line, 487, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Type, :Complex), :UnionAll)),
        (:line, 488, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :Complex, (:curly, :Type, :Complex))),
        (:line, 489, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, (:curly, :Ptr, :Bottom)), (:curly, :Type, :Ptr)))),
        (:line, 490, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, (:curly, :Rational, :Int)), (:curly, :Type, :Rational)))),
        (:line, 491, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple), (:curly, :Tuple, :Vararg))),
        (:line, 492, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple, :Int, :Int), (:curly, :Tuple, :Vararg))),
        (:line, 493, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Tuple), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :NTuple, :N)))),
        (:line, 494, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, (:curly, :Tuple)), (:curly, :Type, (:curly, :Tuple, :Vararg))))),
        (:line, 495, :none),
        (:macrocall, Symbol("@test"), (:<:, (:curly, :Type, (:curly, :Tuple)), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Type, (:curly, :NTuple, :N))))),
        (:line, 497, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, (:curly, :Array, :Integer)), (:curly, :Type, (:curly, :AbstractArray, :Integer))))),
        (:line, 498, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:<:, (:curly, :Type, (:curly, :Array, :Integer)), (:curly, :Type, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Array, :T)))))),
        (:line, 503, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :NTuple, :Tuple)),
        (:line, 504, :none),
        (:macrocall, Symbol("@test"), (:call, :issub_strict, :NTuple, (:curly, :Tuple, :Vararg))),
        (:line, 505, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :Tuple, (:curly, :Tuple, :Vararg))),
        (:line, 508, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issubtype, (:curly, :Type, (:curly, :Tuple, :Void)), (:curly, :Tuple, (:curly, :Type, :Void)))))
      )),
    (:line, 511, :none),
    (:const, (:(=), :menagerie, (:ref, :Any, :Bottom, :Any, :Int, :Int8, :Integer, :Real, (:curly, :Array, :Int, 1), (:curly, :AbstractArray, :Int, 1), (:curly, :Tuple, :Int, (:curly, :Vararg, :Integer)), (:curly, :Tuple, :Integer, (:curly, :Vararg, :Int)), (:curly, :Tuple), (:curly, :Union, :Int, :Int8), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Array, :T, 1)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, :T)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, :T, :S))), (:curly, :Pair, :Int, :Int8), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, :Int, :S)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Tuple, :T, :T)), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :T, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Tuple, :T, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Tuple, :S, :T))), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Array, :T, 1)), 1), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Array, (:curly, :Array, :T, 1), 1)), (:curly, :Array, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), :T), 1), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:curly, :AbstractArray, :T, 1)), (:curly, :Tuple, :T, :S))), (:curly, :Union, :Int, (:curly, :Ref, (:curly, :Union, :Int, :Int8))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Union, (:curly, :Tuple, :T, (:curly, :Array, :T, 1)), (:curly, :Tuple, :T, (:curly, :Array, :Int, 1))))))),
    (:line, 534, :none),
    (:let, (:block,
        (:line, 536, :none),
        (:for, (:(=), :T, :menagerie), (:block,
            (:line, 537, :none),
            (:call, :push!, :new, (:curly, :Ref, :T)),
            (:line, 538, :none),
            (:call, :push!, :new, (:curly, :Tuple, :T)),
            (:line, 539, :none),
            (:call, :push!, :new, (:curly, :Tuple, :T, :T)),
            (:line, 540, :none),
            (:call, :push!, :new, (:curly, :Tuple, (:curly, :Vararg, :T))),
            (:line, 541, :none),
            (:call, :push!, :new, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), :S)),
            (:line, 542, :none),
            (:call, :push!, :new, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), (:curly, :Ref, :S)))
          )),
        (:line, 544, :none),
        (:call, :append!, :menagerie, :new)
      ), (:(=), :new, (:ref, :Any))),
    (:line, 547, :none),
    (:function, (:call, :test_properties), (:block,
        (:line, 548, :none),
        (:(=), (:call, :→, :x, :y), (:block,
            (:line, 548, :none),
            (:||, (:call, :!, :x), :y)
          )),
        (:line, 549, :none),
        (:(=), (:call, :¬, :T), (:block,
            (:line, 549, :none),
            (:macrocall, Symbol("@UnionAll"), (:>:, :X, :T), (:curly, :Ref, :X))
          )),
        (:line, 551, :none),
        (:for, (:(=), :T, :menagerie), (:block,
            (:line, 553, :none),
            (:macrocall, Symbol("@test"), (:call, :issub, :Bottom, :T)),
            (:line, 554, :none),
            (:macrocall, Symbol("@test"), (:call, :issub, :T, :Any)),
            (:line, 555, :none),
            (:macrocall, Symbol("@test"), (:call, :→, (:call, :issub, :T, :Bottom), (:call, :isequal_type, :T, :Bottom))),
            (:line, 556, :none),
            (:macrocall, Symbol("@test"), (:call, :→, (:call, :issub, :Any, :T), (:call, :isequal_type, :T, :Any))),
            (:line, 559, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal_type, :T, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :T), :S))),
            (:line, 560, :none),
            (:macrocall, Symbol("@test"), (:call, :isequal_type, (:curly, :Ref, :T), (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :U, :<:, :T), (:curly, :Ref, :U)))),
            (:line, 563, :none),
            (:if, (:call, :isa, :T, :UnionAll), (:block,
                (:line, 564, :none),
                (:(=), (:tuple, :lb, :ub), (:tuple, (:., (:., :T, (:quote, #QuoteNode
                          :var
                        )), (:quote, #QuoteNode
                        :lb
                      )), (:., (:., :T, (:quote, #QuoteNode
                          :var
                        )), (:quote, #QuoteNode
                        :ub
                      )))),
                (:line, 565, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal_type, :T, (:macrocall, Symbol("@UnionAll"), (:comparison, :lb, :<:, :Y, :<:, :ub), (:curly, :T, :Y))))
              )),
            (:line, 569, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal_type, :T, (:curly, :Ref, :T)))),
            (:line, 571, :none),
            (:for, (:(=), :S, :menagerie), (:block,
                (:line, 572, :none),
                (:(=), :issubTS, (:call, :issub, :T, :S)),
                (:line, 574, :none),
                (:if, :issubTS, (:block,
                    (:line, 575, :none),
                    (:for, (:(=), :R, :menagerie), (:block,
                        (:line, 576, :none),
                        (:if, (:call, :issub, :S, :R), (:block,
                            (:line, 577, :none),
                            (:macrocall, Symbol("@test"), (:call, :issub, :T, :R)),
                            (:line, 578, :none),
                            (:macrocall, Symbol("@test"), (:call, :issub, (:curly, :Ref, :S), (:macrocall, Symbol("@UnionAll"), (:comparison, :T, :<:, :U, :<:, :R), (:curly, :Ref, :U))))
                          ))
                      ))
                  )),
                (:line, 584, :none),
                (:macrocall, Symbol("@test"), (:call, :→, (:call, :isequal_type, :T, (:curly, :Union, :T, :S)), (:call, :issub, :S, :T))),
                (:line, 587, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :isequal_type, :T, :S), (:call, :isequal_type, (:curly, :Ref, :T), (:curly, :Ref, :S)))),
                (:line, 590, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :issubTS, (:call, :issub, (:curly, :Tuple, :T), (:curly, :Tuple, :S)))),
                (:line, 591, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :issubTS, (:call, :issub, (:curly, :Tuple, (:curly, :Vararg, :T)), (:curly, :Tuple, (:curly, :Vararg, :S))))),
                (:line, 592, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :issubTS, (:call, :issub, (:curly, :Tuple, :T), (:curly, :Tuple, (:curly, :Vararg, :S))))),
                (:line, 595, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), :issubTS, (:call, :issub, (:call, :¬, :S), (:call, :¬, :T))))
              ))
          ))
      )),
    (:line, 600, :none),
    (:macro, (:call, :testintersect, :a, :b, :result), (:block,
        (:line, 601, :none),
        (:if, (:&&, (:call, :isa, :result, :Expr), (:&&, (:call, :(===), (:., :result, (:quote, #QuoteNode
                    :head
                  )), (:quote, #QuoteNode
                  :call
                )), (:&&, (:call, :(==), (:call, :length, (:., :result, (:quote, #QuoteNode
                        :args
                      ))), 2), (:call, :(===), (:ref, (:., :result, (:quote, #QuoteNode
                        :args
                      )), 1), (:quote, #QuoteNode
                    :!
                  ))))), (:block,
            (:line, 602, :none),
            (:(=), :result, (:ref, (:., :result, (:quote, #QuoteNode
                    :args
                  )), 2)),
            (:line, 603, :none),
            (:(=), :cmp, (:quote, #QuoteNode
                :notequal_type
              ))
          ), (:block,
            (:line, 605, :none),
            (:(=), :cmp, (:quote, #QuoteNode
                :isequal_type
              ))
          )),
        (:line, 607, :none),
        (:call, (:., :Base, (:quote, #QuoteNode
              :remove_linenums!
            )), (:quote, (:block,
              (:line, 608, :none),
              (:macrocall, Symbol("@test"), (:call, (:$, (:call, :esc, :cmp)), (:call, :_type_intersect, (:$, (:call, :esc, :a)), (:$, (:call, :esc, :b))), (:$, (:call, :esc, :result)))),
              (:line, 609, :none),
              (:macrocall, Symbol("@test"), (:call, (:$, (:call, :esc, :cmp)), (:call, :_type_intersect, (:$, (:call, :esc, :b)), (:$, (:call, :esc, :a))), (:$, (:call, :esc, :result))))
            )))
      )),
    (:line, 613, :none),
    (:abstract, (:curly, :IT4805_2, :N, :T)),
    (:line, 614, :none),
    (:abstract, (:curly, :AbstractThing, :T, :N)),
    (:line, 615, :none),
    (:type, true, (:<:, (:curly, :ConcreteThing, (:<:, :T, :AbstractFloat), :N), (:curly, :AbstractThing, :T, :N)), (:block,
        (:line, 616, :none)
      )),
    (:line, 617, :none),
    (:type, true, :A11136, (:block,
        (:line, 617, :none)
      )),
    (:line, 618, :none),
    (:type, true, :B11136, (:block,
        (:line, 618, :none)
      )),
    (:line, 619, :none),
    (:abstract, :Foo11367),
    (:line, 621, :none),
    (:abstract, (:<:, (:curly, :AbstractTriangular, :T, (:<:, :S, :AbstractMatrix)), (:curly, :AbstractMatrix, :T))),
    (:line, 622, :none),
    (:type, false, (:<:, (:curly, :UpperTriangular, :T, (:<:, :S, :AbstractMatrix)), (:curly, :AbstractTriangular, :T, :S)), (:block,
        (:line, 622, :none)
      )),
    (:line, 623, :none),
    (:type, false, (:<:, (:curly, :UnitUpperTriangular, :T, (:<:, :S, :AbstractMatrix)), (:curly, :AbstractTriangular, :T, :S)), (:block,
        (:line, 623, :none)
      )),
    (:line, 625, :none),
    (:type, false, (:<:, (:curly, :SIQ20671, (:<:, :T, :Number), :m, :kg, :s, :A, :K, :mol, :cd, :rad, :sr), :Number), (:block,
        (:line, 626, :none),
        (:(::), :val, :T)
      )),
    (:line, 629, :none),
    (:function, (:call, :test_intersection), (:block,
        (:line, 630, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Vector, :Float64), (:curly, :Vector, (:curly, :Union, :Float64, :Float32)), :Bottom),
        (:line, 632, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Array, :Bottom), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :AbstractArray, :T)), (:call, :!, :Bottom)),
        (:line, 634, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Type, (:curly, :Ptr, :UInt8)), (:curly, :Ptr, :Bottom)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Type, (:curly, :Ptr, :T)), (:curly, :Ptr, :T))), :Bottom),
        (:line, 637, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Range, :Int), (:curly, :Tuple, :Int, :Int)), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :AbstractArray, :T), :Dims)), (:curly, :Tuple, (:curly, :Range, :Int), (:curly, :Tuple, :Int, :Int))),
        (:line, 640, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Number), (:curly, :Array, :T))),
        (:line, 643, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Real), (:curly, :Array, :T))),
        (:line, 646, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :String), (:curly, :Array, :T)), :Bottom),
        (:line, 649, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:comparison, :Integer, :<:, :T, :<:, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:comparison, :String, :<:, :T, :<:, :AbstractString), (:curly, :Array, :T)), :Bottom),
        (:line, 652, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Number), (:curly, :Array, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :String), (:curly, :Array, :T)), (:curly, :Array, :Bottom)),
        (:line, 655, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :AbstractArray, :T))), (:curly, :Tuple, :Number, (:curly, :Array, :Int, 1)), (:curly, :Tuple, :Int, (:curly, :Array, :Int, 1))),
        (:line, 658, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :AbstractArray, :T))), (:curly, :Tuple, :Int, (:curly, :Array, :Number, 1)), (:curly, :Tuple, :Int, (:curly, :Array, :Number, 1))),
        (:line, 661, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :S, (:curly, :Vector, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Tuple, :T, (:curly, :AbstractVector, :T))), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Real), (:curly, :Tuple, :S, (:curly, :Vector, :S)))),
        (:line, 666, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Ref, :T))), (:curly, :Tuple, (:curly, :Array, :Int), (:curly, :Ref, :AbstractVector)), (:curly, :Tuple, (:curly, :Array, :Int, 1), (:curly, :Ref, :AbstractVector))),
        (:line, 669, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :AbstractArray, :T))), (:curly, :Tuple, :Any, (:curly, :Array, :Number, 1)), (:curly, :Tuple, :Number, (:curly, :Array, :Number, 1))),
        (:line, 671, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Array, :T), (:curly, :Array, :T))), (:curly, :Tuple, :Array, (:curly, :Array, :Any)), (:call, :!, :Bottom)),
        (:line, 673, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:curly, :Tuple, :Real, :Real), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Tuple, :T, :T))),
        (:line, 674, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T)), (:curly, :Tuple, :Real), (:curly, :Tuple, :Real)),
        (:line, 675, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:curly, :Tuple, (:curly, :Union, :Float64, :Int64), :Int64), (:curly, :Tuple, :Int64, :Int64)),
        (:line, 676, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:curly, :Tuple, :Int64, (:curly, :Union, :Float64, :Int64)), (:curly, :Tuple, :Int64, :Int64)),
        (:line, 677, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :Z, (:curly, :Tuple, :Z, :Z)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Tuple, :T, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :Z, :Integer), (:curly, :Tuple, :Z, :Z))),
        (:line, 679, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :Z, (:curly, :Pair, :Z, :Z)), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Pair, :T, :S))), (:macrocall, Symbol("@UnionAll"), (:<:, :Z, :Integer), (:curly, :Pair, :Z, :Z))),
        (:line, 682, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Vector), (:curly, :Type, :T)), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Type, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Array, :S, :N)))), (:curly, :Type, (:macrocall, Symbol("@UnionAll"), (:<:, :S, :Number), (:curly, :Array, :S, 1)))),
        (:line, 685, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Type, (:curly, :Array, :T, 1)), (:curly, :Array, :T, 1))), (:curly, :Tuple, (:curly, :Type, :AbstractVector), (:curly, :Vector, :Int)), :Bottom),
        (:line, 688, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Type, (:curly, :Vector, :Complex128)), :AbstractVector), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Type, (:curly, :Array, :T, :N)), (:curly, :Array, :S, :N))))), (:curly, :Tuple, (:curly, :Type, (:curly, :Vector, :Complex128)), :Vector)),
        (:line, 692, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Type, (:curly, :Vector, :Complex128)), :AbstractArray), (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Type, (:curly, :Array, :T, :N)), (:curly, :Array, :S, :N))))), (:curly, :Tuple, (:curly, :Type, (:curly, :Vector, :Complex128)), :Vector)),
        (:line, 696, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, :Array), (:curly, :Type, :AbstractArray), :Bottom),
        (:line, 698, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, (:curly, :Tuple, :Bool, (:curly, :Vararg, :Int))), (:curly, :Type, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Vararg, :T)))), :Bottom),
        (:line, 699, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, (:curly, :Tuple, :Bool, (:curly, :Vararg, :Int))), (:curly, :Type, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Vararg, :T)))), :Bottom),
        (:line, 700, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Vararg, :T))), (:curly, :Tuple, :Float64, :Int), :Bottom),
        (:line, 702, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Rational, :T), :T)), (:curly, :Tuple, (:curly, :Rational, :Integer), :Int), (:curly, :Tuple, (:curly, :Rational, :Integer), :Int)),
        (:line, 704, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Pair, :T, (:curly, :Ptr, :T))), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Pair, (:curly, :Ptr, :S), :S)), :Bottom),
        (:line, 705, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Ptr, :T))), (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, (:curly, :Ptr, :S), :S)), (:curly, :Union, (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, (:curly, :Ptr, :T)), (:curly, :Tuple, (:curly, :Ptr, :T), (:curly, :Ptr, :S)))), (:macrocall, Symbol("@UnionAll"), (:>:, :T, :Ptr), (:macrocall, Symbol("@UnionAll"), (:>:, :S, (:curly, :Ptr, :T)), (:curly, :Tuple, (:curly, :Ptr, :S), (:curly, :Ptr, :T)))))),
        (:line, 709, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :NTuple, :N, :Integer), (:curly, :NTuple, :N, :Integer))), (:curly, :Tuple, (:curly, :Tuple, :Integer, :Integer), (:curly, :Tuple, (:curly, :Vararg, :Integer))), (:curly, :Tuple, (:curly, :Tuple, :Integer, :Integer), (:curly, :Tuple, :Integer, :Integer))),
        (:line, 712, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :NTuple, :N, :Integer), (:curly, :NTuple, :N, :Integer))), (:curly, :Tuple, (:curly, :Tuple, (:curly, :Vararg, :Integer)), (:curly, :Tuple, :Integer, :Integer)), (:curly, :Tuple, (:curly, :Tuple, :Integer, :Integer), (:curly, :Tuple, :Integer, :Integer))),
        (:line, 720, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :NTuple, :N, :Any), (:curly, :Array, :Int, :N))), (:curly, :Tuple, (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)), (:curly, :Array, :Int, 2)), (:curly, :Tuple, (:curly, :Tuple, :Int, :Int), (:curly, :Array, :Int, 2))),
        (:line, 723, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, :Any), (:curly, :Type, :Complex), :Bottom),
        (:line, 724, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, :Any), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Real), (:curly, :Type, :T)), :Bottom),
        (:line, 726, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, :Function), :Union, :Bottom),
        (:line, 727, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, :Int32), :DataType, (:curly, :Type, :Int32)),
        (:line, 729, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, :Type, (:call, :!, :Bottom)),
        (:line, 730, :none),
        (:macrocall, Symbol("@testintersect"), :Union, :Type, (:call, :!, :Bottom)),
        (:line, 731, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, (:curly, :Type, :Int), (:call, :!, :Bottom)),
        (:line, 732, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), (:curly, :Type, :T)), (:call, :!, :Bottom)),
        (:line, 733, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Integer), (:curly, :Type, :T)), (:call, :!, :Bottom)),
        (:line, 734, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Vararg, :Int)), (:curly, :Tuple, (:curly, :Vararg, :Bool)), (:curly, :Tuple)),
        (:line, 735, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, :Int))), (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, :Bool))), :Bottom),
        (:line, 736, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, :Bool, (:curly, :Vararg, :Int)), (:curly, :Tuple, (:curly, :Vararg, :Bool)), (:curly, :Tuple, :Bool)),
        (:line, 738, :none),
        (:let, (:block,
            (:line, 739, :none),
            (:macrocall, Symbol("@testintersect"), :AbstractArray, :M, :M)
          ), (:(=), :M, (:macrocall, Symbol("@UnionAll"), (:<:, :T, (:curly, :Union, :Float32, :Float64)), (:curly, :Matrix, :T)))),
        (:line, 742, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Array, :Int, :N), (:curly, :Vararg, :Int, :N))), (:curly, :Tuple, (:curly, :Vector, :Int), :Real, :Real, :Real), :Bottom),
        (:line, 744, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Array, :Int, :N), (:curly, :Vararg, :Int, :N))), (:curly, :Tuple, (:curly, :Array, :Int, 0)), (:curly, :Tuple, (:curly, :Array, :Int, 0))),
        (:line, 745, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Array, :Int, :N), (:curly, :Vararg, :Int, :N))), (:curly, :Tuple, (:curly, :Array, :Int, 2)), :Bottom),
        (:line, 747, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)), (:curly, :Tuple, :Int, :Int, :Int, (:curly, :Vararg, :Float64)), (:curly, :Tuple, :Int, :Int, :Int)),
        (:line, 748, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, :Int, (:curly, :Vararg, :Int)), (:curly, :Tuple, :Int, (:curly, :Vararg, :Float64)), (:curly, :Tuple, :Int)),
        (:line, 749, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Array, :Int, :N), (:curly, :Vararg, :Int, :N))), (:curly, :Tuple, (:curly, :Matrix, :Int), :Int, :Int, (:curly, :Vararg, :Float64)), (:curly, :Tuple, (:curly, :Matrix, :Int), :Int, :Int)),
        (:line, 752, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :Tuple, (:curly, :Array, :Int, :N), (:curly, :Vararg, :Int, :N))), (:curly, :Tuple, (:curly, :Matrix, :Int), :Int, (:curly, :Vararg, :Float64)), :Bottom),
        (:line, 755, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Array, :Any, 1), (:curly, :Tuple, :Int64, :Int64, (:where, (:curly, :Vararg, :Int64, :N), :N))), (:where, (:where, (:curly, :Tuple, (:curly, :Array, :T, :N), (:curly, :Tuple, (:curly, :Vararg, :Int64, :N))), :N), :T), :Bottom),
        (:line, 759, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:<:, :T, (:curly, :Union, :Float64, (:curly, :Array, :Float64, 1))), :T), :Real, :Float64),
        (:line, 762, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:<:, :T, :Int), (:curly, :Type, (:curly, :IT4805_2, 1, :T))), (:macrocall, Symbol("@UnionAll"), (:<:, :S, (:macrocall, Symbol("@UnionAll"), :N, (:curly, :IT4805_2, :N, :Int))), (:curly, :Type, :S)), (:call, :!, :Bottom)),
        (:line, 767, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :AbstractThing, :T, 2)), :ConcreteThing, (:macrocall, Symbol("@UnionAll"), (:<:, :T, :AbstractFloat), (:curly, :ConcreteThing, :T, 2))),
        (:line, 772, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :TB, :B11136), (:curly, :Tuple, :A11136, :TB)), :Bottom),
        (:line, 773, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T)), (:macrocall, Symbol("@UnionAll"), (:<:, :T2, :Foo11367), (:curly, :Tuple, (:curly, :Type, :BigInt), :T2)), :Bottom),
        (:line, 776, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :NTuple, :N, :Int)), (:macrocall, Symbol("@UnionAll"), :N, (:curly, :NTuple, :N, :Float64)), (:curly, :Tuple)),
        (:line, 778, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Type, :T), :T)), (:curly, :Tuple, (:curly, :Type, (:curly, :Type, :Float64)), (:curly, :Type, :Int)), :Bottom),
        (:line, 780, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, :T), (:curly, :Type, :Int8), (:curly, :Type, :Int8)),
        (:line, 782, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T)), (:curly, :Tuple, (:curly, :Type, :Int8)), (:curly, :Tuple, (:curly, :Type, :Int8))),
        (:line, 784, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :Int, :T), (:curly, :Union, (:curly, :Vector, :T), (:curly, :Vector, :String)))), (:curly, :Tuple, :Integer, (:curly, :Vector, :Int8)), (:curly, :Tuple, (:curly, :Union, :Int, :Int8), (:curly, :Vector, :Int8))),
        (:line, 787, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :Int, :T), (:curly, :Union, (:curly, :Vector, :T), (:curly, :Vector, :String)))), (:curly, :Tuple, :Int8, (:curly, :Vector, :String)), (:curly, :Tuple, :Int8, (:curly, :Vector, :String))),
        (:line, 790, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, (:curly, :Union, :Int, :T), (:curly, :Union, (:curly, :Vector, :T), (:curly, :Vector, :String)))), (:curly, :Tuple, :Int, (:curly, :Vector, :Int8)), (:curly, :Tuple, :Int, (:curly, :Vector, :Int8))),
        (:line, 793, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:curly, :Union, :Int, :String), (:curly, :Union, (:curly, :Ref, :Int), (:curly, :Ref, :String))), (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, (:curly, :Union, (:curly, :Ref, :T), (:curly, :Ref, :String)))), (:curly, :Union, (:curly, :Tuple, :Int, (:curly, :Union, (:curly, :Ref, :Int), (:curly, :Ref, :String))), (:curly, :Tuple, :String, (:curly, :Ref, :String)))),
        (:line, 798, :none),
        (:macrocall, Symbol("@testintersect"), (:macrocall, Symbol("@UnionAll"), (:<:, :Z, (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :T, :S)))), (:curly, :Ref, :Z)), (:macrocall, Symbol("@UnionAll"), (:<:, :X, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T))), (:curly, :Ref, :X)), (:macrocall, Symbol("@UnionAll"), (:<:, :X, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T))), (:curly, :Ref, :X))),
        (:line, 801, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Ref, (:macrocall, Symbol("@UnionAll"), :T, (:macrocall, Symbol("@UnionAll"), :S, (:curly, :Tuple, :T, :S)))), (:curly, :Ref, (:macrocall, Symbol("@UnionAll"), :T, (:curly, :Tuple, :T, :T))), :Bottom),
        (:line, 804, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, :T, :T), (:<:, :T, (:curly, :Union, :UpperTriangular, :UnitUpperTriangular))), (:where, (:where, (:curly, :Tuple, (:curly, :AbstractArray, :T, :N), (:curly, :AbstractArray, :T, :N)), :N), :T), (:curly, :Union, (:where, (:curly, :Tuple, :T, :T), (:<:, :T, :UpperTriangular)), (:where, (:curly, :Tuple, :T, :T), (:<:, :T, :UnitUpperTriangular)))),
        (:line, 809, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, :Type, :DataType),
        (:line, 810, :none),
        (:macrocall, Symbol("@testintersect"), :DataType, (:where, (:curly, :Type, :T), (:<:, :T, :Integer)), (:where, (:curly, :Type, :T), (:<:, :T, :Integer))),
        (:line, 811, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Union, :DataType, :Int), :Type, :DataType),
        (:line, 812, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Union, :DataType, :Int), (:where, (:curly, :Type, :T), :T), :DataType),
        (:line, 814, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :typeintersect, (:curly, :Union, :DataType, :Int), :Type), :DataType)),
        (:line, 815, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :typeintersect, (:curly, :Union, :DataType, :Int), (:where, (:curly, :Type, :T), :T)), :DataType)),
        (:line, 818, :none),
        (:macrocall, Symbol("@testintersect"), (:., :Core, (:quote, #QuoteNode
              :TypeofBottom
            )), (:where, (:curly, :Type, :T), (:<:, :T, :Tuple)), (:curly, :Type, (:curly, :Union))),
        (:line, 820, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, :T))), :T), (:curly, :Type, :Tuple), :Bottom),
        (:line, 821, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Type, :S), (:curly, :Tuple, :Any, (:curly, :Vararg, :Any))), (:<:, :S, (:curly, :Tuple, :Any, (:curly, :Vararg, :Any)))), (:where, (:curly, :Tuple, (:curly, :Type, :T), :T), :T), (:where, (:curly, :Tuple, (:curly, :Type, :S), :S), (:<:, :S, (:curly, :Tuple, :Any, (:where, (:curly, :Vararg, :Any, :N), :N))))),
        (:line, 826, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:where, (:where, (:curly, :Tuple, (:curly, :Array, (:curly, :Ref, :T), 1), (:curly, :Array, (:curly, :Pair, :M, :V), 1)), :V), :T), :M), (:where, (:where, (:where, (:curly, :Tuple, (:curly, :Array, (:curly, :Ref, :T), 1), (:curly, :Array, (:curly, :Pair, :M, :T), 1), :SS), :T), :M), :SS), (:curly, :Union)),
        (:line, 830, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:where, (:where, (:curly, :Tuple, (:curly, :Array, (:curly, :Ref, :T), 1), (:curly, :Array, (:curly, :Pair, :M, :V), 1), :Int), :V), :T), :M), (:where, (:where, (:curly, :Tuple, (:curly, :Array, (:curly, :Ref, :T), 1), (:curly, :Array, (:curly, :Pair, :M, :T), 1), :Any), :T), :M), (:where, (:where, (:curly, :Tuple, (:curly, :Array, (:curly, :Ref, :T), 1), (:curly, :Array, (:curly, :Pair, :M, :T), 1), :Int), :T), :M)),
        (:line, 834, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:where, (:curly, :Tuple, :Int, (:curly, :Ref, (:curly, :Pair, :K, :V))), :V), :K), (:curly, :Tuple, :Any, (:where, (:curly, :Ref, (:curly, :Pair, :T, :T)), :T)), (:curly, :Tuple, :Int, (:where, (:curly, :Ref, (:curly, :Pair, :T, :T)), :T))),
        (:line, 838, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :isequal_type, (:call, :_type_intersect, (:where, (:curly, :Tuple, :T, :T), :T), (:where, (:curly, :Union, (:curly, :Tuple, :S, (:curly, :Array, :Int64, 1)), (:curly, :Tuple, :S, (:curly, :Array, :S, 1))), :S)), (:curly, :Union, (:curly, :Tuple, (:curly, :Vector, :Int64), (:curly, :Vector, :Int64)), (:where, (:curly, :Tuple, (:curly, :Vector, :T), (:curly, :Vector, :T)), (:>:, :T, :Vector))))),
        (:line, 844, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Type, (:curly, :Tuple, (:where, (:curly, :Vararg, :T, :N), :N))), :Tuple), :T), (:curly, :Tuple, (:where, (:where, (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, :T, :N))), :N), :T), :Any), :Bottom),
        (:line, 847, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Type, (:curly, :NTuple, :N, :UnitRange)), :N), (:curly, :Type, (:curly, :Tuple, (:curly, :Vararg, :UnitRange))), :Bottom),
        (:line, 851, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Type, (:curly, :NTuple, :Z, :UnitRange)), :Z), (:where, (:curly, :Type, (:curly, :NTuple, :Z, :String)), :Z), (:curly, :Type, (:curly, :Tuple))),
        (:line, 856, :none),
        (:(=), (:tuple, :_, :E), (:call, :intersection_env, (:curly, :Tuple, (:curly, :Tuple, (:curly, :Vararg, :Int)), :Any), (:where, (:curly, :Tuple, (:curly, :Union, (:curly, (:., :Base, (:quote, #QuoteNode
                        :DimsInteger
                      )), :N), (:curly, (:., :Base, (:quote, #QuoteNode
                        :Indices
                      )), :N)), :Int), :N))),
        (:line, 858, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:call, :length, :E), 1), (:call, :isa, (:ref, :E, 1), :TypeVar))),
        (:line, 860, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:where, (:curly, :Tuple, (:curly, :Dict, :Int, :Int), (:curly, :Ref, (:curly, :Pair, :K, :V))), :V), :K), (:curly, :Tuple, (:curly, :Associative, :Int, :Int), (:where, (:curly, :Ref, (:curly, :Pair, :T, :T)), :T)), (:where, (:curly, :Tuple, (:curly, :Dict, :Int, :Int), (:curly, :Ref, (:curly, :Pair, :K, :K))), :K)),
        (:line, 865, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:where, (:where, (:curly, :Tuple, (:curly, :Ref, (:curly, :Pair, :p2, :T2)), (:curly, :Pair, :p1, :Pair)), :T2), :p2), :p1), (:where, (:where, (:curly, :Tuple, (:curly, :Ref, (:curly, :Pair, :p3, :T3)), (:curly, :Pair, :p3)), :T3), :p3), (:where, (:where, (:curly, :Tuple, (:curly, :Ref, (:curly, :Pair, :p1, :T2)), (:curly, :Pair, :p1, :Pair)), :T2), :p1)),
        (:line, 870, :none),
        (:(=), (:tuple, :_, :E), (:call, :intersection_env, (:curly, :Tuple, :Int, :Any, :Any), (:where, (:curly, :Tuple, :T, :T, :S), :T, :S))),
        (:line, 871, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:call, :length, :E), 2), (:&&, (:call, :(==), (:ref, :E, 1), :Int), (:call, :isa, (:ref, :E, 2), :TypeVar)))),
        (:line, 872, :none),
        (:(=), (:tuple, :_, :E), (:call, :intersection_env, (:curly, :Tuple, (:curly, :Dict, :Int, :Type), :Type, :Any), (:where, (:curly, :Tuple, (:curly, :Dict, :K, :V), :Any, :Int), :K, :V))),
        (:line, 874, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :E, 2), :Type)),
        (:line, 877, :none),
        (:(=), (:tuple, :I, :E), (:call, :intersection_env, (:curly, :Tuple, (:curly, :Ref, :Integer), :Int, :Any), (:where, (:curly, :Tuple, (:curly, :Ref, :Z), :Z, :Z), :Z))),
        (:line, 878, :none),
        (:macrocall, Symbol("@test"), (:call, :isequal_type, :I, (:curly, :Tuple, (:curly, :Ref, :Integer), :Int, :Integer))),
        (:line, 879, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :E, 1), :Integer)),
        (:line, 882, :none),
        (:(=), :A, (:curly, :Tuple, :Ref, (:curly, :Vararg, :Any))),
        (:line, 883, :none),
        (:(=), :B, (:where, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, :Z, :Ref, :Void))), (:<:, :Z, (:curly, :Union, :Ref, :Void)))),
        (:line, 884, :none),
        (:macrocall, Symbol("@test"), (:<:, :B, (:call, :_type_intersect, :A, :B))),
        (:line, 885, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, :Int, :Any, (:curly, :Vararg, :A)), (:>:, :A, :Integer)), (:where, (:curly, :Tuple, :Any, :Int, (:curly, :Vararg, :A)), (:>:, :A, :Integer)), (:where, (:curly, :Tuple, :Int, :Int, (:curly, :Vararg, :A)), (:>:, :A, :Integer))),
        (:line, 890, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Pair, :L, (:curly, :Tuple, :L, (:curly, :Pair, :L, :HL))), :L, :HL), (:where, (:curly, :Pair, :R, (:curly, :Tuple, (:curly, :Pair, :R, :HR), :R)), :R, :HR), :Bottom),
        (:line, 895, :none),
        (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Type, (:curly, :SIQ20671, :T, :mT, :kgT, :sT, :AT, :KT, :molT, :cdT, :radT, :srT)), (:curly, :SIQ20671, :S, :mS, :kgS, :sS, :AS, :KS, :molS, :cdS, :radS, :srS)), :T, :mT, :kgT, :sT, :AT, :KT, :molT, :cdT, :radT, :srT, :S, :mS, :kgS, :sS, :AS, :KS, :molS, :cdS, :radS, :srS), (:where, (:curly, :Tuple, (:curly, :Type, :T), :T), :T), (:where, (:curly, :Tuple, (:curly, :Type, (:curly, :SIQ20671, :T, :mS, :kgS, :sS, :AS, :KS, :molS, :cdS, :radS, :srS)), (:curly, :SIQ20671, :T, :mS, :kgS, :sS, :AS, :KS, :molS, :cdS, :radS, :srS)), :T, :mS, :kgS, :sS, :AS, :KS, :molS, :cdS, :radS, :srS)),
        (:line, 903, :none),
        (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:where, (:curly, :Ref, (:curly, :Ref, :T)), :T), :Ref), (:where, (:curly, :Tuple, (:curly, :Ref, :T), (:curly, :Ref, :T)), :T), (:where, (:curly, :Tuple, (:curly, :Ref, (:curly, :Ref, :T)), (:curly, :Ref, (:curly, :Ref, :T))), :T))
      )),
    (:line, 908, :none),
    (:function, (:call, :test_intersection_properties), (:block,
        (:line, 909, :none),
        (:for, (:(=), :T, :menagerie), (:block,
            (:line, 910, :none),
            (:for, (:(=), :S, :menagerie), (:block,
                (:line, 911, :none),
                (:(=), :I, (:call, :_type_intersect, :T, :S)),
                (:line, 912, :none),
                (:(=), :I2, (:call, :_type_intersect, :S, :T)),
                (:line, 913, :none),
                (:macrocall, Symbol("@test"), (:call, :isequal_type, :I, :I2)),
                (:line, 914, :none),
                (:macrocall, Symbol("@test"), (:&&, (:call, :issub, :I, :T), (:call, :issub, :I, :S))),
                (:line, 915, :none),
                (:if, (:call, :issub, :T, :S), (:block,
                    (:line, 916, :none),
                    (:macrocall, Symbol("@test"), (:call, :isequal_type, :I, :T))
                  ))
              ))
          ))
      )),
    (:line, 922, :none),
    (:call, :test_1),
    (:line, 923, :none),
    (:call, :test_2),
    (:line, 924, :none),
    (:call, :test_diagonal),
    (:line, 925, :none),
    (:call, :test_3),
    (:line, 926, :none),
    (:call, :test_4),
    (:line, 927, :none),
    (:call, :test_5),
    (:line, 928, :none),
    (:call, :test_6),
    (:line, 929, :none),
    (:call, :test_7),
    (:line, 930, :none),
    (:call, :test_Type),
    (:line, 931, :none),
    (:call, :test_old),
    (:line, 932, :none),
    (:call, :test_intersection),
    (:line, 933, :none),
    (:call, :test_properties),
    (:line, 934, :none),
    (:call, :test_intersection_properties),
    (:line, 938, :none),
    (:macrocall, Symbol("@test"), (:<:, (:curly, :NTuple, 170, (:curly, :Matrix, :Int)), (:where, (:curly, :Tuple, (:curly, :Vararg, (:curly, :Union, (:curly, :Array, :T, 1), (:curly, :Array, :T, 2), (:curly, :Array, :T, 3)))), :T))),
    (:line, 941, :none),
    (:abstract, (:curly, :AbstractMyType12580, :T)),
    (:line, 942, :none),
    (:type, false, (:<:, (:curly, :MyType12580, :T), (:curly, :AbstractMyType12580, :T)), (:block,
        (:line, 942, :none)
      )),
    (:line, 943, :none),
    (:(=), (:call, (:curly, :tpara, (:<:, :A, :AbstractMyType12580)), (:(::), (:curly, :Type, :A))), (:block,
        (:line, 943, :none),
        (:call, :tpara, (:call, :supertype, :A))
      )),
    (:line, 944, :none),
    (:(=), (:call, (:curly, :tpara, :I), (:(::), (:curly, :Type, (:curly, :AbstractMyType12580, :I)))), (:block,
        (:line, 944, :none),
        :I
      )),
    (:line, 945, :none),
    (:macrocall, Symbol("@test"), (:call, :tpara, (:curly, :MyType12580, true))),
    (:line, 948, :none),
    (:(=), (:call, (:curly, :f18348, (:<:, :T, :Any)), (:(::), (:curly, :Type, :T)), :x), (:block,
        (:line, 948, :none),
        1
      )),
    (:line, 949, :none),
    (:(=), (:call, (:curly, :f18348, (:<:, :T, :Any)), (:(::), (:curly, :Type, :T)), (:(::), :x, :T)), (:block,
        (:line, 949, :none),
        2
      )),
    (:line, 950, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :methods, :f18348, (:curly, :Tuple, (:curly, :Type, :Any), :Any))), 1)),
    (:line, 953, :none),
    (:macrocall, Symbol("@test"), (:<:, (:curly, :Symmetric, :Float64, (:curly, :Matrix, :Float64)), (:., :LinAlg, (:quote, #QuoteNode
            :RealHermSymComplexHerm
          )))),
    (:line, 954, :none),
    (:macrocall, Symbol("@test"), (:<:, (:curly, :Hermitian, :Float64, (:curly, :Matrix, :Float64)), (:., :LinAlg, (:quote, #QuoteNode
            :RealHermSymComplexHerm
          )))),
    (:line, 955, :none),
    (:macrocall, Symbol("@test"), (:<:, (:curly, :Hermitian, (:curly, :Complex, :Float64), (:curly, :Matrix, (:curly, :Complex, :Float64))), (:., :LinAlg, (:quote, #QuoteNode
            :RealHermSymComplexHerm
          )))),
    (:line, 958, :none),
    (:(=), (:call, (:curly, :f12721, (:<:, :T, (:curly, :Type, :Int))), (:(::), :T)), (:block,
        (:line, 958, :none),
        true
      )),
    (:line, 959, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :f12721, :Float64)),
    (:line, 962, :none),
    (:type, true, (:curly, :TwoParams, :S, :T), (:block,
        (:line, 962, :none),
        (:(::), :x, :S),
        (:line, 962, :none),
        (:(::), :y, :T)
      )),
    (:line, 963, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:curly, :TwoParams, (:<:, :Real), (:<:, :Number)), :(==), (:where, (:where, (:curly, :TwoParams, :S, :T), (:<:, :S, :Real)), (:<:, :T, :Number)), :(==), (:where, (:curly, :TwoParams, :S, (:<:, :Number)), (:<:, :S, :Real)), :(==), (:where, (:curly, :TwoParams, (:<:, :Real), :T), (:<:, :T, :Number)))),
    (:line, 965, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :TwoParams, 3, (:call, :*, 0, :im)), (:curly, :TwoParams, (:<:, :Real), (:<:, :Number)))),
    (:line, 966, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :TwoParams, 3, "foo"), (:curly, :TwoParams, (:<:, :Real)))),
    (:line, 967, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, (:call, :TwoParams, (:call, :*, 3, :im), (:call, :*, 0, :im)), (:curly, :TwoParams, (:<:, :Real), (:<:, :Number))))),
    (:line, 968, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, (:call, :TwoParams, 3, "foo"), (:curly, :TwoParams, (:<:, :Real), (:<:, :Number))))),
    (:line, 969, :none),
    (:(=), (:call, :ftwoparams, (:(::), :TwoParams)), (:block,
        (:line, 969, :none),
        1
      )),
    (:line, 970, :none),
    (:(=), (:call, :ftwoparams, (:(::), (:curly, :TwoParams, (:<:, :Real)))), (:block,
        (:line, 970, :none),
        2
      )),
    (:line, 971, :none),
    (:(=), (:call, :ftwoparams, (:(::), (:curly, :TwoParams, (:<:, :Real), (:<:, :Real)))), (:block,
        (:line, 971, :none),
        3
      )),
    (:line, 972, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ftwoparams, (:call, :TwoParams, 'x', 3)), 1)),
    (:line, 973, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ftwoparams, (:call, :TwoParams, 3, 'x')), 2)),
    (:line, 974, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ftwoparams, (:call, :TwoParams, 3, 4)), 3)),
    (:line, 975, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, (:vect, (:call, :TwoParams, 3, 4)), (:curly, :Vector, (:curly, :TwoParams, (:<:, :Real), (:<:, :Real)))))),
    (:line, 976, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:ref, (:curly, :TwoParams, (:<:, :Real), (:<:, :Real)), (:call, :TwoParams, 3, 4)), (:curly, :Vector, (:curly, :TwoParams, (:<:, :Real), (:<:, :Real))))),
    (:line, 977, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:vect, (:call, :TwoParams, 3, 4)), (:curly, :Vector, (:<:, (:curly, :TwoParams, (:<:, :Real), (:<:, :Real)))))),
    (:line, 978, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:vect, (:call, :TwoParams, 3, 4)), (:where, (:curly, :Vector, (:curly, :TwoParams, :T, :T)), (:<:, :T, :Real)))),
    (:line, 981, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:curly, :TwoParams, (:>:, :Int), (:<:, :Number)), :(==), (:where, (:where, (:curly, :TwoParams, :S, :T), (:>:, :S, :Int)), (:<:, :T, :Number)), :(==), (:where, (:curly, :TwoParams, :S, (:<:, :Number)), (:>:, :S, :Int)), :(==), (:where, (:curly, :TwoParams, (:>:, :Int), :T), (:<:, :T, :Number)))),
    (:line, 983, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :TwoParams, 3, (:call, :*, 0, :im)), (:curly, :TwoParams, (:>:, :Int), (:<:, :Number)))),
    (:line, 984, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, (:curly, :TwoParams, :Real, :Complex), 3, (:call, :*, 0, :im)), (:curly, :TwoParams, (:>:, :Int), (:<:, :Number)))),
    (:line, 985, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, (:call, :TwoParams, 3.0, (:call, :*, 0, :im)), (:curly, :TwoParams, (:>:, :Int), (:<:, :Number))))),
    (:line, 986, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isa, (:call, :TwoParams, 3, 'x'), (:curly, :TwoParams, (:>:, :Int), (:<:, :Number))))),
    (:line, 989, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:>:, :Int, :Integer))),
    (:line, 990, :none),
    (:macrocall, Symbol("@test"), (:>:, :Integer, :Int)),
    (:line, 993, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :typeintersect, (:curly, :Tuple, 0), (:where, (:curly, :Tuple, :T), :T)), (:curly, :Tuple, 0))),
    (:line, 996, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Val, 0), (:curly, :Val, (:curly, :Val, :N))), :N), (:where, (:curly, :Tuple, (:curly, :Val, :N), (:curly, :Val, (:curly, :Val, :N))), :N), (:curly, :Tuple, (:curly, :Val, 0), (:curly, :Val, (:curly, :Val, 0)))),
    (:line, 997, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Val, :N), (:curly, :Val, (:curly, :Val, 0))), :N), (:where, (:curly, :Tuple, (:curly, :Val, :N), (:curly, :Val, (:curly, :Val, :N))), :N), (:curly, :Tuple, (:curly, :Val, 0), (:curly, :Val, (:curly, :Val, 0)))),
    (:line, 999, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Val, 0)), (:curly, :Val, :N)), :N), (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Val, :N)), (:curly, :Val, :N)), :N), (:curly, :Tuple, (:curly, :Val, (:curly, :Val, 0)), (:curly, :Val, 0))),
    (:line, 1000, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Val, :N)), (:curly, :Val, 0)), :N), (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Val, :N)), (:curly, :Val, :N)), :N), (:curly, :Tuple, (:curly, :Val, (:curly, :Val, 0)), (:curly, :Val, 0))),
    (:line, 1003, :none),
    (:let, (:block,
        (:line, 1005, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :b))
      ), (:(=), :a, (:where, (:curly, :Tuple, :Float64, :T7), :T7)), (:(=), :b, (:where, (:curly, :Tuple, :S5, (:curly, :Tuple, :S5)), :S5))),
    (:line, 1007, :none),
    (:let, (:block,
        (:line, 1009, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, :a, :b), (:call, :typeintersect, :b, :a)))
      ), (:(=), :a, (:where, (:curly, :Tuple, :T1, :T1), :T1)), (:(=), :b, (:where, (:where, (:curly, :Tuple, (:curly, :Val, :S2), :S6), :S2), :S6))),
    (:line, 1011, :none),
    (:let, (:block,
        (:line, 1013, :none),
        (:macrocall, Symbol("@testintersect"), :a, :b, (:where, (:curly, :Val, (:curly, :Tuple, (:curly, :Val, :T), (:curly, :Val, :T))), :T))
      ), (:(=), :a, (:where, (:curly, :Val, (:curly, :Tuple, :T1, :T1)), :T1)), (:(=), :b, (:where, (:where, (:curly, :Val, (:curly, :Tuple, (:curly, :Val, :S2), :S6)), :S2), :S6))),
    (:line, 1015, :none),
    (:let, (:block,
        (:line, 1017, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, :a, :b), (:call, :typeintersect, :b, :a)))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, :Float64, :T3, :T4), :T4), :T3)), (:(=), :b, (:where, (:where, (:curly, :Tuple, :S2, (:curly, :Tuple, :S3), :S3), :S2), :S3))),
    (:line, 1019, :none),
    (:let, (:block,
        (:line, 1021, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :a))
      ), (:(=), :a, (:where, (:curly, :Tuple, :T1, (:curly, :Tuple, :T1)), :T1)), (:(=), :b, (:where, (:curly, :Tuple, :Float64, :S3), :S3))),
    (:line, 1023, :none),
    (:let, (:block,
        (:line, 1025, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, :a, :b), (:call, :typeintersect, :b, :a)))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, 5, :T4, :T5), :T4), :T5)), (:(=), :b, (:where, (:where, (:curly, :Tuple, :S2, :S3, (:curly, :Tuple, :S3)), :S2), :S3))),
    (:line, 1027, :none),
    (:let, (:block,
        (:line, 1029, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :b))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, :T2, (:curly, :Tuple, :T4, :T2)), :T4), :T2)), (:(=), :b, (:where, (:curly, :Tuple, :Float64, (:curly, :Tuple, (:curly, :Tuple, :S3), :S3)), :S3))),
    (:line, 1031, :none),
    (:let, (:block,
        (:line, 1033, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, :a, :b), (:call, :typeintersect, :b, :a)))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, (:curly, :Tuple, :T2, 4), :T6), :T2), :T6)), (:(=), :b, (:where, (:where, (:curly, :Tuple, (:curly, :Tuple, :S2, :S3), (:curly, :Tuple, :S2)), :S2), :S3))),
    (:line, 1035, :none),
    (:let, (:block,
        (:line, 1037, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :a))
      ), (:(=), :a, (:where, (:curly, :Tuple, :T3, :Int64, (:curly, :Tuple, :T3)), :T3)), (:(=), :b, (:where, (:where, (:curly, :Tuple, :S3, :S3, :S4), :S4), :S3))),
    (:line, 1039, :none),
    (:let, (:block,
        (:line, 1041, :none),
        (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, :a, :b), (:call, :typeintersect, :b, :a)))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, :T1, (:curly, :Val, :T2), :T2), :T2), :T1)), (:(=), :b, (:where, (:where, (:curly, :Tuple, :Float64, :S1, :S2), :S2), :S1))),
    (:line, 1043, :none),
    (:let, (:block,
        (:line, 1045, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :a))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, :T1, (:curly, :Val, :T2), :T2), :T2), :T1)), (:(=), :b, (:where, (:where, (:curly, :Tuple, :Float64, :S1, :S2), :S2), :S1))),
    (:line, 1047, :none),
    (:let, (:block,
        (:line, 1049, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, (:call, :typeintersect, :a, :b), :b))
      ), (:(=), :a, (:where, (:curly, :Tuple, :Float64, :T1), :T1)), (:(=), :b, (:where, (:curly, :Tuple, :S1, (:curly, :Tuple, :S1)), :S1))),
    (:line, 1051, :none),
    (:let, (:block,
        (:line, 1053, :none),
        (:macrocall, Symbol("@testintersect"), :a, :b, (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Tuple, :S2)), :Float64, :Float64), :S2))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, (:curly, :Val, :T1), :T2, :T2), :T2), :T1)), (:(=), :b, (:where, (:where, (:curly, :Tuple, (:curly, :Val, (:curly, :Tuple, :S2)), :S3, :Float64), :S2), :S3))),
    (:line, 1055, :none),
    (:let, (:block,
        (:line, 1058, :none),
        (:macrocall, Symbol("@test_broken"), (:<:, :x, (:call, :typeintersect, :a, :b)))
      ), (:(=), :a, (:where, (:where, (:curly, :Tuple, :T1, :T2, :T2), :T1), :T2)), (:(=), :b, (:where, (:curly, :Tuple, (:curly, :Val, :S2), :S2, :Float64), :S2)), (:(=), :x, (:curly, :Tuple, (:curly, :Val, :Float64), :Float64, :Float64))),
    (:line, 1060, :none),
    (:let, (:block,
        (:line, 1062, :none),
        (:macrocall, Symbol("@test_skip"), (:call, :typeintersect, :b, :a))
      ), (:(=), :a, (:where, (:where, (:where, (:where, (:where, (:curly, :Val, (:curly, :Tuple, :T1, (:curly, :Val, :T2), (:curly, :Val, :Int64), (:curly, :Tuple, (:curly, :Tuple, :T3, 5, :Float64), :T4, :T2, :T5))), :T1), :T5), :T4), :T3), :T2)), (:(=), :b, (:where, (:where, (:where, (:where, (:curly, :Val, (:curly, :Tuple, (:curly, :Tuple, :S1, 5, :Float64), (:curly, :Val, :S2), :S3, (:curly, :Tuple, (:curly, :Tuple, (:curly, :Val, :Float64), 5, :Float64), 2, :Float64, :S4))), :S2), :S3), :S1), :S4))),
    (:line, 1066, :none),
    (:abstract, (:curly, :A20992, :T, :D, :d)),
    (:line, 1067, :none),
    (:abstract, (:<:, (:curly, :B20992, :SV, :T, :D, :d), (:curly, :A20992, :T, :D, :d))),
    (:line, 1068, :none),
    (:type, false, (:<:, (:curly, :C20992, :S, :n, :T, :D, :d), (:curly, :B20992, (:curly, :NTuple, :n, :S), :T, :D, :d)), (:block,
        (:line, 1069, :none)
      )),
    (:line, 1070, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Tuple, (:where, (:where, (:curly, :A20992, :R, :D, :d), :d), :D), :Int), :R), (:curly, :Tuple, (:where, (:where, (:where, (:where, (:where, (:curly, :C20992, :S, :n, :T, :D, :d), :d), :D), :T), :n), :S), :Any), (:curly, :Tuple, :C20992, :Int)),
    (:line, 1075, :none),
    (:let, (:block,
        (:line, 1076, :none),
        (:macrocall, Symbol("@test"), (:&&, (:call, :isa, :ex, :ErrorException), (:call, :(==), (:., :ex, (:quote, #QuoteNode
                  :msg
                )), "invalid subtyping in definition of A19414")))
      ), (:(=), :ex, (:try, (:block,
            (:line, 1075, :none),
            (:type, false, (:<:, :A19414, (:., :Base, (:quote, #QuoteNode
                    :AbstractSet
                  ))), (:block,
                (:line, 1075, :none)
              ))
          ), :e, (:block,
            (:line, 1075, :none),
            :e
          )))),
    (:line, 1080, :none),
    (:type, false, (:curly, :TT20103, :X, :Y), (:block,
        (:line, 1080, :none)
      )),
    (:line, 1081, :none),
    (:(=), (:call, (:curly, :f20103, :X, :Y), (:(::), (:curly, :Type, (:curly, :TT20103, :X, :Y))), (:(::), :x, :X), (:(::), :y, :Y)), (:block,
        (:line, 1081, :none),
        1
      )),
    (:line, 1082, :none),
    (:(=), (:call, (:curly, :f20103, :X), (:(::), (:curly, :Type, (:curly, :TT20103, :X, :X))), (:(::), :x, :X)), (:block,
        (:line, 1082, :none),
        100
      )),
    (:line, 1083, :none),
    (:macrocall, Symbol("@test_broken"), (:call, :(==), (:call, :typeintersect, (:where, (:where, (:curly, :Type, (:curly, :NTuple, :N, :E)), :E), :N), (:where, (:curly, :Type, (:where, (:curly, :NTuple, :N, :E), :N)), :E)), (:curly, :Union))),
    (:line, 1084, :none),
    (:let, (:block,
        (:line, 1085, :none),
        (:const, (:(=), :Ints, (:curly, :Union, (:..., :ints)))),
        (:line, 1086, :none),
        (:(=), :vecs, (:vect,)),
        (:line, 1087, :none),
        (:for, (:block,
            (:(=), :i, (:(:), 2, 4)),
            (:(=), :t, :ints)
          ), (:block,
            (:line, 1088, :none),
            (:call, :push!, :vecs, (:curly, :NTuple, :i, :t))
          )),
        (:line, 1090, :none),
        (:const, (:(=), :Vecs, (:curly, :Union, (:..., :vecs)))),
        (:line, 1091, :none),
        (:(=), :T, (:where, (:where, (:curly, :Type, (:curly, :Tuple, :V, :I)), (:<:, :V, :Vecs)), (:<:, :I, :Ints))),
        (:line, 1092, :none),
        (:macrocall, Symbol("@testintersect"), :T, :T, :T),
        (:line, 1093, :none),
        (:(=), (:call, (:curly, :test, (:<:, :V, :Vecs), (:<:, :I, :Ints)), (:(::), :a, (:curly, :Type, (:curly, :Tuple, :V, :I)))), (:block,
            (:line, 1093, :none),
            :I
          )),
        (:line, 1094, :none),
        (:(=), (:call, (:curly, :test, (:<:, :V, :Vecs), (:<:, :I, :Ints)), (:(::), :a, (:curly, :Type, (:curly, :Tuple, :V, :I)))), (:block,
            (:line, 1094, :none),
            :I
          ))
      ), (:(=), :ints, (:tuple, :Int, :Int32, :UInt, :UInt32))),
    (:line, 1098, :none),
    (:let, (:block,
        (:line, 1100, :none),
        (:macrocall, Symbol("@test"), (:<:, :T1, :T2))
      ), (:(=), :T1, (:curly, :Val, (:curly, :Val, (:curly, :Val, (:curly, :Union, :Int8, :Int16, :Int32, :Int64, :UInt8, :UInt16))))), (:(=), :T2, (:where, (:curly, :Val, (:curly, :Val, (:curly, :Val, (:curly, :Union, :Int8, :Int16, :Int32, :Int64, :UInt8, :S)))), :S))),
    (:line, 1104, :none),
    (:abstract, (:curly, :A21613, (:<:, :S, :Tuple))),
    (:line, 1105, :none),
    (:type, false, (:<:, (:curly, :B21613, (:<:, :S, :Tuple), :L), (:curly, :A21613, :S)), (:block,
        (:line, 1106, :none),
        (:(::), :data, (:curly, :NTuple, :L, :Float64))
      )),
    (:line, 1108, :none),
    (:macrocall, Symbol("@testintersect"), (:curly, :Tuple, (:where, (:curly, :Type, (:curly, :B21613, (:curly, :Tuple, :L), :L)), :L), :Any), (:where, (:curly, :Tuple, (:curly, :Type, :SA), :Tuple), (:<:, :SA, (:where, (:curly, :A21613, :S), (:<:, :S, :Tuple)))), (:curly, :Tuple, (:where, (:curly, :Type, (:curly, :B21613, (:curly, :Tuple, :L), :L)), :L), :Tuple)),
    (:line, 1113, :none),
    (:macrocall, Symbol("@testintersect"), (:where, (:curly, :Val, (:curly, :Pair, :T, :T)), :T), (:where, (:curly, :Val, (:curly, :Pair, :Int, :T)), :T), (:curly, :Val, (:curly, :Pair, :Int, :Int)))
  ))