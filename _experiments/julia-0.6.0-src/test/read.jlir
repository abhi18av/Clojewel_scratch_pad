(:quote, (:block,
    (:line, 3, :none),
    (:call, :mktempdir, (:->, (:tuple, :dir), (:block,
          (:line, 5, :none),
          (:(=), :tasks, (:vect,)),
          (:line, 8, :none),
          (:(=), :filename, (:call, :joinpath, :dir, "file.txt")),
          (:line, 9, :none),
          (:(=), :text, "C1,C2\n1,2\na,b\n"),
          (:line, 12, :none),
          (:(=), :l, (:call, (:curly, :Vector, (:curly, :Tuple, :AbstractString, :Function)))),
          (:line, 16, :none),
          (:(=), :io, (:->, :text, (:block,
                (:line, 16, :none),
                (:block,
                  (:line, 17, :none),
                  (:call, :write, :filename, :text),
                  (:line, 18, :none),
                  (:call, (:., (:., :Base, (:quote, #QuoteNode
                          :Filesystem
                        )), (:quote, #QuoteNode
                        :open
                      )), :filename, (:., (:., :Base, (:quote, #QuoteNode
                          :Filesystem
                        )), (:quote, #QuoteNode
                        :JL_O_RDONLY
                      )))
                )
              ))),
          (:line, 20, :none),
          (:(=), :s, (:call, :io, :text)),
          (:line, 21, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IO)),
          (:line, 22, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :File
                )))),
          (:line, 23, :none),
          (:call, :close, :s),
          (:line, 24, :none),
          (:call, :push!, :l, (:tuple, "File", :io)),
          (:line, 28, :none),
          (:(=), :io, (:->, :text, (:block,
                (:line, 28, :none),
                (:block,
                  (:line, 29, :none),
                  (:call, :write, :filename, :text),
                  (:line, 30, :none),
                  (:call, :open, :filename)
                )
              ))),
          (:line, 32, :none),
          (:(=), :s, (:call, :io, :text)),
          (:line, 33, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IO)),
          (:line, 34, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IOStream)),
          (:line, 35, :none),
          (:call, :close, :s),
          (:line, 36, :none),
          (:call, :push!, :l, (:tuple, "IOStream", :io)),
          (:line, 40, :none),
          (:(=), :io, (:->, :text, (:block,
                (:line, 40, :none),
                (:call, :IOBuffer, :text)
              ))),
          (:line, 41, :none),
          (:(=), :s, (:call, :io, :text)),
          (:line, 42, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IO)),
          (:line, 43, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IOBuffer)),
          (:line, 44, :none),
          (:call, :close, :s),
          (:line, 45, :none),
          (:call, :push!, :l, (:tuple, "IOBuffer", :io)),
          (:line, 48, :none),
          (:function, (:call, :run_test_server, :srv, :text), (:block,
              (:line, 49, :none),
              (:call, :push!, :tasks, (:macrocall, Symbol("@async"), (:block,
                    (:line, 50, :none),
                    (:try, (:block,
                        (:line, 51, :none),
                        (:(=), :sock, (:call, :accept, :srv)),
                        (:line, 52, :none),
                        (:try, (:block,
                            (:line, 53, :none),
                            (:call, :write, :sock, :text)
                          ), :e, (:block,
                            (:line, 55, :none),
                            (:if, (:call, :(!=), (:call, :typeof, :e), (:., :Base, (:quote, #QuoteNode
                                    :UVError
                                  ))), (:block,
                                (:line, 56, :none),
                                (:call, :rethrow, :e)
                              ))
                          ), (:block,
                            (:line, 59, :none),
                            (:call, :close, :sock)
                          ))
                      ), false, false, (:block,
                        (:line, 62, :none),
                        (:call, :close, :srv)
                      ))
                  ))),
              (:line, 65, :none),
              (:call, :yield)
            )),
          (:line, 70, :none),
          (:(=), :io, (:->, :text, (:block,
                (:line, 70, :none),
                (:block,
                  (:line, 71, :none),
                  (:(=), (:tuple, :port, :srv), (:call, :listenany, (:call, :rand, (:(:), 2000, 4000)))),
                  (:line, 72, :none),
                  (:call, :run_test_server, :srv, :text),
                  (:line, 73, :none),
                  (:call, :connect, :port)
                )
              ))),
          (:line, 75, :none),
          (:(=), :s, (:call, :io, :text)),
          (:line, 76, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IO)),
          (:line, 77, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :TCPSocket)),
          (:line, 78, :none),
          (:call, :close, :s),
          (:line, 79, :none),
          (:call, :push!, :l, (:tuple, "TCPSocket", :io)),
          (:line, 83, :none),
          (:(=), :io, (:->, :text, (:block,
                (:line, 83, :none),
                (:block,
                  (:line, 84, :none),
                  (:(=), :a, (:string, "\\\\.\\pipe\\uv-test-", (:call, :randstring, 6))),
                  (:line, 85, :none),
                  (:(=), :b, (:call, :joinpath, :dir, (:string, "socket-", (:call, :randstring, 6)))),
                  (:line, 86, :none),
                  (:(=), :socketname, (:if, (:call, :is_windows), :a, :b)),
                  (:line, 87, :none),
                  (:(=), :srv, (:call, :listen, :socketname)),
                  (:line, 88, :none),
                  (:call, :run_test_server, :srv, :text),
                  (:line, 89, :none),
                  (:call, :connect, :socketname)
                )
              ))),
          (:line, 91, :none),
          (:(=), :s, (:call, :io, :text)),
          (:line, 92, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, :IO)),
          (:line, 93, :none),
          (:macrocall, Symbol("@test"), (:call, :isa, :s, (:., :Base, (:quote, #QuoteNode
                  :PipeEndpoint
                )))),
          (:line, 94, :none),
          (:call, :close, :s),
          (:line, 95, :none),
          (:call, :push!, :l, (:tuple, "PipeEndpoint", :io)),
          (:line, 124, :none),
          (:(=), :open_streams, (:vect,)),
          (:line, 125, :none),
          (:function, (:call, :cleanup), (:block,
              (:line, 126, :none),
              (:for, (:(=), :s, :open_streams), (:block,
                  (:line, 127, :none),
                  (:try, (:block,
                      (:line, 127, :none),
                      (:call, :close, :s)
                    ), false, (:block,))
                )),
              (:line, 129, :none),
              (:call, :empty!, :open_streams),
              (:line, 130, :none),
              (:for, (:(=), :tsk, :tasks), (:block,
                  (:line, 131, :none),
                  (:call, :wait, :tsk)
                )),
              (:line, 133, :none),
              (:call, :empty!, :tasks)
            )),
          (:line, 137, :none),
          (:(=), :verbose, false),
          (:line, 140, :none),
          (:for, (:(=), (:tuple, :name, :f), :l), (:block,
              (:line, 141, :none),
              (:(=), :io, (:->, (:tuple,), (:block,
                    (:line, 141, :none),
                    (:block,
                      (:(=), :s, (:call, :f, :text)),
                      (:call, :push!, :open_streams, :s),
                      :s
                    )
                  ))),
              (:line, 143, :none),
              (:call, :write, :filename, :text),
              (:line, 145, :none),
              (:&&, :verbose, (:call, :println, (:string, :name, " read..."))),
              (:line, 146, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io), :UInt8), (:call, :read, (:call, :IOBuffer, :text), :UInt8))),
              (:line, 147, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io), :UInt8), (:call, :read, :filename, :UInt8))),
              (:line, 148, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io), :Int), (:call, :read, (:call, :IOBuffer, :text), :Int))),
              (:line, 149, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io), :Int), (:call, :read, :filename, :Int))),
              (:line, 150, :none),
              (:(=), :s1, (:call, :io)),
              (:line, 151, :none),
              (:(=), :s2, (:call, :IOBuffer, :text)),
              (:line, 152, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :s1, :UInt32, 2), (:call, :read, :s2, :UInt32, 2))),
              (:line, 153, :none),
              (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :s1))),
              (:line, 154, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :s1, :UInt8, 5), (:call, :read, :s2, :UInt8, 5))),
              (:line, 155, :none),
              (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :s1))),
              (:line, 156, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :s1, :UInt8, 1), (:call, :read, :s2, :UInt8, 1))),
              (:line, 157, :none),
              (:macrocall, Symbol("@test"), (:call, :eof, :s1)),
              (:line, 158, :none),
              (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :s1, :UInt8)),
              (:line, 159, :none),
              (:macrocall, Symbol("@test"), (:call, :eof, :s1)),
              (:line, 160, :none),
              (:call, :close, :s1),
              (:line, 161, :none),
              (:call, :close, :s2),
              (:line, 163, :none),
              (:&&, :verbose, (:call, :println, (:string, :name, " eof..."))),
              (:line, 164, :none),
              (:(=), :n, (:call, :-, (:call, :length, :text), 1)),
              (:line, 165, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n)), (:call, :read!, (:call, :IOBuffer, :text), (:call, (:curly, :Vector, :UInt8), :n)))),
              (:line, 167, :none),
              (:macrocall, Symbol("@test"), (:block,
                  (:(=), :s, (:call, :io)),
                  (:call, :read!, :s, (:call, (:curly, :Vector, :UInt8), :n)),
                  (:call, :!, (:call, :eof, :s))
                )),
              (:line, 168, :none),
              (:(=), :n, (:call, :length, :text)),
              (:line, 169, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n)), (:call, :read!, (:call, :IOBuffer, :text), (:call, (:curly, :Vector, :UInt8), :n)))),
              (:line, 171, :none),
              (:macrocall, Symbol("@test"), (:block,
                  (:(=), :s, (:call, :io)),
                  (:call, :read!, :s, (:call, (:curly, :Vector, :UInt8), :n)),
                  (:call, :eof, :s)
                )),
              (:line, 172, :none),
              (:(=), :n, (:call, :+, (:call, :length, :text), 1)),
              (:line, 173, :none),
              (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n))),
              (:line, 174, :none),
              (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n))),
              (:line, 176, :none),
              (:(=), :old_text, :text),
              (:line, 177, :none),
              (:call, :cleanup),
              (:line, 179, :none),
              (:for, (:(=), :text, (:vect, :old_text, (:call, :String, (:typed_comprehension, :Char, (:generator, (:call, :+, 'A', (:call, :%, :i, 52)), (:(=), :i, (:(:), 1, (:call, :div, (:., :Base, (:quote, #QuoteNode
                                    :SZ_UNBUFFERED_IO
                                  )), 2)))))), (:call, :String, (:typed_comprehension, :Char, (:generator, (:call, :+, 'A', (:call, :%, :i, 52)), (:(=), :i, (:(:), 1, (:call, :-, (:., :Base, (:quote, #QuoteNode
                                    :SZ_UNBUFFERED_IO
                                  )), 1)))))), (:call, :String, (:typed_comprehension, :Char, (:generator, (:call, :+, 'A', (:call, :%, :i, 52)), (:(=), :i, (:(:), 1, (:., :Base, (:quote, #QuoteNode
                                  :SZ_UNBUFFERED_IO
                                ))))))), (:call, :String, (:typed_comprehension, :Char, (:generator, (:call, :+, 'A', (:call, :%, :i, 52)), (:(=), :i, (:(:), 1, (:call, :+, (:., :Base, (:quote, #QuoteNode
                                    :SZ_UNBUFFERED_IO
                                  )), 1)))))))), (:block,
                  (:line, 186, :none),
                  (:call, :write, :filename, :text),
                  (:line, 188, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readstring..."))),
                  (:line, 189, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:call, :io)), :text)),
                  (:line, 191, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:call, :io)), (:call, :readstring, :filename))),
                  (:line, 194, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " read..."))),
                  (:line, 195, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io)), (:call, (:curly, :Vector, :UInt8), :text))),
                  (:line, 197, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :io)), (:call, :read, :filename))),
                  (:line, 199, :none),
                  (:call, :cleanup),
                  (:line, 202, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readbytes!..."))),
                  (:line, 203, :none),
                  (:(=), :l, (:call, :length, :text)),
                  (:line, 204, :none),
                  (:for, (:(=), :n, (:vect, 1, 2, (:call, :-, :l, 2), (:call, :-, :l, 1), :l, (:call, :+, :l, 1), (:call, :+, :l, 2))), (:block,
                      (:line, 205, :none),
                      (:(=), :a1, (:call, (:curly, :Vector, :UInt8), :n)),
                      (:line, 206, :none),
                      (:(=), :a2, (:call, (:curly, :Vector, :UInt8), :n)),
                      (:line, 207, :none),
                      (:(=), :s1, (:call, :io)),
                      (:line, 208, :none),
                      (:(=), :s2, (:call, :IOBuffer, :text)),
                      (:line, 209, :none),
                      (:(=), :n1, (:call, :readbytes!, :s1, :a1)),
                      (:line, 210, :none),
                      (:(=), :n2, (:call, :readbytes!, :s2, :a2)),
                      (:line, 211, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), :n1, :n2)),
                      (:line, 212, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :a1), (:call, :length, :a2))),
                      (:line, 213, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :a1, (:(:), 1, :n1)), (:ref, :a2, (:(:), 1, :n2)))),
                      (:line, 214, :none),
                      (:macrocall, Symbol("@test"), (:||, (:call, :(<=), :n, (:call, :length, :text)), (:call, :eof, :s1))),
                      (:line, 215, :none),
                      (:macrocall, Symbol("@test"), (:||, (:call, :(<=), :n, (:call, :length, :text)), (:call, :eof, :s2))),
                      (:line, 217, :none),
                      (:call, :cleanup)
                    )),
                  (:line, 220, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " read!..."))),
                  (:line, 221, :none),
                  (:(=), :l, (:call, :length, :text)),
                  (:line, 222, :none),
                  (:for, (:(=), :n, (:vect, 1, 2, (:call, :-, :l, 2), (:call, :-, :l, 1), :l)), (:block,
                      (:line, 223, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n)), (:call, :read!, (:call, :IOBuffer, :text), (:call, (:curly, :Vector, :UInt8), :n)))),
                      (:line, 225, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), :n)), (:call, :read!, :filename, (:call, (:curly, :Vector, :UInt8), :n)))),
                      (:line, 228, :none),
                      (:call, :cleanup)
                    )),
                  (:line, 230, :none),
                  (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, (:call, :io), (:call, (:curly, :Vector, :UInt8), (:call, :+, (:call, :length, :text), 1)))),
                  (:line, 233, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readuntil..."))),
                  (:line, 234, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), '\n'), (:call, :readuntil, (:call, :IOBuffer, :text), '\n'))),
                  (:line, 235, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), '\n'), (:call, :readuntil, :filename, '\n'))),
                  (:line, 236, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), "\n"), (:call, :readuntil, (:call, :IOBuffer, :text), "\n"))),
                  (:line, 237, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), "\n"), (:call, :readuntil, :filename, "\n"))),
                  (:line, 238, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), ','), (:call, :readuntil, (:call, :IOBuffer, :text), ','))),
                  (:line, 239, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readuntil, (:call, :io), ','), (:call, :readuntil, :filename, ','))),
                  (:line, 241, :none),
                  (:call, :cleanup),
                  (:line, 243, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readline..."))),
                  (:line, 244, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, (:call, :io), (:kw, :chomp, false)), (:call, :readline, (:call, :IOBuffer, :text), (:kw, :chomp, false)))),
                  (:line, 245, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readline, (:call, :io), (:kw, :chomp, false)), (:call, :readline, :filename, (:kw, :chomp, false)))),
                  (:line, 247, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readlines..."))),
                  (:line, 248, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :io), (:kw, :chomp, false)), (:call, :readlines, (:call, :IOBuffer, :text), (:kw, :chomp, false)))),
                  (:line, 249, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :io), (:kw, :chomp, false)), (:call, :readlines, :filename, (:kw, :chomp, false)))),
                  (:line, 250, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :io)), (:call, :readlines, (:call, :IOBuffer, :text)))),
                  (:line, 251, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :io)), (:call, :readlines, :filename))),
                  (:line, 252, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachline, (:call, :io), (:kw, :chomp, false))), (:call, :collect, (:call, :eachline, (:call, :IOBuffer, :text), (:kw, :chomp, false))))),
                  (:line, 253, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachline, (:call, :io), (:kw, :chomp, false))), (:call, :collect, (:call, :eachline, :filename, (:kw, :chomp, false))))),
                  (:line, 254, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:call, :eachline, (:call, :io))), (:call, :collect, (:call, :eachline, (:call, :IOBuffer, :text))))),
                  (:line, 255, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :collect, (:macrocall, Symbol("@inferred"), (:call, :eachline, (:call, :io)))), (:call, :collect, (:macrocall, Symbol("@inferred"), (:call, :eachline, :filename))))),
                  (:line, 257, :none),
                  (:call, :cleanup),
                  (:line, 259, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " countlines..."))),
                  (:line, 260, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :countlines, (:call, :io)), (:call, :countlines, (:call, :IOBuffer, :text)))),
                  (:line, 262, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " readcsv..."))),
                  (:line, 263, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readcsv, (:call, :io)), (:call, :readcsv, (:call, :IOBuffer, :text)))),
                  (:line, 264, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readcsv, (:call, :io)), (:call, :readcsv, :filename))),
                  (:line, 266, :none),
                  (:call, :cleanup)
                )),
              (:line, 269, :none),
              (:(=), :text, :old_text),
              (:line, 270, :none),
              (:call, :write, :filename, :text),
              (:line, 272, :none),
              (:if, (:call, :!, (:call, :in, (:call, :typeof, (:call, :io)), (:vect, (:., :Base, (:quote, #QuoteNode
                          :PipeEndpoint
                        )), :Pipe, :TCPSocket))), (:block,
                  (:line, 273, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " position..."))),
                  (:line, 274, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:block,
                        (:(=), :s, (:call, :io)),
                        (:call, :read!, :s, (:call, (:curly, :Vector, :UInt8), 4)),
                        (:call, :position, :s)
                      ), 4)),
                  (:line, 276, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " seek..."))),
                  (:line, 277, :none),
                  (:for, (:(=), :n, (:(:), 0, (:call, :-, (:call, :length, :text), 1))), (:block,
                      (:line, 278, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :seek, (:call, :io), :n)), (:call, :readlines, (:call, :seek, (:call, :IOBuffer, :text), :n)))),
                      (:line, 279, :none),
                      (:call, :cleanup)
                    )),
                  (:line, 281, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " skip..."))),
                  (:line, 282, :none),
                  (:for, (:(=), :n, (:(:), 0, (:call, :-, (:call, :length, :text), 1))), (:block,
                      (:line, 283, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :seek, (:call, :io), :n)), (:call, :readlines, (:call, :seek, (:call, :IOBuffer, :text), :n)))),
                      (:line, 284, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readlines, (:call, :skip, (:call, :io), :n)), (:call, :readlines, (:call, :skip, (:call, :IOBuffer, :text), :n)))),
                      (:line, 285, :none),
                      (:call, :cleanup)
                    )),
                  (:line, 287, :none),
                  (:&&, :verbose, (:call, :println, (:string, :name, " seekend..."))),
                  (:line, 288, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:call, :seekend, (:call, :io))), ""))
                )),
              (:line, 292, :none),
              (:&&, :verbose, (:call, :println, (:string, :name, " write(::IOStream, ...)"))),
              (:line, 293, :none),
              (:(=), :to, (:call, :open, (:string, :filename, ".to"), "w")),
              (:line, 294, :none),
              (:call, :write, :to, (:call, :io)),
              (:line, 295, :none),
              (:call, :close, :to),
              (:line, 296, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:string, :filename, ".to")), :text)),
              (:line, 298, :none),
              (:&&, :verbose, (:call, :println, (:string, :name, " write(filename, ...)"))),
              (:line, 299, :none),
              (:call, :write, (:string, :filename, ".to"), (:call, :io)),
              (:line, 300, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :readstring, (:string, :filename, ".to")), :text)),
              (:line, 302, :none),
              (:&&, :verbose, (:call, :println, (:string, :name, " write(::IOBuffer, ...)"))),
              (:line, 303, :none),
              (:(=), :to, (:call, :IOBuffer, (:call, :copy, (:call, (:curly, :Vector, :UInt8), :text)), false, true)),
              (:line, 304, :none),
              (:call, :write, :to, (:call, :io)),
              (:line, 305, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :String, (:call, :take!, :to)), :text)),
              (:line, 307, :none),
              (:call, :cleanup)
            )),
          (:line, 310, :none),
          (:function, (:call, :test_read_nbyte), (:block,
              (:line, 311, :none),
              (:(=), :fn, (:call, :tempname)),
              (:line, 314, :none),
              (:(=), :f, (:call, :open, (:->, (:tuple, :f), (:block,
                      (:line, 315, :none),
                      (:call, :write, :f, 0x55),
                      (:line, 316, :none),
                      (:call, :flush, :f),
                      (:line, 317, :none),
                      (:call, :seek, :f, 0),
                      (:line, 318, :none),
                      (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :f, :UInt8), 0x55)),
                      (:line, 319, :none),
                      (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt8)),
                      (:line, 320, :none),
                      (:call, :seek, :f, 0),
                      (:line, 321, :none),
                      (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt16))
                    )), :fn, "w+")),
              (:line, 325, :none),
              (:call, :open, (:->, (:tuple, :f), (:block,
                    (:line, 326, :none),
                    (:call, :write, :f, 0x4444),
                    (:line, 327, :none),
                    (:call, :flush, :f),
                    (:line, 328, :none),
                    (:call, :seek, :f, 0),
                    (:line, 329, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :f, :UInt16), 0x4455)),
                    (:line, 330, :none),
                    (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt16)),
                    (:line, 331, :none),
                    (:call, :seek, :f, 0),
                    (:line, 332, :none),
                    (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt32))
                  )), :fn, "a+"),
              (:line, 336, :none),
              (:call, :open, (:->, (:tuple, :f), (:block,
                    (:line, 337, :none),
                    (:call, :write, :f, 0x33333333),
                    (:line, 338, :none),
                    (:call, :flush, :f),
                    (:line, 339, :none),
                    (:call, :seek, :f, 0),
                    (:line, 340, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :f, :UInt32), 0x33444455)),
                    (:line, 341, :none),
                    (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt32)),
                    (:line, 342, :none),
                    (:call, :seek, :f, 0),
                    (:line, 343, :none),
                    (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f, :UInt64))
                  )), :fn, "a+"),
              (:line, 347, :none),
              (:call, :open, (:->, (:tuple, :f), (:block,
                    (:line, 348, :none),
                    (:call, :write, :f, 0x22),
                    (:line, 349, :none),
                    (:call, :flush, :f),
                    (:line, 350, :none),
                    (:call, :seek, :f, 0),
                    (:line, 351, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, :f, :UInt64), 0x2233333333444455))
                  )), :fn, "a+"),
              (:line, 353, :none),
              (:call, :rm, :fn)
            )),
          (:line, 355, :none),
          (:call, :test_read_nbyte),
          (:line, 359, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :isreadable, :DevNull))),
          (:line, 360, :none),
          (:macrocall, Symbol("@test"), (:call, :iswritable, :DevNull)),
          (:line, 361, :none),
          (:macrocall, Symbol("@test"), (:call, :isopen, :DevNull)),
          (:line, 362, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :DevNull, 0xff), 1)),
          (:line, 363, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :write, :DevNull, (:call, :Int32, 1234)), 4)),
          (:line, 364, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :DevNull, :UInt8)),
          (:line, 365, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :close, :DevNull), :nothing)),
          (:line, 366, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :flush, :DevNull), :nothing)),
          (:line, 367, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :DevNull)),
          (:line, 368, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :print, :DevNull, "go to /dev/null"), :nothing)),
          (:line, 371, :none),
          (:let, (:block,
              (:line, 372, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :IOBuffer, :s)), (:call, (:curly, :Vector, :UInt8), :s))),
              (:line, 373, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :IOBuffer, :s), 10), (:call, (:curly, :Vector, :UInt8), :s))),
              (:line, 374, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :read, (:call, :IOBuffer, :s), 1), (:ref, (:call, (:curly, :Vector, :UInt8), :s), (:(:), 1, 1)))),
              (:line, 377, :none),
              (:(=), :x, (:ref, :UInt8)),
              (:line, 378, :none),
              (:(=), :n, (:call, :readbytes!, (:call, :IOBuffer, :s), :x, 10)),
              (:line, 379, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :x, (:call, (:curly, :Vector, :UInt8), :s))),
              (:line, 380, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :n, (:call, :length, :x)))
            ), (:(=), :s, "qwerty")),
          (:line, 385, :none),
          (:(=), :f, (:call, :joinpath, :dir, "test.txt")),
          (:line, 386, :none),
          (:call, :open, (:->, :io, (:block,
                (:line, 386, :none),
                (:call, :write, :io, "123")
              )), :f, "w"),
          (:line, 387, :none),
          (:(=), :f1, (:call, :open, :f)),
          (:line, 388, :none),
          (:(=), :f2, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :JL_O_RDONLY
                )))),
          (:line, 389, :none),
          (:macrocall, Symbol("@test"), (:comparison, (:call, :read, :f1, :UInt8), :(==), (:call, :read, :f2, :UInt8), :(==), (:call, :UInt8, '1'))),
          (:line, 390, :none),
          (:macrocall, Symbol("@test"), (:comparison, (:call, :read, :f1, :UInt8), :(==), (:call, :read, :f2, :UInt8), :(==), (:call, :UInt8, '2'))),
          (:line, 391, :none),
          (:macrocall, Symbol("@test"), (:comparison, (:call, :read, :f1, :UInt8), :(==), (:call, :read, :f2, :UInt8), :(==), (:call, :UInt8, '3'))),
          (:line, 392, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f1, :UInt8)),
          (:line, 393, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read, :f2, :UInt8)),
          (:line, 394, :none),
          (:call, :close, :f1),
          (:line, 395, :none),
          (:call, :close, :f2),
          (:line, 397, :none),
          (:(=), :a, (:ref, :UInt8, 0, 0, 0)),
          (:line, 398, :none),
          (:(=), :f1, (:call, :open, :f)),
          (:line, 399, :none),
          (:(=), :f2, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :JL_O_RDONLY
                )))),
          (:line, 400, :none),
          (:macrocall, Symbol("@test"), (:comparison, (:call, :read!, :f1, :a), :(==), (:call, :read!, :f2, :a), :(==), (:ref, :UInt8, '1', '2', '3'))),
          (:line, 401, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :f1, :a)),
          (:line, 402, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :f2, :a)),
          (:line, 403, :none),
          (:call, :close, :f1),
          (:line, 404, :none),
          (:call, :close, :f2),
          (:line, 406, :none),
          (:(=), :a, (:ref, :UInt8, 0, 0, 0, 0)),
          (:line, 407, :none),
          (:(=), :f1, (:call, :open, :f)),
          (:line, 408, :none),
          (:(=), :f2, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :JL_O_RDONLY
                )))),
          (:line, 409, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :f1, :a)),
          (:line, 410, :none),
          (:macrocall, Symbol("@test_throws"), :EOFError, (:call, :read!, :f2, :a)),
          (:line, 411, :none),
          (:call, :close, :f1),
          (:line, 412, :none),
          (:call, :close, :f2),
          (:line, 413, :none),
          (:call, :rm, :f),
          (:line, 415, :none),
          (:(=), :io, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:call, :|, (:call, :|, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_WRONLY
                    )), (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_CREAT
                    ))), (:., (:., :Base, (:quote, #QuoteNode
                      :Filesystem
                    )), (:quote, #QuoteNode
                    :JL_O_EXCL
                  ))), 0x0000)),
          (:line, 416, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :write, :io, "abc"), 3)),
          (:line, 417, :none),
          (:call, :close, :io),
          (:line, 418, :none),
          (:if, (:&&, (:call, :!, (:call, :is_windows)), (:&&, (:call, :(!=), (:call, :get, :ENV, "USER", ""), "root"), (:call, :(!=), (:call, :get, :ENV, "HOME", ""), "/root"))), (:block,
              (:line, 421, :none),
              (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :open, :f)),
              (:line, 422, :none),
              (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                    :UVError
                  )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :open
                    )), :f, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_RDONLY
                    ))))
            ), (:block,
              (:line, 424, :none),
              (:||, (:call, :is_windows), (:call, :warn, "file permissions tests skipped due to running tests as root (not recommended)")),
              (:line, 425, :none),
              (:call, :close, (:call, :open, :f))
            )),
          (:line, 427, :none),
          (:call, :chmod, :f, 0x0100),
          (:line, 428, :none),
          (:(=), :f1, (:call, :open, :f)),
          (:line, 429, :none),
          (:(=), :f2, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :JL_O_RDONLY
                )))),
          (:line, 430, :none),
          (:for, (:(=), :i, (:(:), 1, 2)), (:block,
              (:line, 431, :none),
              (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :f1))),
              (:line, 432, :none),
              (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :f2))),
              (:line, 433, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f1), 0)),
              (:line, 434, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f2), 0)),
              (:line, 435, :none),
              (:macrocall, Symbol("@test"), (:comparison, (:call, :readstring, :f1), :(==), (:call, :readstring, :f2), :(==), "abc")),
              (:line, 436, :none),
              (:macrocall, Symbol("@test"), (:comparison, (:call, :readstring, :f1), :(==), (:call, :readstring, :f2), :(==), "")),
              (:line, 437, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f1), 3)),
              (:line, 438, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f2), 3)),
              (:line, 439, :none),
              (:macrocall, Symbol("@test"), (:call, :eof, :f1)),
              (:line, 440, :none),
              (:macrocall, Symbol("@test"), (:call, :eof, :f2)),
              (:line, 441, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekstart, :f1), :f1)),
              (:line, 442, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekstart, :f2), :f2))
            )),
          (:line, 444, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekend, :f1), :f1)),
          (:line, 445, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekend, :f2), :f2)),
          (:line, 446, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f1)),
          (:line, 447, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f2)),
          (:line, 448, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f1, -2), :f1)),
          (:line, 449, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f2, -2), :f2)),
          (:line, 450, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f1), 1)),
          (:line, 451, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f2), 1)),
          (:line, 452, :none),
          (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :skip, :f1, -2)),
          (:line, 453, :none),
          (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :skip, :f2, -2)),
          (:line, 454, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f1), 1)),
          (:line, 455, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f2), 1)),
          (:line, 456, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f1, 300), :f1)),
          (:line, 457, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f2, 300), :f2)),
          (:line, 458, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f1), 301)),
          (:line, 459, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :position, :f2), 301)),
          (:line, 460, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f1)),
          (:line, 461, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f2)),
          (:line, 462, :none),
          (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :write, :f1, '*')),
          (:line, 463, :none),
          (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                :UVError
              )), (:call, :write, :f2, '*')),
          (:line, 464, :none),
          (:call, :close, :f1),
          (:line, 465, :none),
          (:call, :close, :f2),
          (:line, 466, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f1)),
          (:line, 467, :none),
          (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                :UVError
              )), (:call, :eof, :f2)),
          (:line, 468, :none),
          (:if, (:&&, (:call, :(!=), (:call, :get, :ENV, "USER", ""), "root"), (:call, :(!=), (:call, :get, :ENV, "HOME", ""), "/root")), (:block,
              (:line, 469, :none),
              (:macrocall, Symbol("@test_throws"), :SystemError, (:call, :open, :f, "r+")),
              (:line, 470, :none),
              (:macrocall, Symbol("@test_throws"), (:., :Base, (:quote, #QuoteNode
                    :UVError
                  )), (:call, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :open
                    )), :f, (:., (:., :Base, (:quote, #QuoteNode
                        :Filesystem
                      )), (:quote, #QuoteNode
                      :JL_O_RDWR
                    ))))
            ), (:block,
              (:line, 472, :none),
              (:call, :warn, "file permissions tests skipped due to running tests as root (not recommended)")
            )),
          (:line, 474, :none),
          (:call, :chmod, :f, 0x0180),
          (:line, 475, :none),
          (:(=), :f1, (:call, :open, :f, "r+")),
          (:line, 476, :none),
          (:(=), :f2, (:call, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :open
                )), :f, (:., (:., :Base, (:quote, #QuoteNode
                    :Filesystem
                  )), (:quote, #QuoteNode
                  :JL_O_RDWR
                )))),
          (:line, 477, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f1, 10), :f1)),
          (:line, 478, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f2, 10), :f2)),
          (:line, 479, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f1)),
          (:line, 480, :none),
          (:macrocall, Symbol("@test"), (:call, :eof, :f2)),
          (:line, 481, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :write, :f1, '*'), 1)),
          (:line, 482, :none),
          (:macrocall, Symbol("@test"), (:call, :(===), (:call, :flush, :f1), :nothing)),
          (:line, 483, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :f2))),
          (:line, 484, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :skip, :f2, 1), :f2)),
          (:line, 485, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :write, :f2, '*'), 1)),
          (:line, 486, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :eof, :f1))),
          (:line, 487, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekstart, :f1), :f1)),
          (:line, 488, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :seekstart, :f2), :f2)),
          (:line, 489, :none),
          (:macrocall, Symbol("@test"), (:comparison, (:call, :readstring, :f1), :(==), (:call, :readstring, :f2), :(==), "abc\0\0\0\0\0\0\0**")),
          (:line, 490, :none),
          (:call, :close, :f1),
          (:line, 491, :none),
          (:call, :close, :f2),
          (:line, 492, :none),
          (:call, :rm, :f)
        )))
  ))