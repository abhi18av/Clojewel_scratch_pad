(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@testset"), "clamp", (:block,
        (:line, 4, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 0, 1, 3), 1)),
        (:line, 5, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 1, 1, 3), 1)),
        (:line, 6, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 2, 1, 3), 2)),
        (:line, 7, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 3, 1, 3), 3)),
        (:line, 8, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 4, 1, 3), 3)),
        (:line, 10, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 0.0, 1, 3), 1.0)),
        (:line, 11, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 1.0, 1, 3), 1.0)),
        (:line, 12, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 2.0, 1, 3), 2.0)),
        (:line, 13, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 3.0, 1, 3), 3.0)),
        (:line, 14, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :clamp, 4.0, 1, 3), 3.0)),
        (:line, 16, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :clamp, (:tuple, (:vect, 0, 1, 2, 3, 4), 1.0, 3.0)), (:vect, 1.0, 1.0, 2.0, 3.0, 3.0))),
        (:line, 17, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :clamp, (:tuple, (:vcat, (:row, 0, 1), (:row, 2, 3)), 1.0, 3.0)), (:vcat, (:row, 1.0, 1.0), (:row, 2.0, 3.0)))),
        (:line, 18, :none),
        (:block,
          (:line, 19, :none),
          (:(=), :x, (:vect, 0.0, 1.0, 2.0, 3.0, 4.0)),
          (:line, 20, :none),
          (:call, :clamp!, :x, 1, 3),
          (:line, 21, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), :x, (:vect, 1.0, 1.0, 2.0, 3.0, 3.0)))
        )
      )),
    (:line, 25, :none),
    (:macrocall, Symbol("@testset"), "constants", (:block,
        (:line, 26, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :pi, :e)),
        (:line, 27, :none),
        (:macrocall, Symbol("@test"), (:call, :(!=), :e, (:call, ://, 1, 2))),
        (:line, 28, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, ://, 1, 2), :e)),
        (:line, 29, :none),
        (:macrocall, Symbol("@test"), (:call, :(<=), :e, (:call, ://, 15, 3))),
        (:line, 30, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :big, (:call, ://, 1, 2)), :e)),
        (:line, 31, :none),
        (:macrocall, Symbol("@test"), (:call, :<, :e, (:call, :big, (:call, ://, 20, 6)))),
        (:line, 32, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, :pi), (:call, :exp, :pi))),
        (:line, 33, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, 2), (:call, :exp, 2))),
        (:line, 34, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, 2.4), (:call, :exp, 2.4))),
        (:line, 35, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :^, :e, (:call, ://, 2, 3)), (:call, :exp, (:call, ://, 2, 3)))),
        (:line, 37, :none),
        (:macrocall, Symbol("@test"), (:call, :<, (:call, :Float16, 3.0), :pi)),
        (:line, 38, :none),
        (:macrocall, Symbol("@test"), (:call, :<, :pi, (:call, :Float16, 4.0))),
        (:line, 39, :none),
        (:macrocall, Symbol("@test"), (:call, :contains, (:call, :sprint, :show, :Ï€), "3.14159"))
      )),
    (:line, 42, :none),
    (:macrocall, Symbol("@testset"), "frexp,ldexp,significand,exponent", (:block,
        (:line, 43, :none),
        (:macrocall, Symbol("@testset"), (:string, :T), (:for, (:(=), :T, (:tuple, :Float16, :Float32, :Float64)), (:block,
              (:line, 44, :none),
              (:for, (:(=), :z, (:tuple, (:call, :zero, :T), (:call, :-, (:call, :zero, :T)))), (:block,
                  (:line, 45, :none),
                  (:call, :(===), (:call, :frexp, :z), (:tuple, :z, 0)),
                  (:line, 46, :none),
                  (:call, :(===), (:call, :significand, :z), :z),
                  (:line, 47, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :exponent, :z))
                )),
              (:line, 50, :none),
              (:for, (:(=), (:tuple, :a, :b), (:vect, (:tuple, (:call, :T, 12.8), (:call, :T, 0.8)), (:tuple, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :nextfloat, (:call, :one, :T), -2)), (:tuple, (:call, :nextfloat, (:call, :zero, :T), 3), (:call, :T, 0.75)), (:tuple, (:call, :nextfloat, (:call, :zero, :T)), (:call, :T, 0.5)))), (:block,
                  (:line, 55, :none),
                  (:(=), :n, (:call, :Int, (:call, :log2, (:call, :/, :a, :b)))),
                  (:line, 56, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, :a), (:tuple, :b, :n))),
                  (:line, 57, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, :b, :n), :a)),
                  (:line, 58, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, :a, (:call, :-, :n)), :b)),
                  (:line, 59, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :significand, :a), (:call, :*, 2, :b))),
                  (:line, 60, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exponent, :a), (:call, :-, :n, 1))),
                  (:line, 62, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :-, :a)), (:tuple, (:call, :-, :b), :n))),
                  (:line, 63, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :-, :b), :n), (:call, :-, :a))),
                  (:line, 64, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :-, :a), (:call, :-, :n)), (:call, :-, :b))),
                  (:line, 65, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :significand, (:call, :-, :a)), (:call, :*, -2, :b))),
                  (:line, 66, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exponent, (:call, :-, :a)), (:call, :-, :n, 1)))
                )),
              (:line, 68, :none),
              (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :exponent, (:call, :convert, :T, :NaN))),
              (:line, 69, :none),
              (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :significand, (:call, :convert, :T, :NaN)))),
              (:line, 70, :none),
              (:(=), (:tuple, :x, :y), (:call, :frexp, (:call, :convert, :T, :NaN))),
              (:line, 71, :none),
              (:macrocall, Symbol("@test"), (:call, :isnan, :x)),
              (:line, 72, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), :y, 0)),
              (:line, 74, :none),
              (:macrocall, Symbol("@testset"), "ldexp function", (:block,
                  (:line, 75, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.0), 0), (:call, :T, 0.0))),
                  (:line, 76, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.0), 0), (:call, :T, -0.0))),
                  (:line, 77, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, :Inf), 1), (:call, :T, :Inf))),
                  (:line, 78, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, :Inf), 10000), (:call, :T, :Inf))),
                  (:line, 79, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, (:call, :-, :Inf)), 1), (:call, :T, (:call, :-, :Inf)))),
                  (:line, 80, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, :NaN), 10), (:call, :T, :NaN))),
                  (:line, 81, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), 0), (:call, :T, 1.0))),
                  (:line, 82, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.8), 4), (:call, :T, 12.8))),
                  (:line, 83, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.854375), 5), (:call, :T, -27.34))),
                  (:line, 84, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :typemax, :Int)), (:call, :T, :Inf))),
                  (:line, 85, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :typemin, :Int)), (:call, :T, 0.0))),
                  (:line, 86, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :typemax, :Int)), (:call, :T, :Inf))),
                  (:line, 87, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :typemin, :Int)), (:call, :T, 0.0))),
                  (:line, 89, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.0), (:call, :Int128, 0)), (:call, :T, 0.0))),
                  (:line, 90, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.0), (:call, :Int128, 0)), (:call, :T, -0.0))),
                  (:line, 91, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :Int128, 0)), (:call, :T, 1.0))),
                  (:line, 92, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.8), (:call, :Int128, 4)), (:call, :T, 12.8))),
                  (:line, 93, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.854375), (:call, :Int128, 5)), (:call, :T, -27.34))),
                  (:line, 94, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :typemax, :Int128)), (:call, :T, :Inf))),
                  (:line, 95, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :typemin, :Int128)), (:call, :T, 0.0))),
                  (:line, 96, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :typemax, :Int128)), (:call, :T, :Inf))),
                  (:line, 97, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :typemin, :Int128)), (:call, :T, 0.0))),
                  (:line, 99, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.0), (:call, :BigInt, 0)), (:call, :T, 0.0))),
                  (:line, 100, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.0), (:call, :BigInt, 0)), (:call, :T, -0.0))),
                  (:line, 101, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :BigInt, 0)), (:call, :T, 1.0))),
                  (:line, 102, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 0.8), (:call, :BigInt, 4)), (:call, :T, 12.8))),
                  (:line, 103, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, -0.854375), (:call, :BigInt, 5)), (:call, :T, -27.34))),
                  (:line, 104, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :BigInt, (:call, :typemax, :Int128))), (:call, :T, :Inf))),
                  (:line, 105, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :T, 1.0), (:call, :BigInt, (:call, :typemin, :Int128))), (:call, :T, 0.0))),
                  (:line, 106, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :BigInt, (:call, :typemax, :Int128))), (:call, :T, :Inf))),
                  (:line, 107, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :ldexp, (:call, :prevfloat, (:call, :realmin, :T)), (:call, :BigInt, (:call, :typemin, :Int128))), (:call, :T, 0.0))),
                  (:line, 110, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :realmin, :T), -1), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :realmin, :T)), -1)))),
                  (:line, 111, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :realmin, :T), -2), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :realmin, :T)), -2)))),
                  (:line, 112, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :realmin, :T), 2), 0), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :realmin, :T), 2)), 0)))),
                  (:line, 113, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :realmin, :T), 3), 0), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :realmin, :T), 3)), 0)))),
                  (:line, 114, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :realmin, :T), 3), -1), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :realmin, :T), 3)), -1)))),
                  (:line, 115, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :realmin, :T), 3), 11), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :realmin, :T), 3)), 11)))),
                  (:line, 116, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :realmin, :T), 11), -10), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :realmin, :T), 11)), -10)))),
                  (:line, 117, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :ldexp, (:call, :/, (:call, :-, (:call, :realmin, :T)), 11), -10), (:call, :T, (:call, :ldexp, (:call, :big, (:call, :/, (:call, :-, (:call, :realmin, :T)), 11)), -10))))
                ))
            )))
      )),
    (:line, 124, :none),
    (:macrocall, Symbol("@testset"), "basic math functions", (:block,
        (:line, 125, :none),
        (:macrocall, Symbol("@testset"), (:string, :T), (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
              (:line, 126, :none),
              (:(=), :x, (:call, :T, (:call, ://, 1, 3))),
              (:line, 127, :none),
              (:(=), :y, (:call, :T, (:call, ://, 1, 2))),
              (:line, 128, :none),
              (:(=), :yi, 4),
              (:line, 129, :none),
              (:macrocall, Symbol("@testset"), "Random values", (:block,
                  (:line, 130, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :^, :x, :y), (:call, :^, (:call, :big, :x), (:call, :big, :y)))),
                  (:line, 131, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, :x, 1), :x)),
                  (:line, 132, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :^, :x, :yi), (:call, :^, (:call, :big, :x), :yi))),
                  (:line, 133, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :acos, :x), (:call, :acos, (:call, :big, :x)))),
                  (:line, 134, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :acosh, (:call, :+, 1, :x)), (:call, :acosh, (:call, :big, (:call, :+, 1, :x))))),
                  (:line, 135, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :asin, :x), (:call, :asin, (:call, :big, :x)))),
                  (:line, 136, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :asinh, :x), (:call, :asinh, (:call, :big, :x)))),
                  (:line, 137, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan, :x), (:call, :atan, (:call, :big, :x)))),
                  (:line, 138, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan2, :x, :y), (:call, :atan2, (:call, :big, :x), (:call, :big, :y)))),
                  (:line, 139, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atanh, :x), (:call, :atanh, (:call, :big, :x)))),
                  (:line, 140, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cbrt, :x), (:call, :cbrt, (:call, :big, :x)))),
                  (:line, 141, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cos, :x), (:call, :cos, (:call, :big, :x)))),
                  (:line, 142, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cosh, :x), (:call, :cosh, (:call, :big, :x)))),
                  (:line, 143, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp, :x), (:call, :exp, (:call, :big, :x)))),
                  (:line, 144, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp10, :x), (:call, :exp10, (:call, :big, :x)))),
                  (:line, 145, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp2, :x), (:call, :exp2, (:call, :big, :x)))),
                  (:line, 146, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :expm1, :x), (:call, :expm1, (:call, :big, :x)))),
                  (:line, 147, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :hypot, :x, :y), (:call, :hypot, (:call, :big, :x), (:call, :big, :y)))),
                  (:line, 148, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :hypot, :x, :x, :y), (:call, :hypot, (:call, :hypot, (:call, :big, :x), (:call, :big, :x)), (:call, :big, :y)))),
                  (:line, 149, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :hypot, :x, :x, :y, :y), (:call, :hypot, (:call, :hypot, (:call, :big, :x), (:call, :big, :x)), (:call, :hypot, (:call, :big, :y), (:call, :big, :y))))),
                  (:line, 150, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log, :x), (:call, :log, (:call, :big, :x)))),
                  (:line, 151, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log10, :x), (:call, :log10, (:call, :big, :x)))),
                  (:line, 152, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log1p, :x), (:call, :log1p, (:call, :big, :x)))),
                  (:line, 153, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log2, :x), (:call, :log2, (:call, :big, :x)))),
                  (:line, 154, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sin, :x), (:call, :sin, (:call, :big, :x)))),
                  (:line, 155, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sinh, :x), (:call, :sinh, (:call, :big, :x)))),
                  (:line, 156, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sqrt, :x), (:call, :sqrt, (:call, :big, :x)))),
                  (:line, 157, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tan, :x), (:call, :tan, (:call, :big, :x)))),
                  (:line, 158, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tanh, :x), (:call, :tanh, (:call, :big, :x))))
                )),
              (:line, 160, :none),
              (:macrocall, Symbol("@testset"), "Special values", (:block,
                  (:line, 161, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :T, (:call, ://, 1, 4)), (:call, :T, (:call, ://, 1, 2))), (:call, :T, (:call, ://, 1, 2)))),
                  (:line, 162, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :^, (:call, :T, (:call, ://, 1, 4)), 2), (:call, :T, (:call, ://, 1, 16)))),
                  (:line, 163, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acos, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 164, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :acosh, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 165, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :asin, (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 2)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 166, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan, (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 4)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 167, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan2, (:call, :T, 1), (:call, :T, 1)), (:call, :/, (:call, :T, :pi), 4)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 168, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 169, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 1)), (:call, :T, 1))),
                  (:line, 170, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cbrt, (:call, :T, 1000000000)), (:call, :T, 1000))),
                  (:line, 171, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :T, 0)), (:call, :T, 1))),
                  (:line, 172, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cos, (:call, :/, (:call, :T, :pi), 2)), (:call, :T, 0)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 173, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :cos, (:call, :T, :pi)), (:call, :T, -1))),
                  (:line, 174, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp, (:call, :T, 1)), (:call, :T, :e)), (:(=), :atol, (:call, :*, 10, (:call, :eps, :T)))),
                  (:line, 175, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp10, (:call, :T, 1)), (:call, :T, 10))),
                  (:line, 176, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :exp2, (:call, :T, 1)), (:call, :T, 2))),
                  (:line, 177, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :expm1, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 178, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :expm1, (:call, :T, 1)), (:call, :-, (:call, :T, :e), 1)), (:(=), :atol, (:call, :*, 10, (:call, :eps, :T)))),
                  (:line, 179, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :hypot, (:call, :T, 3), (:call, :T, 4)), (:call, :T, 5))),
                  (:line, 180, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 181, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log, :e, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 182, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log, (:call, :T, :e)), (:call, :T, 1)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 183, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log10, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 184, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log10, (:call, :T, 10)), (:call, :T, 1))),
                  (:line, 185, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log1p, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 186, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log1p, (:call, :-, (:call, :T, :e), 1)), (:call, :T, 1)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 187, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log2, (:call, :T, 1)), (:call, :T, 0))),
                  (:line, 188, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :log2, (:call, :T, 2)), (:call, :T, 1))),
                  (:line, 189, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 190, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sin, (:call, :/, (:call, :T, :pi), 2)), (:call, :T, 1))),
                  (:line, 191, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sin, (:call, :T, :pi)), (:call, :T, 0)), (:(=), :atol, (:call, :eps, :T))),
                  (:line, 192, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 193, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 1)), (:call, :T, 1))),
                  (:line, 194, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :sqrt, (:call, :T, 100000000)), (:call, :T, 10000))),
                  (:line, 195, :none),
                  (:macrocall, Symbol("@test"), (:call, :isequal, (:call, :tan, (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 196, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tan, (:call, :/, (:call, :T, :pi), 4)), (:call, :T, 1)), (:(=), :atol, (:call, :eps, :T)))
                )),
              (:line, 198, :none),
              (:macrocall, Symbol("@testset"), "Inverses", (:block,
                  (:line, 199, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :acos, (:call, :cos, :x)), :x)),
                  (:line, 200, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :acosh, (:call, :cosh, :x)), :x)),
                  (:line, 201, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :asin, (:call, :sin, :x)), :x)),
                  (:line, 202, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :^, (:call, :cbrt, :x), 3), :x)),
                  (:line, 203, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cbrt, (:call, :^, :x, 3)), :x)),
                  (:line, 204, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :asinh, (:call, :sinh, :x)), :x)),
                  (:line, 205, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan, (:call, :tan, :x)), :x)),
                  (:line, 206, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atan2, :x, :y), (:call, :atan, (:call, :/, :x, :y)))),
                  (:line, 207, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :atanh, (:call, :tanh, :x)), :x)),
                  (:line, 208, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cos, (:call, :acos, :x)), :x)),
                  (:line, 209, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cosh, (:call, :acosh, (:call, :+, 1, :x))), (:call, :+, 1, :x))),
                  (:line, 210, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp, (:call, :log, :x)), :x)),
                  (:line, 211, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp10, (:call, :log10, :x)), :x)),
                  (:line, 212, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp2, (:call, :log2, :x)), :x)),
                  (:line, 213, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :expm1, (:call, :log1p, :x)), :x)),
                  (:line, 214, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log, (:call, :exp, :x)), :x)),
                  (:line, 215, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log10, (:call, :exp10, :x)), :x)),
                  (:line, 216, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log1p, (:call, :expm1, :x)), :x)),
                  (:line, 217, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log2, (:call, :exp2, :x)), :x)),
                  (:line, 218, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sin, (:call, :asin, :x)), :x)),
                  (:line, 219, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sinh, (:call, :asinh, :x)), :x)),
                  (:line, 220, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :^, (:call, :sqrt, :x), 2), :x)),
                  (:line, 221, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sqrt, (:call, :^, :x, 2)), :x)),
                  (:line, 222, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tan, (:call, :atan, :x)), :x)),
                  (:line, 223, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tanh, (:call, :atanh, :x)), :x))
                )),
              (:line, 225, :none),
              (:macrocall, Symbol("@testset"), "Relations between functions", (:block,
                  (:line, 226, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cosh, :x), (:call, :/, (:call, :+, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
                  (:line, 227, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :-, (:call, :^, (:call, :cosh, :x), 2), (:call, :^, (:call, :sinh, :x), 2)), 1)),
                  (:line, 228, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :hypot, :x, :y), (:call, :sqrt, (:call, :+, (:call, :^, :x, 2), (:call, :^, :y, 2))))),
                  (:line, 229, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :+, (:call, :^, (:call, :sin, :x), 2), (:call, :^, (:call, :cos, :x), 2)), 1)),
                  (:line, 230, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :sinh, :x), (:call, :/, (:call, :-, (:call, :exp, :x), (:call, :exp, (:call, :-, :x))), 2))),
                  (:line, 231, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tan, :x), (:call, :/, (:call, :sin, :x), (:call, :cos, :x)))),
                  (:line, 232, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :tanh, :x), (:call, :/, (:call, :sinh, :x), (:call, :cosh, :x))))
                )),
              (:line, 234, :none),
              (:macrocall, Symbol("@testset"), "Edge cases", (:block,
                  (:line, 235, :none),
                  (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :log, (:call, :zero, :T)))),
                  (:line, 236, :none),
                  (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log, (:call, :convert, :T, :NaN)))),
                  (:line, 237, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log, (:call, :-, (:call, :one, :T)))),
                  (:line, 238, :none),
                  (:macrocall, Symbol("@test"), (:call, :isinf, (:call, :log1p, (:call, :-, (:call, :one, :T))))),
                  (:line, 239, :none),
                  (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log1p, (:call, :convert, :T, :NaN)))),
                  (:line, 240, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log1p, (:call, :convert, :T, -2.0))),
                  (:line, 241, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, 0), (:call, :T, 0)), (:call, :T, 0))),
                  (:line, 242, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :Inf)), (:call, :T, :Inf))),
                  (:line, 243, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :x)), (:call, :T, :Inf))),
                  (:line, 244, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:call, :hypot, (:call, :T, :Inf), (:call, :T, :NaN)), (:call, :T, :Inf))),
                  (:line, 245, :none),
                  (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :hypot, (:call, :T, :x), (:call, :T, :NaN))))
                ))
            )))
      )),
    (:line, 249, :none),
    (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp10, 5), (:call, :exp10, 5.0))),
    (:line, 250, :none),
    (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp10, (:call, ://, 50, 10)), (:call, :exp10, 5.0))),
    (:line, 251, :none),
    (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :log10, (:call, :exp10, :e)), :e)),
    (:line, 252, :none),
    (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :exp2, (:call, :Float16, 2.0)), (:call, :exp2, 2.0))),
    (:line, 253, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, :e), 1)),
    (:line, 255, :none),
    (:macrocall, Symbol("@testset"), "exp function", (:for, (:(=), :T, (:tuple, :Float64, :Float32)), (:block,
          (:line, 256, :none),
          (:macrocall, Symbol("@testset"), (:string, :T, " accuracy"), (:block,
              (:line, 257, :none),
              (:(=), :X, (:call, :map, :T, (:call, :vcat, (:(:), -10, 0.0002, 10), (:(:), -80, 0.001, 80), (:call, :^, 2.0, -27), (:call, :^, 2.0, -28), (:call, :^, 2.0, -14), (:call, :^, 2.0, -13)))),
              (:line, 258, :none),
              (:for, (:(=), :x, :X), (:block,
                  (:line, 259, :none),
                  (:(=), (:tuple, :y, :yb), (:tuple, (:call, :exp, :x), (:call, :exp, (:call, :big, :x)))),
                  (:line, 260, :none),
                  (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 1.0, (:call, :eps, (:call, :T, :yb)))))
                ))
            )),
          (:line, 263, :none),
          (:macrocall, Symbol("@testset"), (:string, :T, " edge cases"), (:block,
              (:line, 264, :none),
              (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :exp, (:call, :T, :NaN)))),
              (:line, 265, :none),
              (:macrocall, Symbol("@test"), (:call, :(===), (:call, :exp, (:call, :T, (:call, :-, :Inf))), (:call, :T, 0.0))),
              (:line, 266, :none),
              (:macrocall, Symbol("@test"), (:call, :(===), (:call, :exp, (:call, :T, :Inf)), (:call, :T, :Inf))),
              (:line, 267, :none),
              (:macrocall, Symbol("@test"), (:call, :(===), (:call, :exp, (:call, :T, 0.0)), (:call, :T, 1.0))),
              (:line, 268, :none),
              (:macrocall, Symbol("@test"), (:call, :(===), (:call, :exp, (:call, :T, 5000.0)), (:call, :T, :Inf))),
              (:line, 269, :none),
              (:macrocall, Symbol("@test"), (:call, :(===), (:call, :exp, (:call, :T, -5000.0)), (:call, :T, 0.0)))
            ))
        ))),
    (:line, 273, :none),
    (:macrocall, Symbol("@testset"), "test abstractarray trig fxns", (:block,
        (:line, 274, :none),
        (:(=), :TAA, (:call, :rand, 2, 2)),
        (:line, 275, :none),
        (:(=), :TAA, (:call, :/, (:call, :+, :TAA, (:.', :TAA)), 2.0)),
        (:line, 276, :none),
        (:(=), :STAA, (:call, :Symmetric, :TAA)),
        (:line, 277, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:., :atanh, (:tuple, :STAA))), (:., :atanh, (:tuple, :TAA)))),
        (:line, 278, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:., :asinh, (:tuple, :STAA))), (:., :asinh, (:tuple, :TAA)))),
        (:line, 279, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:., :acosh, (:tuple, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA)))))), (:., :acosh, (:tuple, (:call, :+, :TAA, (:call, :ones, :TAA)))))),
        (:line, 280, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:., :acsch, (:tuple, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA)))))), (:., :acsch, (:tuple, (:call, :+, :TAA, (:call, :ones, :TAA)))))),
        (:line, 281, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :full, (:., :acoth, (:tuple, (:call, :+, :STAA, (:call, :Symmetric, (:call, :ones, :TAA)))))), (:., :acoth, (:tuple, (:call, :+, :TAA, (:call, :ones, :TAA))))))
      )),
    (:line, 284, :none),
    (:macrocall, Symbol("@testset"), "check exp2(::Integer) matches exp2(::Float)", (:block,
        (:line, 285, :none),
        (:for, (:(=), :ii, (:(:), -2048, 2048)), (:block,
            (:line, 286, :none),
            (:(=), :expected, (:call, :exp2, (:call, :float, :ii))),
            (:line, 287, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int16, :ii)), :expected)),
            (:line, 288, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int32, :ii)), :expected)),
            (:line, 289, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int64, :ii)), :expected)),
            (:line, 290, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :Int128, :ii)), :expected)),
            (:line, 291, :none),
            (:if, (:call, :(>=), :ii, 0), (:block,
                (:line, 292, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt16, :ii)), :expected)),
                (:line, 293, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt32, :ii)), :expected)),
                (:line, 294, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt64, :ii)), :expected)),
                (:line, 295, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :exp2, (:call, :UInt128, :ii)), :expected))
              ))
          ))
      )),
    (:line, 300, :none),
    (:macrocall, Symbol("@testset"), "deg2rad/rad2deg", (:block,
        (:line, 301, :none),
        (:macrocall, Symbol("@testset"), (:string, :T), (:for, (:(=), :T, (:tuple, :Int, :Float64, :BigFloat)), (:block,
              (:line, 302, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :deg2rad, (:call, :T, 180)), (:call, :*, 1, :pi))),
              (:line, 303, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:., :deg2rad, (:tuple, (:ref, :T, 45, 60))), (:vect, (:call, :/, :pi, (:call, :T, 4)), (:call, :/, :pi, (:call, :T, 3))))),
              (:line, 304, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:., :rad2deg, (:tuple, (:vect, (:call, :/, :pi, (:call, :T, 4)), (:call, :/, :pi, (:call, :T, 3))))), (:vect, 45, 60))),
              (:line, 305, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :rad2deg, (:call, :*, (:call, :T, 1), :pi)), 180)),
              (:line, 306, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :rad2deg, (:call, :T, 1)), (:call, :rad2deg, true))),
              (:line, 307, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :deg2rad, (:call, :T, 1)), (:call, :deg2rad, true)))
            )))
      )),
    (:line, 311, :none),
    (:macrocall, Symbol("@testset"), "degree-based trig functions", (:block,
        (:line, 312, :none),
        (:macrocall, Symbol("@testset"), (:string, :T), (:for, (:(=), :T, (:tuple, :Float32, :Float64, (:curly, :Rational, :Int))), (:block,
              (:line, 313, :none),
              (:(=), :fT, (:call, :typeof, (:call, :float, (:call, :one, :T)))),
              (:line, 314, :none),
              (:for, (:(=), :x, (:(:), -400, 40, 400)), (:block,
                  (:line, 315, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:(::), (:call, :sind, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :sin, (:call, :*, (:call, :/, :pi, 180), :x)))), (:(=), :atol, (:call, :eps, (:call, :deg2rad, (:call, :convert, :fT, :x))))),
                  (:line, 316, :none),
                  (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:(::), (:call, :cosd, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :cos, (:call, :*, (:call, :/, :pi, 180), :x)))), (:(=), :atol, (:call, :eps, (:call, :deg2rad, (:call, :convert, :fT, :x)))))
                )),
              (:line, 318, :none),
              (:macrocall, Symbol("@testset"), "sind", (:block,
                  (:line, 319, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 0.0)), :fT), (:call, :zero, :fT))),
                  (:line, 320, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 180.0)), :fT), (:call, :zero, :fT))),
                  (:line, 321, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, 360.0)), :fT), (:call, :zero, :fT))),
                  (:line, 322, :none),
                  (:&&, (:call, :(!=), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -0.0)), :fT), (:call, :-, (:call, :zero, :fT))))),
                  (:line, 323, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -180.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
                  (:line, 324, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sind, (:call, :convert, :T, -360.0)), :fT), (:call, :-, (:call, :zero, :fT))))
                )),
              (:line, 326, :none),
              (:macrocall, Symbol("@testset"), "cosd", (:block,
                  (:line, 327, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, 90)), :fT), (:call, :zero, :fT))),
                  (:line, 328, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, 270)), :fT), (:call, :zero, :fT))),
                  (:line, 329, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, -90)), :fT), (:call, :zero, :fT))),
                  (:line, 330, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cosd, (:call, :convert, :T, -270)), :fT), (:call, :zero, :fT)))
                )),
              (:line, 333, :none),
              (:macrocall, Symbol("@testset"), "sinpi and cospi", (:block,
                  (:line, 334, :none),
                  (:for, (:(=), :x, (:(:), -3, 0.3, 3)), (:block,
                      (:line, 335, :none),
                      (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:(::), (:call, :sinpi, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :sin, (:call, :*, :pi, :x)))), (:(=), :atol, (:call, :eps, (:call, :*, :pi, (:call, :convert, :fT, :x))))),
                      (:line, 336, :none),
                      (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:(::), (:call, :cospi, (:call, :convert, :T, :x)), :fT), (:call, :convert, :fT, (:call, :cos, (:call, :*, :pi, :x)))), (:(=), :atol, (:call, :eps, (:call, :*, :pi, (:call, :convert, :fT, :x)))))
                    )),
                  (:line, 339, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 0.0)), :fT), (:call, :zero, :fT))),
                  (:line, 340, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 1.0)), :fT), (:call, :zero, :fT))),
                  (:line, 341, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, 2.0)), :fT), (:call, :zero, :fT))),
                  (:line, 342, :none),
                  (:&&, (:call, :(!=), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -0.0)), :fT), (:call, :-, (:call, :zero, :fT))))),
                  (:line, 343, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -1.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
                  (:line, 344, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :sinpi, (:call, :convert, :T, -2.0)), :fT), (:call, :-, (:call, :zero, :fT)))),
                  (:line, 345, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :sinpi, (:call, :convert, :T, :Inf))),
                  (:line, 347, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, 0.5)), :fT), (:call, :zero, :fT))),
                  (:line, 348, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, 1.5)), :fT), (:call, :zero, :fT))),
                  (:line, 349, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, -0.5)), :fT), (:call, :zero, :fT))),
                  (:line, 350, :none),
                  (:macrocall, Symbol("@test"), (:call, :(===), (:(::), (:call, :cospi, (:call, :convert, :T, -1.5)), :fT), (:call, :zero, :fT))),
                  (:line, 351, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :cospi, (:call, :convert, :T, :Inf)))
                )),
              (:line, 353, :none),
              (:macrocall, Symbol("@testset"), "Check exact values", (:block,
                  (:line, 354, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sind, (:call, :convert, :T, 30)), 0.5)),
                  (:line, 355, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosd, (:call, :convert, :T, 60)), 0.5)),
                  (:line, 356, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sind, (:call, :convert, :T, 150)), 0.5)),
                  (:line, 357, :none),
                  (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, (:call, :/, (:call, :one, :T), (:call, :convert, :T, 6))), 0.5)),
                  (:line, 358, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :sind, (:call, :convert, :T, :Inf))),
                  (:line, 359, :none),
                  (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :cosd, (:call, :convert, :T, :Inf))),
                  (:line, 360, :none),
                  (:&&, (:call, :(!=), :T, :Float32), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, (:call, :/, (:call, :one, :T), (:call, :convert, :T, 3))), 0.5))),
                  (:line, 361, :none),
                  (:&&, (:call, :(==), :T, (:curly, :Rational, :Int)), (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, (:call, ://, 5, 6)), 0.5)))
                ))
            )))
      )),
    (:line, 366, :none),
    (:macrocall, Symbol("@testset"), "Integer args to sinpi/cospi/sinc/cosc", (:block,
        (:line, 367, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, 1), 0)),
        (:line, 368, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinpi, -1), 0)),
        (:line, 369, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, 1), -1)),
        (:line, 370, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cospi, 2), 1)),
        (:line, 372, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, 1), 0)),
        (:line, 373, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, (:call, :complex, 1, 0)), 0)),
        (:line, 374, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, 0), 1)),
        (:line, 375, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sinc, :Inf), 0)),
        (:line, 376, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, 1), -1)),
        (:line, 377, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, 0), 0)),
        (:line, 378, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, (:call, :complex, 1, 0)), -1)),
        (:line, 379, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :cosc, :Inf), 0))
      )),
    (:line, 382, :none),
    (:macrocall, Symbol("@testset"), "trig function type stability", (:block,
        (:line, 383, :none),
        (:macrocall, Symbol("@testset"), (:string, :T, " ", :f), (:for, (:block,
              (:(=), :T, (:tuple, :Float32, :Float64, :BigFloat)),
              (:(=), :f, (:tuple, :sind, :cosd, :sinpi, :cospi))
            ), (:block,
              (:line, 384, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, (:., :Base, (:quote, #QuoteNode
                        :return_types
                      )), :f, (:curly, :Tuple, :T)), (:vect, :T)))
            )))
      )),
    (:line, 388, :none),
    (:macrocall, Symbol("@testset"), "beta, lbeta", (:block,
        (:line, 389, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :beta, (:call, :/, 3, 2), (:call, :/, 7, 2)), (:call, :/, (:call, :*, 5, :Ï€), 128))),
        (:line, 390, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :beta, 3, 5), (:call, :/, 1, 105))),
        (:line, 391, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lbeta, 5, 4), (:call, :log, (:call, :beta, 5, 4)))),
        (:line, 392, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :beta, 5, 4), (:call, :beta, 4, 5))),
        (:line, 393, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :beta, (:call, :/, -1, 2), 3), :â‰ˆ, (:call, :beta, (:call, :+, (:call, :/, -1, 2), (:call, :*, 0, :im)), (:call, :+, 3, (:call, :*, 0, :im))), :â‰ˆ, (:call, :/, -16, 3))),
        (:line, 394, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lbeta, (:call, :/, -1, 2), 3), (:call, :log, (:call, :/, 16, 3)))),
        (:line, 395, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :beta, (:call, :Float32, 5), (:call, :Float32, 4)), (:call, :beta, (:call, :Float32, 4), (:call, :Float32, 5)))),
        (:line, 396, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :beta, 3, 5), (:call, :beta, (:call, :+, 3, (:call, :*, 0, :im)), (:call, :+, 5, (:call, :*, 0, :im))))),
        (:line, 397, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :beta, (:call, :+, 3.2, (:call, :*, 0.1, :im)), (:call, :+, 5.3, (:call, :*, 0.3, :im))), :â‰ˆ, (:call, :exp, (:call, :lbeta, (:call, :+, 3.2, (:call, :*, 0.1, :im)), (:call, :+, 5.3, (:call, :*, 0.3, :im)))), :â‰ˆ, (:call, :-, 0.006346452477822695, (:call, :*, 0.0016949538484196452, :im))))
      )),
    (:line, 404, :none),
    (:(=), (:call, :relerr, :z, :x), (:block,
        (:line, 404, :none),
        (:if, (:call, :(==), :z, :x), 0.0, (:call, :/, (:call, :abs, (:call, :-, :z, :x)), (:call, :abs, :x)))
      )),
    (:line, 405, :none),
    (:(=), (:call, :relerrc, :z, :x), (:block,
        (:line, 405, :none),
        (:call, :max, (:call, :relerr, (:call, :real, :z), (:call, :real, :x)), (:call, :relerr, (:call, :imag, :z), (:call, :imag, :x)))
      )),
    (:line, 406, :none),
    (:(=), (:call, :â‰…, :a, :b), (:block,
        (:line, 406, :none),
        (:call, :â‰¤, (:call, :relerrc, :a, :b), 1.0e-13)
      )),
    (:line, 408, :none),
    (:macrocall, Symbol("@testset"), "gamma and friends", (:block,
        (:line, 409, :none),
        (:macrocall, Symbol("@testset"), "gamma, lgamma (complex argument)", (:block,
            (:line, 410, :none),
            (:if, (:call, :(==), (:., (:., :Base, (:quote, #QuoteNode
                      :Math
                    )), (:quote, #QuoteNode
                    :libm
                  )), "libopenlibm"), (:block,
                (:line, 411, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:., :gamma, (:tuple, (:typed_vcat, :Float64, (:(:), 1, 25)))), (:., :gamma, (:tuple, (:(:), 1, 25)))))
              ), (:block,
                (:line, 413, :none),
                (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:., :gamma, (:tuple, (:typed_vcat, :Float64, (:(:), 1, 25)))), (:., :gamma, (:tuple, (:(:), 1, 25)))))
              )),
            (:line, 415, :none),
            (:for, (:(=), :elty, (:tuple, :Float32, :Float64)), (:block,
                (:line, 416, :none),
                (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :gamma, (:call, :convert, :elty, (:call, :/, 1, 2))), (:call, :convert, :elty, (:call, :sqrt, :Ï€)))),
                (:line, 417, :none),
                (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :gamma, (:call, :convert, :elty, (:call, :/, -1, 2))), (:call, :convert, :elty, (:call, :*, -2, (:call, :sqrt, :Ï€))))),
                (:line, 418, :none),
                (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lgamma, (:call, :convert, :elty, (:call, :/, -1, 2))), (:call, :convert, :elty, (:call, :log, (:call, :abs, (:call, :gamma, (:call, :/, -1, 2)))))))
              )),
            (:line, 420, :none),
            (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lgamma, (:call, :+, 1.4, (:call, :*, 3.7, :im))), (:call, :+, -3.7094025330996843, (:call, :*, 2.456809050276865, :im)))),
            (:line, 421, :none),
            (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lgamma, (:call, :+, 1.4, (:call, :*, 3.7, :im))), (:call, :log, (:call, :gamma, (:call, :+, 1.4, (:call, :*, 3.7, :im)))))),
            (:line, 422, :none),
            (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :lgamma, (:call, :+, -4.2, (:call, :*, 0, :im))), (:call, :-, (:call, :lgamma, -4.2), (:call, :*, (:call, :*, 5, :pi), :im)))),
            (:line, 423, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :factorial, 3.0), :(==), (:call, :gamma, 4.0), :(==), (:call, :factorial, 3))),
            (:line, 424, :none),
            (:for, (:(=), :x, (:tuple, 3.2, (:call, :+, 2, (:call, :*, 1, :im)), (:call, ://, 3, 2), (:call, :+, 3.2, (:call, :*, 0.1, :im)))), (:block,
                (:line, 425, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :factorial, :x), (:call, :gamma, (:call, :+, 1, :x))))
              )),
            (:line, 427, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :lfact, 0), :(==), (:call, :lfact, 1), :(==), 0)),
            (:line, 428, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :lfact, 2), (:call, :lgamma, 3))),
            (:line, 430, :none),
            (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :lfact, -3)),
            (:line, 431, :none),
            (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :lfact, 1.0))
          )),
        (:line, 435, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :*, -300, :im)), (:call, :-, -473.1718507425924, (:call, :*, 1410.3490664555823, :im)))),
        (:line, 436, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, 3.099), :â‰…, (:call, :lgamma, (:call, :+, 3.099, (:call, :*, 0, :im))), :â‰…, 0.7864137469005581)),
        (:line, 437, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, 1.15), :â‰…, (:call, :lgamma, (:call, :+, 1.15, (:call, :*, 0, :im))), :â‰…, -0.06930620867104688)),
        (:line, 438, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, 0.89), :â‰…, (:call, :lgamma, (:call, :+, 0.89, (:call, :*, 0, :im))), :â‰…, 0.07402217395808143)),
        (:line, 439, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, 0.91), :â‰…, (:call, :lgamma, (:call, :+, 0.91, (:call, :*, 0, :im))), :â‰…, 0.05892256762383238)),
        (:line, 440, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, 0.01), :â‰…, (:call, :lgamma, (:call, :+, 0.01, (:call, :*, 0, :im))), :â‰…, 4.599479878042022)),
        (:line, 441, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :-, -3.4, (:call, :*, 0.1, :im))), (:call, :+, -1.173335332206478, (:call, :*, 12.331465501247827, :im)))),
        (:line, 442, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :-, -13.4, (:call, :*, 0.1, :im))), (:call, :+, -22.457344044212828, (:call, :*, 43.62056007598229, :im)))),
        (:line, 443, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, -13.4, (:call, :*, 0.0, :im))), :â‰…, (:call, :conj, (:call, :lgamma, (:call, :-, -13.4, (:call, :*, 0.0, :im)))), :â‰…, (:call, :-, -22.404285036964893, (:call, :*, 43.982297150257104, :im)))),
        (:line, 444, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, -13.4, (:call, :*, 8, :im))), (:call, :-, -44.705388949497035, (:call, :*, 22.208139404160647, :im)))),
        (:line, 445, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, 1, (:call, :exp2, -20))), :â‰…, (:call, :lgamma, (:call, :+, 1, (:call, :exp2, -20), (:call, :*, 0, :im))), :â‰…, -5.504750066148867e-7)),
        (:line, 446, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, 1, (:call, :exp2, -20), (:call, :*, (:call, :exp2, -19), :im))), (:call, :-, -5.504779987283533e-7, (:call, :*, 1.1009485171695646e-6, :im)))),
        (:line, 447, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, -300, (:call, :*, 2, :im))), (:call, :-, -1419.3444991797242, (:call, :*, 932.6376812076187, :im)))),
        (:line, 448, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, 300, (:call, :*, 2, :im))), (:call, :+, 1409.1953897299177, (:call, :*, 11.404244628210263, :im)))),
        (:line, 449, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :-, 1, (:call, :*, 6, :im))), (:call, :-, -7.60995969295068, (:call, :*, 5.5220531255147245, :im)))),
        (:line, 450, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :-, 1, (:call, :*, 8, :im))), (:call, :-, -10.607711310314583, (:call, :*, 9.410508380311608, :im)))),
        (:line, 451, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, 1, (:call, :*, 6.5, :im))), :â‰…, (:call, :conj, (:call, :lgamma, (:call, :-, 1, (:call, :*, 6.5, :im)))), :â‰…, (:call, :+, -8.35533650251136, (:call, :*, 6.439281615975983, :im)))),
        (:line, 452, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, 1, (:call, :*, 1, :im))), :â‰…, (:call, :conj, (:call, :lgamma, (:call, :-, 1, (:call, :*, 1, :im)))), :â‰…, (:call, :-, -0.6509231993018564, (:call, :*, 0.3016403204675332, :im)))),
        (:line, 453, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, (:call, :*, (:call, :-, :pi), 1.0e7), (:call, :*, 6, :im))), (:call, :-, -5.1091175889250576e8, (:call, :*, 9.86959420047366e7, :im)))),
        (:line, 454, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, (:call, :*, (:call, :-, :pi), 1.0e7), (:call, :*, 8, :im))), (:call, :-, -5.1091176517569065e8, (:call, :*, 9.869590747908549e7, :im)))),
        (:line, 455, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, (:call, :*, (:call, :-, :pi), 1.0e14), (:call, :*, 6, :im))), (:call, :-, -1.0172766411995622e16, (:call, :*, 9.869604401087371e14, :im)))),
        (:line, 456, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, (:call, :*, (:call, :-, :pi), 1.0e14), (:call, :*, 8, :im))), (:call, :-, -1.0172766411995628e16, (:call, :*, 9.869604401086704e14, :im)))),
        (:line, 457, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, 2.05, (:call, :*, 0.03, :im))), :â‰…, (:call, :conj, (:call, :lgamma, (:call, :-, 2.05, (:call, :*, 0.03, :im)))), :â‰…, (:call, :+, 0.021655709385326113, (:call, :*, 0.013637790845330344, :im)))),
        (:line, 458, :none),
        (:macrocall, Symbol("@test"), (:call, :â‰…, (:call, :lgamma, (:call, :+, 2, (:call, :exp2, -20), (:call, :*, (:call, :exp2, -19), :im))), (:call, :+, 4.03197681916769e-7, (:call, :*, 8.063982966529535e-7, :im)))),
        (:line, 460, :none),
        (:macrocall, Symbol("@testset"), "lgamma for non-finite arguments", (:block,
            (:line, 461, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :+, :Inf, (:call, :*, 0, :im))), (:call, :+, :Inf, (:call, :*, 0, :im)))),
            (:line, 462, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :-, :Inf, (:call, :*, 0.0, :im))), (:call, :-, :Inf, (:call, :*, 0.0, :im)))),
            (:line, 463, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :+, :Inf, (:call, :*, 1, :im))), (:call, :+, :Inf, (:call, :*, :Inf, :im)))),
            (:line, 464, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :-, :Inf, (:call, :*, 1, :im))), (:call, :-, :Inf, (:call, :*, :Inf, :im)))),
            (:line, 465, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :+, (:call, :-, :Inf), (:call, :*, 0.0, :im))), (:call, :-, (:call, :-, :Inf), (:call, :*, :Inf, :im)))),
            (:line, 466, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :-, (:call, :-, :Inf), (:call, :*, 0.0, :im))), (:call, :+, (:call, :-, :Inf), (:call, :*, :Inf, :im)))),
            (:line, 467, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :*, :Inf, :im)), (:call, :+, (:call, :-, :Inf), (:call, :*, :Inf, :im)))),
            (:line, 468, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :lgamma, (:call, :*, (:call, :-, :Inf), :im)), (:call, :-, (:call, :-, :Inf), (:call, :*, :Inf, :im)))),
            (:line, 469, :none),
            (:macrocall, Symbol("@test"), (:comparison, (:call, :lgamma, (:call, :+, :Inf, (:call, :*, :Inf, :im))), :(===), (:call, :lgamma, (:call, :+, :NaN, (:call, :*, 0, :im))), :(===), (:call, :lgamma, (:call, :*, :NaN, :im)), :(===), (:call, :+, :NaN, (:call, :*, :NaN, :im))))
          ))
      )),
    (:line, 473, :none),
    (:macrocall, Symbol("@testset"), "subnormal flags", (:block,
        (:line, 475, :none),
        (:macrocall, Symbol("@test"), (:call, :any, (:call, :.==, (:call, :set_zero_subnormals, true), (:vect, false, true)))),
        (:line, 476, :none),
        (:macrocall, Symbol("@test"), (:call, :any, (:call, :.==, (:call, :get_zero_subnormals), (:vect, false, true)))),
        (:line, 477, :none),
        (:macrocall, Symbol("@test"), (:call, :set_zero_subnormals, false)),
        (:line, 478, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :get_zero_subnormals)))
      )),
    (:line, 481, :none),
    (:macrocall, Symbol("@testset"), "evalpoly", (:block,
        (:line, 482, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:macrocall, Symbol("@evalpoly"), 2, 3, 4, 5, 6), :(==), (:call, :+, 3, (:call, :*, 2, (:call, :+, 4, (:call, :*, 2, (:call, :+, 5, (:call, :*, 2, 6)))))), :(==), (:macrocall, Symbol("@evalpoly"), (:call, :+, 2, (:call, :*, 0, :im)), 3, 4, 5, 6))),
        (:line, 483, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:let, (:block,
                (:line, 484, :none),
                (:macrocall, Symbol("@evalpoly"), (:block,
                    (:line, 485, :none),
                    (:+=, :evalcounts, 1),
                    (:line, 486, :none),
                    4
                  ), 1, 2, 3, 4, 5),
                (:line, 488, :none),
                :evalcounts
              ), (:(=), :evalcounts, 0)), 1)),
        (:line, 490, :none),
        (:(=), :a0, 1),
        (:line, 491, :none),
        (:(=), :a1, 2),
        (:line, 492, :none),
        (:(=), :c, 3),
        (:line, 493, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:macrocall, Symbol("@evalpoly"), :c, :a0, :a1), 7))
      )),
    (:line, 496, :none),
    (:macrocall, Symbol("@testset"), "cis", (:block,
        (:line, 497, :none),
        (:for, (:(=), :z, (:tuple, 1.234, (:call, :+, 1.234, (:call, :*, 5.678, :im)))), (:block,
            (:line, 498, :none),
            (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:call, :cis, :z), (:call, :exp, (:call, :*, :im, :z))))
          )),
        (:line, 500, :none),
        (:let, (:block,
            (:line, 501, :none),
            (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:., :cis, (:tuple, :z)), (:., :exp, (:tuple, (:call, :*, :im, :z)))))
          ), (:(=), :z, (:vect, 1.234, 5.678)))
      )),
    (:line, 505, :none),
    (:macrocall, Symbol("@testset"), "modf", (:block,
        (:line, 506, :none),
        (:macrocall, Symbol("@testset"), (:string, :elty), (:for, (:(=), :elty, (:tuple, :Float16, :Float32, :Float64)), (:block,
              (:line, 507, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:ref, (:call, :modf, (:call, :convert, :elty, 1.2)), 1), (:call, :convert, :elty, 0.2))),
              (:line, 508, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:ref, (:call, :modf, (:call, :convert, :elty, 1.2)), 2), (:call, :convert, :elty, 1.0))),
              (:line, 509, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:ref, (:call, :modf, (:call, :convert, :elty, 1.0)), 1), (:call, :convert, :elty, 0.0))),
              (:line, 510, :none),
              (:macrocall, Symbol("@test"), (:call, :â‰ˆ, (:ref, (:call, :modf, (:call, :convert, :elty, 1.0)), 2), (:call, :convert, :elty, 1.0)))
            )))
      )),
    (:line, 514, :none),
    (:macrocall, Symbol("@testset"), "frexp", (:block,
        (:line, 515, :none),
        (:macrocall, Symbol("@testset"), (:string, :elty), (:for, (:(=), :elty, (:tuple, :Float16, :Float32, :Float64)), (:block,
              (:line, 516, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :convert, :elty, 0.5)), (:tuple, 0.5, 0))),
              (:line, 517, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :convert, :elty, 4.0)), (:tuple, 0.5, 3))),
              (:line, 518, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :frexp, (:call, :convert, :elty, 10.5)), (:tuple, 0.65625, 4)))
            )))
      )),
    (:line, 522, :none),
    (:macrocall, Symbol("@testset"), "log/log1p", (:block,
        (:line, 524, :none),
        (:(=), :X, (:call, :rand, 100)),
        (:line, 525, :none),
        (:for, (:(=), :x, :X), (:block,
            (:line, 526, :none),
            (:for, (:(=), :n, (:(:), -5, 5)), (:block,
                (:line, 527, :none),
                (:(=), :xn, (:call, :ldexp, :x, :n)),
                (:line, 529, :none),
                (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
                    (:line, 530, :none),
                    (:(=), :xt, (:call, :T, :x)),
                    (:line, 532, :none),
                    (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                                :Math
                              )), (:quote, #QuoteNode
                              :JuliaLibm
                            )), (:quote, #QuoteNode
                            :log
                          )), :xt)),
                    (:line, 533, :none),
                    (:(=), :yb, (:call, :log, (:call, :big, :xt))),
                    (:line, 534, :none),
                    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb))))),
                    (:line, 536, :none),
                    (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                                :Math
                              )), (:quote, #QuoteNode
                              :JuliaLibm
                            )), (:quote, #QuoteNode
                            :log1p
                          )), :xt)),
                    (:line, 537, :none),
                    (:(=), :yb, (:call, :log1p, (:call, :big, :xt))),
                    (:line, 538, :none),
                    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb))))),
                    (:line, 540, :none),
                    (:if, (:call, :(<=), :n, 0), (:block,
                        (:line, 541, :none),
                        (:(=), :y, (:call, (:., (:., (:., :Base, (:quote, #QuoteNode
                                    :Math
                                  )), (:quote, #QuoteNode
                                  :JuliaLibm
                                )), (:quote, #QuoteNode
                                :log1p
                              )), (:call, :-, :xt))),
                        (:line, 542, :none),
                        (:(=), :yb, (:call, :log1p, (:call, :big, (:call, :-, :xt)))),
                        (:line, 543, :none),
                        (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, :y, :yb)), (:call, :*, 0.56, (:call, :eps, (:call, :T, :yb)))))
                      ))
                  ))
              ))
          )),
        (:line, 549, :none),
        (:for, (:(=), :n, (:(:), 0, 28)), (:block,
            (:line, 550, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, 2, :n)), :n))
          )),
        (:line, 552, :none),
        (:call, :setprecision, (:->, (:tuple,), (:block,
              (:line, 553, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 100)), 100)),
              (:line, 554, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 200)), 200)),
              (:line, 555, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 300)), 300)),
              (:line, 556, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, 2, (:call, :^, (:call, :big, 2), 400)), 400))
            )), 10000),
        (:line, 559, :none),
        (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
            (:line, 560, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log, (:call, :zero, :T)), (:call, :-, :Inf))),
            (:line, 561, :none),
            (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log, :NaN))),
            (:line, 562, :none),
            (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log, (:call, :-, (:call, :one, :T)))),
            (:line, 563, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :log1p, (:call, :-, (:call, :one, :T))), (:call, :-, :Inf))),
            (:line, 564, :none),
            (:macrocall, Symbol("@test"), (:call, :isnan, (:call, :log1p, :NaN))),
            (:line, 565, :none),
            (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :log1p, (:call, :*, -2, (:call, :one, :T))))
          ))
      )),
    (:line, 569, :none),
    (:macrocall, Symbol("@testset"), "vectorization of 2-arg functions", (:block,
        (:line, 570, :none),
        (:(=), :binary_math_functions, (:vect, :copysign, :flipsign, :log, :atan2, :hypot, :max, :min, :beta, :lbeta)),
        (:line, 574, :none),
        (:macrocall, Symbol("@testset"), (:string, :f), (:for, (:(=), :f, :binary_math_functions), (:block,
              (:line, 575, :none),
              (:(=), :x, (:(=), :y, 2)),
              (:line, 576, :none),
              (:(=), :v, (:vect, (:call, :f, :x, :y))),
              (:line, 577, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:., :f, (:tuple, (:vect, :x), :y)), :v)),
              (:line, 578, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:., :f, (:tuple, :x, (:vect, :y))), :v)),
              (:line, 579, :none),
              (:macrocall, Symbol("@test"), (:call, :(==), (:., :f, (:tuple, (:vect, :x), (:vect, :y))), :v))
            )))
      )),
    (:line, 583, :none),
    (:macrocall, Symbol("@testset"), "issues #3024, #12822", (:block,
        (:line, 584, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, 2, -2)),
        (:line, 585, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, -2, 2.2)),
        (:line, 586, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, -2.0, 2.2)),
        (:line, 587, :none),
        (:macrocall, Symbol("@test_throws"), :DomainError, (:call, :^, false, -2)),
        (:line, 588, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :^, 1, -2), :(===), (:call, :^, -1, -2), :(===), 1)),
        (:line, 589, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, -1, -3), -1)),
        (:line, 590, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :^, true, -2), true))
      )),
    (:line, 593, :none),
    (:macrocall, Symbol("@testset"), "issue #13748", (:block,
        (:line, 594, :none),
        (:let, (:block,
            (:line, 594, :none),
            (:(=), :B, (:vcat, (:row, 5, 6), (:row, 7, 8))),
            (:line, 594, :none),
            (:(=), :C, (:vcat, (:row, 9, 10), (:row, 11, 12))),
            (:line, 595, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :muladd, :A, :B, :C), (:call, :+, (:call, :*, :A, :B), :C)))
          ), (:(=), :A, (:vcat, (:row, 1, 2), (:row, 3, 4))))
      )),
    (:line, 599, :none),
    (:macrocall, Symbol("@testset"), "issue #19872", (:block,
        (:line, 600, :none),
        (:(=), (:call, :f19872a, :x), (:block,
            (:line, 600, :none),
            (:call, :^, :x, 5)
          )),
        (:line, 601, :none),
        (:(=), (:call, :f19872b, :x), (:block,
            (:line, 601, :none),
            (:call, :^, :x, -1024)
          )),
        (:line, 602, :none),
        (:macrocall, Symbol("@test"), (:comparison, 0, :<, (:call, :f19872b, 2.0), :<, 1.0e-300)),
        (:line, 603, :none),
        (:macrocall, Symbol("@test"), (:call, :issubnormal, (:call, :^, 2.0, -1024))),
        (:line, 604, :none),
        (:macrocall, Symbol("@test"), (:call, :issubnormal, (:call, :f19872b, 2.0))),
        (:line, 605, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issubnormal, (:call, :f19872b, 0.0)))),
        (:line, 606, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :f19872a, 2.0), 32.0)),
        (:line, 607, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issubnormal, (:call, :f19872a, 2.0)))),
        (:line, 608, :none),
        (:macrocall, Symbol("@test"), (:call, :!, (:call, :issubnormal, 0.0)))
      )),
    (:line, 612, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :invoke, :cbrt, (:curly, :Tuple, :AbstractFloat), -1.0), -1.0)),
    (:line, 614, :none),
    (:macrocall, Symbol("@testset"), "promote Float16 irrational #15359", (:block,
        (:line, 615, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :*, (:call, :Float16, 0.5), :pi)), :Float16))
      ))
  ))