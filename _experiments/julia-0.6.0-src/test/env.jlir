(:quote, (:block,
    (:line, 3, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :âˆˆ, "f=a=k=e=n=a=m=e", (:call, :keys, :ENV)))),
    (:line, 6, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:(=), (:ref, :ENV, "bad\0name"), "ok")),
    (:line, 7, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:(=), (:ref, :ENV, "okname"), "bad\0val")),
    (:line, 8, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, (:., :Sys, (:quote, #QuoteNode
            :set_process_title
          )), "bad\0title")),
    (:line, 10, :none),
    (:call, :withenv, (:->, (:tuple,), (:block,
          (:line, 11, :none),
          (:macrocall, Symbol("@test_throws"), :ArgumentError, (:ref, :ENV, "bad\0cat"))
        )), (:call, :(=>), "bad", "dog")),
    (:line, 15, :none),
    (:call, :withenv, (:->, (:tuple,), (:block,
          (:line, 16, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :ENV, "TEST"), "nonempty"))
        )), (:call, :(=>), "TEST", "nonempty")),
    (:line, 18, :none),
    (:call, :withenv, (:->, (:tuple,), (:block,
          (:line, 19, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :ENV, "TEST"), ""))
        )), (:call, :(=>), "TEST", "")),
    (:line, 22, :none),
    (:let, (:block,
        (:line, 23, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, :c, :Vector)),
        (:line, 24, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :ENV), (:call, :length, :c))),
        (:line, 25, :none),
        (:macrocall, Symbol("@test"), (:||, (:call, :isempty, :ENV), (:call, :in, (:call, :first, :ENV), :c)))
      ), (:(=), :c, (:call, :collect, :ENV))),
    (:line, 29, :none),
    (:(=), :key, (:call, :randstring, 25)),
    (:line, 30, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :haskey, :ENV, :key))),
    (:line, 31, :none),
    (:macrocall, Symbol("@test_throws"), :KeyError, (:ref, :ENV, :key)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :get, :ENV, :key, "default"), "default")),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :>, (:call, :length, :ENV), 1)),
    (:line, 36, :none),
    (:(=), (:tuple, :k1, :k2), (:tuple, "__test__", "__test1__")),
    (:line, 37, :none),
    (:call, :withenv, (:->, (:tuple,), (:block,
          (:line, 38, :none),
          (:(=), (:tuple, :b_k1, :b_k2), (:tuple, false, false)),
          (:line, 39, :none),
          (:for, (:(=), (:tuple, :k, :v), :ENV), (:block,
              (:line, 40, :none),
              (:if, (:call, :(==), :k, :k1), (:block,
                  (:line, 41, :none),
                  (:(=), :b_k1, true)
                ), (:block,
                  (:line, 42, :none),
                  (:if, (:call, :(==), :k, :k2), (:block,
                      (:line, 43, :none),
                      (:(=), :b_k2, true)
                    ))
                ))
            )),
          (:line, 46, :none),
          (:macrocall, Symbol("@test"), (:&&, :b_k1, :b_k2)),
          (:line, 47, :none),
          (:(=), :io, (:call, :IOBuffer)),
          (:line, 48, :none),
          (:call, :show, :io, :ENV),
          (:line, 49, :none),
          (:(=), :s, (:call, :String, (:call, :take!, :io))),
          (:line, 50, :none),
          (:macrocall, Symbol("@test"), (:call, :contains, :s, (:string, :k1, "=", :k1))),
          (:line, 51, :none),
          (:macrocall, Symbol("@test"), (:call, :contains, :s, (:string, :k2, "=", :k2))),
          (:line, 53, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :pop!, :ENV, :k1), :k1)),
          (:line, 54, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :haskey, :ENV, :k1))),
          (:line, 55, :none),
          (:(=), (:ref, :ENV, :k1), :k1),
          (:line, 56, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :pop!, :ENV, :k1), :k1)),
          (:line, 57, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :pop!, :ENV, :k1, "not_there"), "not_there")),
          (:line, 59, :none),
          (:(=), (:ref, :ENV, :k1), :k1),
          (:line, 60, :none),
          (:macrocall, Symbol("@test"), (:call, :(==), (:call, :delete!, :ENV, :k1), :ENV)),
          (:line, 61, :none),
          (:macrocall, Symbol("@test"), (:call, :!, (:call, :haskey, :ENV, :k1)))
        )), (:call, :(=>), :k1, :k1), (:call, :(=>), :k2, :k2)),
    (:line, 65, :none),
    (:macrocall, Symbol("@test"), (:call, :withenv, (:->, (:tuple,), (:block,
            (:line, 65, :none),
            true
          )), (:..., (:call, (:curly, :Dict, :Any, :Any))))),
    (:line, 68, :none),
    (:for, (:(=), (:tuple, :k, :v), :ENV), (:block,
        (:line, 69, :none),
        (:if, (:call, :>, (:call, :length, :v), 0), (:block,
            (:line, 70, :none),
            (:macrocall, Symbol("@test"), (:call, :(!=), (:ref, :v, :end), '\0'))
          ))
      ))
  ))