(:quote, (:block,
    (:line, 4, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, (:(:), 10, 1, 0)), (:tuple, 0))),
    (:line, 5, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, 0.2, 2)), 6)),
    (:line, 6, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1.0, 0.2, 2.0)), 6)),
    (:line, 7, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 2, -0.2, 1)), 6)),
    (:line, 8, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 2.0, -0.2, 1.0)), 6)),
    (:line, 9, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 2, 0.2, 1)), 0)),
    (:line, 10, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 2.0, 0.2, 1.0)), 0)),
    (:line, 12, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 10, 1, 0)),
    (:line, 13, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 1, 0.2, 2)),
    (:line, 14, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 1.0, 0.2, 2.0)),
    (:line, 15, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 2, -0.2, 1)),
    (:line, 16, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 1, 0)),
    (:line, 17, :none),
    (:macrocall, Symbol("@inferred"), (:call, :colon, 0.0, -0.5)),
    (:line, 19, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, 0)), 0)),
    (:line, 20, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 0.0, -0.5)), 0)),
    (:line, 21, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, 2, 0)), 0)),
    (:line, 22, :none),
    (:(=), :L32, (:macrocall, Symbol("@inferred"), (:call, :linspace, (:call, :Int32, 1), (:call, :Int32, 4), 4))),
    (:line, 23, :none),
    (:(=), :L64, (:macrocall, Symbol("@inferred"), (:call, :linspace, (:call, :Int64, 1), (:call, :Int64, 4), 4))),
    (:line, 24, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, :L32, 1)), 1.0), (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, :L64, 1)), 1.0))),
    (:line, 25, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:ref, :L32, 2), 2), (:call, :(==), (:ref, :L64, 2), 2))),
    (:line, 26, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:ref, :L32, 3), 3), (:call, :(==), (:ref, :L64, 3), 3))),
    (:line, 27, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:ref, :L32, 4), 4), (:call, :(==), (:ref, :L64, 4), 4))),
    (:line, 28, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:macrocall, Symbol("@inferred"), (:call, :linspace, 1.0, 2.0, 2.0f0)), (:call, :linspace, 1.0, 2.0, 2))),
    (:line, 30, :none),
    (:(=), :r, (:(:), 5, -1, 1)),
    (:line, 31, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 1), 5)),
    (:line, 32, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 2), 4)),
    (:line, 33, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 3), 3)),
    (:line, 34, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 4), 2)),
    (:line, 35, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 5), 1)),
    (:line, 37, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 0.1, 0.1, 0.3)), 3)),
    (:line, 38, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1.1, 1.1, 3.3)), 3)),
    (:line, 39, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1.1, 1.3, 3)), 2)),
    (:line, 40, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, 1, 1.8)), 1)),
    (:line, 42, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, (:(:), 0.1, 0.1, 0.3), 2)), 0.2)),
    (:line, 43, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, (:(:), 0.1f0, 0.1f0, 0.3f0), 2)), 0.2f0)),
    (:line, 45, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, (:(:), 1, 5), (:(:), 1, 4))), (:(:), 1, 4))),
    (:line, 46, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:macrocall, Symbol("@inferred"), (:ref, (:(:), 1.0, 5), (:(:), 1, 4))), (:(:), 1.0, 4))),
    (:line, 47, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 2, 6), (:(:), 1, 4)), (:(:), 2, 5))),
    (:line, 48, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, (:(:), 1, 6), (:(:), 2, 5)), (:(:), 2, 5))),
    (:line, 49, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, (:(:), 1, 6), (:(:), 2, 2, 5)), (:(:), 2, 2, 4))),
    (:line, 50, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, (:(:), 1, 2, 13), (:(:), 2, 6)), (:(:), 3, 2, 11))),
    (:line, 51, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, (:(:), 1, 2, 13), (:(:), 2, 3, 7)), (:(:), 3, 6, 13))),
    (:line, 53, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:ref, (:(:), 1, 4), (:(:), 5, 4)))),
    (:line, 54, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:(:), 1, 10), (:(:), 8, -1, -2))),
    (:line, 56, :none),
    (:(=), :r, (:(:), (:call, :-, (:call, :typemax, :Int), 5), (:call, :-, (:call, :typemax, :Int), 1))),
    (:line, 57, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :r, 7)),
    (:line, 59, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findin, (:vect, 5.2, 3.3), (:(:), 3, 20)), (:call, :findin, (:vect, 5.2, 3.3), (:call, :collect, (:(:), 3, 20))))),
    (:line, 61, :none),
    (:let, (:block,
        (:line, 62, :none),
        (:(=), :span, (:(:), 5, 20)),
        (:line, 63, :none),
        (:(=), :r, (:(:), -7, 3, 42)),
        (:line, 64, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findin, :r, :span), (:(:), 5, 10))),
        (:line, 65, :none),
        (:(=), :r, (:(:), 15, -2, -38)),
        (:line, 66, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :findin, :r, :span), (:(:), 1, 6)))
      )),
    (:line, 75, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reverse, (:call, :reverse, (:(:), 1, 10))), (:(:), 1, 10))),
    (:line, 77, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reverse, (:call, :reverse, (:(:), (:call, :typemin, :Int), (:call, :typemax, :Int)))), (:(:), (:call, :typemin, :Int), (:call, :typemax, :Int)))),
    (:line, 78, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reverse, (:call, :reverse, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)))), (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)))),
    (:line, 80, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 5), (:(:), 2, 3)), (:(:), 2, 3))),
    (:line, 81, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -3, 5), (:(:), 2, 8)), (:(:), 2, 5))),
    (:line, 82, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -8, -3), (:(:), -8, -3)), (:(:), -8, -3))),
    (:line, 83, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 5), (:(:), 5, 13)), (:(:), 5, 5))),
    (:line, 84, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), -8, -3), (:(:), -2, 2)))),
    (:line, 85, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), -3, 7), (:(:), 2, 1)))),
    (:line, 86, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 11), (:(:), -2, 3, 15)), (:(:), 1, 3, 10))),
    (:line, 87, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 11), (:(:), -2, 2, 15)), (:(:), 2, 2, 10))),
    (:line, 88, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 11), (:(:), -2, 1, 15)), (:(:), 1, 11))),
    (:line, 89, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 11), (:(:), 15, -1, -2)), (:(:), 1, 11))),
    (:line, 90, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 11), (:(:), 15, -4, -2)), (:(:), 3, 4, 11))),
    (:line, 91, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -20, -5), (:(:), -10, 3, -2)), (:(:), -10, 3, -7))),
    (:line, 92, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), -5, 5), (:(:), -6, 13, 20)))),
    (:line, 93, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), 1, 11), (:(:), 15, 4, -2)))),
    (:line, 94, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), 11, 1), (:(:), 15, -4, -2)))),
    (:line, 97, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -15, 4, 7), (:(:), -10, -2)), (:(:), -7, 4, -3))),
    (:line, 98, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 13, -2, 1), (:(:), -2, 8)), (:(:), 7, -2, 1))),
    (:line, 99, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), 13, 2, 1), (:(:), -2, 8)))),
    (:line, 100, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), 13, -2, 1), (:(:), 8, -2)))),
    (:line, 103, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 0, 3, 24), (:(:), 0, 4, 24)), (:(:), 0, 12, 24))),
    (:line, 104, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 0, 4, 24), (:(:), 0, 3, 24)), (:(:), 0, 12, 24))),
    (:line, 105, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 0, 3, 24), (:(:), 24, -4, 0)), (:(:), 0, 12, 24))),
    (:line, 106, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 24, -3, 0), (:(:), 0, 4, 24)), (:(:), 24, -12, 0))),
    (:line, 107, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 24, -3, 0), (:(:), 24, -4, 0)), (:(:), 24, -12, 0))),
    (:line, 108, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 3, 24), (:(:), 0, 4, 24)), (:(:), 4, 12, 16))),
    (:line, 109, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 0, 6, 24), (:(:), 0, 4, 24)), (:(:), 0, 12, 24))),
    (:line, 110, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), 1, 6, 2400), (:(:), 0, 4, 2400)))),
    (:line, 111, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -51, 5, 100), (:(:), -33, 7, 125)), (:(:), -26, 35, 79))),
    (:line, 112, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -51, 5, 100), (:(:), -32, 7, 125)), (:(:), -11, 35, 94))),
    (:line, 116, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), -10, 3, 24), (:(:), -10, 3, 24)), (:(:), -10, 3, 23))),
    (:line, 117, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, (:call, :intersect, (:(:), -11, 3, 24), (:(:), -10, 3, 24)))),
    (:line, 118, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)), (:(:), 1, 10)), (:(:), 2, 2, 10))),
    (:line, 119, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), 1, 10), (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int))), (:(:), 2, 2, 10))),
    (:line, 121, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:call, :reverse, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int))), (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int))), (:call, :reverse, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int))))),
    (:line, 122, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)), (:call, :reverse, (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)))), (:(:), (:call, :typemin, :Int), 2, (:call, :typemax, :Int)))),
    (:line, 124, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:call, :UnitRange, 1, 2), 3), (:call, :UnitRange, 3, 2))),
    (:line, 125, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, (:call, :UnitRange, 1, 2), (:call, :UnitRange, 1, 5), (:call, :UnitRange, 3, 7), (:call, :UnitRange, 4, 6)), (:call, :UnitRange, 4, 3))),
    (:line, 127, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :intersect, (:(:), 1, 3), 2), :(===), (:call, :intersect, 2, (:(:), 1, 3)), :(===), (:(:), 2, 2))),
    (:line, 128, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :intersect, (:(:), 1.0, 3.0), 2), :(==), (:call, :intersect, 2, (:(:), 1.0, 3.0)), :(==), (:vect, 2.0))),
    (:line, 130, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, (:call, :UnitRange, 1, 2)), (:call, :UnitRange, 1, 2))),
    (:line, 131, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort!, (:call, :UnitRange, 1, 2)), (:call, :UnitRange, 1, 2))),
    (:line, 132, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, (:(:), 1, 10), (:kw, :rev, true)), (:call, :collect, (:(:), 10, -1, 1)))),
    (:line, 133, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sort, (:(:), -3, 3), (:kw, :by, :abs)), (:vect, 0, -1, 1, -2, 2, -3, 3))),
    (:line, 134, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :select, (:(:), 1, 10), 4), 4)),
    (:line, 136, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 0, (:(:), (:call, :UInt, 0), 100, (:call, :typemax, :UInt)))),
    (:line, 137, :none),
    (:macrocall, Symbol("@test"), (:call, :in, (:call, :last, (:(:), (:call, :UInt, 0), 100, (:call, :typemax, :UInt))), (:(:), (:call, :UInt, 0), 100, (:call, :typemax, :UInt)))),
    (:line, 138, :none),
    (:macrocall, Symbol("@test"), (:call, :in, -9223372036854775790, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 139, :none),
    (:macrocall, Symbol("@test"), (:call, :in, -9223372036854775690, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 140, :none),
    (:macrocall, Symbol("@test"), (:call, :in, -90, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 141, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 10, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 142, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 110, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 143, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 9223372036854775610, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 144, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 9223372036854775710, (:(:), -9223372036854775790, 100, 9223372036854775710))),
    (:line, 147, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 3.5, (:(:), 1, 5)))),
    (:line, 148, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 3, (:(:), 1, 5))),
    (:line, 149, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 3, (:(:), 5, -1, 1))),
    (:line, 153, :none),
    (:(=), :r, (:(:), 0.0, 0.01, 1.0)),
    (:line, 154, :none),
    (:macrocall, Symbol("@test"), (:call, :in, (:ref, :r, 30), :r)),
    (:line, 155, :none),
    (:(=), :r, (:(:), (:call, :*, -4, (:call, :Int64, (:call, :maxintfloat, (:if, (:call, :(===), :Int, :Int32), :Float32, :Float64)))), 5)),
    (:line, 156, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 3, :r)),
    (:line, 157, :none),
    (:macrocall, Symbol("@test"), (:call, :in, 3.0, :r)),
    (:line, 159, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 1, (:(:), 1, 0)))),
    (:line, 160, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :in, 1.0, (:(:), 1.0, 0.0)))),
    (:line, 163, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 3, 6), (:(:), 5, 4)), (:(:), 7, 6))),
    (:line, 164, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:(:), 3, 6), (:(:), 5, 5))),
    (:line, 165, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:(:), 3, 6), 5)),
    (:line, 166, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 0, 2, 10), (:(:), 7, 6)), (:(:), 12, 2, 10))),
    (:line, 167, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, (:(:), 0, 2, 10), (:(:), 7, 7))),
    (:line, 170, :none),
    (:for, (:block,
        (:(=), :a, (:ref, :Range, (:(:), 3, 6), (:(:), 0, 2, 10))),
        (:(=), :b, (:ref, :Range, (:(:), 0, 1), (:(:), 2, -1, 0)))
      ), (:block,
        (:line, 171, :none),
        (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :a, :b))
      )),
    (:line, 175, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, 4, (:call, :typemax, :Int))), (:call, :+, (:call, :div, (:call, :typemax, :Int), 4), 1))),
    (:line, 178, :none),
    (:macrocall, Symbol("@test_throws"), :OverflowError, (:call, :length, (:(:), 0, (:call, :typemax, :Int)))),
    (:line, 179, :none),
    (:macrocall, Symbol("@test_throws"), :OverflowError, (:call, :length, (:(:), (:call, :typemin, :Int), (:call, :typemax, :Int)))),
    (:line, 180, :none),
    (:macrocall, Symbol("@test_throws"), :OverflowError, (:call, :length, (:(:), -1, (:call, :-, (:call, :typemax, :Int), 1)))),
    (:line, 182, :none),
    (:let, (:block,
        (:line, 184, :none),
        (:for, (:(=), :i, (:(:), (:call, :-, (:call, :typemax, :Int), 1), (:call, :typemax, :Int))), (:block,
            (:line, 185, :none),
            (:+=, :s, 1),
            (:line, 186, :none),
            (:macrocall, Symbol("@test"), (:call, :(<=), :s, 2))
          )),
        (:line, 188, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 2)),
        (:line, 190, :none),
        (:(=), :s, 0),
        (:line, 191, :none),
        (:for, (:(=), :i, (:(:), (:call, :-, (:call, :typemax, :Int), 2), (:call, :-, (:call, :typemax, :Int), 1))), (:block,
            (:line, 192, :none),
            (:+=, :s, 1),
            (:line, 193, :none),
            (:macrocall, Symbol("@test"), (:call, :(<=), :s, 2))
          )),
        (:line, 195, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 2)),
        (:line, 197, :none),
        (:(=), :s, 0),
        (:line, 198, :none),
        (:for, (:(=), :i, (:(:), (:call, :typemin, :Int), (:call, :+, (:call, :typemin, :Int), 1))), (:block,
            (:line, 199, :none),
            (:+=, :s, 1),
            (:line, 200, :none),
            (:macrocall, Symbol("@test"), (:call, :(<=), :s, 2))
          )),
        (:line, 202, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 2)),
        (:line, 205, :none),
        (:(=), :s, 0),
        (:line, 206, :none),
        (:for, (:(=), :i, (:(:), (:call, :typemin, :UInt8), (:call, :typemax, :UInt8))), (:block,
            (:line, 207, :none),
            (:+=, :s, 1)
          )),
        (:line, 209, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 256)),
        (:line, 211, :none),
        (:(=), :s, 0),
        (:line, 212, :none),
        (:for, (:(=), :i, (:(:), (:call, :typemin, :UInt8), (:call, :one, :UInt8), (:call, :typemax, :UInt8))), (:block,
            (:line, 213, :none),
            (:+=, :s, 1)
          )),
        (:line, 215, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 256)),
        (:line, 218, :none),
        (:(=), :n, 0),
        (:line, 219, :none),
        (:(=), :s, (:call, :Int128, 0)),
        (:line, 220, :none),
        (:for, (:(=), :i, (:(:), (:call, :-, (:call, :typemax, :UInt64), 2), (:call, :typemax, :UInt64))), (:block,
            (:line, 221, :none),
            (:+=, :n, 1),
            (:line, 222, :none),
            (:+=, :s, :i)
          )),
        (:line, 224, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :n, 3)),
        (:line, 225, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, (:call, :-, (:call, :*, 3, (:call, :Int128, (:call, :typemax, :UInt64))), 3))),
        (:line, 228, :none),
        (:(=), :s, 0),
        (:line, 229, :none),
        (:for, (:(=), :i, (:(:), 0xff, 0x00)), (:block,
            (:line, 230, :none),
            (:+=, :s, 1)
          )),
        (:line, 232, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 0)),
        (:line, 234, :none),
        (:(=), :s, 0),
        (:line, 235, :none),
        (:for, (:(=), :i, (:(:), (:call, :Int128, (:call, :typemax, :Int128)), (:call, :Int128, (:call, :typemin, :Int128)))), (:block,
            (:line, 236, :none),
            (:+=, :s, 1)
          )),
        (:line, 238, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :s, 0))
      ), (:(=), :s, 0)),
    (:line, 242, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 1, 100)), 5050)),
    (:line, 243, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 0, 100)), 5050)),
    (:line, 244, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), -100, 100)), 0)),
    (:line, 245, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 0, 2, 100)), 2550)),
    (:line, 248, :none),
    (:if, (:call, :(==), (:., :Sys, (:quote, #QuoteNode
            :WORD_SIZE
          )), 64), (:block,
        (:line, 249, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), (:call, :Int128, 1), (:call, :^, 10, 18))), (:call, :div, (:call, :*, (:call, :^, 10, 18), (:call, :+, (:call, :Int128, (:call, :^, 10, 18)), 1)), 2))),
        (:line, 250, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), (:call, :Int128, 1), (:call, :-, (:call, :^, 10, 18), 1))), (:call, :div, (:call, :*, (:call, :^, 10, 18), (:call, :-, (:call, :Int128, (:call, :^, 10, 18)), 1)), 2)))
      ), (:block,
        (:line, 252, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), (:call, :Int64, 1), (:call, :^, 10, 9))), (:call, :div, (:call, :*, (:call, :^, 10, 9), (:call, :+, (:call, :Int64, (:call, :^, 10, 9)), 1)), 2))),
        (:line, 253, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), (:call, :Int64, 1), (:call, :-, (:call, :^, 10, 9), 1))), (:call, :div, (:call, :*, (:call, :^, 10, 9), (:call, :-, (:call, :Int64, (:call, :^, 10, 9)), 1)), 2)))
      )),
    (:line, 257, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 10000.0, -0.0001, 0)), 5.00000005e11)),
    (:line, 258, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 0, 0.001, 1)), 500.5)),
    (:line, 259, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 0, 1.0e-6, 1)), 500000.5)),
    (:line, 260, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sum, (:(:), 0, 0.1, 10)), 505.0)),
    (:line, 263, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:(:), 1, 3), 2), (:(:), -1, 1))),
    (:line, 264, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:(:), 1, 3), 0.25), (:(:), (:call, :-, 1, 0.25), (:call, :-, 3, 0.25)))),
    (:line, 265, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:(:), 1, 3), 2), (:(:), 3, 5))),
    (:line, 266, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:(:), 1, 3), 0.25), (:(:), (:call, :+, 1, 0.25), (:call, :+, 3, 0.25)))),
    (:line, 267, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:(:), 1, 2, 6), 1), (:(:), 2, 2, 6))),
    (:line, 268, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:(:), 1, 2, 6), 0.3), (:(:), (:call, :+, 1, 0.3), 2, (:call, :+, 5, 0.3)))),
    (:line, 269, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:(:), 1, 2, 6), 1), (:(:), 0, 2, 4))),
    (:line, 270, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:(:), 1, 2, 6), 0.3), (:(:), (:call, :-, 1, 0.3), 2, (:call, :-, 5, 0.3)))),
    (:line, 271, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, 2, (:(:), 1, 3)), (:(:), 1, -1, -1))),
    (:line, 274, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :+, (:vcat, (:(:), 1, 5)), (:(:), 5, -1, 1)), 6))),
    (:line, 275, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :+, (:(:), 5, -1, 1), (:vcat, (:(:), 1, 5))), 6))),
    (:line, 276, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :-, (:vcat, (:(:), 1, 5)), (:(:), 1, 5)), 0))),
    (:line, 277, :none),
    (:macrocall, Symbol("@test"), (:call, :all, (:call, :.==, (:call, :-, (:(:), 1, 5), (:vcat, (:(:), 1, 5))), 0))),
    (:line, 281, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.1, 0.1, 0.3)), :(==), (:vcat, (:call, :linspace, 0.1, 0.3, 3)), :(==), (:call, :./, (:vcat, (:(:), 1, 3)), 10))),
    (:line, 282, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 0.1, 0.3)), :(==), (:vcat, (:call, :linspace, 0.0, 0.3, 4)), :(==), (:call, :./, (:vcat, (:(:), 0, 3)), 10))),
    (:line, 283, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.3, -0.1, -0.1)), :(==), (:vcat, (:call, :linspace, 0.3, -0.1, 5)), :(==), (:call, :./, (:vcat, (:(:), 3, -1, -1)), 10))),
    (:line, 284, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.1, -0.1, -0.3)), :(==), (:vcat, (:call, :linspace, 0.1, -0.3, 5)), :(==), (:call, :./, (:vcat, (:(:), 1, -1, -3)), 10))),
    (:line, 285, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 0.1, 1.0)), :(==), (:vcat, (:call, :linspace, 0.0, 1.0, 11)), :(==), (:call, :./, (:vcat, (:(:), 0, 10)), 10))),
    (:line, 286, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, -0.1, 1.0)), :(==), (:vcat, (:call, :linspace, 0.0, 1.0, 0)), :(==), (:vect,))),
    (:line, 287, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 0.1, -1.0)), :(==), (:vcat, (:call, :linspace, 0.0, -1.0, 0)), :(==), (:vect,))),
    (:line, 288, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, -0.1, -1.0)), :(==), (:vcat, (:call, :linspace, 0.0, -1.0, 11)), :(==), (:call, :./, (:vcat, (:(:), 0, -1, -10)), 10))),
    (:line, 289, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 1.0, (:call, :/, 1, 49), 27.0)), :(==), (:vcat, (:call, :linspace, 1.0, 27.0, 1275)), :(==), (:call, :./, (:vcat, (:(:), 49, 1323)), 49))),
    (:line, 290, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 0.7, 2.1)), :(==), (:vcat, (:call, :linspace, 0.0, 2.1, 4)), :(==), (:call, :./, (:vcat, (:(:), 0, 7, 21)), 10))),
    (:line, 291, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 1.1, 3.3)), :(==), (:vcat, (:call, :linspace, 0.0, 3.3, 4)), :(==), (:call, :./, (:vcat, (:(:), 0, 11, 33)), 10))),
    (:line, 292, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.1, 1.1, 3.4)), :(==), (:vcat, (:call, :linspace, 0.1, 3.4, 4)), :(==), (:call, :./, (:vcat, (:(:), 1, 11, 34)), 10))),
    (:line, 293, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 1.3, 3.9)), :(==), (:vcat, (:call, :linspace, 0.0, 3.9, 4)), :(==), (:call, :./, (:vcat, (:(:), 0, 13, 39)), 10))),
    (:line, 294, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.1, 1.3, 4.0)), :(==), (:vcat, (:call, :linspace, 0.1, 4.0, 4)), :(==), (:call, :./, (:vcat, (:(:), 1, 13, 40)), 10))),
    (:line, 295, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 1.1, 1.1, 3.3)), :(==), (:vcat, (:call, :linspace, 1.1, 3.3, 3)), :(==), (:call, :./, (:vcat, (:(:), 11, 11, 33)), 10))),
    (:line, 296, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.3, 0.1, 1.1)), :(==), (:vcat, (:call, :linspace, 0.3, 1.1, 9)), :(==), (:call, :./, (:vcat, (:(:), 3, 1, 11)), 10))),
    (:line, 297, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, 1.0, 0.0)), :(==), (:vcat, (:call, :linspace, 0.0, 0.0, 1)), :(==), (:vect, 0.0))),
    (:line, 298, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.0, -1.0, 0.0)), :(==), (:vcat, (:call, :linspace, 0.0, 0.0, 1)), :(==), (:vect, 0.0))),
    (:line, 300, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, 1.0, 5.5)), (:call, :./, (:vcat, (:(:), 0, 10, 55)), 10))),
    (:line, 301, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, -1.0, 0.5)), (:vect,))),
    (:line, 302, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, 1.0, 0.5)), (:vect, 0.0))),
    (:line, 304, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), (:call, :prevfloat, 0.1), 0.1, 0.3)), (:vect, (:call, :prevfloat, 0.1), 0.2, 0.3))),
    (:line, 305, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), (:call, :nextfloat, 0.1), 0.1, 0.3)), (:vect, (:call, :nextfloat, 0.1), 0.2))),
    (:line, 306, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), (:call, :prevfloat, 0.0), 0.1, 0.3)), (:vect, (:call, :prevfloat, 0.0), 0.1, 0.2))),
    (:line, 307, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), (:call, :nextfloat, 0.0), 0.1, 0.3)), (:vect, (:call, :nextfloat, 0.0), 0.1, 0.2))),
    (:line, 308, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.1, 0.1, (:call, :prevfloat, 0.3))), (:vect, 0.1, 0.2))),
    (:line, 309, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.1, 0.1, (:call, :nextfloat, 0.3))), (:vect, 0.1, 0.2, (:call, :nextfloat, 0.3)))),
    (:line, 310, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, 0.1, (:call, :prevfloat, 0.3))), (:vect, 0.0, 0.1, 0.2))),
    (:line, 311, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, 0.1, (:call, :nextfloat, 0.3))), (:vect, 0.0, 0.1, 0.2, (:call, :nextfloat, 0.3)))),
    (:line, 312, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.1, (:call, :prevfloat, 0.1), 0.3)), (:vect, 0.1, 0.2, 0.3))),
    (:line, 313, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.1, (:call, :nextfloat, 0.1), 0.3)), (:vect, 0.1, 0.2))),
    (:line, 314, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, (:call, :prevfloat, 0.1), 0.3)), (:vect, 0.0, (:call, :prevfloat, 0.1), (:call, :prevfloat, 0.2), 0.3))),
    (:line, 315, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), 0.0, (:call, :nextfloat, 0.1), 0.3)), (:vect, 0.0, (:call, :nextfloat, 0.1), (:call, :nextfloat, 0.2)))),
    (:line, 317, :none),
    (:for, (:block,
        (:(=), :T, (:tuple, :Float32, :Float64)),
        (:(=), :a, (:(:), -5, 25)),
        (:(=), :s, (:vcat, (:(:), -5, -1), (:(:), 1, 25))),
        (:(=), :d, (:(:), 1, 25)),
        (:(=), :n, (:(:), -1, 15))
      ), (:block,
        (:line, 319, :none),
        (:(=), :den, (:call, :convert, :T, :d)),
        (:line, 320, :none),
        (:(=), :start, (:call, :/, (:call, :convert, :T, :a), :den)),
        (:line, 321, :none),
        (:(=), :step, (:call, :/, (:call, :convert, :T, :s), :den)),
        (:line, 322, :none),
        (:(=), :stop, (:call, :/, (:call, :convert, :T, (:call, :+, :a, (:call, :*, (:call, :-, :n, 1), :s))), :den)),
        (:line, 323, :none),
        (:(=), :vals, (:call, :./, (:typed_vcat, :T, (:(:), :a, :s, (:call, :+, :a, (:call, :*, (:call, :-, :n, 1), :s)))), :den)),
        (:line, 324, :none),
        (:(=), :r, (:(:), :start, :step, :stop)),
        (:line, 325, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, :r), :vals)),
        (:line, 326, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :start, :stop, (:call, :length, :r))), :vals)),
        (:line, 328, :none),
        (:(=), :n, (:call, :length, :r)),
        (:line, 329, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), 1, :n))), (:vcat, :r))),
        (:line, 330, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), 2, :n))), (:ref, (:vcat, :r), (:(:), 2, :end)))),
        (:line, 331, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), 1, 3, :n))), (:ref, (:vcat, :r), (:(:), 1, 3, :n)))),
        (:line, 332, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), 2, 2, :n))), (:ref, (:vcat, :r), (:(:), 2, 2, :n)))),
        (:line, 333, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), :n, -1, 2))), (:ref, (:vcat, :r), (:(:), :n, -1, 2)))),
        (:line, 334, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:ref, :r, (:(:), :n, -2, 1))), (:ref, (:vcat, :r), (:(:), :n, -2, 1))))
      )),
    (:line, 338, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), (:call, :*, 3, 0.05), 0.05, 0.2)), :(==), (:vcat, (:call, :linspace, (:call, :*, 3, 0.05), 0.2, 2)), :(==), (:vect, (:call, :*, 3, 0.05), 0.2))),
    (:line, 339, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), 0.2, -0.05, (:call, :*, 3, 0.05))), :(==), (:vcat, (:call, :linspace, 0.2, (:call, :*, 3, 0.05), 2)), :(==), (:vect, 0.2, (:call, :*, 3, 0.05)))),
    (:line, 340, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), (:call, :*, -3, 0.05), -0.05, -0.2)), :(==), (:vcat, (:call, :linspace, (:call, :*, -3, 0.05), -0.2, 2)), :(==), (:vect, (:call, :*, -3, 0.05), -0.2))),
    (:line, 341, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), -0.2, 0.05, (:call, :*, -3, 0.05))), :(==), (:vcat, (:call, :linspace, -0.2, (:call, :*, -3, 0.05), 2)), :(==), (:vect, -0.2, (:call, :*, -3, 0.05)))),
    (:line, 343, :none),
    (:for, (:block,
        (:(=), :T, (:tuple, :Float32, :Float64)),
        (:(=), :i, (:(:), 1, (:call, :^, 2, 15))),
        (:(=), :n, (:(:), 1, 5))
      ), (:block,
        (:line, 344, :none),
        (:(=), (:tuple, :start, :step), (:tuple, (:call, :randn, :T), (:call, :randn, :T))),
        (:line, 345, :none),
        (:&&, (:call, :(==), :step, 0), (:continue,)),
        (:line, 346, :none),
        (:(=), :stop, (:call, :+, :start, (:call, :*, (:call, :-, :n, 1), :step))),
        (:line, 350, :none),
        (:(=), :lo, (:(=), :hi, :n)),
        (:line, 351, :none),
        (:while, (:call, :(==), (:call, :+, :start, (:call, :*, (:call, :-, :lo, 1), :step)), :stop), (:block,
            (:line, 351, :none),
            (:-=, :lo, 1)
          )),
        (:line, 352, :none),
        (:while, (:call, :(==), (:call, :+, :start, (:call, :*, (:call, :-, :hi, 1), :step)), :stop), (:block,
            (:line, 352, :none),
            (:+=, :hi, 1)
          )),
        (:line, 353, :none),
        (:(=), :m, (:call, :clamp, (:call, :+, (:call, :round, :Int, (:call, :/, (:call, :-, :stop, :start), :step)), 1), (:call, :+, :lo, 1), (:call, :-, :hi, 1))),
        (:line, 354, :none),
        (:(=), :r, (:(:), :start, :step, :stop)),
        (:line, 355, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :m, (:call, :length, :r))),
        (:line, 357, :none),
        (:macrocall, Symbol("@test_skip"), (:call, :(==), :start, (:call, :first, :r))),
        (:line, 358, :none),
        (:macrocall, Symbol("@test_skip"), (:call, :(==), :stop, (:call, :last, :r))),
        (:line, 360, :none),
        (:||, (:call, :(==), (:., :Sys, (:quote, #QuoteNode
                :WORD_SIZE
              )), 64), (:continue,)),
        (:line, 361, :none),
        (:(=), :l, (:call, :linspace, :start, :stop, :n)),
        (:line, 362, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :n, (:call, :length, :l))),
        (:line, 364, :none),
        (:macrocall, Symbol("@test_skip"), (:call, :(==), :start, (:call, :first, :l))),
        (:line, 365, :none),
        (:macrocall, Symbol("@test_skip"), (:call, :(==), :stop, (:call, :last, :l)))
      )),
    (:line, 369, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
        (:line, 370, :none),
        (:(=), :z, (:call, :zero, :T)),
        (:line, 371, :none),
        (:(=), :u, (:call, :eps, :z)),
        (:line, 372, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, (:call, :linspace, :u, :u, 0)), :u)),
        (:line, 373, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, (:call, :linspace, :u, :u, 0)), :u)),
        (:line, 374, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, (:call, :linspace, (:call, :-, :u), :u, 0)), (:call, :-, :u))),
        (:line, 375, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, (:call, :linspace, (:call, :-, :u), :u, 0)), :u)),
        (:line, 376, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :u), :u, 0)), (:vect,))),
        (:line, 377, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :u), (:call, :-, :u), 1)), (:vect, (:call, :-, :u)))),
        (:line, 378, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :u), :u, 2)), (:vect, (:call, :-, :u), :u))),
        (:line, 379, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :u), :u, 3)), (:vect, (:call, :-, :u), 0, :u))),
        (:line, 380, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, (:call, :linspace, (:call, :-, :u), (:call, :-, :u), 0)), (:call, :-, :u))),
        (:line, 381, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, (:call, :linspace, (:call, :-, :u), (:call, :-, :u), 0)), (:call, :-, :u))),
        (:line, 382, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, (:call, :linspace, :u, (:call, :-, :u), 0)), :u)),
        (:line, 383, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, (:call, :linspace, :u, (:call, :-, :u), 0)), (:call, :-, :u))),
        (:line, 384, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :u, (:call, :-, :u), 0)), (:vect,))),
        (:line, 385, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :u, :u, 1)), (:vect, :u))),
        (:line, 386, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :u, (:call, :-, :u), 2)), (:vect, :u, (:call, :-, :u)))),
        (:line, 387, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :u, (:call, :-, :u), 3)), (:vect, :u, 0, (:call, :-, :u)))),
        (:line, 388, :none),
        (:(=), :v, (:call, :linspace, (:call, :-, :u), :u, 12)),
        (:line, 389, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :v), 12)),
        (:line, 390, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), (:call, :*, -3, :u), :u, (:call, :*, 3, :u))), :(==), (:vcat, (:call, :linspace, (:call, :*, -3, :u), (:call, :*, 3, :u), 7)), :(==), (:call, :.*, (:vcat, (:(:), -3, 3)), :u))),
        (:line, 391, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:vcat, (:(:), (:call, :*, 3, :u), (:call, :-, :u), (:call, :*, -3, :u))), :(==), (:vcat, (:call, :linspace, (:call, :*, 3, :u), (:call, :*, -3, :u), 7)), :(==), (:call, :.*, (:vcat, (:(:), 3, -1, -3)), :u)))
      )),
    (:line, 395, :none),
    (:for, (:(=), :T, (:tuple, :Float32, :Float64)), (:block,
        (:line, 396, :none),
        (:(=), :largeint, (:call, :Int, (:call, :min, (:call, :maxintfloat, :T), (:call, :typemax, :Int)))),
        (:line, 397, :none),
        (:(=), :a, (:call, :realmax)),
        (:line, 398, :none),
        (:for, (:(=), :i, (:(:), 1, 5)), (:block,
            (:line, 399, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :a, :a, 1)), (:vect, :a))),
            (:line, 400, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :a), (:call, :-, :a), 1)), (:vect, (:call, :-, :a)))),
            (:line, 401, :none),
            (:(=), :b, (:call, :realmax)),
            (:line, 402, :none),
            (:for, (:(=), :j, (:(:), 1, 5)), (:block,
                (:line, 403, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :a), :b, 0)), (:vect,))),
                (:line, 404, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :a), :b, 2)), (:vect, (:call, :-, :a), :b))),
                (:line, 405, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, (:call, :-, :a), :b, 3)), (:vect, (:call, :-, :a), (:call, :/, (:call, :-, :b, :a), 2), :b))),
                (:line, 406, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :a, (:call, :-, :b), 0)), (:vect,))),
                (:line, 407, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :a, (:call, :-, :b), 2)), (:vect, :a, (:call, :-, :b)))),
                (:line, 408, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :linspace, :a, (:call, :-, :b), 3)), (:vect, :a, (:call, :/, (:call, :-, :a, :b), 2), (:call, :-, :b)))),
                (:line, 409, :none),
                (:for, (:(=), :c, (:(:), (:call, :-, :largeint, 3), :largeint)), (:block,
                    (:line, 410, :none),
                    (:(=), :s, (:call, :linspace, (:call, :-, :a), :b, :c)),
                    (:line, 411, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, :s), (:call, :-, :a))),
                    (:line, 412, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, :s), :b)),
                    (:line, 413, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :s), :c)),
                    (:line, 414, :none),
                    (:(=), :s, (:call, :linspace, :a, (:call, :-, :b), :c)),
                    (:line, 415, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, :s), :a)),
                    (:line, 416, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, :s), (:call, :-, :b))),
                    (:line, 417, :none),
                    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :s), :c))
                  )),
                (:line, 419, :none),
                (:(=), :b, (:call, :prevfloat, :b))
              )),
            (:line, 421, :none),
            (:(=), :a, (:call, :prevfloat, :a))
          ))
      )),
    (:line, 426, :none),
    (:(=), :r, (:call, :LinSpace, 1, 4, 4)),
    (:line, 427, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:ref, :r, (:(:), 1, 4)), :LinSpace)),
    (:line, 430, :none),
    (:macrocall, Symbol("@test"), (:call, :issorted, (:call, :linspace, 1, 1, 0))),
    (:line, 431, :none),
    (:macrocall, Symbol("@test"), (:call, :issorted, (:call, :linspace, 1, 1, 1))),
    (:line, 434, :none),
    (:macrocall, Symbol("@test"), (:call, :(!=), (:(:), 0.0, 0.1, 1.0), (:(:), 0.0f0, 0.1f0, 1.0f0))),
    (:line, 437, :none),
    (:let, (:block,
        (:line, 438, :none),
        (:(=), :Rs, (:ref, :Range, (:(:), 1, 2), (:call, :map, :Int32, (:(:), 1, 3, 17)), (:call, :map, :Int64, (:(:), 1, 3, 17)), (:(:), 1, 0), (:(:), 17, -3, 0), (:(:), 0.0, 0.1, 1.0), (:call, :map, :Float32, (:(:), 0.0, 0.1, 1.0)), (:call, :linspace, 0, 1, 20), (:call, :map, :Float32, (:call, :linspace, 0, 1, 20)))),
        (:line, 441, :none),
        (:for, (:(=), :r, :Rs), (:block,
            (:line, 442, :none),
            (:(=), :ar, (:call, :collect, :r)),
            (:line, 443, :none),
            (:macrocall, Symbol("@test"), (:call, :(!=), :r, :ar)),
            (:line, 444, :none),
            (:macrocall, Symbol("@test"), (:call, :!, (:call, :isequal, :r, :ar))),
            (:line, 445, :none),
            (:for, (:(=), :s, :Rs), (:block,
                (:line, 446, :none),
                (:(=), :as, (:call, :collect, :s)),
                (:line, 447, :none),
                (:macrocall, Symbol("@test"), (:||, (:call, :!, (:call, :isequal, :r, :s)), (:call, :(==), (:call, :hash, :r), (:call, :hash, :s)))),
                (:line, 448, :none),
                (:macrocall, Symbol("@test"), (:call, :(==), (:call, :(==), :r, :s), (:call, :(==), :ar, :as)))
              ))
          ))
      )),
    (:line, 454, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:(:), 1, 2, 10), :(==), (:(:), 1, 2, 10), :(!=), (:(:), 1, 3, 10), :(!=), (:(:), 1, 3, 13), :(!=), (:(:), 2, 3, 13), :(==), (:(:), 2, 3, 11), :(!=), (:(:), 2, 11))),
    (:line, 455, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:(:), 1, 1, 10), :(==), (:(:), 1, 10), :(==), (:(:), 1, 10), :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 10), :(==), (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 10))),
    (:line, 456, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:(:), 1, 10), :(!=), (:(:), 2, 10), :(!=), (:(:), 2, 11), :(!=), (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 11))),
    (:line, 457, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 10), :(!=), (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 11), :(!=), (:(:), 1, 10))),
    (:line, 460, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:(:), 1.0, 1.5), :(==), (:(:), 1.0, 1.0, 1.5), :(==), (:(:), 1.0, 1.0))),
    (:line, 463, :none),
    (:let, (:block,
        (:line, 464, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, :r), (:call, :typemin, :Int64))),
        (:line, 465, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, :r), (:call, :-, (:call, :typemax, :Int64), 1))),
        (:line, 466, :none),
        (:macrocall, Symbol("@test_throws"), :OverflowError, (:call, :length, :r)),
        (:line, 468, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, :s), (:call, :typemax, :Int64))),
        (:line, 469, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, :s), (:call, :+, (:call, :typemin, :Int64), 1))),
        (:line, 470, :none),
        (:macrocall, Symbol("@test_throws"), :OverflowError, (:call, :length, :s))
      ), (:(=), :r, (:(:), (:call, :typemin, :Int64), 2, (:call, :typemax, :Int64))), (:(=), :s, (:(:), (:call, :typemax, :Int64), -2, (:call, :typemin, :Int64)))),
    (:line, 473, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemin, :Int64), 3, (:call, :typemax, :Int64))), 6148914691236517206)),
    (:line, 474, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemax, :Int64), -3, (:call, :typemin, :Int64))), 6148914691236517206)),
    (:line, 476, :none),
    (:for, (:(=), :s, (:(:), 3, 100)), (:block,
        (:line, 477, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemin, :Int), :s, (:call, :typemax, :Int))), (:call, :length, (:(:), (:call, :big, (:call, :typemin, :Int)), (:call, :big, :s), (:call, :big, (:call, :typemax, :Int)))))),
        (:line, 478, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemax, :Int), (:call, :-, :s), (:call, :typemin, :Int))), (:call, :length, (:(:), (:call, :big, (:call, :typemax, :Int)), (:call, :big, (:call, :-, :s)), (:call, :big, (:call, :typemin, :Int))))))
      )),
    (:line, 481, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :UInt, 1), (:call, :UInt, 1), (:call, :UInt, 0))), 0)),
    (:line, 482, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemax, :UInt), (:call, :UInt, 1), (:call, :-, (:call, :typemax, :UInt), 1))), 0)),
    (:line, 483, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemax, :UInt), (:call, :UInt, 2), (:call, :-, (:call, :typemax, :UInt), 1))), 0)),
    (:line, 484, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :+, (:call, :typemin, :Int), 3), 5, (:call, :+, (:call, :typemin, :Int), 1))), 0)),
    (:line, 487, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :*, (:(:), 1, 64), (:call, :/, :pi, 5))), 64)),
    (:line, 490, :none),
    (:let, (:block,
        (:line, 491, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r1, :r1), (:call, :*, 2, :r1))),
        (:line, 492, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r1, :r2), (:(:), 2.0, 0.3, 5.0))),
        (:line, 493, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :+, :r1, :r2), :r2), :r1)),
        (:line, 494, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r1, :r3), (:call, :+, (:call, :convert, (:curly, :StepRangeLen, :Float64), :r3), :r1))),
        (:line, 495, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r3, :r3), (:call, :*, 2, :r3)))
      ), (:(=), :r1, (:(:), 1.0, 0.1, 2.0)), (:(=), :r2, (:(:), 1.0f0, 0.2f0, 3.0f0)), (:(=), :r3, (:(:), 1, 2, 21))),
    (:line, 499, :none),
    (:(=), :r, (:(:), -0.004532318104333742, 1.2597349521122731e-5, 0.008065031416788989)),
    (:line, 500, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:ref, :r, (:(:), 1, (:call, :-, :end, 1)))), (:call, :-, (:call, :length, :r), 1))),
    (:line, 501, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :isa, (:ref, :r, (:(:), 1, 2, :end)), :Range), (:call, :(==), (:call, :length, (:ref, :r, (:(:), 1, 2, :end))), (:call, :div, (:call, :+, (:call, :length, :r), 1), 2)))),
    (:line, 502, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:ref, :r, (:(:), 3, 5)), 2), (:ref, :r, 4))),
    (:line, 503, :none),
    (:macrocall, Symbol("@test"), (:call, :≈, (:ref, (:ref, :r, (:(:), 5, -2, 1)), 2), (:ref, :r, 3))),
    (:line, 504, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :r, (:(:), 0, 10))),
    (:line, 505, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :r, (:(:), 1, 10000))),
    (:line, 507, :none),
    (:(=), :r, (:call, :linspace, (:call, :/, 1, 3), (:call, :/, 5, 7), 6)),
    (:line, 508, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 6)),
    (:line, 509, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 1), (:call, :/, 1, 3))),
    (:line, 510, :none),
    (:macrocall, Symbol("@test"), (:call, :(<=), (:call, :abs, (:call, :-, (:ref, :r, :end), (:call, :/, 5, 7))), (:call, :eps, (:call, :/, 5, 7)))),
    (:line, 511, :none),
    (:(=), :r, (:call, :linspace, 0.25, 0.25, 1)),
    (:line, 512, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 1)),
    (:line, 513, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :linspace, 0.25, 0.5, 1)),
    (:line, 516, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:(:), (:call, :typemax, :Int), 1, (:call, :typemax, :Int))), (:vect, (:call, :typemax, :Int)))),
    (:line, 519, :none),
    (:(=), :r7484, (:(:), 0.1, 0.1, 1)),
    (:line, 520, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :reverse, :r7484)), (:call, :reverse, (:vcat, :r7484)))),
    (:line, 523, :none),
    (:for, (:(=), :r, (:tuple, (:(:), 0, 1), (:(:), 0.0, 1.0))), (:block,
        (:line, 524, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :+, :r, :im)), (:call, :+, (:vcat, :r), :im))),
        (:line, 525, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :-, :r, :im)), (:call, :-, (:vcat, :r), :im))),
        (:line, 526, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :*, :r, :im)), (:call, :*, (:vcat, :r), :im))),
        (:line, 527, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :/, :r, :im)), (:call, :/, (:vcat, :r), :im)))
      )),
    (:line, 531, :none),
    (:(=), :r, (:call, :+, (:(:), -0.1, 0.1, 0.3), (:call, :+, (:(:), -0.3, 0.1, 0.1), 1.0e-12))),
    (:line, 532, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 3), 1.0e-12)),
    (:line, 535, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :map, :identity, (:(:), 0x01, 0x05))), 5)),
    (:line, 536, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :map, :identity, (:(:), 0x0001, 0x0005))), 5)),
    (:line, 537, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :map, :identity, (:(:), (:call, :UInt64, 1), (:call, :UInt64, 5)))), 5)),
    (:line, 538, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:call, :map, :identity, (:(:), (:call, :UInt128, 1), (:call, :UInt128, 5)))), 5)),
    (:line, 541, :none),
    (:for, (:(=), :f, (:tuple, :mean, :median)), (:block,
        (:line, 542, :none),
        (:for, (:(=), :n, (:(:), 2, 5)), (:block,
            (:line, 543, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :f, (:(:), 2, :n)), (:call, :f, (:vcat, (:(:), 2, :n))))),
            (:line, 544, :none),
            (:macrocall, Symbol("@test"), (:call, :≈, (:call, :f, (:(:), 2, 0.1, :n)), (:call, :f, (:vcat, (:(:), 2, 0.1, :n)))))
          ))
      )),
    (:line, 549, :none),
    (:let, (:block,
        (:line, 552, :none),
        (:for, (:(=), :T, :smallint), (:block,
            (:line, 553, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), (:call, :typemin, :T), (:call, :typemax, :T))), (:call, :^, 2, (:call, :*, 8, (:call, :sizeof, :T)))))
          ))
      ), (:(=), :smallint, (:if, (:call, :(===), :Int, :Int64), (:tuple, :Int8, :UInt8, :Int16, :UInt16, :Int32, :UInt32), (:tuple, :Int8, :UInt8, :Int16, :UInt16)))),
    (:line, 558, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 0, (:call, ://, 1, 2), 2), (:(:), 1, 2, 3)), (:(:), 0, (:call, ://, 1, 1), 1))),
    (:line, 561, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, (:(:), 1, (:call, :UInt, 0))), 0)),
    (:line, 564, :none),
    (:let, (:block,
        (:line, 565, :none),
        (:(=), :x, (:(:), 1, 2, 8)),
        (:line, 566, :none),
        (:(=), :y, (:(:), 2, 2, 8)),
        (:line, 567, :none),
        (:(=), :xy, (:(:), 1, 8)),
        (:line, 568, :none),
        (:for, (:(=), (:tuple, :thisx, :thisy), (:call, :zip, :x, :y)), (:block,
            (:line, 569, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :thisx, (:ref, :xy, (:+=, :i, 1)))),
            (:line, 570, :none),
            (:macrocall, Symbol("@test"), (:call, :(==), :thisy, (:ref, :xy, (:+=, :i, 1))))
          ))
      ), (:(=), :i, 0)),
    (:line, 575, :none),
    (:macrocall, Symbol("@test"), (:<:, (:call, :eltype, (:(:), 0, (:call, ://, 1, 3), 10)), :Rational)),
    (:line, 576, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 0, (:call, ://, 1, 3), 10), 1), 0)),
    (:line, 577, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:(:), 0, (:call, ://, 1, 3), 10), 2), (:call, ://, 1, 3))),
    (:line, 580, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:(:), 0, 1), (:(:), (:call, :UInt8, 2), (:call, :UInt8, 5))), (:tuple, (:(:), 0, 1), (:(:), 2, 5)))),
    (:line, 581, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :UnitRange, :Int), (:(:), 0, 5)), (:(:), 0, 5))),
    (:line, 582, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :UnitRange, :Int128), (:(:), 0, 5)), (:(:), (:call, :Int128, 0), (:call, :Int128, 5)))),
    (:line, 584, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:(:), 0, 1, 1), (:(:), (:call, :UInt8, 2), (:call, :UInt8, 1), (:call, :UInt8, 5))), (:tuple, (:(:), 0, 1, 1), (:(:), 2, 1, 5)))),
    (:line, 585, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRange, :Int, :Int), (:(:), 0, 1, 1)), (:(:), 0, 1, 1))),
    (:line, 586, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRange, :Int128, :Int128), (:(:), 0, 1, 1)), (:(:), (:call, :Int128, 0), (:call, :Int128, 1), (:call, :Int128, 1)))),
    (:line, 588, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:(:), 0, 1, 1), (:(:), 2, 5)), (:tuple, (:(:), 0, 1, 1), (:(:), 2, 1, 5)))),
    (:line, 589, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRange, :Int128, :Int128), (:(:), 0, 5)), (:(:), (:call, :Int128, 0), (:call, :Int128, 1), (:call, :Int128, 5)))),
    (:line, 590, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :StepRange, (:(:), 0, 5)), (:(:), 0, 1, 5))),
    (:line, 591, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRange, :Int128, :Int128), (:(:), 0.0, 5)), (:(:), (:call, :Int128, 0), (:call, :Int128, 1), (:call, :Int128, 5)))),
    (:line, 593, :none),
    (:macrocall, Symbol("@test_throws"), :ArgumentError, (:call, :StepRange, 1.1, 1, 5.1)),
    (:line, 595, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:(:), 0.0f0, (:call, :inv, 3.0f0), 1.0f0), (:(:), 0.0, 2.0, 5.0)), (:tuple, (:(:), 0, (:call, :/, 1, 3), 1), (:(:), 0.0, 2.0, 5.0)))),
    (:line, 597, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRangeLen, :Float64), (:(:), 0, (:call, :/, 1, 3), 1)), (:(:), 0, (:call, :/, 1, 3), 1))),
    (:line, 598, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRangeLen, :Float64), (:(:), 0.0f0, (:call, :inv, 3.0f0), 1.0f0)), (:(:), 0, (:call, :/, 1, 3), 1))),
    (:line, 600, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:(:), 0, (:call, :/, 1, 3), 1), (:(:), 0, 5)), (:tuple, (:(:), 0, (:call, :/, 1, 3), 1), (:(:), 0.0, 1.0, 5.0)))),
    (:line, 601, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRangeLen, :Float64), (:(:), 0, 5)), (:(:), 0.0, 1.0, 5.0))),
    (:line, 602, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :StepRangeLen, :Float64), (:(:), 0, 1, 5)), (:(:), 0.0, 1.0, 5.0))),
    (:line, 603, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, :StepRangeLen, (:(:), 0, 5)), (:(:), 0, 5))),
    (:line, 604, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, :StepRangeLen, (:(:), 0, 1, 5)), (:(:), 0, 1, 5))),
    (:line, 606, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :LinSpace, :Float64), (:(:), 0.0, 0.1, 0.3)), (:call, (:curly, :LinSpace, :Float64), 0.0, 0.3, 4))),
    (:line, 607, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :LinSpace, (:(:), 0.0, 0.1, 0.3)), (:call, (:curly, :LinSpace, :Float64), 0.0, 0.3, 4))),
    (:line, 608, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :LinSpace, (:(:), 0, 3)), (:call, (:curly, :LinSpace, :Int), 0, 3, 4))),
    (:line, 610, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :start, (:call, :LinSpace, 0, 3, 4)), 1)),
    (:line, 611, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, 2, (:call, :LinSpace, 0, 3, 4)), (:call, :LinSpace, 0, 6, 4))),
    (:line, 612, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, (:call, :LinSpace, 0, 3, 4), 2), (:call, :LinSpace, 0, 6, 4))),
    (:line, 613, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :/, (:call, :LinSpace, 0, 3, 4), 3), (:call, :LinSpace, 0, 1, 4))),
    (:line, 614, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, 2, (:call, :LinSpace, 0, 3, 4)), (:call, :LinSpace, 2, -1, 4))),
    (:line, 615, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, 2, (:call, :LinSpace, 0, 3, 4)), (:call, :LinSpace, 2, 5, 4))),
    (:line, 616, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :LinSpace, 0, 3, 4)), (:call, :LinSpace, 0, -3, 4))),
    (:line, 617, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reverse, (:call, :LinSpace, 0, 3, 4)), (:call, :LinSpace, 3, 0, 4))),
    (:line, 620, :none),
    (:let, (:block,
        (:line, 621, :none),
        (:call, :show, :io, (:call, :linspace, 1, 2, 3)),
        (:line, 622, :none),
        (:(=), :str, (:call, :String, (:call, :take!, :io))),
        (:line, 624, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :str, "1.0:0.5:2.0"))
      ), (:(=), :io, (:call, :IOBuffer))),
    (:line, 628, :none),
    (:(=), :r, (:(:), (:call, ://, 1, 2), 3)),
    (:line, 629, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 3)),
    (:line, 630, :none),
    (:(=), :i, 1),
    (:line, 631, :none),
    (:for, (:(=), :x, :r), (:block,
        (:line, 632, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :x, (:call, ://, :i, 2))),
        (:line, 633, :none),
        (:+=, :i, 2)
      )),
    (:line, 635, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :i, 7)),
    (:line, 639, :none),
    (:(=), (:call, :replstrmime, :x), (:block,
        (:line, 639, :none),
        (:call, :sprint, (:->, (:tuple, :io, :x), (:block,
              (:line, 639, :none),
              (:call, :show, (:call, :IOContext, :io, (:call, :(=>), (:quote, #QuoteNode
                      :limit
                    ), true)), (:call, :MIME, "text/plain"), :x)
            )), :x)
      )),
    (:line, 640, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :replstrmime, (:(:), 1, 4)), "1:4")),
    (:line, 641, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :stringmime, "text/plain", (:(:), 1, 4)), "1:4")),
    (:line, 642, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :stringmime, "text/plain", (:call, :linspace, 1, 5, 7)), "1.0:0.6666666666666666:5.0")),
    (:line, 643, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :stringmime, "text/plain", (:call, (:curly, :LinSpace, :Float64), 1, 5, 7)), "7-element LinSpace{Float64}:\n 1.0,1.66667,2.33333,3.0,3.66667,4.33333,5.0")),
    (:line, 644, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:call, :linspace, 1, 5, 7)), "1.0:0.6666666666666666:5.0")),
    (:line, 645, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :repr, (:call, (:curly, :LinSpace, :Float64), 1, 5, 7)), "linspace(1.0,5.0,7)")),
    (:line, 646, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :replstrmime, (:(:), 0, 100.0)), "0.0:1.0:100.0")),
    (:line, 650, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :replstrmime, (:call, :linspace, 0, 100, 10000)), "0.0:0.010001000100010001:100.0")),
    (:line, 651, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :replstrmime, (:call, (:curly, :LinSpace, :Float64), 0, 100, 10000)), "10000-element LinSpace{Float64}:\n 0.0,0.010001,0.020002,0.030003,0.040004,…,99.95,99.96,99.97,99.98,99.99,100.0")),
    (:line, 653, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, (:call, :UnitRange, 1, 2)), "1:2")),
    (:line, 654, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :sprint, :show, (:call, :StepRange, 1, 2, 5)), "1:2:5")),
    (:line, 658, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:call, :linspace, 0.0f0, 1.0f0, 3), (:call, :linspace, 0.0, 5.0, 2)), (:tuple, (:call, :linspace, 0.0, 1.0, 3), (:call, :linspace, 0.0, 5.0, 2)))),
    (:line, 660, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :LinSpace, :Float64), (:call, :linspace, 0.0, 1.0, 3)), (:call, :LinSpace, 0.0, 1.0, 3))),
    (:line, 661, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :LinSpace, :Float64), (:call, :linspace, 0.0f0, 1.0f0, 3)), (:call, :LinSpace, 0.0, 1.0, 3))),
    (:line, 663, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :promote, (:call, :linspace, 0.0, 1.0, 3), (:(:), 0, 5)), (:tuple, (:call, :linspace, 0.0, 1.0, 3), (:call, :linspace, 0.0, 5.0, 6)))),
    (:line, 665, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :LinSpace, :Float64), (:(:), 0, 5)), (:call, :LinSpace, 0.0, 5.0, 6))),
    (:line, 666, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, (:curly, :LinSpace, :Float64), (:(:), 0, 1, 5)), (:call, :LinSpace, 0.0, 5.0, 6))),
    (:line, 667, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :LinSpace, (:(:), 0, 5)), (:call, (:curly, :LinSpace, :Int), 0, 5, 6))),
    (:line, 668, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :convert, :LinSpace, (:(:), 0, 1, 5)), (:call, (:curly, :LinSpace, :Int), 0, 5, 6))),
    (:line, 670, :none),
    (:function, (:call, :test_range_index, :r, :s), (:block,
        (:line, 671, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:ref, :r, :s)), (:call, :typeof, :r))),
        (:line, 672, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, (:vcat, :r), :s), (:vcat, (:ref, :r, :s))))
      )),
    (:line, 674, :none),
    (:call, :test_range_index, (:call, :linspace, 0.1, 0.3, 3), (:(:), 1, 2)),
    (:line, 675, :none),
    (:call, :test_range_index, (:call, :linspace, 0.1, 0.3, 3), (:(:), 1, 0)),
    (:line, 676, :none),
    (:call, :test_range_index, (:call, :linspace, 1.0, 1.0, 1), (:(:), 1, 1)),
    (:line, 677, :none),
    (:call, :test_range_index, (:call, :linspace, 1.0, 1.0, 1), (:(:), 1, 0)),
    (:line, 678, :none),
    (:call, :test_range_index, (:call, :linspace, 1.0, 2.0, 0), (:(:), 1, 0)),
    (:line, 680, :none),
    (:function, (:call, (:curly, :test_linspace_identity, :T), (:(::), :r, (:curly, :Range, :T)), :mr), (:block,
        (:line, 681, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :r), :mr)),
        (:line, 682, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :collect, :r)), (:call, :collect, :mr))),
        (:line, 683, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :-, :r), (:call, :typeof, :r))),
        (:line, 685, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, 1, :r, -1), :r)),
        (:line, 686, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :+, 1, (:call, :collect, :r)), :(==), (:call, :collect, (:call, :+, 1, :r)), :(==), (:call, :collect, (:call, :+, :r, 1)))),
        (:line, 687, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :+, 1, :r, -1), (:call, :typeof, :r))),
        (:line, 688, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :-, 1, :r), 1), :mr)),
        (:line, 689, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :-, 1, (:call, :collect, :r)), :(==), (:call, :collect, (:call, :-, 1, :r)), :(==), (:call, :collect, (:call, :+, 1, :mr)))),
        (:line, 690, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :-, (:call, :collect, :r), 1), :(==), (:call, :collect, (:call, :-, :r, 1)), :(==), (:call, :-, (:call, :collect, (:call, :+, :mr, 1))))),
        (:line, 691, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :-, (:call, :-, 1, :r), 1), (:call, :typeof, :r))),
        (:line, 693, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, 1, :r, 1), :r)),
        (:line, 694, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, 2, :r, (:call, :T, 0.5)), :r)),
        (:line, 695, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :*, 1, :r, 1), (:call, :typeof, :r))),
        (:line, 696, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :/, :r, 1), :r)),
        (:line, 697, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, (:call, :/, :r, 2), 2), :r)),
        (:line, 698, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :*, (:call, :/, :r, (:call, :T, 0.5)), (:call, :T, 0.5)), :r)),
        (:line, 699, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:call, :/, :r, 1), (:call, :typeof, :r))),
        (:line, 701, :none),
        (:macrocall, Symbol("@test"), (:comparison, (:call, :*, 2, (:call, :collect, :r)), :(==), (:call, :collect, (:call, :*, :r, 2)), :(==), (:call, :collect, (:call, :*, 2, :r)), :(==), (:call, :collect, (:call, :*, :r, (:call, :T, 2.0))), :(==), (:call, :collect, (:call, :*, (:call, :T, 2.0), :r)), :(==), (:call, :collect, (:call, :/, :r, (:call, :T, 0.5))), :(==), (:call, :-, (:call, :collect, (:call, :*, :mr, (:call, :T, 2.0))))))
      )),
    (:line, 706, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0, 27.0, 10), (:call, :linspace, -1.0, -27.0, 10)),
    (:line, 707, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0f0, 27.0f0, 10), (:call, :linspace, -1.0f0, -27.0f0, 10)),
    (:line, 709, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0, 27.0, 0), (:call, :linspace, -1.0, -27.0, 0)),
    (:line, 710, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0f0, 27.0f0, 0), (:call, :linspace, -1.0f0, -27.0f0, 0)),
    (:line, 712, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0, 1.0, 1), (:call, :linspace, -1.0, -1.0, 1)),
    (:line, 713, :none),
    (:call, :test_linspace_identity, (:call, :linspace, 1.0f0, 1.0f0, 1), (:call, :linspace, -1.0f0, -1.0f0, 1)),
    (:line, 715, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :reverse, (:call, :linspace, 1.0, 27.0, 1275)), (:call, :linspace, 27.0, 1.0, 1275))),
    (:line, 716, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:vcat, (:call, :reverse, (:call, :linspace, 1.0, 27.0, 1275))), (:call, :reverse, (:vcat, (:call, :linspace, 1.0, 27.0, 1275))))),
    (:line, 720, :none),
    (:for, (:(=), :_r, (:tuple, (:(:), 1, 2, 100), (:(:), 1, 100), (:(:), 1.0f0, 2.0f0, 100.0f0), (:(:), 1.0, 2.0, 100.0), (:call, :linspace, 1, 100, 10), (:call, :linspace, 1.0f0, 100.0f0, 10))), (:block,
        (:line, 722, :none),
        (:(=), :float_r, (:call, :float, :_r)),
        (:line, 723, :none),
        (:(=), :big_r, (:., :big, (:tuple, :_r))),
        (:line, 724, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:., (:call, :typeof, :big_r), (:quote, #QuoteNode
                :name
              )), (:., (:call, :typeof, :_r), (:quote, #QuoteNode
                :name
              )))),
        (:line, 725, :none),
        (:if, (:<:, (:call, :eltype, :_r), :AbstractFloat), (:block,
            (:line, 726, :none),
            (:macrocall, Symbol("@test"), (:call, :isa, :float_r, (:call, :typeof, :_r))),
            (:line, 727, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :big_r), :BigFloat))
          ), (:block,
            (:line, 729, :none),
            (:macrocall, Symbol("@test"), (:call, :isa, :float_r, :Range)),
            (:line, 730, :none),
            (:macrocall, Symbol("@test"), (:<:, (:call, :eltype, :float_r), :AbstractFloat)),
            (:line, 731, :none),
            (:macrocall, Symbol("@test"), (:call, :(===), (:call, :eltype, :big_r), :BigInt))
          ))
      )),
    (:line, 735, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :+, (:call, :linspace, 1.0, 5.0, 5), (:call, :linspace, 1.0, 5.0, 6))),
    (:line, 736, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :-, (:call, :linspace, 1.0, 5.0, 5), (:call, :linspace, 1.0, 5.0, 6))),
    (:line, 737, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :.*, (:call, :linspace, 1.0, 5.0, 5), (:call, :linspace, 1.0, 5.0, 6))),
    (:line, 738, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :./, (:call, :linspace, 1.0, 5.0, 5), (:call, :linspace, 1.0, 5.0, 6))),
    (:line, 740, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :+, (:(:), 1, 5), (:(:), 1, 6))),
    (:line, 741, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :-, (:(:), 1, 5), (:(:), 1, 6))),
    (:line, 742, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :.*, (:(:), 1, 5), (:(:), 1, 6))),
    (:line, 743, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :./, (:(:), 1, 5), (:(:), 1, 6))),
    (:line, 745, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :+, (:(:), 1.0, 5.0), (:(:), 1.0, 6.0))),
    (:line, 746, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :-, (:(:), 1.0, 5.0), (:(:), 1.0, 6.0))),
    (:line, 747, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :.*, (:(:), 1.0, 5.0), (:(:), 1.0, 6.0))),
    (:line, 748, :none),
    (:macrocall, Symbol("@test_throws"), :DimensionMismatch, (:call, :./, (:(:), 1.0, 5.0), (:(:), 1.0, 6.0))),
    (:line, 750, :none),
    (:function, (:call, :test_range_sum_diff, :r1, :r2, :r_sum, :r_diff), (:block,
        (:line, 751, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r1, :r2), :r_sum)),
        (:line, 752, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, :r2, :r1), :r_sum)),
        (:line, 753, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :r1, :r2), :r_diff)),
        (:line, 754, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, :r2, :r1), (:call, :-, :r_diff))),
        (:line, 756, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:call, :collect, :r1), (:call, :collect, :r2)), (:call, :collect, :r_sum))),
        (:line, 757, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :+, (:call, :collect, :r2), (:call, :collect, :r1)), (:call, :collect, :r_sum))),
        (:line, 758, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :collect, :r1), (:call, :collect, :r2)), (:call, :collect, :r_diff))),
        (:line, 759, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :-, (:call, :collect, :r2), (:call, :collect, :r1)), (:call, :collect, (:call, :-, :r_diff))))
      )),
    (:line, 762, :none),
    (:call, :test_range_sum_diff, (:(:), 1, 5), (:(:), 0, 2, 8), (:(:), 1, 3, 13), (:(:), 1, -1, -3)),
    (:line, 763, :none),
    (:call, :test_range_sum_diff, (:(:), 1.0, 5.0), (:(:), 0.0, 2.0, 8.0), (:(:), 1.0, 3.0, 13.0), (:(:), 1.0, -1.0, -3.0)),
    (:line, 764, :none),
    (:call, :test_range_sum_diff, (:call, :linspace, 1.0, 5.0, 5), (:call, :linspace, 0.0, -4.0, 5), (:call, :linspace, 1.0, 1.0, 5), (:call, :linspace, 1.0, 9.0, 5)),
    (:line, 767, :none),
    (:call, :test_range_sum_diff, (:(:), 1, 5), (:(:), 0.0, 2.0, 8.0), (:(:), 1.0, 3.0, 13.0), (:(:), 1.0, -1.0, -3.0)),
    (:line, 768, :none),
    (:call, :test_range_sum_diff, (:(:), 1, 5), (:call, :linspace, 0, 8, 5), (:call, :linspace, 1, 13, 5), (:call, :linspace, 1, -3, 5)),
    (:line, 770, :none),
    (:call, :test_range_sum_diff, (:(:), 1.0, 5.0), (:call, :linspace, 0, 8, 5), (:call, :linspace, 1, 13, 5), (:call, :linspace, 1, -3, 5)),
    (:line, 774, :none),
    (:let, (:block,
        (:line, 775, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, (:(:), 2, 3)), (:(:), 0x03, 0x04)))
      ), (:(=), :r, (:(:), 0x02, 0x05))),
    (:line, 779, :none),
    (:for, (:(=), :r, (:tuple, (:(:), (:call, :big, 1), (:call, :big, 2)), (:(:), (:call, :UInt128, 1), (:call, :UInt128, 2)), (:(:), 0x01, 0x02))), (:block,
        (:line, 780, :none),
        (:(=), :rr, (:ref, :r, :r)),
        (:line, 781, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, :rr), (:call, :typeof, :r))),
        (:line, 782, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, :r), :r)),
        (:line, 784, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, (:call, :similar, :r, (:call, :size, :r))), (:call, :size, (:call, :similar, :r, (:call, :length, :r)))))
      )),
    (:line, 788, :none),
    (:let, (:block,
        (:line, 789, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sign, (:tuple, :A)), (:vect, -1, 0, 1))),
        (:line, 790, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:., :sign, (:tuple, :B)), (:vect, -1, 0, 1))),
        (:line, 791, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :typeof, (:., :sign, (:tuple, :A))), (:curly, :Vector, :Int))),
        (:line, 792, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :typeof, (:., :sign, (:tuple, :B))), (:curly, :Vector, :Float64))),
        (:line, 794, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :conj, :A), :A)),
        (:line, 795, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :conj, :B), :B)),
        (:line, 797, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :.~, :A), (:vect, 0, -1, -2))),
        (:line, 798, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:call, :.~, :A)), (:curly, :Vector, :Int)))
      ), (:(=), :A, (:(:), -1, 1)), (:(=), :B, (:(:), -1.0, 1.0))),
    (:line, 802, :none),
    (:let, (:block,
        (:line, 803, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, :Array, :r), :a)),
        (:line, 804, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, (:curly, :Array, :Int), :r), :a)),
        (:line, 805, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, (:curly, :Array, :Float64), :r), :a)),
        (:line, 806, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, (:curly, :Array, :Int, 1), :r), :a)),
        (:line, 807, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :convert, (:curly, :Array, :Float64, 1), :r), :a))
      ), (:(=), :r, (:(:), 1, 3)), (:(=), :a, (:vect, 1, 2, 3))),
    (:line, 811, :none),
    (:(=), :r, (:call, (:., :Base, (:quote, #QuoteNode
            :OneTo
          )), -5)),
    (:line, 812, :none),
    (:macrocall, Symbol("@test"), (:call, :isempty, :r)),
    (:line, 813, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 0)),
    (:line, 814, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :r), (:tuple, 0))),
    (:line, 815, :none),
    (:(=), :r, (:call, (:., :Base, (:quote, #QuoteNode
            :OneTo
          )), 3)),
    (:line, 816, :none),
    (:macrocall, Symbol("@test"), (:call, :!, (:call, :isempty, :r))),
    (:line, 817, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 3)),
    (:line, 818, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :size, :r), (:tuple, 3))),
    (:line, 819, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :step, :r), 1)),
    (:line, 820, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :first, :r), 1)),
    (:line, 821, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :last, :r), 3)),
    (:line, 822, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :minimum, :r), 1)),
    (:line, 823, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :maximum, :r), 3)),
    (:line, 824, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 2), 2)),
    (:line, 825, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, (:(:), 2, 3)), (:(:), 2, 3))),
    (:line, 826, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :r, 4)),
    (:line, 827, :none),
    (:macrocall, Symbol("@test_throws"), :BoundsError, (:ref, :r, 0)),
    (:line, 828, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :r, 1), (:(:), 2, 4))),
    (:line, 829, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :*, 2, :r), (:(:), 2, 2, 6))),
    (:line, 830, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :+, :r, :r), (:(:), 2, 2, 6))),
    (:line, 831, :none),
    (:(=), :k, 0),
    (:line, 832, :none),
    (:for, (:(=), :i, :r), (:block,
        (:line, 833, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), :i, (:+=, :k, 1)))
      )),
    (:line, 835, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :r, (:call, (:., :Base, (:quote, #QuoteNode
                :OneTo
              )), 2)), (:call, (:., :Base, (:quote, #QuoteNode
              :OneTo
            )), 2))),
    (:line, 836, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :intersect, :r, (:(:), 0, 5)), (:(:), 1, 3))),
    (:line, 837, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :intersect, :r, 2), :(===), (:call, :intersect, 2, :r), :(===), (:(:), 2, 2))),
    (:line, 838, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :findin, :r, :r), :(===), (:call, :findin, :r, (:(:), 1, (:call, :length, :r))), :(===), (:call, :findin, (:(:), 1, (:call, :length, :r)), :r), :(===), (:(:), 1, (:call, :length, :r)))),
    (:line, 839, :none),
    (:(=), :r2, (:call, (:., :Base, (:quote, #QuoteNode
            :OneTo
          )), 7)),
    (:line, 840, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :findin, :r2, (:(:), 2, (:call, :-, (:call, :length, :r2), 1))), (:(:), 2, (:call, :-, (:call, :length, :r2), 1)))),
    (:line, 841, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:call, :findin, (:(:), 2, (:call, :-, (:call, :length, :r2), 1)), :r2), (:(:), 1, (:call, :-, (:call, :length, :r2), 2)))),
    (:line, 842, :none),
    (:(=), :io, (:call, :IOBuffer)),
    (:line, 843, :none),
    (:call, :show, :io, :r),
    (:line, 844, :none),
    (:(=), :str, (:call, :String, (:call, :take!, :io))),
    (:line, 845, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), :str, "Base.OneTo(3)")),
    (:line, 848, :none),
    (:(=), :r, (:call, :linspace, 0, (:call, ://, 3, 10), 4)),
    (:line, 849, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :r), (:curly, :Rational, :Int))),
    (:line, 850, :none),
    (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, 2), (:call, ://, 1, 10))),
    (:line, 852, :none),
    (:(=), (:tuple, :a, :b), (:tuple, 1.0, (:call, :nextfloat, 1.0))),
    (:line, 853, :none),
    (:(=), (:tuple, :ba, :bb), (:tuple, (:call, :BigFloat, :a), (:call, :BigFloat, :b))),
    (:line, 854, :none),
    (:(=), :r, (:call, :linspace, :ba, :bb, 3)),
    (:line, 855, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :r), :BigFloat)),
    (:line, 856, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:ref, :r, 1), :a), (:call, :(==), (:ref, :r, 3), :b))),
    (:line, 857, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, 2), (:call, :/, (:call, :+, :ba, :bb), 2))),
    (:line, 859, :none),
    (:(=), (:tuple, :a, :b), (:tuple, (:call, :rand, 10), (:call, :rand, 10))),
    (:line, 860, :none),
    (:(=), :r, (:call, :linspace, :a, :b, 5)),
    (:line, 861, :none),
    (:macrocall, Symbol("@test"), (:&&, (:call, :(==), (:ref, :r, 1), :a), (:call, :(==), (:ref, :r, 5), :b))),
    (:line, 862, :none),
    (:for, (:(=), :i, (:(:), 2, 4)), (:block,
        (:line, 863, :none),
        (:(=), :x, (:call, :+, (:call, :*, (:call, ://, (:call, :-, 5, :i), 4), :a), (:call, :*, (:call, ://, (:call, :-, :i, 1), 4), :b))),
        (:line, 864, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:ref, :r, :i), :x))
      )),
    (:line, 868, :none),
    (:(=), :r, (:macrocall, Symbol("@inferred"), (:call, :colon, (:call, :big, 1.0), (:call, :big, 2.0), (:call, :big, 5.0)))),
    (:line, 869, :none),
    (:macrocall, Symbol("@test"), (:call, :(==), (:call, :eltype, :r), :BigFloat)),
    (:line, 872, :none),
    (:for, (:(=), :r, (:tuple, (:call, :linspace, 0.10000000000000045, 1), (:(:), 0.10000000000000045, (:call, :/, (:call, :-, 1, 0.10000000000000045), 49), 1))), (:block,
        (:line, 873, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, 1), 0.10000000000000045)),
        (:line, 874, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, :end), 1.0))
      )),
    (:line, 878, :none),
    (:let, (:block,
        (:line, 879, :none),
        (:macrocall, Symbol("@test"), (:call, :isa, (:macrocall, Symbol("@inferred"), (:ref, :r, 2)), :BigFloat)),
        (:line, 880, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, :r, 2), (:call, :/, (:call, :big, -1.0), 3)))
      ), (:(=), :r, (:call, :linspace, (:call, :-, (:call, :big, 1.0)), (:call, :big, 1.0), 4))),
    (:line, 884, :none),
    (:let, (:block,
        (:line, 885, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :length, :r), 3)),
        (:line, 886, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :first, :r), 1.3173739f0)),
        (:line, 887, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :last, :r), 1.3173739f0)),
        (:line, 888, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, 2), 1.3173739f0))
      ), (:(=), :r, (:call, :linspace, 1.3173739f0, 1.3173739f0, 3))),
    (:line, 891, :none),
    (:let, (:block,
        (:line, 892, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, 1), (:call, :+, 1.0, (:call, :*, 0.0, :im)))),
        (:line, 893, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, :r, 2), (:call, :+, (:call, :/, 5, 3), (:call, :*, (:call, :/, 1, 3), :im)))),
        (:line, 894, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:ref, :r, 3), (:call, :+, (:call, :/, 7, 3), (:call, :*, (:call, :/, 2, 3), :im)))),
        (:line, 895, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:ref, :r, 4), (:call, :+, 3.0, :im)))
      ), (:(=), :r, (:call, :linspace, 1.0, (:call, :+, 3, :im), 4))),
    (:line, 899, :none),
    (:type, false, :NotReal, (:block,
        (:line, 899, :none),
        :val
      )),
    (:line, 900, :none),
    (:(=), (:call, (:., :Base, (:quote, #QuoteNode
            :+
          )), :x, (:(::), :y, :NotReal)), (:block,
        (:line, 900, :none),
        (:call, :+, :x, (:., :y, (:quote, #QuoteNode
              :val
            )))
      )),
    (:line, 901, :none),
    (:(=), (:call, (:., :Base, (:quote, #QuoteNode
            :zero
          )), (:(::), :y, :NotReal)), (:block,
        (:line, 901, :none),
        (:call, :zero, (:., :y, (:quote, #QuoteNode
              :val
            )))
      )),
    (:line, 902, :none),
    (:(=), (:call, (:., :Base, (:quote, #QuoteNode
            :rem
          )), :x, (:(::), :y, :NotReal)), (:block,
        (:line, 902, :none),
        (:call, :rem, :x, (:., :y, (:quote, #QuoteNode
              :val
            )))
      )),
    (:line, 903, :none),
    (:(=), (:call, (:., :Base, (:quote, #QuoteNode
            :isless
          )), :x, (:(::), :y, :NotReal)), (:block,
        (:line, 903, :none),
        (:call, :isless, :x, (:., :y, (:quote, #QuoteNode
              :val
            )))
      )),
    (:line, 904, :none),
    (:macrocall, Symbol("@test"), (:call, :isa, (:call, :colon, 1, (:call, :NotReal, 1), 5), (:curly, :StepRange, :Int, :NotReal))),
    (:line, 907, :none),
    (:||, (:call, :isdefined, :Main, (:quote, #QuoteNode
          :TestHelpers
        )), (:macrocall, Symbol("@eval"), :Main, (:call, :include, "TestHelpers.jl"))),
    (:line, 908, :none),
    (:using, :TestHelpers, :Furlong),
    (:line, 909, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :collect, (:(:), (:call, :Furlong, 2), (:call, :Furlong, 10)))),
    (:line, 910, :none),
    (:macrocall, Symbol("@test_throws"), :MethodError, (:call, :range, (:call, :Furlong, 2), 9)),
    (:line, 911, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :collect, (:(:), (:call, :Furlong, 2), (:call, :Furlong, 1), (:call, :Furlong, 10))), :(==), (:call, :collect, (:call, :range, (:call, :Furlong, 2), (:call, :Furlong, 1), 9)), :(==), (:., :Furlong, (:tuple, (:(:), 2, 10))))),
    (:line, 912, :none),
    (:macrocall, Symbol("@test"), (:comparison, (:call, :collect, (:(:), (:call, :Furlong, 1.0), (:call, :Furlong, 0.5), (:call, :Furlong, 10.0))), :(==), (:call, :collect, (:(:), (:call, :Furlong, 1), (:call, :Furlong, 0.5), (:call, :Furlong, 10))), :(==), (:., :Furlong, (:tuple, (:(:), 1, 0.5, 10))))),
    (:line, 916, :none),
    (:let, (:block,
        (:line, 917, :none),
        (:macrocall, Symbol("@test"), (:call, :(==), (:call, :typeof, (:., :linsp, (:quote, #QuoteNode
                  :ref
                ))), (:curly, (:., :Base, (:quote, #QuoteNode
                  :TwicePrecision
                )), :Float64))),
        (:line, 918, :none),
        (:macrocall, Symbol("@test"), (:call, :(===), (:call, :Float32, (:., :linsp, (:quote, #QuoteNode
                  :ref
                ))), (:call, :convert, :Float32, (:., :linsp, (:quote, #QuoteNode
                  :ref
                ))))),
        (:line, 919, :none),
        (:macrocall, Symbol("@test"), (:call, :≈, (:call, :Float32, (:., :linsp, (:quote, #QuoteNode
                  :ref
                ))), (:call, :+, (:., (:., :linsp, (:quote, #QuoteNode
                    :ref
                  )), (:quote, #QuoteNode
                  :hi
                )), (:., (:., :linsp, (:quote, #QuoteNode
                    :ref
                  )), (:quote, #QuoteNode
                  :lo
                )))))
      ), (:(=), :linsp, (:call, :linspace, 1.0, 2.0, 10)))
  ))