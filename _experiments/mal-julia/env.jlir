(:quote, (:block,
    (:line, 1, :none),
    (:module, true, :env, (:block,
        (:line, 1, :none),
        (:line, 3, :none),
        (:export, :Env, :env_set, :env_find, :env_get),
        (:line, 5, :none),
        (:type, true, :Env, (:block,
            (:line, 6, :none),
            (:(::), :outer, :Any),
            (:line, 7, :none),
            (:(::), :data, (:curly, :Dict, :Symbol, :Any))
          )),
        (:line, 10, :none),
        (:function, (:call, :Env), (:block,
            (:line, 11, :none),
            (:call, :Env, :nothing, (:call, :Dict))
          )),
        (:line, 14, :none),
        (:function, (:call, :Env, :outer), (:block,
            (:line, 15, :none),
            (:call, :Env, :outer, (:call, :Dict))
          )),
        (:line, 18, :none),
        (:function, (:call, :Env, :outer, :binds, :exprs), (:block,
            (:line, 19, :none),
            (:(=), :e, (:call, :Env, :outer, (:call, :Dict))),
            (:line, 20, :none),
            (:for, (:(=), :i, (:(:), 1, (:call, :length, :binds))), (:block,
                (:line, 21, :none),
                (:if, (:call, :(==), (:ref, :binds, :i), (:quote, #QuoteNode
                      :&
                    )), (:block,
                    (:line, 22, :none),
                    (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                            :data
                          )), (:ref, :binds, (:call, :+, :i, 1))), (:ref, :exprs, (:(:), :i, :end))),
                    (:line, 23, :none),
                    (:break,)
                  ), (:block,
                    (:line, 25, :none),
                    (:(=), (:ref, (:., :e, (:quote, #QuoteNode
                            :data
                          )), (:ref, :binds, :i)), (:ref, :exprs, :i))
                  ))
              )),
            (:line, 28, :none),
            :e
          )),
        (:line, 32, :none),
        (:function, (:call, :env_set, (:(::), :env, :Env), (:(::), :k, :Symbol), :v), (:block,
            (:line, 33, :none),
            (:(=), (:ref, (:., :env, (:quote, #QuoteNode
                    :data
                  )), :k), :v)
          )),
        (:line, 36, :none),
        (:function, (:call, :env_find, (:(::), :env, :Env), (:(::), :k, :Symbol)), (:block,
            (:line, 37, :none),
            (:if, (:call, :haskey, (:., :env, (:quote, #QuoteNode
                    :data
                  )), :k), (:block,
                (:line, 38, :none),
                :env
              ), (:block,
                (:line, 39, :none),
                (:if, (:call, :(!=), (:., :env, (:quote, #QuoteNode
                        :outer
                      )), :nothing), (:block,
                    (:line, 40, :none),
                    (:call, :env_find, (:., :env, (:quote, #QuoteNode
                          :outer
                        )), :k)
                  ), (:block,
                    (:line, 42, :none),
                    :nothing
                  ))
              ))
          )),
        (:line, 46, :none),
        (:function, (:call, :env_get, (:(::), :env, :Env), (:(::), :k, :Symbol)), (:block,
            (:line, 47, :none),
            (:(=), :e, (:call, :env_find, :env, :k)),
            (:line, 48, :none),
            (:if, (:call, :(!=), :e, :nothing), (:block,
                (:line, 49, :none),
                (:ref, (:., :e, (:quote, #QuoteNode
                      :data
                    )), :k)
              ), (:block,
                (:line, 51, :none),
                (:call, :error, (:string, "'", (:call, :string, :k), "' not found"))
              ))
          ))
      ))
  ))